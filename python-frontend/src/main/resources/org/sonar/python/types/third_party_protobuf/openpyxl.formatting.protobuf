
openpyxl.formattingуг
Ruleopenpyxl.formatting.rule.Rule".openpyxl.descriptors.serialisable.Serialisable*╦
__init__&openpyxl.formatting.rule.Rule.__init__"
None*H
self>
openpyxl.formatting.rule.Rule"openpyxl.formatting.rule.Rule*I
type?
TypeAlias[Any]
Any""openpyxl.formatting.rule._RuleType*3
dxfId&
Union[Any,None]
Any
None *
priority
Any *■

stopIfTrueы
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]Р
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]Э
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *А
aboveAverageы
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]Р
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]Э
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *√
percentы
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]Р
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]Э
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *·
bottomы
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]Р
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]Э
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *К
operatorz
Union[TypeAlias[Any],Any,None]C
TypeAlias[Any]
Any"&openpyxl.formatting.rule._RuleOperator
Any
None *P
textD
Union[builtins.str,None]
builtins.str"builtins.str
None *О

timePeriod|
Union[TypeAlias[Any],Any,None]E
TypeAlias[Any]
Any"(openpyxl.formatting.rule._RuleTimePeriod
Any
None *2
rank&
Union[Any,None]
Any
None *4
stdDev&
Union[Any,None]
Any
None *А
equalAverageы
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]Р
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]Э
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *
formula
Any *Ь

colorScaleЙ
/Union[openpyxl.formatting.rule.ColorScale,None]J
#openpyxl.formatting.rule.ColorScale"#openpyxl.formatting.rule.ColorScale
None *Р
dataBarА
,Union[openpyxl.formatting.rule.DataBar,None]D
 openpyxl.formatting.rule.DataBar" openpyxl.formatting.rule.DataBar
None *Р
iconSetА
,Union[openpyxl.formatting.rule.IconSet,None]D
 openpyxl.formatting.rule.IconSet" openpyxl.formatting.rule.IconSet
None *0
extLst"
builtins.object"builtins.object *╢
dxfк
:Union[openpyxl.styles.differential.DifferentialStyle,None]`
.openpyxl.styles.differential.DifferentialStyle".openpyxl.styles.differential.DifferentialStyle
None z36z37*╕?
__init__&openpyxl.formatting.rule.Rule.__init__"
None*H
self>
openpyxl.formatting.rule.Rule"openpyxl.formatting.rule.Rule*э
typeт
ЭTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Щ
ТUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str""openpyxl.formatting.rule._RuleType*3
dxfId&
Union[Any,None]
Any
None *
priority
Any *■

stopIfTrueы
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]Р
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]Э
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *А
aboveAverageы
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]Р
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]Э
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *√
percentы
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]Р
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]Э
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *·
bottomы
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]Р
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]Э
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *Я
operatorО
╗Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.str],None]И

ЩTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]┐
ОUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"&openpyxl.formatting.rule._RuleOperator7
Literal[builtins.str]	
builtins.str"builtins.str
None *P
textD
Union[builtins.str,None]
builtins.str"builtins.str
None *н

timePeriodЪ
ПUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.str],None]└
эTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]б
тUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"(openpyxl.formatting.rule._RuleTimePeriod7
Literal[builtins.str]	
builtins.str"builtins.str
None *2
rank&
Union[Any,None]
Any
None *4
stdDev&
Union[Any,None]
Any
None *А
equalAverageы
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]Р
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]Э
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *
formula
Any *Ь

colorScaleЙ
/Union[openpyxl.formatting.rule.ColorScale,None]J
#openpyxl.formatting.rule.ColorScale"#openpyxl.formatting.rule.ColorScale
None *Р
dataBarА
,Union[openpyxl.formatting.rule.DataBar,None]D
 openpyxl.formatting.rule.DataBar" openpyxl.formatting.rule.DataBar
None *Р
iconSetА
,Union[openpyxl.formatting.rule.IconSet,None]D
 openpyxl.formatting.rule.IconSet" openpyxl.formatting.rule.IconSet
None *0
extLst"
builtins.object"builtins.object *╢
dxfк
:Union[openpyxl.styles.differential.DifferentialStyle,None]`
.openpyxl.styles.differential.DifferentialStyle".openpyxl.styles.differential.DifferentialStyle
None z38z39z310z311z312z313j36j37j38j39j310j311j312j313rr
tagname%openpyxl.formatting.rule.Rule.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313r─
type"openpyxl.formatting.rule.Rule.typeП
-openpyxl.descriptors.base.Set[TypeAlias[Any]]?
TypeAlias[Any]
Any""openpyxl.formatting.rule._RuleType"openpyxl.descriptors.base.Set*36*37rМ
type"openpyxl.formatting.rule.Rule.type├
╝openpyxl.descriptors.base.Set[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]т
ЭTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Щ
ТUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str""openpyxl.formatting.rule._RuleType"openpyxl.descriptors.base.Set*38*39*310*311*312*313rШ
dxfId#openpyxl.formatting.rule.Rule.dxfIdF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313rЮ
priority&openpyxl.formatting.rule.Rule.priorityF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313rЬ

stopIfTrue(openpyxl.formatting.rule.Rule.stopIfTrue@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313rа
aboveAverage*openpyxl.formatting.rule.Rule.aboveAverage@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313rЦ
percent%openpyxl.formatting.rule.Rule.percent@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313rФ
bottom$openpyxl.formatting.rule.Rule.bottom@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313r╪
operator&openpyxl.formatting.rule.Rule.operatorЫ
1openpyxl.descriptors.base.NoneSet[TypeAlias[Any]]C
TypeAlias[Any]
Any"&openpyxl.formatting.rule._RuleOperator"!openpyxl.descriptors.base.NoneSet*36*37r╛
operator&openpyxl.formatting.rule.Rule.operatorэ
╝openpyxl.descriptors.base.NoneSet[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]И

ЩTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]┐
ОUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"&openpyxl.formatting.rule._RuleOperator"!openpyxl.descriptors.base.NoneSet*38*39*310*311*312*313rФ
text"openpyxl.formatting.rule.Rule.textD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313r▐

timePeriod(openpyxl.formatting.rule.Rule.timePeriodЭ
1openpyxl.descriptors.base.NoneSet[TypeAlias[Any]]E
TypeAlias[Any]
Any"(openpyxl.formatting.rule._RuleTimePeriod"!openpyxl.descriptors.base.NoneSet*36*37r╬

timePeriod(openpyxl.formatting.rule.Rule.timePeriod∙

Рopenpyxl.descriptors.base.NoneSet[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]└
эTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]б
тUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"(openpyxl.formatting.rule._RuleTimePeriod"!openpyxl.descriptors.base.NoneSet*38*39*310*311*312*313rЦ
rank"openpyxl.formatting.rule.Rule.rankF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313rЪ
stdDev$openpyxl.formatting.rule.Rule.stdDevF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313rа
equalAverage*openpyxl.formatting.rule.Rule.equalAverage@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313rЗ
formula%openpyxl.formatting.rule.Rule.formula1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313rм

colorScale(openpyxl.formatting.rule.Rule.colorScaleP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313rж
dataBar%openpyxl.formatting.rule.Rule.dataBarP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313rж
iconSet%openpyxl.formatting.rule.Rule.iconSetP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313rд
extLst$openpyxl.formatting.rule.Rule.extLstP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313rЮ
dxf!openpyxl.formatting.rule.Rule.dxfP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313rм
__elements__*openpyxl.formatting.rule.Rule.__elements__L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*36*37*38*39*310*311*312*313rж
	__attrs__'openpyxl.formatting.rule.Rule.__attrs__L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*36*37*38*39*310*311*312*313*Ш
__path__openpyxl.formatting.__path__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*36*37*38*39*310*311*312*313*│
__annotations__#openpyxl.formatting.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313