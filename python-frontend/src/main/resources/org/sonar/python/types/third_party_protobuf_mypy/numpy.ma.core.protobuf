
numpy.ma.coreÁê
bool_numpy.bool_"numpy.generic*p
__init__numpy.bool_.__init__"
None*
numpy.bool_"numpy.bool_*&"
builtins.object"builtins.object *ƒ
itemnumpy.bool_.item"
builtins.bool"builtins.bool*
numpy.bool_"numpy.bool_*ÎÊ
AUnion[Literal[builtins.int],Tuple[],Tuple[Literal[builtins.int]]]7
Literal[builtins.int]	
builtins.int"builtins.int
Tuple[]Y
Tuple[Literal[builtins.int]]7
Literal[builtins.int]	
builtins.int"builtins.int *b
tolistnumpy.bool_.tolist"
builtins.bool"builtins.bool*$
self
numpy.bool_"numpy.bool_*à
realnumpy.bool_.real"j
numpy._ArraySelf8
numpy._ArrayOrScalarCommon"numpy._ArrayOrScalarCommon"numpy._ArrayOrScalarCommon*t
selfj
numpy._ArraySelf8
numpy._ArrayOrScalarCommon"numpy._ArrayOrScalarCommon"numpy._ArrayOrScalarCommon0:property`*à
imagnumpy.bool_.imag"j
numpy._ArraySelf8
numpy._ArrayOrScalarCommon"numpy._ArrayOrScalarCommon"numpy._ArrayOrScalarCommon*t
selfj
numpy._ArraySelf8
numpy._ArrayOrScalarCommon"numpy._ArrayOrScalarCommon"numpy._ArrayOrScalarCommon0:property`*Z
__int__numpy.bool_.__int__"
builtins.int"builtins.int*
numpy.bool_"numpy.bool_*b
	__float__numpy.bool_.__float__" 
builtins.float"builtins.float*
numpy.bool_"numpy.bool_*j
__complex__numpy.bool_.__complex__"$
builtins.complex"builtins.complex*
numpy.bool_"numpy.bool_*¯
__abs__numpy.bool_.__abs__"j
numpy._ArraySelf8
numpy._ArrayOrScalarCommon"numpy._ArrayOrScalarCommon"numpy._ArrayOrScalarCommon*lj
numpy._ArraySelf8
numpy._ArrayOrScalarCommon"numpy._ArrayOrScalarCommon"numpy._ArrayOrScalarCommon*^

__invert__numpy.bool_.__invert__"
numpy.bool_"numpy.bool_*
numpy.bool_"numpy.bool_rã
__add__numpy.bool_.__add__k
,numpy._typing._callable._BoolOp[numpy.bool_]
numpy.bool_"numpy.bool_"numpy._typing._callable._BoolOprç
__radd__numpy.bool_.__radd__k
,numpy._typing._callable._BoolOp[numpy.bool_]
numpy.bool_"numpy.bool_"numpy._typing._callable._BoolOprd
__sub__numpy.bool_.__sub__D
 numpy._typing._callable._BoolSub" numpy._typing._callable._BoolSubrf
__rsub__numpy.bool_.__rsub__D
 numpy._typing._callable._BoolSub" numpy._typing._callable._BoolSubrã
__mul__numpy.bool_.__mul__k
,numpy._typing._callable._BoolOp[numpy.bool_]
numpy.bool_"numpy.bool_"numpy._typing._callable._BoolOprç
__rmul__numpy.bool_.__rmul__k
,numpy._typing._callable._BoolOp[numpy.bool_]
numpy.bool_"numpy.bool_"numpy._typing._callable._BoolOpr’
__floordiv__numpy.bool_.__floordiv__™
Tnumpy._typing._callable._BoolOp[TypeAlias[numpy.signedinteger[numpy._typing._8Bit]]]∞
3TypeAlias[numpy.signedinteger[numpy._typing._8Bit]]k
(numpy.signedinteger[numpy._typing._8Bit]*
numpy._typing._8Bit"numpy._typing._8Bit"numpy.signedinteger"
numpy.int8"numpy._typing._callable._BoolOpr◊
__rfloordiv__numpy.bool_.__rfloordiv__™
Tnumpy._typing._callable._BoolOp[TypeAlias[numpy.signedinteger[numpy._typing._8Bit]]]∞
3TypeAlias[numpy.signedinteger[numpy._typing._8Bit]]k
(numpy.signedinteger[numpy._typing._8Bit]*
numpy._typing._8Bit"numpy._typing._8Bit"numpy.signedinteger"
numpy.int8"numpy._typing._callable._BoolOprÀ
__pow__numpy.bool_.__pow__™
Tnumpy._typing._callable._BoolOp[TypeAlias[numpy.signedinteger[numpy._typing._8Bit]]]∞
3TypeAlias[numpy.signedinteger[numpy._typing._8Bit]]k
(numpy.signedinteger[numpy._typing._8Bit]*
numpy._typing._8Bit"numpy._typing._8Bit"numpy.signedinteger"
numpy.int8"numpy._typing._callable._BoolOprÕ
__rpow__numpy.bool_.__rpow__™
Tnumpy._typing._callable._BoolOp[TypeAlias[numpy.signedinteger[numpy._typing._8Bit]]]∞
3TypeAlias[numpy.signedinteger[numpy._typing._8Bit]]k
(numpy.signedinteger[numpy._typing._8Bit]*
numpy._typing._8Bit"numpy._typing._8Bit"numpy.signedinteger"
numpy.int8"numpy._typing._callable._BoolOprt
__truediv__numpy.bool_.__truediv__L
$numpy._typing._callable._BoolTrueDiv"$numpy._typing._callable._BoolTrueDivrv
__rtruediv__numpy.bool_.__rtruediv__L
$numpy._typing._callable._BoolTrueDiv"$numpy._typing._callable._BoolTrueDivr◊

__lshift__numpy.bool_.__lshift__∞
Wnumpy._typing._callable._BoolBitOp[TypeAlias[numpy.signedinteger[numpy._typing._8Bit]]]∞
3TypeAlias[numpy.signedinteger[numpy._typing._8Bit]]k
(numpy.signedinteger[numpy._typing._8Bit]*
numpy._typing._8Bit"numpy._typing._8Bit"numpy.signedinteger"
numpy.int8""numpy._typing._callable._BoolBitOprŸ
__rlshift__numpy.bool_.__rlshift__∞
Wnumpy._typing._callable._BoolBitOp[TypeAlias[numpy.signedinteger[numpy._typing._8Bit]]]∞
3TypeAlias[numpy.signedinteger[numpy._typing._8Bit]]k
(numpy.signedinteger[numpy._typing._8Bit]*
numpy._typing._8Bit"numpy._typing._8Bit"numpy.signedinteger"
numpy.int8""numpy._typing._callable._BoolBitOpr◊

__rshift__numpy.bool_.__rshift__∞
Wnumpy._typing._callable._BoolBitOp[TypeAlias[numpy.signedinteger[numpy._typing._8Bit]]]∞
3TypeAlias[numpy.signedinteger[numpy._typing._8Bit]]k
(numpy.signedinteger[numpy._typing._8Bit]*
numpy._typing._8Bit"numpy._typing._8Bit"numpy.signedinteger"
numpy.int8""numpy._typing._callable._BoolBitOprŸ
__rrshift__numpy.bool_.__rrshift__∞
Wnumpy._typing._callable._BoolBitOp[TypeAlias[numpy.signedinteger[numpy._typing._8Bit]]]∞
3TypeAlias[numpy.signedinteger[numpy._typing._8Bit]]k
(numpy.signedinteger[numpy._typing._8Bit]*
numpy._typing._8Bit"numpy._typing._8Bit"numpy.signedinteger"
numpy.int8""numpy._typing._callable._BoolBitOprë
__and__numpy.bool_.__and__q
/numpy._typing._callable._BoolBitOp[numpy.bool_]
numpy.bool_"numpy.bool_""numpy._typing._callable._BoolBitOprì
__rand__numpy.bool_.__rand__q
/numpy._typing._callable._BoolBitOp[numpy.bool_]
numpy.bool_"numpy.bool_""numpy._typing._callable._BoolBitOprë
__xor__numpy.bool_.__xor__q
/numpy._typing._callable._BoolBitOp[numpy.bool_]
numpy.bool_"numpy.bool_""numpy._typing._callable._BoolBitOprì
__rxor__numpy.bool_.__rxor__q
/numpy._typing._callable._BoolBitOp[numpy.bool_]
numpy.bool_"numpy.bool_""numpy._typing._callable._BoolBitOprè
__or__numpy.bool_.__or__q
/numpy._typing._callable._BoolBitOp[numpy.bool_]
numpy.bool_"numpy.bool_""numpy._typing._callable._BoolBitOprë
__ror__numpy.bool_.__ror__q
/numpy._typing._callable._BoolBitOp[numpy.bool_]
numpy.bool_"numpy.bool_""numpy._typing._callable._BoolBitOprd
__mod__numpy.bool_.__mod__D
 numpy._typing._callable._BoolMod" numpy._typing._callable._BoolModrf
__rmod__numpy.bool_.__rmod__D
 numpy._typing._callable._BoolMod" numpy._typing._callable._BoolModrp

__divmod__numpy.bool_.__divmod__J
#numpy._typing._callable._BoolDivMod"#numpy._typing._callable._BoolDivModrr
__rdivmod__numpy.bool_.__rdivmod__J
#numpy._typing._callable._BoolDivMod"#numpy._typing._callable._BoolDivModrÁ
__lt__numpy.bool_.__lt__»
–numpy._typing._callable._ComparisonOp[TypeAlias[Union[builtins.int,builtins.float,builtins.complex,numpy.number[Any],numpy.bool_]],TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]]ç
\TypeAlias[Union[builtins.int,builtins.float,builtins.complex,numpy.number[Any],numpy.bool_]]É
QUnion[builtins.int,builtins.float,builtins.complex,numpy.number[Any],numpy.bool_]
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complex*
numpy.number[Any]
Any"numpy.number
numpy.bool_"numpy.bool_"%numpy._typing._scalars._NumberLike_coª
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"-numpy._typing._array_like._ArrayLikeNumber_co"%numpy._typing._callable._ComparisonOprÁ
__le__numpy.bool_.__le__»
–numpy._typing._callable._ComparisonOp[TypeAlias[Union[builtins.int,builtins.float,builtins.complex,numpy.number[Any],numpy.bool_]],TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]]ç
\TypeAlias[Union[builtins.int,builtins.float,builtins.complex,numpy.number[Any],numpy.bool_]]É
QUnion[builtins.int,builtins.float,builtins.complex,numpy.number[Any],numpy.bool_]
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complex*
numpy.number[Any]
Any"numpy.number
numpy.bool_"numpy.bool_"%numpy._typing._scalars._NumberLike_coª
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"-numpy._typing._array_like._ArrayLikeNumber_co"%numpy._typing._callable._ComparisonOprÁ
__gt__numpy.bool_.__gt__»
–numpy._typing._callable._ComparisonOp[TypeAlias[Union[builtins.int,builtins.float,builtins.complex,numpy.number[Any],numpy.bool_]],TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]]ç
\TypeAlias[Union[builtins.int,builtins.float,builtins.complex,numpy.number[Any],numpy.bool_]]É
QUnion[builtins.int,builtins.float,builtins.complex,numpy.number[Any],numpy.bool_]
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complex*
numpy.number[Any]
Any"numpy.number
numpy.bool_"numpy.bool_"%numpy._typing._scalars._NumberLike_coª
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"-numpy._typing._array_like._ArrayLikeNumber_co"%numpy._typing._callable._ComparisonOprÁ
__ge__numpy.bool_.__ge__»
–numpy._typing._callable._ComparisonOp[TypeAlias[Union[builtins.int,builtins.float,builtins.complex,numpy.number[Any],numpy.bool_]],TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]]ç
\TypeAlias[Union[builtins.int,builtins.float,builtins.complex,numpy.number[Any],numpy.bool_]]É
QUnion[builtins.int,builtins.float,builtins.complex,numpy.number[Any],numpy.bool_]
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complex*
numpy.number[Any]
Any"numpy.number
numpy.bool_"numpy.bool_"%numpy._typing._scalars._NumberLike_coª
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"-numpy._typing._array_like._ArrayLikeNumber_co"%numpy._typing._callable._ComparisonOpZ
MaskedArrayFutureWarning&numpy.ma.core.MaskedArrayFutureWarning"builtins.FutureWarning4
MAErrornumpy.ma.core.MAError"builtins.Exception;
	MaskErrornumpy.ma.core.MaskError"numpy.ma.core.MAError≠
_MaskedUFuncnumpy.ma.core._MaskedUFunc"builtins.object*D
__init__#numpy.ma.core._MaskedUFunc.__init__*
self*	
ufuncr*
fnumpy.ma.core._MaskedUFunc.f
Anyù
_MaskedUnaryOperation#numpy.ma.core._MaskedUnaryOperation"numpy.ma.core._MaskedUFunc*h
__init__,numpy.ma.core._MaskedUnaryOperation.__init__*
self*

mufunc*

fill *
domain *_
__call__,numpy.ma.core._MaskedUnaryOperation.__call__*
self*
a*
args*

kwargsr9
fill(numpy.ma.core._MaskedUnaryOperation.fill
Anyr=
domain*numpy.ma.core._MaskedUnaryOperation.domain
Anyæ
_MaskedBinaryOperation$numpy.ma.core._MaskedBinaryOperation"numpy.ma.core._MaskedUFunc*i
__init__-numpy.ma.core._MaskedBinaryOperation.__init__*
self*

mbfunc*
fillx *
filly *g
__call__-numpy.ma.core._MaskedBinaryOperation.__call__*
self*
a*
b*
args*

kwargs*d
reduce+numpy.ma.core._MaskedBinaryOperation.reduce*
self*

target*

axis *
dtype *K
outer*numpy.ma.core._MaskedBinaryOperation.outer*
self*
a*
b*_

accumulate/numpy.ma.core._MaskedBinaryOperation.accumulate*
self*

target*

axis r<
fillx*numpy.ma.core._MaskedBinaryOperation.fillx
Anyr<
filly*numpy.ma.core._MaskedBinaryOperation.filly
AnyÑ
_DomainedBinaryOperation&numpy.ma.core._DomainedBinaryOperation"numpy.ma.core._MaskedUFunc*w
__init__/numpy.ma.core._DomainedBinaryOperation.__init__*
self*

dbfunc*

domain*
fillx *
filly *i
__call__/numpy.ma.core._DomainedBinaryOperation.__call__*
self*
a*
b*
args*

kwargsr@
domain-numpy.ma.core._DomainedBinaryOperation.domain
Anyr>
fillx,numpy.ma.core._DomainedBinaryOperation.fillx
Anyr>
filly,numpy.ma.core._DomainedBinaryOperation.filly
Any¨
_MaskedPrintOption numpy.ma.core._MaskedPrintOption"builtins.object*L
__init__)numpy.ma.core._MaskedPrintOption.__init__*
self*
display*=
display(numpy.ma.core._MaskedPrintOption.display*
self*L
set_display,numpy.ma.core._MaskedPrintOption.set_display*
self*
s*=
enabled(numpy.ma.core._MaskedPrintOption.enabled*
self*I
enable'numpy.ma.core._MaskedPrintOption.enable*
self*
shrink ö
MaskedIteratornumpy.ma.core.MaskedIterator"builtins.object*C
__init__%numpy.ma.core.MaskedIterator.__init__*
self*
ma*3
__iter__%numpy.ma.core.MaskedIterator.__iter__* *;
__getitem__(numpy.ma.core.MaskedIterator.__getitem__* * *=
__setitem__(numpy.ma.core.MaskedIterator.__setitem__* * * *;
__next__%numpy.ma.core.MaskedIterator.__next__*
selfr.
manumpy.ma.core.MaskedIterator.ma
Anyr:
dataiter%numpy.ma.core.MaskedIterator.dataiter
Anyr:
maskiter%numpy.ma.core.MaskedIterator.maskiter
Any£B
MaskedArraynumpy.ma.core.MaskedArray"numpy.ndarray*œ
__new__!numpy.ma.core.MaskedArray.__new__*
cls*

data *

mask *
dtype *

copy *
subok *
ndmin *

fill_value *
	keep_mask *
	hard_mask *
shrink *
order *U
__array_finalize__,numpy.ma.core.MaskedArray.__array_finalize__*
self*
obj*\
__array_wrap__(numpy.ma.core.MaskedArray.__array_wrap__*
self*
obj*
context *[
viewnumpy.ma.core.MaskedArray.view*
self*
dtype *

type *

fill_value *8
__getitem__%numpy.ma.core.MaskedArray.__getitem__* * *:
__setitem__%numpy.ma.core.MaskedArray.__setitem__* * * *T
__setmask__%numpy.ma.core.MaskedArray.__setmask__*
self*
mask*

copy *>
harden_mask%numpy.ma.core.MaskedArray.harden_mask*
self*>
soften_mask%numpy.ma.core.MaskedArray.soften_mask*
self*F
hardmask"numpy.ma.core.MaskedArray.hardmask*
self0:property`*@
unshare_mask&numpy.ma.core.MaskedArray.unshare_mask*
self*J

sharedmask$numpy.ma.core.MaskedArray.sharedmask*
self0:property`*>
shrink_mask%numpy.ma.core.MaskedArray.shrink_mask*
self*H
	baseclass#numpy.ma.core.MaskedArray.baseclass*
self0:property`*F
filled numpy.ma.core.MaskedArray.filled*
self*

fill_value *<

compressed$numpy.ma.core.MaskedArray.compressed*
self*^
compress"numpy.ma.core.MaskedArray.compress*
self*
	condition*

axis *	
out *.
__eq__ numpy.ma.core.MaskedArray.__eq__* * *.
__ne__ numpy.ma.core.MaskedArray.__ne__* * *.
__ge__ numpy.ma.core.MaskedArray.__ge__* * *.
__gt__ numpy.ma.core.MaskedArray.__gt__* * *.
__le__ numpy.ma.core.MaskedArray.__le__* * *.
__lt__ numpy.ma.core.MaskedArray.__lt__* * *0
__add__!numpy.ma.core.MaskedArray.__add__* * *2
__radd__"numpy.ma.core.MaskedArray.__radd__* * *0
__sub__!numpy.ma.core.MaskedArray.__sub__* * *2
__rsub__"numpy.ma.core.MaskedArray.__rsub__* * *0
__mul__!numpy.ma.core.MaskedArray.__mul__* * *2
__rmul__"numpy.ma.core.MaskedArray.__rmul__* * *A
__div__!numpy.ma.core.MaskedArray.__div__*
self*	
other*8
__truediv__%numpy.ma.core.MaskedArray.__truediv__* * *:
__rtruediv__&numpy.ma.core.MaskedArray.__rtruediv__* * *:
__floordiv__&numpy.ma.core.MaskedArray.__floordiv__* * *<
__rfloordiv__'numpy.ma.core.MaskedArray.__rfloordiv__* * *0
__pow__!numpy.ma.core.MaskedArray.__pow__* * *2
__rpow__"numpy.ma.core.MaskedArray.__rpow__* * *2
__iadd__"numpy.ma.core.MaskedArray.__iadd__* * *2
__isub__"numpy.ma.core.MaskedArray.__isub__* * *2
__imul__"numpy.ma.core.MaskedArray.__imul__* * *2
__idiv__"numpy.ma.core.MaskedArray.__idiv__* * *<
__ifloordiv__'numpy.ma.core.MaskedArray.__ifloordiv__* * *:
__itruediv__&numpy.ma.core.MaskedArray.__itruediv__* * *2
__ipow__"numpy.ma.core.MaskedArray.__ipow__* * *2
	__float__#numpy.ma.core.MaskedArray.__float__* *.
__int__!numpy.ma.core.MaskedArray.__int__* *>
imagnumpy.ma.core.MaskedArray.imag*
self0:property`*>
realnumpy.ma.core.MaskedArray.real*
self0:property`*N
countnumpy.ma.core.MaskedArray.count*
self*

axis *
keepdims *?
ravelnumpy.ma.core.MaskedArray.ravel*
self*
order *I
reshape!numpy.ma.core.MaskedArray.reshape*
self*
s*

kwargs*_
resize numpy.ma.core.MaskedArray.resize*
self*
newshape*
refcheck *
order *S
putnumpy.ma.core.MaskedArray.put*
self*
indices*

values*

mode *.
idsnumpy.ma.core.MaskedArray.ids*
self*@
iscontiguous&numpy.ma.core.MaskedArray.iscontiguous*
self*U
allnumpy.ma.core.MaskedArray.all*
self*

axis *	
out *
keepdims *U
anynumpy.ma.core.MaskedArray.any*
self*

axis *	
out *
keepdims *6
nonzero!numpy.ma.core.MaskedArray.nonzero*
self*r
tracenumpy.ma.core.MaskedArray.trace*
self*
offset *
axis1 *
axis2 *
dtype *	
out *N
dotnumpy.ma.core.MaskedArray.dot*
self*
b*	
out *
strict *b
sumnumpy.ma.core.MaskedArray.sum*
self*

axis *
dtype *	
out *
keepdims *X
cumsum numpy.ma.core.MaskedArray.cumsum*
self*

axis *
dtype *	
out *d
prodnumpy.ma.core.MaskedArray.prod*
self*

axis *
dtype *	
out *
keepdims *Z
cumprod!numpy.ma.core.MaskedArray.cumprod*
self*

axis *
dtype *	
out *d
meannumpy.ma.core.MaskedArray.mean*
self*

axis *
dtype *	
out *
keepdims *I
anomnumpy.ma.core.MaskedArray.anom*
self*

axis *
dtype *n
varnumpy.ma.core.MaskedArray.var*
self*

axis *
dtype *	
out *

ddof *
keepdims *n
stdnumpy.ma.core.MaskedArray.std*
self*

axis *
dtype *	
out *

ddof *
keepdims *M
roundnumpy.ma.core.MaskedArray.round*
self*
decimals *	
out *|
argsort!numpy.ma.core.MaskedArray.argsort*
self*

axis *

kind *
order *
endwith *

fill_value *m
argmin numpy.ma.core.MaskedArray.argmin*
self*

axis *

fill_value *	
out *
keepdims *m
argmax numpy.ma.core.MaskedArray.argmax*
self*

axis *

fill_value *	
out *
keepdims *v
sortnumpy.ma.core.MaskedArray.sort*
self*

axis *

kind *
order *
endwith *

fill_value *g
minnumpy.ma.core.MaskedArray.min*
self*

axis *	
out *

fill_value *
keepdims *g
maxnumpy.ma.core.MaskedArray.max*
self*

axis *	
out *

fill_value *
keepdims *g
ptpnumpy.ma.core.MaskedArray.ptp*
self*

axis *	
out *

fill_value *
keepdims *P
	partition#numpy.ma.core.MaskedArray.partition*
self*
args*

kwargs*V
argpartition&numpy.ma.core.MaskedArray.argpartition*
self*
args*

kwargs*`
takenumpy.ma.core.MaskedArray.take*
self*
indices*

axis *	
out *

mode *F
tolist numpy.ma.core.MaskedArray.tolist*
self*

fill_value *U
tobytes!numpy.ma.core.MaskedArray.tobytes*
self*

fill_value *
order *V
tofile numpy.ma.core.MaskedArray.tofile*
self*
fid*	
sep *
format *4
toflex numpy.ma.core.MaskedArray.toflex*
self*<

__reduce__$numpy.ma.core.MaskedArray.__reduce__*
self*L
__deepcopy__&numpy.ma.core.MaskedArray.__deepcopy__*
self*

memo 2ª
dtypenumpy.ma.core.MaskedArray.dtypeB
dtypenumpy.ma.core.MaskedArray.dtype*
self0:propertyX`M
dtypenumpy.ma.core.MaskedArray.dtype*
self*	
dtype0:dtype.setter2ª
shapenumpy.ma.core.MaskedArray.shapeB
shapenumpy.ma.core.MaskedArray.shape*
self0:propertyX`M
shapenumpy.ma.core.MaskedArray.shape*
self*	
shape0:shape.setter2¥
masknumpy.ma.core.MaskedArray.mask@
masknumpy.ma.core.MaskedArray.mask*
self0:propertyX`J
masknumpy.ma.core.MaskedArray.mask*
self*	
value0:mask.setter2›

recordmask$numpy.ma.core.MaskedArray.recordmaskL

recordmask$numpy.ma.core.MaskedArray.recordmask*
self0:propertyX`[

recordmask$numpy.ma.core.MaskedArray.recordmask*
self*
mask0:recordmask.setter2¥
flatnumpy.ma.core.MaskedArray.flat@
flatnumpy.ma.core.MaskedArray.flat*
self0:propertyX`J
flatnumpy.ma.core.MaskedArray.flat*
self*	
value0:flat.setter2‡

fill_value$numpy.ma.core.MaskedArray.fill_valueL

fill_value$numpy.ma.core.MaskedArray.fill_value*
self0:propertyX`^

fill_value$numpy.ma.core.MaskedArray.fill_value*
self*
value 0:fill_value.setterPrK
__array_priority__,numpy.ma.core.MaskedArray.__array_priority__
Anyr/
datanumpy.ma.core.MaskedArray.data
AnyrC
get_fill_value(numpy.ma.core.MaskedArray.get_fill_value
AnyrC
set_fill_value(numpy.ma.core.MaskedArray.set_fill_value
Anyr7
get_imag"numpy.ma.core.MaskedArray.get_imag
Anyr7
get_real"numpy.ma.core.MaskedArray.get_real
Anyr5
product!numpy.ma.core.MaskedArray.product
Anyr/
copynumpy.ma.core.MaskedArray.copy
Anyr7
diagonal"numpy.ma.core.MaskedArray.diagonal
Anyr5
flatten!numpy.ma.core.MaskedArray.flatten
Anyr3
repeat numpy.ma.core.MaskedArray.repeat
Anyr5
squeeze!numpy.ma.core.MaskedArray.squeeze
Anyr7
swapaxes"numpy.ma.core.MaskedArray.swapaxes
Anyr)
Tnumpy.ma.core.MaskedArray.T
Anyr9
	transpose#numpy.ma.core.MaskedArray.transpose
Anyr9
	torecords#numpy.ma.core.MaskedArray.torecords
Any¸
mvoidnumpy.ma.core.mvoid"numpy.ma.core.MaskedArray*é
__new__numpy.ma.core.mvoid.__new__*
self*
data*

mask *
dtype *

fill_value *
hardmask *

copy *
subok *2
__getitem__numpy.ma.core.mvoid.__getitem__* * *4
__setitem__numpy.ma.core.mvoid.__setitem__* * * **
__iter__numpy.ma.core.mvoid.__iter__* *(
__len__numpy.ma.core.mvoid.__len__* *@
fillednumpy.ma.core.mvoid.filled*
self*

fill_value *.
tolistnumpy.ma.core.mvoid.tolist*
selfPÂ

MaskedConstantnumpy.ma.core.MaskedConstant"numpy.ma.core.MaskedArray*8
__new__$numpy.ma.core.MaskedConstant.__new__*
cls*X
__array_finalize__/numpy.ma.core.MaskedConstant.__array_finalize__*
self*
obj*e
__array_prepare__.numpy.ma.core.MaskedConstant.__array_prepare__*
self*
obj*
context *_
__array_wrap__+numpy.ma.core.MaskedConstant.__array_wrap__*
self*
obj*
context *P

__format__'numpy.ma.core.MaskedConstant.__format__*
self*
format_spec*?

__reduce__'numpy.ma.core.MaskedConstant.__reduce__*
self*D
__iop__$numpy.ma.core.MaskedConstant.__iop__*
self*	
other*I
copy!numpy.ma.core.MaskedConstant.copy*
self*
args*

kwargs*;
__copy__%numpy.ma.core.MaskedConstant.__copy__*
self*M
__deepcopy__)numpy.ma.core.MaskedConstant.__deepcopy__*
self*
memo*V
__setattr__(numpy.ma.core.MaskedConstant.__setattr__*
self*
attr*	
valuer<
	__class__&numpy.ma.core.MaskedConstant.__class__
Anyr:
__iadd__%numpy.ma.core.MaskedConstant.__iadd__
Anyr:
__isub__%numpy.ma.core.MaskedConstant.__isub__
Anyr:
__imul__%numpy.ma.core.MaskedConstant.__imul__
AnyrD
__ifloordiv__*numpy.ma.core.MaskedConstant.__ifloordiv__
AnyrB
__itruediv__)numpy.ma.core.MaskedConstant.__itruediv__
Anyr:
__ipow__%numpy.ma.core.MaskedConstant.__ipow__
Any¥
_extrema_operation numpy.ma.core._extrema_operation"numpy.ma.core._MaskedUFunc*g
__init__)numpy.ma.core._extrema_operation.__init__*
self*	
ufunc*
compare*

fill_value*M
__call__)numpy.ma.core._extrema_operation.__call__*
self*
a*
b*S
reduce'numpy.ma.core._extrema_operation.reduce*
self*

target*

axis *G
outer&numpy.ma.core._extrema_operation.outer*
self*
a*
br<
compare(numpy.ma.core._extrema_operation.compare
AnyrL
fill_value_func0numpy.ma.core._extrema_operation.fill_value_func
AnyŸ
_frommethodnumpy.ma.core._frommethod"builtins.object*X
__init__"numpy.ma.core._frommethod.__init__*
self*

methodname*
reversed *4
getdoc numpy.ma.core._frommethod.getdoc*
self*U
__call__"numpy.ma.core._frommethod.__call__*
self*
a*
args*

paramsr7
reversed"numpy.ma.core._frommethod.reversed
Anyï
_convert2manumpy.ma.core._convert2ma"builtins.object*T
__init__"numpy.ma.core._convert2ma.__init__*
self*
funcname*
params *4
getdoc numpy.ma.core._convert2ma.getdoc*
self*N
__call__"numpy.ma.core._convert2ma.__call__*
self*
args*

params?
default_fill_value numpy.ma.core.default_fill_value*
obj?
minimum_fill_value numpy.ma.core.minimum_fill_value*
obj?
maximum_fill_value numpy.ma.core.maximum_fill_value*
objE
set_fill_valuenumpy.ma.core.set_fill_value*
a*

fill_valueB
common_fill_valuenumpy.ma.core.common_fill_value*
a*
b7
fillednumpy.ma.core.filled*
a*

fill_value 4
getdatanumpy.ma.core.getdata*
a*
subok Y
fix_invalidnumpy.ma.core.fix_invalid*
a*

mask *

copy *

fill_value <
make_mask_descrnumpy.ma.core.make_mask_descr*

ndtype'
getmasknumpy.ma.core.getmask*
a3
getmaskarraynumpy.ma.core.getmaskarray*
arr'
is_masknumpy.ma.core.is_mask*
mR
	make_masknumpy.ma.core.make_mask*
m*

copy *
shrink *
dtype I
make_mask_nonenumpy.ma.core.make_mask_none*
newshape*
dtype J
mask_ornumpy.ma.core.mask_or*
m1*
m2*

copy *
shrink 4
flatten_masknumpy.ma.core.flatten_mask*
maskL
masked_wherenumpy.ma.core.masked_where*
	condition*
a*

copy L
masked_greaternumpy.ma.core.masked_greater*
x*	
value*

copy X
masked_greater_equal"numpy.ma.core.masked_greater_equal*
x*	
value*

copy F
masked_lessnumpy.ma.core.masked_less*
x*	
value*

copy R
masked_less_equalnumpy.ma.core.masked_less_equal*
x*	
value*

copy P
masked_not_equalnumpy.ma.core.masked_not_equal*
x*	
value*

copy H
masked_equalnumpy.ma.core.masked_equal*
x*	
value*

copy O
masked_insidenumpy.ma.core.masked_inside*
x*
v1*
v2*

copy Q
masked_outsidenumpy.ma.core.masked_outside*
x*
v1*
v2*

copy X
masked_objectnumpy.ma.core.masked_object*
x*	
value*

copy *
shrink p
masked_valuesnumpy.ma.core.masked_values*
x*	
value*

rtol *

atol *

copy *
shrink A
masked_invalidnumpy.ma.core.masked_invalid*
a*

copy I
flatten_structured_array&numpy.ma.core.flatten_structured_array*
a3
isMaskedArraynumpy.ma.core.isMaskedArray*
x¥
arraynumpy.ma.core.array*
data*
dtype *

copy *
order *

mask *

fill_value *
	keep_mask *
	hard_mask *
shrink *
subok *
ndmin +
	is_maskednumpy.ma.core.is_masked*
xZ
minnumpy.ma.core.min*
obj*

axis *	
out *

fill_value *
keepdims Z
maxnumpy.ma.core.max*
obj*

axis *	
out *

fill_value *
keepdims Z
ptpnumpy.ma.core.ptp*
obj*

axis *	
out *

fill_value *
keepdims Q
takenumpy.ma.core.take*
a*
indices*

axis *	
out *

mode 7
powernumpy.ma.core.power*
a*
b*
third m
argsortnumpy.ma.core.argsort*
a*

axis *

kind *
order *
endwith *

fill_value g
sortnumpy.ma.core.sort*
a*

axis *

kind *
order *
endwith *

fill_value -

compressednumpy.ma.core.compressed*
x@
concatenatenumpy.ma.core.concatenate*

arrays*

axis *
diagnumpy.ma.core.diag*
v*
k 4

left_shiftnumpy.ma.core.left_shift*
a*
n6
right_shiftnumpy.ma.core.right_shift*
a*
nD
putnumpy.ma.core.put*
a*
indices*

values*

mode =
putmasknumpy.ma.core.putmask*
a*
mask*

values7
	transposenumpy.ma.core.transpose*
a*

axes C
reshapenumpy.ma.core.reshape*
a*
	new_shape*
order 4
resizenumpy.ma.core.resize*
x*
	new_shape#
ndimnumpy.ma.core.ndim*
obj%
shapenumpy.ma.core.shape*
obj/
sizenumpy.ma.core.size*
obj*

axis N
diffnumpy.ma.core.diff* *
n *

axis *
prepend *
append =
wherenumpy.ma.core.where*
	condition*
x *
y O
choosenumpy.ma.core.choose*
indices*
choices*	
out *

mode >
roundnumpy.ma.core.round*
a*
decimals *	
out *
innernumpy.ma.core.inner*
a*
b*
outernumpy.ma.core.outer*
a*
bT
	correlatenumpy.ma.core.correlate*
a*
v*

mode *
propagate_mask R
convolvenumpy.ma.core.convolve*
a*
v*

mode *
propagate_mask B
allequalnumpy.ma.core.allequal*
a*
b*

fill_value \
allclosenumpy.ma.core.allclose*
a*
b*
masked_equal *

rtol *

atol A
asarraynumpy.ma.core.asarray*
a*
dtype *
order :

asanyarraynumpy.ma.core.asanyarray*
a*
dtype /
fromflexnumpy.ma.core.fromflex*
fxarray8
appendnumpy.ma.core.append*
a*
b*

axis ?
dotnumpy.ma.core.dot*
a*
b*
strict *	
out =
mask_rowcolsnumpy.ma.core.mask_rowcols*
a*

axis "”o
amaxnumpy.core.fromnumeric.amaxü
amaxnumpy.core.fromnumeric.amax"N
numpy.core.fromnumeric._SCT
numpy.generic"numpy.generic"numpy.generic*∫

a≤

˚TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]]]â
Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]]¶
\numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]õ
2numpy.dtype[numpy._typing._array_like._ScalarType]X
%numpy._typing._array_like._ScalarType
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"(numpy._typing._array_like._SupportsArrayË
ånumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]¶
\numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]õ
2numpy.dtype[numpy._typing._array_like._ScalarType]X
%numpy._typing._array_like._ScalarType
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequence"$numpy._typing._array_like._ArrayLike*
axis
None *
out
None *J
keepdims:
Literal[builtins.bool]	
builtins.bool"builtins.bool *ù
initialç
\TypeAlias[Union[builtins.int,builtins.float,builtins.complex,numpy.number[Any],numpy.bool_]]É
QUnion[builtins.int,builtins.float,builtins.complex,numpy.number[Any],numpy.bool_]
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complex*
numpy.number[Any]
Any"numpy.number
numpy.bool_"numpy.bool_"%numpy._typing._scalars._NumberLike_co *«
whereπ
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"+numpy._typing._array_like._ArrayLikeBool_co 0:overloadXÌ&
amaxnumpy.core.fromnumeric.amax"
Any*π
a±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike*≈
axis∏
XUnion[None,TypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]]
Noneœ
LTypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]€
AUnion[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]],
typing.SupportsIndex"typing.SupportsIndexf
%typing.Sequence[typing.SupportsIndex],
typing.SupportsIndex"typing.SupportsIndex"typing.Sequence"numpy._typing._shape._ShapeLike *
out
None *.
keepdims
builtins.bool"builtins.bool *ù
initialç
\TypeAlias[Union[builtins.int,builtins.float,builtins.complex,numpy.number[Any],numpy.bool_]]É
QUnion[builtins.int,builtins.float,builtins.complex,numpy.number[Any],numpy.bool_]
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complex*
numpy.number[Any]
Any"numpy.number
numpy.bool_"numpy.bool_"%numpy._typing._scalars._NumberLike_co *«
whereπ
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"+numpy._typing._array_like._ArrayLikeBool_co 0:overloadXõ)
amaxnumpy.core.fromnumeric.amax"ù
!numpy.core.fromnumeric._ArrayTypeg
#numpy.ndarray[Any,numpy.dtype[Any]]
Any(
numpy.dtype[Any]
Any"numpy.dtype"numpy.ndarray"numpy.ndarray*π
a±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike*≈
axis∏
XUnion[None,TypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]]
Noneœ
LTypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]€
AUnion[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]],
typing.SupportsIndex"typing.SupportsIndexf
%typing.Sequence[typing.SupportsIndex],
typing.SupportsIndex"typing.SupportsIndex"typing.Sequence"numpy._typing._shape._ShapeLike *©
outù
!numpy.core.fromnumeric._ArrayTypeg
#numpy.ndarray[Any,numpy.dtype[Any]]
Any(
numpy.dtype[Any]
Any"numpy.dtype"numpy.ndarray"numpy.ndarray *.
keepdims
builtins.bool"builtins.bool *ù
initialç
\TypeAlias[Union[builtins.int,builtins.float,builtins.complex,numpy.number[Any],numpy.bool_]]É
QUnion[builtins.int,builtins.float,builtins.complex,numpy.number[Any],numpy.bool_]
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complex*
numpy.number[Any]
Any"numpy.number
numpy.bool_"numpy.bool_"%numpy._typing._scalars._NumberLike_co *«
whereπ
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"+numpy._typing._array_like._ArrayLikeBool_co 0:overloadX"”o
aminnumpy.core.fromnumeric.aminü
aminnumpy.core.fromnumeric.amin"N
numpy.core.fromnumeric._SCT
numpy.generic"numpy.generic"numpy.generic*∫

a≤

˚TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]]]â
Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]]¶
\numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]õ
2numpy.dtype[numpy._typing._array_like._ScalarType]X
%numpy._typing._array_like._ScalarType
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"(numpy._typing._array_like._SupportsArrayË
ånumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]¶
\numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]õ
2numpy.dtype[numpy._typing._array_like._ScalarType]X
%numpy._typing._array_like._ScalarType
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequence"$numpy._typing._array_like._ArrayLike*
axis
None *
out
None *J
keepdims:
Literal[builtins.bool]	
builtins.bool"builtins.bool *ù
initialç
\TypeAlias[Union[builtins.int,builtins.float,builtins.complex,numpy.number[Any],numpy.bool_]]É
QUnion[builtins.int,builtins.float,builtins.complex,numpy.number[Any],numpy.bool_]
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complex*
numpy.number[Any]
Any"numpy.number
numpy.bool_"numpy.bool_"%numpy._typing._scalars._NumberLike_co *«
whereπ
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"+numpy._typing._array_like._ArrayLikeBool_co 0:overloadXÌ&
aminnumpy.core.fromnumeric.amin"
Any*π
a±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike*≈
axis∏
XUnion[None,TypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]]
Noneœ
LTypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]€
AUnion[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]],
typing.SupportsIndex"typing.SupportsIndexf
%typing.Sequence[typing.SupportsIndex],
typing.SupportsIndex"typing.SupportsIndex"typing.Sequence"numpy._typing._shape._ShapeLike *
out
None *.
keepdims
builtins.bool"builtins.bool *ù
initialç
\TypeAlias[Union[builtins.int,builtins.float,builtins.complex,numpy.number[Any],numpy.bool_]]É
QUnion[builtins.int,builtins.float,builtins.complex,numpy.number[Any],numpy.bool_]
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complex*
numpy.number[Any]
Any"numpy.number
numpy.bool_"numpy.bool_"%numpy._typing._scalars._NumberLike_co *«
whereπ
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"+numpy._typing._array_like._ArrayLikeBool_co 0:overloadXõ)
aminnumpy.core.fromnumeric.amin"ù
!numpy.core.fromnumeric._ArrayTypeg
#numpy.ndarray[Any,numpy.dtype[Any]]
Any(
numpy.dtype[Any]
Any"numpy.dtype"numpy.ndarray"numpy.ndarray*π
a±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike*≈
axis∏
XUnion[None,TypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]]
Noneœ
LTypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]€
AUnion[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]],
typing.SupportsIndex"typing.SupportsIndexf
%typing.Sequence[typing.SupportsIndex],
typing.SupportsIndex"typing.SupportsIndex"typing.Sequence"numpy._typing._shape._ShapeLike *©
outù
!numpy.core.fromnumeric._ArrayTypeg
#numpy.ndarray[Any,numpy.dtype[Any]]
Any(
numpy.dtype[Any]
Any"numpy.dtype"numpy.ndarray"numpy.ndarray *.
keepdims
builtins.bool"builtins.bool *ù
initialç
\TypeAlias[Union[builtins.int,builtins.float,builtins.complex,numpy.number[Any],numpy.bool_]]É
QUnion[builtins.int,builtins.float,builtins.complex,numpy.number[Any],numpy.bool_]
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complex*
numpy.number[Any]
Any"numpy.number
numpy.bool_"numpy.bool_"%numpy._typing._scalars._NumberLike_co *«
whereπ
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"+numpy._typing._array_like._ArrayLikeBool_co 0:overloadX"Ó&
expand_dims numpy.lib.shape_base.expand_dims›
expand_dims numpy.lib.shape_base.expand_dims"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*∫

a≤

˚TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]]]â
Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]]¶
\numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]õ
2numpy.dtype[numpy._typing._array_like._ScalarType]X
%numpy._typing._array_like._ScalarType
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"(numpy._typing._array_like._SupportsArrayË
ånumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]¶
\numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]õ
2numpy.dtype[numpy._typing._array_like._ScalarType]X
%numpy._typing._array_like._ScalarType
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequence"$numpy._typing._array_like._ArrayLike*⁄
axisœ
LTypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]€
AUnion[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]],
typing.SupportsIndex"typing.SupportsIndexf
%typing.Sequence[typing.SupportsIndex],
typing.SupportsIndex"typing.SupportsIndex"typing.Sequence"numpy._typing._shape._ShapeLike0:overloadX‹
expand_dims numpy.lib.shape_base.expand_dims"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*π
a±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike*⁄
axisœ
LTypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]€
AUnion[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]],
typing.SupportsIndex"typing.SupportsIndexf
%typing.Sequence[typing.SupportsIndex],
typing.SupportsIndex"typing.SupportsIndex"typing.Sequence"numpy._typing._shape._ShapeLike0:overloadX"œÌ
clipnumpy.core.fromnumeric.clipöD
clipnumpy.core.fromnumeric.clip"N
numpy.core.fromnumeric._SCT
numpy.generic"numpy.generic"numpy.generic*U
aN
numpy.core.fromnumeric._SCT
numpy.generic"numpy.generic"numpy.generic*ß
a_minõ
ÿUnion[None,TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]]
None±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike*ß
a_maxõ
ÿUnion[None,TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]]
None±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike*
out
None *
dtype
None *±
where£
ÿUnion[None,TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]]
Noneπ
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"+numpy._typing._array_like._ArrayLikeBool_co *Í
order‹
nTypeAlias[Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]’
cUnion[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]
None7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"numpy._OrderKACF *+
subok
builtins.bool"builtins.bool *Û
	signature·
<Union[builtins.str,builtins.tuple[Union[None,builtins.str]]]
builtins.str"builtins.strÄ
(builtins.tuple[Union[None,builtins.str]]D
Union[None,builtins.str]
None
builtins.str"builtins.str"builtins.tuple *:
extobj,
builtins.list[Any]
Any"builtins.list *ø
castingØ
TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ï
tUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"numpy._CastingKind 0:overloadXƒF
clipnumpy.core.fromnumeric.clip"
Any*≈
aΩ
hTypeAlias[Union[builtins.int,builtins.float,builtins.complex,builtins.str,builtins.bytes,numpy.generic]]ß
]Union[builtins.int,builtins.float,builtins.complex,builtins.str,builtins.bytes,numpy.generic]
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complex
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
numpy.generic"numpy.generic"%numpy._typing._scalars._ScalarLike_co*ß
a_minõ
ÿUnion[None,TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]]
None±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike*ß
a_maxõ
ÿUnion[None,TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]]
None±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike*
out
None *
dtype
None *±
where£
ÿUnion[None,TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]]
Noneπ
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"+numpy._typing._array_like._ArrayLikeBool_co *Í
order‹
nTypeAlias[Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]’
cUnion[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]
None7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"numpy._OrderKACF *+
subok
builtins.bool"builtins.bool *Û
	signature·
<Union[builtins.str,builtins.tuple[Union[None,builtins.str]]]
builtins.str"builtins.strÄ
(builtins.tuple[Union[None,builtins.str]]D
Union[None,builtins.str]
None
builtins.str"builtins.str"builtins.tuple *:
extobj,
builtins.list[Any]
Any"builtins.list *ø
castingØ
TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ï
tUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"numpy._CastingKind 0:overloadX∂P
clipnumpy.core.fromnumeric.clip"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*∫

a≤

˚TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]]]â
Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]]¶
\numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]õ
2numpy.dtype[numpy._typing._array_like._ScalarType]X
%numpy._typing._array_like._ScalarType
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"(numpy._typing._array_like._SupportsArrayË
ånumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]¶
\numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]õ
2numpy.dtype[numpy._typing._array_like._ScalarType]X
%numpy._typing._array_like._ScalarType
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequence"$numpy._typing._array_like._ArrayLike*ß
a_minõ
ÿUnion[None,TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]]
None±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike*ß
a_maxõ
ÿUnion[None,TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]]
None±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike*
out
None *
dtype
None *±
where£
ÿUnion[None,TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]]
Noneπ
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"+numpy._typing._array_like._ArrayLikeBool_co *Í
order‹
nTypeAlias[Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]’
cUnion[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]
None7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"numpy._OrderKACF *+
subok
builtins.bool"builtins.bool *Û
	signature·
<Union[builtins.str,builtins.tuple[Union[None,builtins.str]]]
builtins.str"builtins.strÄ
(builtins.tuple[Union[None,builtins.str]]D
Union[None,builtins.str]
None
builtins.str"builtins.str"builtins.tuple *:
extobj,
builtins.list[Any]
Any"builtins.list *ø
castingØ
TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ï
tUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"numpy._CastingKind 0:overloadXµU
clipnumpy.core.fromnumeric.clip"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*π
a±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike*ß
a_minõ
ÿUnion[None,TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]]
None±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike*ß
a_maxõ
ÿUnion[None,TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]]
None±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike*
out
None *
dtype
None *±
where£
ÿUnion[None,TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]]
Noneπ
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"+numpy._typing._array_like._ArrayLikeBool_co *Í
order‹
nTypeAlias[Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]’
cUnion[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]
None7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"numpy._OrderKACF *+
subok
builtins.bool"builtins.bool *Û
	signature·
<Union[builtins.str,builtins.tuple[Union[None,builtins.str]]]
builtins.str"builtins.strÄ
(builtins.tuple[Union[None,builtins.str]]D
Union[None,builtins.str]
None
builtins.str"builtins.str"builtins.tuple *:
extobj,
builtins.list[Any]
Any"builtins.list *ø
castingØ
TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ï
tUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"numpy._CastingKind 0:overloadX›]
clipnumpy.core.fromnumeric.clip"
Any*π
a±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike*ß
a_minõ
ÿUnion[None,TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]]
None±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike*ß
a_maxõ
ÿUnion[None,TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]]
None±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike*©
outù
!numpy.core.fromnumeric._ArrayTypeg
#numpy.ndarray[Any,numpy.dtype[Any]]
Any(
numpy.dtype[Any]
Any"numpy.dtype"numpy.ndarray"numpy.ndarray *¢

dtypeñ

ÍTypeAlias[Union[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]]]ˇ
ﬂUnion[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]](
numpy.dtype[Any]
Any"numpy.dtype
None
builtins.type"builtins.typeê
:numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]](
numpy.dtype[Any]
Any"numpy.dtype"(numpy._typing._dtype_like._SupportsDType
builtins.str"builtins.strì
lTypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]ˆ
aUnion[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]ç
"Tuple[TypeAlias[Any],builtins.int]G
TypeAlias[Any]
Any"*numpy._typing._dtype_like._DTypeLikeNested
builtins.int"builtins.int ,
builtins.list[Any]
Any"builtins.listM
TypeAlias[TypedDict]
	TypedDict"$numpy._typing._dtype_like._DTypeDict "(numpy._typing._dtype_like._VoidDTypeLike"#numpy._typing._dtype_like.DTypeLike*±
where£
ÿUnion[None,TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]]
Noneπ
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"+numpy._typing._array_like._ArrayLikeBool_co *Í
order‹
nTypeAlias[Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]’
cUnion[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]
None7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"numpy._OrderKACF *+
subok
builtins.bool"builtins.bool *Û
	signature·
<Union[builtins.str,builtins.tuple[Union[None,builtins.str]]]
builtins.str"builtins.strÄ
(builtins.tuple[Union[None,builtins.str]]D
Union[None,builtins.str]
None
builtins.str"builtins.str"builtins.tuple *:
extobj,
builtins.list[Any]
Any"builtins.list *ø
castingØ
TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ï
tUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"numpy._CastingKind 0:overloadXÙ^
clipnumpy.core.fromnumeric.clip"ù
!numpy.core.fromnumeric._ArrayTypeg
#numpy.ndarray[Any,numpy.dtype[Any]]
Any(
numpy.dtype[Any]
Any"numpy.dtype"numpy.ndarray"numpy.ndarray*π
a±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike*ß
a_minõ
ÿUnion[None,TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]]
None±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike*ß
a_maxõ
ÿUnion[None,TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]]
None±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike*ß
outù
!numpy.core.fromnumeric._ArrayTypeg
#numpy.ndarray[Any,numpy.dtype[Any]]
Any(
numpy.dtype[Any]
Any"numpy.dtype"numpy.ndarray"numpy.ndarray*§

dtypeñ

ÍTypeAlias[Union[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]]]ˇ
ﬂUnion[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]](
numpy.dtype[Any]
Any"numpy.dtype
None
builtins.type"builtins.typeê
:numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]](
numpy.dtype[Any]
Any"numpy.dtype"(numpy._typing._dtype_like._SupportsDType
builtins.str"builtins.strì
lTypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]ˆ
aUnion[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]ç
"Tuple[TypeAlias[Any],builtins.int]G
TypeAlias[Any]
Any"*numpy._typing._dtype_like._DTypeLikeNested
builtins.int"builtins.int ,
builtins.list[Any]
Any"builtins.listM
TypeAlias[TypedDict]
	TypedDict"$numpy._typing._dtype_like._DTypeDict "(numpy._typing._dtype_like._VoidDTypeLike"#numpy._typing._dtype_like.DTypeLike *±
where£
ÿUnion[None,TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]]
Noneπ
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"+numpy._typing._array_like._ArrayLikeBool_co *Í
order‹
nTypeAlias[Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]’
cUnion[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]
None7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"numpy._OrderKACF *+
subok
builtins.bool"builtins.bool *Û
	signature·
<Union[builtins.str,builtins.tuple[Union[None,builtins.str]]]
builtins.str"builtins.strÄ
(builtins.tuple[Union[None,builtins.str]]D
Union[None,builtins.str]
None
builtins.str"builtins.str"builtins.tuple *:
extobj,
builtins.list[Any]
Any"builtins.list *ø
castingØ
TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ï
tUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"numpy._CastingKind 0:overloadX"∑B
indicesnumpy.core.numeric.indices¶
indicesnumpy.core.numeric.indices"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*^

dimensionsN
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.Sequence*A
dtype4
Type[builtins.int]
builtins.int"builtins.int *H
sparse:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadXû
indicesnumpy.core.numeric.indices"˚
cbuiltins.tuple[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"builtins.tuple*^

dimensionsN
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.Sequence*A
dtype4
Type[builtins.int]
builtins.int"builtins.int *H
sparse:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadX†
indicesnumpy.core.numeric.indices"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*^

dimensionsN
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.Sequence*∫
dtypeÆ
°TypeAlias[Union[numpy.dtype[numpy._typing._dtype_like._SCT],builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[numpy._typing._dtype_like._SCT]]]]ﬂ
ñUnion[numpy.dtype[numpy._typing._dtype_like._SCT],builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[numpy._typing._dtype_like._SCT]]]ç
+numpy.dtype[numpy._typing._dtype_like._SCT]Q
numpy._typing._dtype_like._SCT
numpy.generic"numpy.generic"numpy.generic"numpy.dtype
builtins.type"builtins.typeë
Unumpy._typing._dtype_like._SupportsDType[numpy.dtype[numpy._typing._dtype_like._SCT]]ç
+numpy.dtype[numpy._typing._dtype_like._SCT]Q
numpy._typing._dtype_like._SCT
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"(numpy._typing._dtype_like._SupportsDType"$numpy._typing._dtype_like._DTypeLike*H
sparse:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadXñ
indicesnumpy.core.numeric.indices"˚
cbuiltins.tuple[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"builtins.tuple*^

dimensionsN
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.Sequence*∫
dtypeÆ
°TypeAlias[Union[numpy.dtype[numpy._typing._dtype_like._SCT],builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[numpy._typing._dtype_like._SCT]]]]ﬂ
ñUnion[numpy.dtype[numpy._typing._dtype_like._SCT],builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[numpy._typing._dtype_like._SCT]]]ç
+numpy.dtype[numpy._typing._dtype_like._SCT]Q
numpy._typing._dtype_like._SCT
numpy.generic"numpy.generic"numpy.generic"numpy.dtype
builtins.type"builtins.typeë
Unumpy._typing._dtype_like._SupportsDType[numpy.dtype[numpy._typing._dtype_like._SCT]]ç
+numpy.dtype[numpy._typing._dtype_like._SCT]Q
numpy._typing._dtype_like._SCT
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"(numpy._typing._dtype_like._SupportsDType"$numpy._typing._dtype_like._DTypeLike*F
sparse:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadXà
indicesnumpy.core.numeric.indices"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*^

dimensionsN
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.Sequence*¢

dtypeñ

ÍTypeAlias[Union[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]]]ˇ
ﬂUnion[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]](
numpy.dtype[Any]
Any"numpy.dtype
None
builtins.type"builtins.typeê
:numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]](
numpy.dtype[Any]
Any"numpy.dtype"(numpy._typing._dtype_like._SupportsDType
builtins.str"builtins.strì
lTypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]ˆ
aUnion[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]ç
"Tuple[TypeAlias[Any],builtins.int]G
TypeAlias[Any]
Any"*numpy._typing._dtype_like._DTypeLikeNested
builtins.int"builtins.int ,
builtins.list[Any]
Any"builtins.listM
TypeAlias[TypedDict]
	TypedDict"$numpy._typing._dtype_like._DTypeDict "(numpy._typing._dtype_like._VoidDTypeLike"#numpy._typing._dtype_like.DTypeLike*H
sparse:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadX˛
indicesnumpy.core.numeric.indices"˚
cbuiltins.tuple[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"builtins.tuple*^

dimensionsN
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.Sequence*¢

dtypeñ

ÍTypeAlias[Union[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]]]ˇ
ﬂUnion[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]](
numpy.dtype[Any]
Any"numpy.dtype
None
builtins.type"builtins.typeê
:numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]](
numpy.dtype[Any]
Any"numpy.dtype"(numpy._typing._dtype_like._SupportsDType
builtins.str"builtins.strì
lTypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]ˆ
aUnion[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]ç
"Tuple[TypeAlias[Any],builtins.int]G
TypeAlias[Any]
Any"*numpy._typing._dtype_like._DTypeLikeNested
builtins.int"builtins.int ,
builtins.list[Any]
Any"builtins.listM
TypeAlias[TypedDict]
	TypedDict"$numpy._typing._dtype_like._DTypeDict "(numpy._typing._dtype_like._VoidDTypeLike"#numpy._typing._dtype_like.DTypeLike*F
sparse:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadX"´Q
	ones_likenumpy.core.numeric.ones_like€
	ones_likenumpy.core.numeric.ones_like"ô
numpy.core.numeric._ArrayTypeg
#numpy.ndarray[Any,numpy.dtype[Any]]
Any(
numpy.dtype[Any]
Any"numpy.dtype"numpy.ndarray"numpy.ndarray*°
aô
numpy.core.numeric._ArrayTypeg
#numpy.ndarray[Any,numpy.dtype[Any]]
Any(
numpy.dtype[Any]
Any"numpy.dtype"numpy.ndarray"numpy.ndarray*
dtype
None *Í
order‹
nTypeAlias[Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]’
cUnion[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]
None7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"numpy._OrderKACF *G
subok:
Literal[builtins.bool]	
builtins.bool"builtins.bool *
shape
None 0:overloadXÙ
	ones_likenumpy.core.numeric.ones_like"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*∫

a≤

˚TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]]]â
Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]]¶
\numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]õ
2numpy.dtype[numpy._typing._array_like._ScalarType]X
%numpy._typing._array_like._ScalarType
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"(numpy._typing._array_like._SupportsArrayË
ånumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]¶
\numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]õ
2numpy.dtype[numpy._typing._array_like._ScalarType]X
%numpy._typing._array_like._ScalarType
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequence"$numpy._typing._array_like._ArrayLike*
dtype
None *Í
order‹
nTypeAlias[Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]’
cUnion[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]
None7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"numpy._OrderKACF *+
subok
builtins.bool"builtins.bool *∆
shape∏
XUnion[None,TypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]]
Noneœ
LTypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]€
AUnion[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]],
typing.SupportsIndex"typing.SupportsIndexf
%typing.Sequence[typing.SupportsIndex],
typing.SupportsIndex"typing.SupportsIndex"typing.Sequence"numpy._typing._shape._ShapeLike 0:overloadX‚
	ones_likenumpy.core.numeric.ones_like"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*)
a"
builtins.object"builtins.object*
dtype
None *Í
order‹
nTypeAlias[Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]’
cUnion[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]
None7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"numpy._OrderKACF *+
subok
builtins.bool"builtins.bool *∆
shape∏
XUnion[None,TypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]]
Noneœ
LTypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]€
AUnion[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]],
typing.SupportsIndex"typing.SupportsIndexf
%typing.Sequence[typing.SupportsIndex],
typing.SupportsIndex"typing.SupportsIndex"typing.Sequence"numpy._typing._shape._ShapeLike 0:overloadXÌ
	ones_likenumpy.core.numeric.ones_like"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*
a
Any*∫
dtypeÆ
°TypeAlias[Union[numpy.dtype[numpy._typing._dtype_like._SCT],builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[numpy._typing._dtype_like._SCT]]]]ﬂ
ñUnion[numpy.dtype[numpy._typing._dtype_like._SCT],builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[numpy._typing._dtype_like._SCT]]]ç
+numpy.dtype[numpy._typing._dtype_like._SCT]Q
numpy._typing._dtype_like._SCT
numpy.generic"numpy.generic"numpy.generic"numpy.dtype
builtins.type"builtins.typeë
Unumpy._typing._dtype_like._SupportsDType[numpy.dtype[numpy._typing._dtype_like._SCT]]ç
+numpy.dtype[numpy._typing._dtype_like._SCT]Q
numpy._typing._dtype_like._SCT
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"(numpy._typing._dtype_like._SupportsDType"$numpy._typing._dtype_like._DTypeLike*Í
order‹
nTypeAlias[Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]’
cUnion[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]
None7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"numpy._OrderKACF *+
subok
builtins.bool"builtins.bool *∆
shape∏
XUnion[None,TypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]]
Noneœ
LTypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]€
AUnion[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]],
typing.SupportsIndex"typing.SupportsIndexf
%typing.Sequence[typing.SupportsIndex],
typing.SupportsIndex"typing.SupportsIndex"typing.Sequence"numpy._typing._shape._ShapeLike 0:overloadX’
	ones_likenumpy.core.numeric.ones_like"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*
a
Any*¢

dtypeñ

ÍTypeAlias[Union[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]]]ˇ
ﬂUnion[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]](
numpy.dtype[Any]
Any"numpy.dtype
None
builtins.type"builtins.typeê
:numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]](
numpy.dtype[Any]
Any"numpy.dtype"(numpy._typing._dtype_like._SupportsDType
builtins.str"builtins.strì
lTypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]ˆ
aUnion[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]ç
"Tuple[TypeAlias[Any],builtins.int]G
TypeAlias[Any]
Any"*numpy._typing._dtype_like._DTypeLikeNested
builtins.int"builtins.int ,
builtins.list[Any]
Any"builtins.listM
TypeAlias[TypedDict]
	TypedDict"$numpy._typing._dtype_like._DTypeDict "(numpy._typing._dtype_like._VoidDTypeLike"#numpy._typing._dtype_like.DTypeLike*Í
order‹
nTypeAlias[Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]’
cUnion[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]
None7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"numpy._OrderKACF *+
subok
builtins.bool"builtins.bool *∆
shape∏
XUnion[None,TypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]]
Noneœ
LTypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]€
AUnion[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]],
typing.SupportsIndex"typing.SupportsIndexf
%typing.Sequence[typing.SupportsIndex],
typing.SupportsIndex"typing.SupportsIndex"typing.Sequence"numpy._typing._shape._ShapeLike 0:overloadX"€-
squeezenumpy.core.fromnumeric.squeeze¶
squeezenumpy.core.fromnumeric.squeeze"N
numpy.core.fromnumeric._SCT
numpy.generic"numpy.generic"numpy.generic*U
aN
numpy.core.fromnumeric._SCT
numpy.generic"numpy.generic"numpy.generic*≈
axis∏
XUnion[None,TypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]]
Noneœ
LTypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]€
AUnion[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]],
typing.SupportsIndex"typing.SupportsIndexf
%typing.Sequence[typing.SupportsIndex],
typing.SupportsIndex"typing.SupportsIndex"typing.Sequence"numpy._typing._shape._ShapeLike 0:overloadX¬
squeezenumpy.core.fromnumeric.squeeze"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*∫

a≤

˚TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]]]â
Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]]¶
\numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]õ
2numpy.dtype[numpy._typing._array_like._ScalarType]X
%numpy._typing._array_like._ScalarType
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"(numpy._typing._array_like._SupportsArrayË
ånumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]¶
\numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]õ
2numpy.dtype[numpy._typing._array_like._ScalarType]X
%numpy._typing._array_like._ScalarType
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequence"$numpy._typing._array_like._ArrayLike*≈
axis∏
XUnion[None,TypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]]
Noneœ
LTypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]€
AUnion[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]],
typing.SupportsIndex"typing.SupportsIndexf
%typing.Sequence[typing.SupportsIndex],
typing.SupportsIndex"typing.SupportsIndex"typing.Sequence"numpy._typing._shape._ShapeLike 0:overloadX¡
squeezenumpy.core.fromnumeric.squeeze"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*π
a±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike*≈
axis∏
XUnion[None,TypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]]
Noneœ
LTypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]€
AUnion[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]],
typing.SupportsIndex"typing.SupportsIndexf
%typing.Sequence[typing.SupportsIndex],
typing.SupportsIndex"typing.SupportsIndex"typing.Sequence"numpy._typing._shape._ShapeLike 0:overloadX"∑Q

zeros_likenumpy.core.numeric.zeros_like›

zeros_likenumpy.core.numeric.zeros_like"ô
numpy.core.numeric._ArrayTypeg
#numpy.ndarray[Any,numpy.dtype[Any]]
Any(
numpy.dtype[Any]
Any"numpy.dtype"numpy.ndarray"numpy.ndarray*°
aô
numpy.core.numeric._ArrayTypeg
#numpy.ndarray[Any,numpy.dtype[Any]]
Any(
numpy.dtype[Any]
Any"numpy.dtype"numpy.ndarray"numpy.ndarray*
dtype
None *Í
order‹
nTypeAlias[Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]’
cUnion[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]
None7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"numpy._OrderKACF *G
subok:
Literal[builtins.bool]	
builtins.bool"builtins.bool *
shape
None 0:overloadXˆ

zeros_likenumpy.core.numeric.zeros_like"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*∫

a≤

˚TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]]]â
Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]]¶
\numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]õ
2numpy.dtype[numpy._typing._array_like._ScalarType]X
%numpy._typing._array_like._ScalarType
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"(numpy._typing._array_like._SupportsArrayË
ånumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]¶
\numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]õ
2numpy.dtype[numpy._typing._array_like._ScalarType]X
%numpy._typing._array_like._ScalarType
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequence"$numpy._typing._array_like._ArrayLike*
dtype
None *Í
order‹
nTypeAlias[Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]’
cUnion[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]
None7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"numpy._OrderKACF *+
subok
builtins.bool"builtins.bool *∆
shape∏
XUnion[None,TypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]]
Noneœ
LTypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]€
AUnion[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]],
typing.SupportsIndex"typing.SupportsIndexf
%typing.Sequence[typing.SupportsIndex],
typing.SupportsIndex"typing.SupportsIndex"typing.Sequence"numpy._typing._shape._ShapeLike 0:overloadX‰

zeros_likenumpy.core.numeric.zeros_like"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*)
a"
builtins.object"builtins.object*
dtype
None *Í
order‹
nTypeAlias[Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]’
cUnion[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]
None7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"numpy._OrderKACF *+
subok
builtins.bool"builtins.bool *∆
shape∏
XUnion[None,TypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]]
Noneœ
LTypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]€
AUnion[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]],
typing.SupportsIndex"typing.SupportsIndexf
%typing.Sequence[typing.SupportsIndex],
typing.SupportsIndex"typing.SupportsIndex"typing.Sequence"numpy._typing._shape._ShapeLike 0:overloadXÔ

zeros_likenumpy.core.numeric.zeros_like"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*
a
Any*∫
dtypeÆ
°TypeAlias[Union[numpy.dtype[numpy._typing._dtype_like._SCT],builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[numpy._typing._dtype_like._SCT]]]]ﬂ
ñUnion[numpy.dtype[numpy._typing._dtype_like._SCT],builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[numpy._typing._dtype_like._SCT]]]ç
+numpy.dtype[numpy._typing._dtype_like._SCT]Q
numpy._typing._dtype_like._SCT
numpy.generic"numpy.generic"numpy.generic"numpy.dtype
builtins.type"builtins.typeë
Unumpy._typing._dtype_like._SupportsDType[numpy.dtype[numpy._typing._dtype_like._SCT]]ç
+numpy.dtype[numpy._typing._dtype_like._SCT]Q
numpy._typing._dtype_like._SCT
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"(numpy._typing._dtype_like._SupportsDType"$numpy._typing._dtype_like._DTypeLike*Í
order‹
nTypeAlias[Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]’
cUnion[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]
None7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"numpy._OrderKACF *+
subok
builtins.bool"builtins.bool *∆
shape∏
XUnion[None,TypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]]
Noneœ
LTypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]€
AUnion[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]],
typing.SupportsIndex"typing.SupportsIndexf
%typing.Sequence[typing.SupportsIndex],
typing.SupportsIndex"typing.SupportsIndex"typing.Sequence"numpy._typing._shape._ShapeLike 0:overloadX◊

zeros_likenumpy.core.numeric.zeros_like"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*
a
Any*¢

dtypeñ

ÍTypeAlias[Union[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]]]ˇ
ﬂUnion[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]](
numpy.dtype[Any]
Any"numpy.dtype
None
builtins.type"builtins.typeê
:numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]](
numpy.dtype[Any]
Any"numpy.dtype"(numpy._typing._dtype_like._SupportsDType
builtins.str"builtins.strì
lTypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]ˆ
aUnion[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]ç
"Tuple[TypeAlias[Any],builtins.int]G
TypeAlias[Any]
Any"*numpy._typing._dtype_like._DTypeLikeNested
builtins.int"builtins.int ,
builtins.list[Any]
Any"builtins.listM
TypeAlias[TypedDict]
	TypedDict"$numpy._typing._dtype_like._DTypeDict "(numpy._typing._dtype_like._VoidDTypeLike"#numpy._typing._dtype_like.DTypeLike*Í
order‹
nTypeAlias[Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]’
cUnion[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]
None7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"numpy._OrderKACF *+
subok
builtins.bool"builtins.bool *∆
shape∏
XUnion[None,TypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]]
Noneœ
LTypeAlias[Union[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]]]€
AUnion[typing.SupportsIndex,typing.Sequence[typing.SupportsIndex]],
typing.SupportsIndex"typing.SupportsIndexf
%typing.Sequence[typing.SupportsIndex],
typing.SupportsIndex"typing.SupportsIndex"typing.Sequence"numpy._typing._shape._ShapeLike 0:overloadX"≠-
anglenumpy.lib.function_base.angle‰
anglenumpy.lib.function_base.angle".
numpy.floating[Any]
Any"numpy.floating*“
z 
‘TypeAlias[Union[TypeAlias[Union[TypeAlias[Union[TypeAlias[Union[builtins.bool,numpy.bool_]],builtins.int,numpy.integer[Any]]],builtins.float,numpy.floating[Any]]],builtins.complex,numpy.complexfloating[Any,Any]]]∆	
…Union[TypeAlias[Union[TypeAlias[Union[TypeAlias[Union[builtins.bool,numpy.bool_]],builtins.int,numpy.integer[Any]]],builtins.float,numpy.floating[Any]]],builtins.complex,numpy.complexfloating[Any,Any]]Ñ
íTypeAlias[Union[TypeAlias[Union[TypeAlias[Union[builtins.bool,numpy.bool_]],builtins.int,numpy.integer[Any]]],builtins.float,numpy.floating[Any]]]ƒ
áUnion[TypeAlias[Union[TypeAlias[Union[builtins.bool,numpy.bool_]],builtins.int,numpy.integer[Any]]],builtins.float,numpy.floating[Any]]„
]TypeAlias[Union[TypeAlias[Union[builtins.bool,numpy.bool_]],builtins.int,numpy.integer[Any]]]€
RUnion[TypeAlias[Union[builtins.bool,numpy.bool_]],builtins.int,numpy.integer[Any]]∂
+TypeAlias[Union[builtins.bool,numpy.bool_]]`
 Union[builtins.bool,numpy.bool_]
builtins.bool"builtins.bool
numpy.bool_"numpy.bool_"#numpy._typing._scalars._BoolLike_co
builtins.int"builtins.int,
numpy.integer[Any]
Any"numpy.integer""numpy._typing._scalars._IntLike_co 
builtins.float"builtins.float.
numpy.floating[Any]
Any"numpy.floating"$numpy._typing._scalars._FloatLike_co$
builtins.complex"builtins.complexI
numpy.complexfloating[Any,Any]
Any
Any"numpy.complexfloating"&numpy._typing._scalars._ComplexLike_co*)
deg
builtins.bool"builtins.bool 0:overloadXè
anglenumpy.lib.function_base.angle"
Any*%
z
numpy.object_"numpy.object_*)
deg
builtins.bool"builtins.bool 0:overloadX¨
anglenumpy.lib.function_base.angle"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*ƒ
zº
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike".numpy._typing._array_like._ArrayLikeComplex_co*)
deg
builtins.bool"builtins.bool 0:overloadX‹
anglenumpy.lib.function_base.angle"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*Ù
zÏ
ÀTypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]]Í
¿Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]ª
Dnumpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]I
numpy.dtype[numpy.object_]
numpy.object_"numpy.object_"numpy.dtype"(numpy._typing._array_like._SupportsArray‰
tnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]ª
Dnumpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]I
numpy.dtype[numpy.object_]
numpy.object_"numpy.object_"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequence"-numpy._typing._array_like._ArrayLikeObject_co*)
deg
builtins.bool"builtins.bool 0:overloadX*â
__annotations__numpy.ma.core.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*l
__all__numpy.ma.core.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*:
nomasknumpy.ma.core.nomask
numpy.bool_"numpy.bool_*o
get_datanumpy.ma.core.get_dataK
CallableType[builtins.function]&
builtins.function"builtins.function*d
expnumpy.ma.core.expJ
#numpy.ma.core._MaskedUnaryOperation"#numpy.ma.core._MaskedUnaryOperation*p
	conjugatenumpy.ma.core.conjugateJ
#numpy.ma.core._MaskedUnaryOperation"#numpy.ma.core._MaskedUnaryOperation*d
sinnumpy.ma.core.sinJ
#numpy.ma.core._MaskedUnaryOperation"#numpy.ma.core._MaskedUnaryOperation*d
cosnumpy.ma.core.cosJ
#numpy.ma.core._MaskedUnaryOperation"#numpy.ma.core._MaskedUnaryOperation*j
arctannumpy.ma.core.arctanJ
#numpy.ma.core._MaskedUnaryOperation"#numpy.ma.core._MaskedUnaryOperation*l
arcsinhnumpy.ma.core.arcsinhJ
#numpy.ma.core._MaskedUnaryOperation"#numpy.ma.core._MaskedUnaryOperation*f
sinhnumpy.ma.core.sinhJ
#numpy.ma.core._MaskedUnaryOperation"#numpy.ma.core._MaskedUnaryOperation*f
coshnumpy.ma.core.coshJ
#numpy.ma.core._MaskedUnaryOperation"#numpy.ma.core._MaskedUnaryOperation*f
tanhnumpy.ma.core.tanhJ
#numpy.ma.core._MaskedUnaryOperation"#numpy.ma.core._MaskedUnaryOperation*d
absnumpy.ma.core.absJ
#numpy.ma.core._MaskedUnaryOperation"#numpy.ma.core._MaskedUnaryOperation*n
absolutenumpy.ma.core.absoluteJ
#numpy.ma.core._MaskedUnaryOperation"#numpy.ma.core._MaskedUnaryOperation*f
fabsnumpy.ma.core.fabsJ
#numpy.ma.core._MaskedUnaryOperation"#numpy.ma.core._MaskedUnaryOperation*n
negativenumpy.ma.core.negativeJ
#numpy.ma.core._MaskedUnaryOperation"#numpy.ma.core._MaskedUnaryOperation*h
floornumpy.ma.core.floorJ
#numpy.ma.core._MaskedUnaryOperation"#numpy.ma.core._MaskedUnaryOperation*f
ceilnumpy.ma.core.ceilJ
#numpy.ma.core._MaskedUnaryOperation"#numpy.ma.core._MaskedUnaryOperation*j
aroundnumpy.ma.core.aroundJ
#numpy.ma.core._MaskedUnaryOperation"#numpy.ma.core._MaskedUnaryOperation*t
logical_notnumpy.ma.core.logical_notJ
#numpy.ma.core._MaskedUnaryOperation"#numpy.ma.core._MaskedUnaryOperation*f
sqrtnumpy.ma.core.sqrtJ
#numpy.ma.core._MaskedUnaryOperation"#numpy.ma.core._MaskedUnaryOperation*d
lognumpy.ma.core.logJ
#numpy.ma.core._MaskedUnaryOperation"#numpy.ma.core._MaskedUnaryOperation*f
log2numpy.ma.core.log2J
#numpy.ma.core._MaskedUnaryOperation"#numpy.ma.core._MaskedUnaryOperation*h
log10numpy.ma.core.log10J
#numpy.ma.core._MaskedUnaryOperation"#numpy.ma.core._MaskedUnaryOperation*d
tannumpy.ma.core.tanJ
#numpy.ma.core._MaskedUnaryOperation"#numpy.ma.core._MaskedUnaryOperation*j
arcsinnumpy.ma.core.arcsinJ
#numpy.ma.core._MaskedUnaryOperation"#numpy.ma.core._MaskedUnaryOperation*j
arccosnumpy.ma.core.arccosJ
#numpy.ma.core._MaskedUnaryOperation"#numpy.ma.core._MaskedUnaryOperation*l
arccoshnumpy.ma.core.arccoshJ
#numpy.ma.core._MaskedUnaryOperation"#numpy.ma.core._MaskedUnaryOperation*l
arctanhnumpy.ma.core.arctanhJ
#numpy.ma.core._MaskedUnaryOperation"#numpy.ma.core._MaskedUnaryOperation*f
addnumpy.ma.core.addL
$numpy.ma.core._MaskedBinaryOperation"$numpy.ma.core._MaskedBinaryOperation*p
subtractnumpy.ma.core.subtractL
$numpy.ma.core._MaskedBinaryOperation"$numpy.ma.core._MaskedBinaryOperation*p
multiplynumpy.ma.core.multiplyL
$numpy.ma.core._MaskedBinaryOperation"$numpy.ma.core._MaskedBinaryOperation*n
arctan2numpy.ma.core.arctan2L
$numpy.ma.core._MaskedBinaryOperation"$numpy.ma.core._MaskedBinaryOperation*j
equalnumpy.ma.core.equalL
$numpy.ma.core._MaskedBinaryOperation"$numpy.ma.core._MaskedBinaryOperation*r
	not_equalnumpy.ma.core.not_equalL
$numpy.ma.core._MaskedBinaryOperation"$numpy.ma.core._MaskedBinaryOperation*t

less_equalnumpy.ma.core.less_equalL
$numpy.ma.core._MaskedBinaryOperation"$numpy.ma.core._MaskedBinaryOperation*z
greater_equalnumpy.ma.core.greater_equalL
$numpy.ma.core._MaskedBinaryOperation"$numpy.ma.core._MaskedBinaryOperation*h
lessnumpy.ma.core.lessL
$numpy.ma.core._MaskedBinaryOperation"$numpy.ma.core._MaskedBinaryOperation*n
greaternumpy.ma.core.greaterL
$numpy.ma.core._MaskedBinaryOperation"$numpy.ma.core._MaskedBinaryOperation*v
logical_andnumpy.ma.core.logical_andL
$numpy.ma.core._MaskedBinaryOperation"$numpy.ma.core._MaskedBinaryOperation*n
alltruenumpy.ma.core.alltrueL
$numpy.ma.core._MaskedBinaryOperation"$numpy.ma.core._MaskedBinaryOperation*t

logical_ornumpy.ma.core.logical_orL
$numpy.ma.core._MaskedBinaryOperation"$numpy.ma.core._MaskedBinaryOperation*o
sometruenumpy.ma.core.sometrueK
CallableType[builtins.function]&
builtins.function"builtins.function*v
logical_xornumpy.ma.core.logical_xorL
$numpy.ma.core._MaskedBinaryOperation"$numpy.ma.core._MaskedBinaryOperation*v
bitwise_andnumpy.ma.core.bitwise_andL
$numpy.ma.core._MaskedBinaryOperation"$numpy.ma.core._MaskedBinaryOperation*t

bitwise_ornumpy.ma.core.bitwise_orL
$numpy.ma.core._MaskedBinaryOperation"$numpy.ma.core._MaskedBinaryOperation*v
bitwise_xornumpy.ma.core.bitwise_xorL
$numpy.ma.core._MaskedBinaryOperation"$numpy.ma.core._MaskedBinaryOperation*j
hypotnumpy.ma.core.hypotL
$numpy.ma.core._MaskedBinaryOperation"$numpy.ma.core._MaskedBinaryOperation*l
dividenumpy.ma.core.divideL
$numpy.ma.core._MaskedBinaryOperation"$numpy.ma.core._MaskedBinaryOperation*v
true_dividenumpy.ma.core.true_divideL
$numpy.ma.core._MaskedBinaryOperation"$numpy.ma.core._MaskedBinaryOperation*x
floor_dividenumpy.ma.core.floor_divideL
$numpy.ma.core._MaskedBinaryOperation"$numpy.ma.core._MaskedBinaryOperation*r
	remaindernumpy.ma.core.remainderL
$numpy.ma.core._MaskedBinaryOperation"$numpy.ma.core._MaskedBinaryOperation*h
fmodnumpy.ma.core.fmodL
$numpy.ma.core._MaskedBinaryOperation"$numpy.ma.core._MaskedBinaryOperation*f
modnumpy.ma.core.modL
$numpy.ma.core._MaskedBinaryOperation"$numpy.ma.core._MaskedBinaryOperation*o
get_masknumpy.ma.core.get_maskK
CallableType[builtins.function]&
builtins.function"builtins.function*~
masked_print_option!numpy.ma.core.masked_print_optionD
 numpy.ma.core._MaskedPrintOption" numpy.ma.core._MaskedPrintOption*m
isarraynumpy.ma.core.isarrayK
CallableType[builtins.function]&
builtins.function"builtins.function*g
isMAnumpy.ma.core.isMAK
CallableType[builtins.function]&
builtins.function"builtins.function*\
maskednumpy.ma.core.masked<
numpy.ma.core.MaskedConstant"numpy.ma.core.MaskedConstant*p
masked_singletonnumpy.ma.core.masked_singleton<
numpy.ma.core.MaskedConstant"numpy.ma.core.MaskedConstant*P
allnumpy.ma.core.all6
numpy.ma.core._frommethod"numpy.ma.core._frommethod*\
	anomaliesnumpy.ma.core.anomalies6
numpy.ma.core._frommethod"numpy.ma.core._frommethod*R
anomnumpy.ma.core.anom6
numpy.ma.core._frommethod"numpy.ma.core._frommethod*P
anynumpy.ma.core.any6
numpy.ma.core._frommethod"numpy.ma.core._frommethod*Z
compressnumpy.ma.core.compress6
numpy.ma.core._frommethod"numpy.ma.core._frommethod*X
cumprodnumpy.ma.core.cumprod6
numpy.ma.core._frommethod"numpy.ma.core._frommethod*V
cumsumnumpy.ma.core.cumsum6
numpy.ma.core._frommethod"numpy.ma.core._frommethod*R
copynumpy.ma.core.copy6
numpy.ma.core._frommethod"numpy.ma.core._frommethod*Z
diagonalnumpy.ma.core.diagonal6
numpy.ma.core._frommethod"numpy.ma.core._frommethod*`
harden_masknumpy.ma.core.harden_mask6
numpy.ma.core._frommethod"numpy.ma.core._frommethod*P
idsnumpy.ma.core.ids6
numpy.ma.core._frommethod"numpy.ma.core._frommethod*R
meannumpy.ma.core.mean6
numpy.ma.core._frommethod"numpy.ma.core._frommethod*X
nonzeronumpy.ma.core.nonzero6
numpy.ma.core._frommethod"numpy.ma.core._frommethod*R
prodnumpy.ma.core.prod6
numpy.ma.core._frommethod"numpy.ma.core._frommethod*X
productnumpy.ma.core.product6
numpy.ma.core._frommethod"numpy.ma.core._frommethod*T
ravelnumpy.ma.core.ravel6
numpy.ma.core._frommethod"numpy.ma.core._frommethod*V
repeatnumpy.ma.core.repeat6
numpy.ma.core._frommethod"numpy.ma.core._frommethod*`
soften_masknumpy.ma.core.soften_mask6
numpy.ma.core._frommethod"numpy.ma.core._frommethod*P
stdnumpy.ma.core.std6
numpy.ma.core._frommethod"numpy.ma.core._frommethod*P
sumnumpy.ma.core.sum6
numpy.ma.core._frommethod"numpy.ma.core._frommethod*Z
swapaxesnumpy.ma.core.swapaxes6
numpy.ma.core._frommethod"numpy.ma.core._frommethod*T
tracenumpy.ma.core.trace6
numpy.ma.core._frommethod"numpy.ma.core._frommethod*P
varnumpy.ma.core.var6
numpy.ma.core._frommethod"numpy.ma.core._frommethod*T
countnumpy.ma.core.count6
numpy.ma.core._frommethod"numpy.ma.core._frommethod*V
argminnumpy.ma.core.argmin6
numpy.ma.core._frommethod"numpy.ma.core._frommethod*V
argmaxnumpy.ma.core.argmax6
numpy.ma.core._frommethod"numpy.ma.core._frommethod*f
minimumnumpy.ma.core.minimumD
 numpy.ma.core._extrema_operation" numpy.ma.core._extrema_operation*f
maximumnumpy.ma.core.maximumD
 numpy.ma.core._extrema_operation" numpy.ma.core._extrema_operation*w
innerproductnumpy.ma.core.innerproductK
CallableType[builtins.function]&
builtins.function"builtins.function*w
outerproductnumpy.ma.core.outerproductK
CallableType[builtins.function]&
builtins.function"builtins.function*V
arangenumpy.ma.core.arange6
numpy.ma.core._convert2ma"numpy.ma.core._convert2ma*T
emptynumpy.ma.core.empty6
numpy.ma.core._convert2ma"numpy.ma.core._convert2ma*^

empty_likenumpy.ma.core.empty_like6
numpy.ma.core._convert2ma"numpy.ma.core._convert2ma*^

frombuffernumpy.ma.core.frombuffer6
numpy.ma.core._convert2ma"numpy.ma.core._convert2ma*b
fromfunctionnumpy.ma.core.fromfunction6
numpy.ma.core._convert2ma"numpy.ma.core._convert2ma*Z
identitynumpy.ma.core.identity6
numpy.ma.core._convert2ma"numpy.ma.core._convert2ma*R
onesnumpy.ma.core.ones6
numpy.ma.core._convert2ma"numpy.ma.core._convert2ma*T
zerosnumpy.ma.core.zeros6
numpy.ma.core._convert2ma"numpy.ma.core._convert2ma