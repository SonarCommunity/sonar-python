
osÜ
_TextIOWrapperio.TextIOWrapper"io.TextIOBase"typing.TextIO*ü
__init__io.TextIOWrapper.__init__"
None*.
self$
io.TextIOWrapper"io.TextIOWrapper*T
bufferH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *4
line_buffering
builtins.bool"builtins.bool *3
write_through
builtins.bool"builtins.bool *É
bufferio.TextIOWrapper.buffer""
typing.BinaryIO"typing.BinaryIO*.
self$
io.TextIOWrapper"io.TextIOWrapper0:property`*
closedio.TextIOWrapper.closed"
builtins.bool"builtins.bool*.
self$
io.TextIOWrapper"io.TextIOWrapper0:property`*è
line_bufferingio.TextIOWrapper.line_buffering"
builtins.bool"builtins.bool*.
self$
io.TextIOWrapper"io.TextIOWrapper0:property`*ç
write_throughio.TextIOWrapper.write_through"
builtins.bool"builtins.bool*.
self$
io.TextIOWrapper"io.TextIOWrapper0:property`*°
reconfigureio.TextIOWrapper.reconfigure"
None*.
self$
io.TextIOWrapper"io.TextIOWrapper*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *]
line_bufferingG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *\
write_throughG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *E
	__enter__io.TextIOWrapper.__enter__"	
io._T*
self	
io._T*£
__iter__io.TextIOWrapper.__iter__"N
typing.Iterator[builtins.str]
builtins.str"builtins.str"typing.Iterator*,
self$
io.TextIOWrapper"io.TextIOWrapper*s
__next__io.TextIOWrapper.__next__"
builtins.str"builtins.str*.
self$
io.TextIOWrapper"io.TextIOWrapper*æ

writelinesio.TextIOWrapper.writelines"
None*.
self$
io.TextIOWrapper"io.TextIOWrapper*Y
__linesN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable*ù
readlineio.TextIOWrapper.readline"
builtins.str"builtins.str*.
self$
io.TextIOWrapper"io.TextIOWrapper*(
__size
builtins.int"builtins.int *Õ
	readlinesio.TextIOWrapper.readlines"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*.
self$
io.TextIOWrapper"io.TextIOWrapper*(
__hint
builtins.int"builtins.int *¡
seekio.TextIOWrapper.seek"
builtins.int"builtins.int*.
self$
io.TextIOWrapper"io.TextIOWrapper*(
__cookie
builtins.int"builtins.int**
__whence
builtins.int"builtins.int º
_Environos._Environ"typing.MutableMapping*≥
__init__os._Environ.__init__"
None*F
self<
os._Environ[typing.AnyStr]
typing.AnyStr"os._Environ*{
dataq
2typing.MutableMapping[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr"typing.MutableMapping*†
	encodekeyê
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"os._EnvironCodeFunc*†
	decodekeyê
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"os._EnvironCodeFunc*¢
encodevalueê
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"os._EnvironCodeFunc*¢
decodevalueê
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"os._EnvironCodeFunc*W
putenvK
CallableType[builtins.function]&
builtins.function"builtins.function*Y
unsetenvK
CallableType[builtins.function]&
builtins.function"builtins.function*π

setdefaultos._Environ.setdefault"
typing.AnyStr*F
self<
os._Environ[typing.AnyStr]
typing.AnyStr"os._Environ*
key
typing.AnyStr*
value
typing.AnyStr*√
copyos._Environ.copy"a
*builtins.dict[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr"builtins.dict*F
self<
os._Environ[typing.AnyStr]
typing.AnyStr"os._Environ*ê
__delitem__os._Environ.__delitem__"
None*D
self<
os._Environ[typing.AnyStr]
typing.AnyStr"os._Environ*
key
typing.AnyStr*ô
__getitem__os._Environ.__getitem__"
typing.AnyStr*D
self<
os._Environ[typing.AnyStr]
typing.AnyStr"os._Environ*
key
typing.AnyStr*¨
__setitem__os._Environ.__setitem__"
None*D
self<
os._Environ[typing.AnyStr]
typing.AnyStr"os._Environ*
key
typing.AnyStr*
value
typing.AnyStr*¨
__iter__os._Environ.__iter__"D
typing.Iterator[typing.AnyStr]
typing.AnyStr"typing.Iterator*D
self<
os._Environ[typing.AnyStr]
typing.AnyStr"os._Environ*Ç
__len__os._Environ.__len__"
builtins.int"builtins.int*D
self<
os._Environ[typing.AnyStr]
typing.AnyStr"os._EnvironPrµ
	encodekeyos._Environ.encodekeyê
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"os._EnvironCodeFuncrµ
	decodekeyos._Environ.decodekeyê
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"os._EnvironCodeFuncrπ
encodevalueos._Environ.encodevalueê
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"os._EnvironCodeFuncrπ
decodevalueos._Environ.decodevalueê
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"os._EnvironCodeFuncri
putenvos._Environ.putenvK
CallableType[builtins.function]&
builtins.function"builtins.functionrm
unsetenvos._Environ.unsetenvK
CallableType[builtins.function]&
builtins.function"builtins.function–
stat_resultos.stat_result"builtins.object*î
__getitem__os.stat_result.__getitem__"
builtins.int"builtins.int*(
self 
os.stat_result"os.stat_result*!
i
builtins.int"builtins.int*≤
__init__os.stat_result.__init__"
None**
self 
os.stat_result"os.stat_result*W
tupleL
builtins.tuple[builtins.int]
builtins.int"builtins.int"builtins.tupler?
st_modeos.stat_result.st_mode
builtins.int"builtins.intr=
st_inoos.stat_result.st_ino
builtins.int"builtins.intr=
st_devos.stat_result.st_dev
builtins.int"builtins.intrA
st_nlinkos.stat_result.st_nlink
builtins.int"builtins.intr=
st_uidos.stat_result.st_uid
builtins.int"builtins.intr=
st_gidos.stat_result.st_gid
builtins.int"builtins.intr?
st_sizeos.stat_result.st_size
builtins.int"builtins.intrE
st_atimeos.stat_result.st_atime 
builtins.float"builtins.floatrE
st_mtimeos.stat_result.st_mtime 
builtins.float"builtins.floatrE
st_ctimeos.stat_result.st_ctime 
builtins.float"builtins.floatrG
st_atime_nsos.stat_result.st_atime_ns
builtins.int"builtins.intrG
st_mtime_nsos.stat_result.st_mtime_ns
builtins.int"builtins.intrG
st_ctime_nsos.stat_result.st_ctime_ns
builtins.int"builtins.intrC
	st_blocksos.stat_result.st_blocks
builtins.int"builtins.intrE

st_blksizeos.stat_result.st_blksize
builtins.int"builtins.intr?
st_rdevos.stat_result.st_rdev
builtins.int"builtins.intrA
st_flagsos.stat_result.st_flags
builtins.int"builtins.intr=
st_genos.stat_result.st_gen
builtins.int"builtins.intrI
st_birthtimeos.stat_result.st_birthtime
builtins.int"builtins.intrA
st_rsizeos.stat_result.st_rsize
builtins.int"builtins.intrE

st_creatoros.stat_result.st_creator
builtins.int"builtins.intr?
st_typeos.stat_result.st_type
builtins.int"builtins.intØ
PathLikeos.PathLike"builtins.object*

__fspath__os.PathLike.__fspath__"
os._AnyStr_co*F
self<
os.PathLike[os._AnyStr_co]
os._AnyStr_co"os.PathLike8PX—
DirEntryos.DirEntry"builtins.object*Ä
inodeos.DirEntry.inode"
builtins.int"builtins.int*F
self<
os.DirEntry[typing.AnyStr]
typing.AnyStr"os.DirEntry*ª
is_diros.DirEntry.is_dir"
builtins.bool"builtins.bool*F
self<
os.DirEntry[typing.AnyStr]
typing.AnyStr"os.DirEntry*5
follow_symlinks
builtins.bool"builtins.bool *Ω
is_fileos.DirEntry.is_file"
builtins.bool"builtins.bool*F
self<
os.DirEntry[typing.AnyStr]
typing.AnyStr"os.DirEntry*5
follow_symlinks
builtins.bool"builtins.bool *å

is_symlinkos.DirEntry.is_symlink"
builtins.bool"builtins.bool*F
self<
os.DirEntry[typing.AnyStr]
typing.AnyStr"os.DirEntry*π
statos.DirEntry.stat" 
os.stat_result"os.stat_result*F
self<
os.DirEntry[typing.AnyStr]
typing.AnyStr"os.DirEntry*5
follow_symlinks
builtins.bool"builtins.bool *

__fspath__os.DirEntry.__fspath__"
typing.AnyStr*F
self<
os.DirEntry[typing.AnyStr]
typing.AnyStr"os.DirEntryPr+
nameos.DirEntry.name
typing.AnyStrr+
pathos.DirEntry.path
typing.AnyStr±
statvfs_resultos.statvfs_result"builtins.tuple*ì
__new__os.statvfs_result.__new__"π
àTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int*Ÿ
clsœ
éType[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]]π
àTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int*–
seq∆
ªUnion[TypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]],TypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]]]‰
ìTypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]]π
àTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int"os._Tuple10Intú
†TypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]]‰
ïTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int"os._Tuple11Int*Å
dictu
(builtins.dict[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"builtins.dict rD
n_fieldsos.statvfs_result.n_fields
builtins.int"builtins.intrV
n_sequence_fields#os.statvfs_result.n_sequence_fields
builtins.int"builtins.intrT
n_unnamed_fields"os.statvfs_result.n_unnamed_fields
builtins.int"builtins.intrB
f_bsizeos.statvfs_result.f_bsize
builtins.int"builtins.intrD
f_frsizeos.statvfs_result.f_frsize
builtins.int"builtins.intrD
f_blocksos.statvfs_result.f_blocks
builtins.int"builtins.intrB
f_bfreeos.statvfs_result.f_bfree
builtins.int"builtins.intrD
f_bavailos.statvfs_result.f_bavail
builtins.int"builtins.intrB
f_filesos.statvfs_result.f_files
builtins.int"builtins.intrB
f_ffreeos.statvfs_result.f_ffree
builtins.int"builtins.intrD
f_favailos.statvfs_result.f_favail
builtins.int"builtins.intr@
f_flagos.statvfs_result.f_flag
builtins.int"builtins.intrF
	f_namemaxos.statvfs_result.f_namemax
builtins.int"builtins.intr@
f_fsidos.statvfs_result.f_fsid
builtins.int"builtins.int≥
terminal_sizeos.terminal_size"builtins.tuplerA
columnsos.terminal_size.columns
builtins.int"builtins.intr=
linesos.terminal_size.lines
builtins.int"builtins.intô
_ScandirIteratoros._ScandirIterator"typing.Iterator"typing.ContextManager*æ
__next__os._ScandirIterator.__next__"<
os.DirEntry[typing.AnyStr]
typing.AnyStr"os.DirEntry*V
selfL
"os._ScandirIterator[typing.AnyStr]
typing.AnyStr"os._ScandirIterator*Ñ
closeos._ScandirIterator.close"
None*V
selfL
"os._ScandirIterator[typing.AnyStr]
typing.AnyStr"os._ScandirIteratorP´
_wrap_closeos._wrap_close"io.TextIOWrapper*Á
__init__os._wrap_close.__init__"
None**
self 
os._wrap_close"os._wrap_close*0
stream$
io.TextIOWrapper"io.TextIOWrapper*Z
procP
subprocess.Popen[builtins.str]
builtins.str"builtins.str"subprocess.Popen*è
closeos._wrap_close.close"D
Union[builtins.int,None]
builtins.int"builtins.int
None**
self 
os._wrap_close"os._wrap_closeÏ
fsencodeos.fsencode" 
builtins.bytes"builtins.bytes*∞
filename°
3Union[builtins.str,builtins.bytes,os.PathLike[Any]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes(
os.PathLike[Any]
Any"os.PathLikeË
fsdecodeos.fsdecode"
builtins.str"builtins.str*∞
filename°
3Union[builtins.str,builtins.bytes,os.PathLike[Any]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes(
os.PathLike[Any]
Any"os.PathLike∏
get_exec_pathos.get_exec_path"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None 5
getloginos.getlogin"
builtins.str"builtins.str1
getpid	os.getpid"
builtins.int"builtins.int3
getppid
os.getppid"
builtins.int"builtins.int]
strerroros.strerror"
builtins.str"builtins.str*&
__code
builtins.int"builtins.intW
umaskos.umask"
builtins.int"builtins.int*&
__mask
builtins.int"builtins.int3
ctermid
os.ctermid"
builtins.str"builtins.str3
getegid
os.getegid"
builtins.int"builtins.int3
geteuid
os.geteuid"
builtins.int"builtins.int1
getgid	os.getgid"
builtins.int"builtins.intº
getgrouplistos.getgrouplist"J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*&
__user
builtins.str"builtins.str*'
__group
builtins.int"builtins.inte
	getgroupsos.getgroups"J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.listx

initgroupsos.initgroups"
None**

__username
builtins.str"builtins.str*%
__gid
builtins.int"builtins.intZ
getpgid
os.getpgid"
builtins.int"builtins.int*%
pid
builtins.int"builtins.int3
getpgrp
os.getpgrp"
builtins.int"builtins.intã
getpriorityos.getpriority"
builtins.int"builtins.int*'
which
builtins.int"builtins.int*%
who
builtins.int"builtins.int£
setpriorityos.setpriority"
None*'
which
builtins.int"builtins.int*%
who
builtins.int"builtins.int**
priority
builtins.int"builtins.intß
	getresuidos.getresuid"ã
-Tuple[builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.intß
	getresgidos.getresgid"ã
-Tuple[builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int1
getuid	os.getuid"
builtins.int"builtins.intG
setegid
os.setegid"
None*&
__egid
builtins.int"builtins.intG
seteuid
os.seteuid"
None*&
__euid
builtins.int"builtins.intD
setgid	os.setgid"
None*%
__gid
builtins.int"builtins.int
	setgroupsos.setgroups"
None*Z
__groupsN
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.Sequence
setpgrp
os.setpgrp"
Nonen
setpgid
os.setpgid"
None*%
__pid
builtins.int"builtins.int*&
__pgrp
builtins.int"builtins.intq
setregidos.setregid"
None*&
__rgid
builtins.int"builtins.int*&
__egid
builtins.int"builtins.intõ
	setresgidos.setresgid"
None*&
rgid
builtins.int"builtins.int*&
egid
builtins.int"builtins.int*&
sgid
builtins.int"builtins.intõ
	setresuidos.setresuid"
None*&
ruid
builtins.int"builtins.int*&
euid
builtins.int"builtins.int*&
suid
builtins.int"builtins.intq
setreuidos.setreuid"
None*&
__ruid
builtins.int"builtins.int*&
__euid
builtins.int"builtins.intX
getsid	os.getsid"
builtins.int"builtins.int*%
__pid
builtins.int"builtins.int
setsid	os.setsid"
NoneD
setuid	os.setuid"
None*%
__uid
builtins.int"builtins.intı
unameos.uname"·
GTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strÇ
putenv	os.putenv"
None*p
__namef
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str*q
__valuef
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.strì
unsetenvos.unsetenv"
None*p
__namef
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.strA
closeos.close"
None*$
fd
builtins.int"builtins.intz

closerangeos.closerange"
None*(
__fd_low
builtins.int"builtins.int*)
	__fd_high
builtins.int"builtins.intë
device_encodingos.device_encoding"D
Union[builtins.str,None]
builtins.str"builtins.str
None*$
fd
builtins.int"builtins.intQ
dupos.dup"
builtins.int"builtins.int*$
__fd
builtins.int"builtins.int≠
dup2os.dup2"
builtins.int"builtins.int*$
fd
builtins.int"builtins.int*%
fd2
builtins.int"builtins.int*1
inheritable
builtins.bool"builtins.bool Y
fstatos.fstat" 
os.stat_result"os.stat_result*$
fd
builtins.int"builtins.intÚ
fsyncos.fsync"
None*‘
fdÀ
2TypeAlias[Union[builtins.int,_typeshed.HasFileno]]u
'Union[builtins.int,_typeshed.HasFileno]
builtins.int"builtins.int*
_typeshed.HasFileno"_typeshed.HasFileno"_typeshed.FileDescriptorLike®
lseekos.lseek"
builtins.int"builtins.int*$
__fd
builtins.int"builtins.int**

__position
builtins.int"builtins.int*%
__how
builtins.int"builtins.intë
openos.open"
builtins.int"builtins.int*∫
pathØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*'
flags
builtins.int"builtins.int*(
mode
builtins.int"builtins.int *R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None q
pipeos.pipe"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.intÅ
reados.read" 
builtins.bytes"builtins.bytes*$
__fd
builtins.int"builtins.int*(
__length
builtins.int"builtins.intk
fchmod	os.fchmod"
None*$
fd
builtins.int"builtins.int*&
mode
builtins.int"builtins.intë
fchown	os.fchown"
None*$
fd
builtins.int"builtins.int*%
uid
builtins.int"builtins.int*%
gid
builtins.int"builtins.int˙
	fdatasyncos.fdatasync"
None*‘
fdÀ
2TypeAlias[Union[builtins.int,_typeshed.HasFileno]]u
'Union[builtins.int,_typeshed.HasFileno]
builtins.int"builtins.int*
_typeshed.HasFileno"_typeshed.HasFileno"_typeshed.FileDescriptorLike…
	fpathconfos.fpathconf"
builtins.int"builtins.int*$
__fd
builtins.int"builtins.int*j
__name`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int˘
fstatvfsos.fstatvfs"π
àTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int*$
__fd
builtins.int"builtins.ints
	ftruncateos.ftruncate"
None*$
__fd
builtins.int"builtins.int*(
__length
builtins.int"builtins.inte
get_blockingos.get_blocking"
builtins.bool"builtins.bool*$
__fd
builtins.int"builtins.int}
set_blockingos.set_blocking"
None*$
__fd
builtins.int"builtins.int*,

__blocking
builtins.bool"builtins.boolY
isatty	os.isatty"
builtins.bool"builtins.bool*$
__fd
builtins.int"builtins.intñ
lockfos.lockf"
None*$
__fd
builtins.int"builtins.int*)
	__command
builtins.int"builtins.int*(
__length
builtins.int"builtins.intw
openpty
os.openpty"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.intú
pipe2os.pipe2"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*'
flags
builtins.int"builtins.int©
posix_fallocateos.posix_fallocate"
None*$
fd
builtins.int"builtins.int*(
offset
builtins.int"builtins.int*(
length
builtins.int"builtins.intœ
posix_fadviseos.posix_fadvise"
None*$
fd
builtins.int"builtins.int*(
offset
builtins.int"builtins.int*(
length
builtins.int"builtins.int*(
advice
builtins.int"builtins.int≠
preados.pread" 
builtins.bytes"builtins.bytes*$
__fd
builtins.int"builtins.int*(
__length
builtins.int"builtins.int*(
__offset
builtins.int"builtins.intØ
pwrite	os.pwrite"
builtins.int"builtins.int*$
__fd
builtins.int"builtins.int*,
__buffer 
builtins.bytes"builtins.bytes*(
__offset
builtins.int"builtins.intƒ
readvos.readv"
builtins.int"builtins.int*$
__fd
builtins.int"builtins.int*m
	__buffers`
#typing.Sequence[builtins.bytearray](
builtins.bytearray"builtins.bytearray"typing.Sequence∫
writev	os.writev"
builtins.int"builtins.int*$
__fd
builtins.int"builtins.int*a
	__buffersT
typing.Sequence[builtins.bytes] 
builtins.bytes"builtins.bytes"typing.Sequence≥
get_terminal_sizeos.get_terminal_size"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*&
fd
builtins.int"builtins.int k
get_inheritableos.get_inheritable"
builtins.bool"builtins.bool*$
__fd
builtins.int"builtins.intÜ
set_inheritableos.set_inheritable"
None*$
__fd
builtins.int"builtins.int*/
__inheritable
builtins.bool"builtins.bool]
	tcgetpgrpos.tcgetpgrp"
builtins.int"builtins.int*$
__fd
builtins.int"builtins.intq
	tcsetpgrpos.tcsetpgrp"
None*$
__fd
builtins.int"builtins.int*&
__pgid
builtins.int"builtins.intY
ttyname
os.ttyname"
builtins.str"builtins.str*$
__fd
builtins.int"builtins.intÅ
writeos.write"
builtins.int"builtins.int*$
__fd
builtins.int"builtins.int**
__data 
builtins.bytes"builtins.bytesè
access	os.access"
builtins.bool"builtins.bool*Ò
pathÊ
ÇTypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]À
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.intØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath"os._FdOrAnyPath*&
mode
builtins.int"builtins.int*R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None *3
effective_ids
builtins.bool"builtins.bool *5
follow_symlinks
builtins.bool"builtins.bool è
chdiros.chdir"
None*Ò
pathÊ
ÇTypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]À
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.intØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath"os._FdOrAnyPathÙ
fchdir	os.fchdir"
None*‘
fdÀ
2TypeAlias[Union[builtins.int,_typeshed.HasFileno]]u
'Union[builtins.int,_typeshed.HasFileno]
builtins.int"builtins.int*
_typeshed.HasFileno"_typeshed.HasFileno"_typeshed.FileDescriptorLike1
getcwd	os.getcwd"
builtins.str"builtins.str7
getcwdb
os.getcwdb" 
builtins.bytes"builtins.bytes¬
chmodos.chmod"
None*Ò
pathÊ
ÇTypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]À
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.intØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath"os._FdOrAnyPath*&
mode
builtins.int"builtins.int*R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None *5
follow_symlinks
builtins.bool"builtins.bool º
chflags
os.chflags"
None*∫
pathØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*'
flags
builtins.int"builtins.int*5
follow_symlinks
builtins.bool"builtins.bool Ë
chownos.chown"
None*Ò
pathÊ
ÇTypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]À
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.intØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath"os._FdOrAnyPath*%
uid
builtins.int"builtins.int*%
gid
builtins.int"builtins.int*R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None *5
follow_symlinks
builtins.bool"builtins.bool ⁄
chroot	os.chroot"
None*∫
pathØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPathá
lchflagsos.lchflags"
None*∫
pathØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*'
flags
builtins.int"builtins.intÇ
lchmod	os.lchmod"
None*∫
pathØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*&
mode
builtins.int"builtins.int®
lchown	os.lchown"
None*∫
pathØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*%
uid
builtins.int"builtins.int*%
gid
builtins.int"builtins.int¯
linkos.link"
None*π
srcØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*π
dstØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*V

src_dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

dst_dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None *5
follow_symlinks
builtins.bool"builtins.bool ƒ
lstatos.lstat" 
os.stat_result"os.stat_result*∫
pathØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None ÷
mkdiros.mkdir"
None*∫
pathØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*(
mode
builtins.int"builtins.int *R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None ÿ
mkfifo	os.mkfifo"
None*∫
pathØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*(
mode
builtins.int"builtins.int *R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None ∏
makedirsos.makedirs"
None*∫
nameØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*(
mode
builtins.int"builtins.int *.
exist_ok
builtins.bool"builtins.bool Ç
mknodos.mknod"
None*∫
pathØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*(
mode
builtins.int"builtins.int **
device
builtins.int"builtins.int *R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None Y
majoros.major"
builtins.int"builtins.int*(
__device
builtins.int"builtins.intY
minoros.minor"
builtins.int"builtins.int*(
__device
builtins.int"builtins.intÖ
makedev
os.makedev"
builtins.int"builtins.int*'
__major
builtins.int"builtins.int*'
__minor
builtins.int"builtins.intï
pathconfos.pathconf"
builtins.int"builtins.int*Ò
pathÊ
ÇTypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]À
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.intØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath"os._FdOrAnyPath*j
name`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.intê
readlinkos.readlink"
typing.AnyStr*è
pathÑ
/Union[typing.AnyStr,os.PathLike[typing.AnyStr]]
typing.AnyStr<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike*R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None Æ
remove	os.remove"
None*∫
pathØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None ‚

removedirsos.removedirs"
None*∫
nameØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath≈
rename	os.rename"
None*π
srcØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*π
dstØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*V

src_dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

dst_dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None ó
renames
os.renames"
None*π
oldØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*π
newØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath«
replace
os.replace"
None*π
srcØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*π
dstØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*V

src_dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

dst_dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None ¨
rmdiros.rmdir"
None*∫
pathØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None ∞
statos.stat" 
os.stat_result"os.stat_result*Ò
pathÊ
ÇTypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]À
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.intØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath"os._FdOrAnyPath*R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None *5
follow_symlinks
builtins.bool"builtins.bool ≈	
statvfs
os.statvfs"π
àTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int*Ò
pathÊ
ÇTypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]À
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.intØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath"os._FdOrAnyPath¶
symlink
os.symlink"
None*π
srcØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*π
dstØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*9
target_is_directory
builtins.bool"builtins.bool *R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None 
syncos.sync"
Noneø
truncateos.truncate"
None*Ò
pathÊ
ÇTypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]À
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.intØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath"os._FdOrAnyPath*(
length
builtins.int"builtins.intÆ
unlink	os.unlink"
None*∫
pathØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None ∆

utimeos.utime"
None*Ò
pathÊ
ÇTypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]À
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.intØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath"os._FdOrAnyPath*Ω
timesØ
QUnion[Tuple[builtins.int,builtins.int],Tuple[builtins.float,builtins.float],None]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.intl
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float
None *j
ns`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int *R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None *5
follow_symlinks
builtins.bool"builtins.bool ¸
walkos.walk"ﬁ
_typing.Iterator[Tuple[typing.AnyStr,builtins.list[typing.AnyStr],builtins.list[typing.AnyStr]]]È
NTuple[typing.AnyStr,builtins.list[typing.AnyStr],builtins.list[typing.AnyStr]]
typing.AnyStr@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list"typing.Iterator*é
topÑ
/Union[typing.AnyStr,os.PathLike[typing.AnyStr]]
typing.AnyStr<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike*-
topdown
builtins.bool"builtins.bool *ñ
onerrorÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *1
followlinks
builtins.bool"builtins.bool ¶

getxattros.getxattr" 
builtins.bytes"builtins.bytes*Ò
pathÊ
ÇTypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]À
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.intØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath"os._FdOrAnyPath*ø
	attributeØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*5
follow_symlinks
builtins.bool"builtins.bool ò
	listxattros.listxattr"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*˘
pathÏ
jUnion[builtins.int,builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.int"builtins.int
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *5
follow_symlinks
builtins.bool"builtins.bool î

removexattros.removexattr"
None*Ò
pathÊ
ÇTypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]À
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.intØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath"os._FdOrAnyPath*ø
	attributeØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*5
follow_symlinks
builtins.bool"builtins.bool Ê

setxattros.setxattr"
None*Ò
pathÊ
ÇTypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]À
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.intØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath"os._FdOrAnyPath*ø
	attributeØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*+
value 
builtins.bytes"builtins.bytes*)
flags
builtins.int"builtins.int *5
follow_symlinks
builtins.bool"builtins.bool 
abortos.abort"
NoReturn
÷

execlos.execl"
NoReturn
*∫
fileØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*∫
__arg0Ø
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*∫
argsØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPathÿ

execlp	os.execlp"
NoReturn
*∫
fileØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*∫
__arg0Ø
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*∫
argsØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPathÆ
execle	os.execle"
NoReturn
*∫
fileØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*∫
__arg0Ø
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*
args
Any∞
execlpe
os.execlpe"
NoReturn
*∫
fileØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*∫
__arg0Ø
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*
args
AnyÃ
execvos.execv"
NoReturn
*∫
__pathØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*Ì
__argv‚
æTypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]]ç
≥Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]∑
sbuiltins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]Ø
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath"builtins.tupleP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.listJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listZ
builtins.list[os.PathLike[Any]](
os.PathLike[Any]
Any"os.PathLike"builtins.list™
1builtins.list[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"builtins.listæ
5builtins.list[Union[builtins.bytes,os.PathLike[Any]]]v
&Union[builtins.bytes,os.PathLike[Any]] 
builtins.bytes"builtins.bytes(
os.PathLike[Any]
Any"os.PathLike"builtins.list∂
3builtins.list[Union[builtins.str,os.PathLike[Any]]]p
$Union[builtins.str,os.PathLike[Any]]
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list˜
Bbuiltins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]°
3Union[builtins.bytes,builtins.str,os.PathLike[Any]] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list"os._ExecVArgsÅ 
execve	os.execve"
NoReturn
*Ò
pathÊ
ÇTypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]À
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.intØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath"os._FdOrAnyPath*Ì
argv‚
æTypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]]ç
≥Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]∑
sbuiltins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]Ø
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath"builtins.tupleP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.listJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listZ
builtins.list[os.PathLike[Any]](
os.PathLike[Any]
Any"os.PathLike"builtins.list™
1builtins.list[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"builtins.listæ
5builtins.list[Union[builtins.bytes,os.PathLike[Any]]]v
&Union[builtins.bytes,os.PathLike[Any]] 
builtins.bytes"builtins.bytes(
os.PathLike[Any]
Any"os.PathLike"builtins.list∂
3builtins.list[Union[builtins.str,os.PathLike[Any]]]p
$Union[builtins.str,os.PathLike[Any]]
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list˜
Bbuiltins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]°
3Union[builtins.bytes,builtins.str,os.PathLike[Any]] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list"os._ExecVArgs*˘
envÔ
ìTypeAlias[Union[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]]«
àUnion[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]›
Atyping.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]] 
builtins.bytes"builtins.bytesf
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"typing.Mapping◊
?typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]
builtins.str"builtins.strf
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"typing.Mapping"os._ExecEnvŒ
execvp	os.execvp"
NoReturn
*∫
fileØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*Ì
args‚
æTypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]]ç
≥Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]∑
sbuiltins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]Ø
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath"builtins.tupleP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.listJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listZ
builtins.list[os.PathLike[Any]](
os.PathLike[Any]
Any"os.PathLike"builtins.list™
1builtins.list[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"builtins.listæ
5builtins.list[Union[builtins.bytes,os.PathLike[Any]]]v
&Union[builtins.bytes,os.PathLike[Any]] 
builtins.bytes"builtins.bytes(
os.PathLike[Any]
Any"os.PathLike"builtins.list∂
3builtins.list[Union[builtins.str,os.PathLike[Any]]]p
$Union[builtins.str,os.PathLike[Any]]
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list˜
Bbuiltins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]°
3Union[builtins.bytes,builtins.str,os.PathLike[Any]] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list"os._ExecVArgsÃ
execvpe
os.execvpe"
NoReturn
*∫
fileØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*Ì
args‚
æTypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]]ç
≥Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]∑
sbuiltins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]Ø
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath"builtins.tupleP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.listJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listZ
builtins.list[os.PathLike[Any]](
os.PathLike[Any]
Any"os.PathLike"builtins.list™
1builtins.list[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"builtins.listæ
5builtins.list[Union[builtins.bytes,os.PathLike[Any]]]v
&Union[builtins.bytes,os.PathLike[Any]] 
builtins.bytes"builtins.bytes(
os.PathLike[Any]
Any"os.PathLike"builtins.list∂
3builtins.list[Union[builtins.str,os.PathLike[Any]]]p
$Union[builtins.str,os.PathLike[Any]]
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list˜
Bbuiltins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]°
3Union[builtins.bytes,builtins.str,os.PathLike[Any]] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list"os._ExecVArgs*˘
envÔ
ìTypeAlias[Union[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]]«
àUnion[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]›
Atyping.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]] 
builtins.bytes"builtins.bytesf
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"typing.Mapping◊
?typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]
builtins.str"builtins.strf
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"typing.Mapping"os._ExecEnvI
_exitos._exit"
NoReturn
*(
status
builtins.int"builtins.intj
killos.kill"
None*%
__pid
builtins.int"builtins.int*(
__signal
builtins.int"builtins.int-
forkos.fork"
builtins.int"builtins.intw
forkpty
os.forkpty"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.into
killpg	os.killpg"
None*&
__pgid
builtins.int"builtins.int*(
__signal
builtins.int"builtins.intZ
niceos.nice"
builtins.int"builtins.int*+
__increment
builtins.int"builtins.intA
plockos.plock"
None*$
op
builtins.int"builtins.int≥
popenos.popen" 
os._wrap_close"os._wrap_close*%
cmd
builtins.str"builtins.str*(
mode
builtins.str"builtins.str *-
	buffering
builtins.int"builtins.int ê
spawnl	os.spawnl"
builtins.int"builtins.int*&
mode
builtins.int"builtins.int*∫
fileØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*∫
arg0Ø
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*∫
argsØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPathË
spawnle
os.spawnle"
builtins.int"builtins.int*&
mode
builtins.int"builtins.int*∫
fileØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*∫
arg0Ø
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*
args
AnyÜ
spawnv	os.spawnv"
builtins.int"builtins.int*&
mode
builtins.int"builtins.int*∫
fileØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*Ì
args‚
æTypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]]ç
≥Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]∑
sbuiltins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]Ø
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath"builtins.tupleP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.listJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listZ
builtins.list[os.PathLike[Any]](
os.PathLike[Any]
Any"os.PathLike"builtins.list™
1builtins.list[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"builtins.listæ
5builtins.list[Union[builtins.bytes,os.PathLike[Any]]]v
&Union[builtins.bytes,os.PathLike[Any]] 
builtins.bytes"builtins.bytes(
os.PathLike[Any]
Any"os.PathLike"builtins.list∂
3builtins.list[Union[builtins.str,os.PathLike[Any]]]p
$Union[builtins.str,os.PathLike[Any]]
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list˜
Bbuiltins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]°
3Union[builtins.bytes,builtins.str,os.PathLike[Any]] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list"os._ExecVArgsÑ
spawnve
os.spawnve"
builtins.int"builtins.int*&
mode
builtins.int"builtins.int*∫
fileØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*Ì
args‚
æTypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]]ç
≥Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]∑
sbuiltins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]Ø
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath"builtins.tupleP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.listJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listZ
builtins.list[os.PathLike[Any]](
os.PathLike[Any]
Any"os.PathLike"builtins.list™
1builtins.list[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"builtins.listæ
5builtins.list[Union[builtins.bytes,os.PathLike[Any]]]v
&Union[builtins.bytes,os.PathLike[Any]] 
builtins.bytes"builtins.bytes(
os.PathLike[Any]
Any"os.PathLike"builtins.list∂
3builtins.list[Union[builtins.str,os.PathLike[Any]]]p
$Union[builtins.str,os.PathLike[Any]]
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list˜
Bbuiltins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]°
3Union[builtins.bytes,builtins.str,os.PathLike[Any]] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list"os._ExecVArgs*˘
envÔ
ìTypeAlias[Union[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]]«
àUnion[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]›
Atyping.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]] 
builtins.bytes"builtins.bytesf
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"typing.Mapping◊
?typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]
builtins.str"builtins.strf
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"typing.Mapping"os._ExecEnvÒ
system	os.system"
builtins.int"builtins.int*Ω
commandØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPathì
timesos.times"ˇ
QTuple[builtins.float,builtins.float,builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float…
waitpid
os.waitpid"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*%
__pid
builtins.int"builtins.int*)
	__options
builtins.int"builtins.intí
spawnlp
os.spawnlp"
builtins.int"builtins.int*&
mode
builtins.int"builtins.int*∫
fileØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*∫
arg0Ø
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*∫
argsØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPathÍ
spawnlpeos.spawnlpe"
builtins.int"builtins.int*&
mode
builtins.int"builtins.int*∫
fileØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*∫
arg0Ø
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*
args
Anyà
spawnvp
os.spawnvp"
builtins.int"builtins.int*&
mode
builtins.int"builtins.int*∫
fileØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*Ì
args‚
æTypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]]ç
≥Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]∑
sbuiltins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]Ø
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath"builtins.tupleP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.listJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listZ
builtins.list[os.PathLike[Any]](
os.PathLike[Any]
Any"os.PathLike"builtins.list™
1builtins.list[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"builtins.listæ
5builtins.list[Union[builtins.bytes,os.PathLike[Any]]]v
&Union[builtins.bytes,os.PathLike[Any]] 
builtins.bytes"builtins.bytes(
os.PathLike[Any]
Any"os.PathLike"builtins.list∂
3builtins.list[Union[builtins.str,os.PathLike[Any]]]p
$Union[builtins.str,os.PathLike[Any]]
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list˜
Bbuiltins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]°
3Union[builtins.bytes,builtins.str,os.PathLike[Any]] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list"os._ExecVArgsÜ
spawnvpeos.spawnvpe"
builtins.int"builtins.int*&
mode
builtins.int"builtins.int*∫
fileØ
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*Ì
args‚
æTypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]]ç
≥Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]∑
sbuiltins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]Ø
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath"builtins.tupleP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.listJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listZ
builtins.list[os.PathLike[Any]](
os.PathLike[Any]
Any"os.PathLike"builtins.list™
1builtins.list[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"builtins.listæ
5builtins.list[Union[builtins.bytes,os.PathLike[Any]]]v
&Union[builtins.bytes,os.PathLike[Any]] 
builtins.bytes"builtins.bytes(
os.PathLike[Any]
Any"os.PathLike"builtins.list∂
3builtins.list[Union[builtins.str,os.PathLike[Any]]]p
$Union[builtins.str,os.PathLike[Any]]
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list˜
Bbuiltins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]°
3Union[builtins.bytes,builtins.str,os.PathLike[Any]] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list"os._ExecVArgs*˘
envÔ
ìTypeAlias[Union[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]]«
àUnion[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]›
Atyping.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]] 
builtins.bytes"builtins.bytesf
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"typing.Mapping◊
?typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]
builtins.str"builtins.strf
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"typing.Mapping"os._ExecEnvq
waitos.wait"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.intı
waitid	os.waitid"·
GTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int*(
idtype
builtins.int"builtins.int*'
ident
builtins.int"builtins.int*)
options
builtins.int"builtins.int´
wait3os.wait3"m
$Tuple[builtins.int,builtins.int,Any]
builtins.int"builtins.int
builtins.int"builtins.int
Any*)
options
builtins.int"builtins.int“
wait4os.wait4"m
$Tuple[builtins.int,builtins.int,Any]
builtins.int"builtins.int
builtins.int"builtins.int
Any*%
pid
builtins.int"builtins.int*)
options
builtins.int"builtins.intc
	WCOREDUMPos.WCOREDUMP"
builtins.bool"builtins.bool*(
__status
builtins.int"builtins.inti
WIFCONTINUEDos.WIFCONTINUED"
builtins.bool"builtins.bool*(
status
builtins.int"builtins.inte

WIFSTOPPEDos.WIFSTOPPED"
builtins.bool"builtins.bool*(
status
builtins.int"builtins.intg
WIFSIGNALEDos.WIFSIGNALED"
builtins.bool"builtins.bool*(
status
builtins.int"builtins.intc
	WIFEXITEDos.WIFEXITED"
builtins.bool"builtins.bool*(
status
builtins.int"builtins.inte
WEXITSTATUSos.WEXITSTATUS"
builtins.int"builtins.int*(
status
builtins.int"builtins.int_
WSTOPSIGos.WSTOPSIG"
builtins.int"builtins.int*(
status
builtins.int"builtins.int_
WTERMSIGos.WTERMSIG"
builtins.int"builtins.int*(
status
builtins.int"builtins.int{
sched_get_priority_minos.sched_get_priority_min"
builtins.int"builtins.int*(
policy
builtins.int"builtins.int{
sched_get_priority_maxos.sched_get_priority_max"
builtins.int"builtins.int*(
policy
builtins.int"builtins.int'
sched_yieldos.sched_yield"
None»
sched_setscheduleros.sched_setscheduler"
None*%
pid
builtins.int"builtins.int*(
policy
builtins.int"builtins.int*@
param5
Tuple[builtins.int]
builtins.int"builtins.intp
sched_getscheduleros.sched_getscheduler"
builtins.int"builtins.int*%
pid
builtins.int"builtins.intz
sched_rr_get_intervalos.sched_rr_get_interval" 
builtins.float"builtins.float*%
pid
builtins.int"builtins.intñ
sched_setparamos.sched_setparam"
None*%
pid
builtins.int"builtins.int*@
param5
Tuple[builtins.int]
builtins.int"builtins.intÅ
sched_getparamos.sched_getparam"5
Tuple[builtins.int]
builtins.int"builtins.int*%
pid
builtins.int"builtins.int¥
sched_setaffinityos.sched_setaffinity"
None*%
pid
builtins.int"builtins.int*X
maskN
typing.Iterable[builtins.int]
builtins.int"builtins.int"typing.Iterableö
sched_getaffinityos.sched_getaffinity"H
builtins.set[builtins.int]
builtins.int"builtins.int"builtins.set*%
pid
builtins.int"builtins.int_
	cpu_countos.cpu_count"D
Union[builtins.int,None]
builtins.int"builtins.int
None«
confstr
os.confstr"D
Union[builtins.str,None]
builtins.str"builtins.str
None*j
__name`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.intª

getloadavgos.getloadavg"ù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.floatü
sysconf
os.sysconf"
builtins.int"builtins.int*j
__name`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.inté
	getrandomos.getrandom" 
builtins.bytes"builtins.bytes*&
size
builtins.int"builtins.int*)
flags
builtins.int"builtins.int _
urandom
os.urandom" 
builtins.bytes"builtins.bytes*&
__size
builtins.int"builtins.intä
register_at_forkos.register_at_fork"
None*ï
beforeÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *û
after_in_parentÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *ù
after_in_childÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None ê
memfd_createos.memfd_create"
builtins.int"builtins.int*&
name
builtins.str"builtins.str*)
flags
builtins.int"builtins.int "Í
listdirposix.listdirƒ
listdirposix.listdir"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*P
pathD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX§
listdirposix.listdir"P
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list**
path 
builtins.bytes"builtins.bytes0:overloadXö
listdirposix.listdir"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*&
path
builtins.int"builtins.int0:overloadXƒ
listdirposix.listdir"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*P
pathF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike0:overloadX"Î
fspath	os.fspathg
fspath	os.fspath"
builtins.str"builtins.str*&
path
builtins.str"builtins.str0:overloadXo
fspath	os.fspath" 
builtins.bytes"builtins.bytes**
path 
builtins.bytes"builtins.bytes0:overloadX|
fspath	os.fspath"
typing.AnyStr*F
path<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadX"œ
getenv	os.getenvé
getenv	os.getenv"D
Union[builtins.str,None]
builtins.str"builtins.str
None*%
key
builtins.str"builtins.str0:overloadX®
getenv	os.getenv"F
Union[builtins.str,os._T]
builtins.str"builtins.str	
os._T*%
key
builtins.str"builtins.str*
default	
os._T0:overloadX"È
getenvb
os.getenvbö
getenvb
os.getenvb"J
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None*)
key 
builtins.bytes"builtins.bytes0:overloadX¥
getenvb
os.getenvb"L
Union[builtins.bytes,os._T] 
builtins.bytes"builtins.bytes	
os._T*)
key 
builtins.bytes"builtins.bytes*
default	
os._T0:overloadX"ÁŸ
fdopen	os.fdopenÚC
fdopen	os.fdopen"$
io.TextIOWrapper"io.TextIOWrapper*$
fd
builtins.int"builtins.int*ç?
modeÄ?
’	TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]]ã5
 	Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]‰
—TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Î
∆Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenTextModeUpdating–
◊TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]“
ÃUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenTextModeWritingˇ	
ôTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ø
éUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenTextModeReading"_typeshed.OpenTextMode *-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *-
closefd
builtins.bool"builtins.bool *ï
openerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None 0:overloadX–1
fdopen	os.fdopen"
	io.FileIO"	io.FileIO*$
fd
builtins.int"builtins.int*î.
modeâ.
ãTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]]‹&
ÄUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]æ
°TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Û
ñUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" _typeshed.OpenBinaryModeUpdatingÌ
¡TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]É
∂Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeReading£
ïTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Â
äUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeWriting"_typeshed.OpenBinaryMode*F
	buffering7
Literal[builtins.int]	
builtins.int"builtins.int*
encoding
None *
errors
None *
newline
None *-
closefd
builtins.bool"builtins.bool *ï
openerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None 0:overloadXä
fdopen	os.fdopen"&
io.BufferedRandom"io.BufferedRandom*$
fd
builtins.int"builtins.int*…
modeæ
°TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Û
ñUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" _typeshed.OpenBinaryModeUpdating*∫
	buffering®
2Union[Literal[builtins.int],Literal[builtins.int]]7
Literal[builtins.int]	
builtins.int"builtins.int7
Literal[builtins.int]	
builtins.int"builtins.int *
encoding
None *
errors
None *
newline
None *-
closefd
builtins.bool"builtins.bool *ï
openerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None 0:overloadXÔ	
fdopen	os.fdopen"&
io.BufferedWriter"io.BufferedWriter*$
fd
builtins.int"builtins.int*Æ
mode£
ïTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Â
äUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeWriting*∫
	buffering®
2Union[Literal[builtins.int],Literal[builtins.int]]7
Literal[builtins.int]	
builtins.int"builtins.int7
Literal[builtins.int]	
builtins.int"builtins.int *
encoding
None *
errors
None *
newline
None *-
closefd
builtins.bool"builtins.bool *ï
openerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None 0:overloadXπ
fdopen	os.fdopen"&
io.BufferedReader"io.BufferedReader*$
fd
builtins.int"builtins.int*¯
modeÌ
¡TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]É
∂Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeReading*∫
	buffering®
2Union[Literal[builtins.int],Literal[builtins.int]]7
Literal[builtins.int]	
builtins.int"builtins.int7
Literal[builtins.int]	
builtins.int"builtins.int *
encoding
None *
errors
None *
newline
None *-
closefd
builtins.bool"builtins.bool *ï
openerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None 0:overloadX¡1
fdopen	os.fdopen""
typing.BinaryIO"typing.BinaryIO*$
fd
builtins.int"builtins.int*î.
modeâ.
ãTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]]‹&
ÄUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]æ
°TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Û
ñUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" _typeshed.OpenBinaryModeUpdatingÌ
¡TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]É
∂Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeReading£
ïTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Â
äUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeWriting"_typeshed.OpenBinaryMode*+
	buffering
builtins.int"builtins.int*
encoding
None *
errors
None *
newline
None *-
closefd
builtins.bool"builtins.bool *ï
openerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None 0:overloadXä
fdopen	os.fdopen"$
typing.IO[Any]
Any"	typing.IO*$
fd
builtins.int"builtins.int*&
mode
builtins.str"builtins.str*-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *-
closefd
builtins.bool"builtins.bool *ï
openerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None 0:overloadX"ç
sendfileos.sendfileë
sendfileos.sendfile"
builtins.int"builtins.int*(
out_fd
builtins.int"builtins.int*'
in_fd
builtins.int"builtins.int*P
offsetD
Union[builtins.int,None]
builtins.int"builtins.int
None*'
count
builtins.int"builtins.int0:overloadXﬂ
sendfileos.sendfile"
builtins.int"builtins.int*(
out_fd
builtins.int"builtins.int*'
in_fd
builtins.int"builtins.int*(
offset
builtins.int"builtins.int*'
count
builtins.int"builtins.int*c
headersT
typing.Sequence[builtins.bytes] 
builtins.bytes"builtins.bytes"typing.Sequence *d
trailersT
typing.Sequence[builtins.bytes] 
builtins.bytes"builtins.bytes"typing.Sequence *)
flags
builtins.int"builtins.int 0:overloadX"’
scandir
os.scandirë
scandir
os.scandir"V
!os._ScandirIterator[builtins.str]
builtins.str"builtins.str"os._ScandirIterator*
path
None 0:overloadX£
scandir
os.scandir"V
!os._ScandirIterator[builtins.str]
builtins.str"builtins.str"os._ScandirIterator*&
path
builtins.int"builtins.int0:overloadXÉ
scandir
os.scandir"L
"os._ScandirIterator[typing.AnyStr]
typing.AnyStr"os._ScandirIterator*è
pathÑ
/Union[typing.AnyStr,os.PathLike[typing.AnyStr]]
typing.AnyStr<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadX"Ã
fwalkos.fwalk 
fwalkos.fwalk"Ø
ityping.Iterator[Tuple[builtins.str,builtins.list[builtins.str],builtins.list[builtins.str],builtins.int]]∞
XTuple[builtins.str,builtins.list[builtins.str],builtins.list[builtins.str],builtins.int]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
builtins.int"builtins.int"typing.Iterator*£
topó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike *-
topdown
builtins.bool"builtins.bool *ñ
onerrorÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *5
follow_symlinks
builtins.bool"builtins.bool *R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:overloadXÎ
fwalkos.fwalk"À
otyping.Iterator[Tuple[builtins.bytes,builtins.list[builtins.bytes],builtins.list[builtins.bytes],builtins.int]]∆
^Tuple[builtins.bytes,builtins.list[builtins.bytes],builtins.list[builtins.bytes],builtins.int] 
builtins.bytes"builtins.bytesP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.listP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list
builtins.int"builtins.int"typing.Iterator*)
top 
builtins.bytes"builtins.bytes*-
topdown
builtins.bool"builtins.bool *ñ
onerrorÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *5
follow_symlinks
builtins.bool"builtins.bool *R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:overloadX*
_pathos.path *
pathos.path *S
supports_bytes_environos.supports_bytes_environ
builtins.bool"builtins.bool*≤
supports_dir_fdos.supports_dir_fdä
-builtins.set[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.set*™
supports_fdos.supports_fdä
-builtins.set[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.set*¿
supports_effective_idsos.supports_effective_idsä
-builtins.set[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.set*ƒ
supports_follow_symlinksos.supports_follow_symlinksä
-builtins.set[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.set*=
PRIO_PROCESSos.PRIO_PROCESS
builtins.int"builtins.int*7
	PRIO_PGRPos.PRIO_PGRP
builtins.int"builtins.int*7
	PRIO_USERos.PRIO_USER
builtins.int"builtins.int*1
F_LOCK	os.F_LOCK
builtins.int"builtins.int*3
F_TLOCK
os.F_TLOCK
builtins.int"builtins.int*3
F_ULOCK
os.F_ULOCK
builtins.int"builtins.int*1
F_TEST	os.F_TEST
builtins.int"builtins.int*G
POSIX_FADV_NORMALos.POSIX_FADV_NORMAL
builtins.int"builtins.int*O
POSIX_FADV_SEQUENTIALos.POSIX_FADV_SEQUENTIAL
builtins.int"builtins.int*G
POSIX_FADV_RANDOMos.POSIX_FADV_RANDOM
builtins.int"builtins.int*I
POSIX_FADV_NOREUSEos.POSIX_FADV_NOREUSE
builtins.int"builtins.int*K
POSIX_FADV_WILLNEEDos.POSIX_FADV_WILLNEED
builtins.int"builtins.int*K
POSIX_FADV_DONTNEEDos.POSIX_FADV_DONTNEED
builtins.int"builtins.int*;
SF_NODISKIOos.SF_NODISKIO
builtins.int"builtins.int*9

SF_MNOWAITos.SF_MNOWAIT
builtins.int"builtins.int*3
SF_SYNC
os.SF_SYNC
builtins.int"builtins.int*A
XATTR_SIZE_MAXos.XATTR_SIZE_MAX
builtins.int"builtins.int*=
XATTR_CREATEos.XATTR_CREATE
builtins.int"builtins.int*?
XATTR_REPLACEos.XATTR_REPLACE
builtins.int"builtins.int*/
P_PIDos.P_PID
builtins.int"builtins.int*1
P_PGID	os.P_PGID
builtins.int"builtins.int*/
P_ALLos.P_ALL
builtins.int"builtins.int*3
WEXITED
os.WEXITED
builtins.int"builtins.int*5
WSTOPPEDos.WSTOPPED
builtins.int"builtins.int*3
WNOWAIT
os.WNOWAIT
builtins.int"builtins.int*9

CLD_EXITEDos.CLD_EXITED
builtins.int"builtins.int*9

CLD_DUMPEDos.CLD_DUMPED
builtins.int"builtins.int*;
CLD_TRAPPEDos.CLD_TRAPPED
builtins.int"builtins.int*?
CLD_CONTINUEDos.CLD_CONTINUED
builtins.int"builtins.int*;
SCHED_OTHERos.SCHED_OTHER
builtins.int"builtins.int*;
SCHED_BATCHos.SCHED_BATCH
builtins.int"builtins.int*9

SCHED_IDLEos.SCHED_IDLE
builtins.int"builtins.int*A
SCHED_SPORADICos.SCHED_SPORADIC
builtins.int"builtins.int*9

SCHED_FIFOos.SCHED_FIFO
builtins.int"builtins.int*5
SCHED_RRos.SCHED_RR
builtins.int"builtins.int*K
SCHED_RESET_ON_FORKos.SCHED_RESET_ON_FORK
builtins.int"builtins.int*7
	RTLD_LAZYos.RTLD_LAZY
builtins.int"builtins.int*5
RTLD_NOWos.RTLD_NOW
builtins.int"builtins.int*;
RTLD_GLOBALos.RTLD_GLOBAL
builtins.int"builtins.int*9

RTLD_LOCALos.RTLD_LOCAL
builtins.int"builtins.int*?
RTLD_NODELETEos.RTLD_NODELETE
builtins.int"builtins.int*;
RTLD_NOLOADos.RTLD_NOLOAD
builtins.int"builtins.int*?
RTLD_DEEPBINDos.RTLD_DEEPBIND
builtins.int"builtins.int*5
SEEK_SETos.SEEK_SET
builtins.int"builtins.int*5
SEEK_CURos.SEEK_CUR
builtins.int"builtins.int*5
SEEK_ENDos.SEEK_END
builtins.int"builtins.int*7
	SEEK_DATAos.SEEK_DATA
builtins.int"builtins.int*7
	SEEK_HOLEos.SEEK_HOLE
builtins.int"builtins.int*5
O_RDONLYos.O_RDONLY
builtins.int"builtins.int*5
O_WRONLYos.O_WRONLY
builtins.int"builtins.int*1
O_RDWR	os.O_RDWR
builtins.int"builtins.int*5
O_APPENDos.O_APPEND
builtins.int"builtins.int*3
O_CREAT
os.O_CREAT
builtins.int"builtins.int*1
O_EXCL	os.O_EXCL
builtins.int"builtins.int*3
O_TRUNC
os.O_TRUNC
builtins.int"builtins.int*3
O_DSYNC
os.O_DSYNC
builtins.int"builtins.int*3
O_RSYNC
os.O_RSYNC
builtins.int"builtins.int*1
O_SYNC	os.O_SYNC
builtins.int"builtins.int*5
O_NDELAYos.O_NDELAY
builtins.int"builtins.int*9

O_NONBLOCKos.O_NONBLOCK
builtins.int"builtins.int*5
O_NOCTTYos.O_NOCTTY
builtins.int"builtins.int*7
	O_CLOEXECos.O_CLOEXEC
builtins.int"builtins.int*5
O_SHLOCKos.O_SHLOCK
builtins.int"builtins.int*5
O_EXLOCKos.O_EXLOCK
builtins.int"builtins.int*5
O_BINARYos.O_BINARY
builtins.int"builtins.int*;
O_NOINHERITos.O_NOINHERIT
builtins.int"builtins.int*?
O_SHORT_LIVEDos.O_SHORT_LIVED
builtins.int"builtins.int*;
O_TEMPORARYos.O_TEMPORARY
builtins.int"builtins.int*5
O_RANDOMos.O_RANDOM
builtins.int"builtins.int*=
O_SEQUENTIALos.O_SEQUENTIAL
builtins.int"builtins.int*1
O_TEXT	os.O_TEXT
builtins.int"builtins.int*3
O_ASYNC
os.O_ASYNC
builtins.int"builtins.int*5
O_DIRECTos.O_DIRECT
builtins.int"builtins.int*;
O_DIRECTORYos.O_DIRECTORY
builtins.int"builtins.int*9

O_NOFOLLOWos.O_NOFOLLOW
builtins.int"builtins.int*7
	O_NOATIMEos.O_NOATIME
builtins.int"builtins.int*1
O_PATH	os.O_PATH
builtins.int"builtins.int*7
	O_TMPFILEos.O_TMPFILE
builtins.int"builtins.int*;
O_LARGEFILEos.O_LARGEFILE
builtins.int"builtins.int*1
curdir	os.curdir
builtins.str"builtins.str*1
pardir	os.pardir
builtins.str"builtins.str*+
sepos.sep
builtins.str"builtins.str*Y
altsep	os.altsepD
Union[builtins.str,None]
builtins.str"builtins.str
None*1
extsep	os.extsep
builtins.str"builtins.str*3
pathsep
os.pathsep
builtins.str"builtins.str*3
defpath
os.defpath
builtins.str"builtins.str*3
linesep
os.linesep
builtins.str"builtins.str*3
devnull
os.devnull
builtins.str"builtins.str*-
nameos.name
builtins.str"builtins.str*-
F_OKos.F_OK
builtins.int"builtins.int*-
R_OKos.R_OK
builtins.int"builtins.int*-
W_OKos.W_OK
builtins.int"builtins.int*-
X_OKos.X_OK
builtins.int"builtins.int*]
environ
os.environF
os._Environ[builtins.str]
builtins.str"builtins.str"os._Environ*e
environbos.environbL
os._Environ[builtins.bytes] 
builtins.bytes"builtins.bytes"os._Environ*ò
confstr_namesos.confstr_namesu
(builtins.dict[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"builtins.dict*ö
pathconf_namesos.pathconf_namesu
(builtins.dict[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"builtins.dict*ò
sysconf_namesos.sysconf_namesu
(builtins.dict[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"builtins.dict*/
EX_OKos.EX_OK
builtins.int"builtins.int*5
EX_USAGEos.EX_USAGE
builtins.int"builtins.int*9

EX_DATAERRos.EX_DATAERR
builtins.int"builtins.int*9

EX_NOINPUTos.EX_NOINPUT
builtins.int"builtins.int*7
	EX_NOUSERos.EX_NOUSER
builtins.int"builtins.int*7
	EX_NOHOSTos.EX_NOHOST
builtins.int"builtins.int*A
EX_UNAVAILABLEos.EX_UNAVAILABLE
builtins.int"builtins.int*;
EX_SOFTWAREos.EX_SOFTWARE
builtins.int"builtins.int*5
EX_OSERRos.EX_OSERR
builtins.int"builtins.int*7
	EX_OSFILEos.EX_OSFILE
builtins.int"builtins.int*=
EX_CANTCREATos.EX_CANTCREAT
builtins.int"builtins.int*5
EX_IOERRos.EX_IOERR
builtins.int"builtins.int*;
EX_TEMPFAILos.EX_TEMPFAIL
builtins.int"builtins.int*;
EX_PROTOCOLos.EX_PROTOCOL
builtins.int"builtins.int*7
	EX_NOPERMos.EX_NOPERM
builtins.int"builtins.int*7
	EX_CONFIGos.EX_CONFIG
builtins.int"builtins.int*;
EX_NOTFOUNDos.EX_NOTFOUND
builtins.int"builtins.int*5
P_NOWAITos.P_NOWAIT
builtins.int"builtins.int*7
	P_NOWAITOos.P_NOWAITO
builtins.int"builtins.int*1
P_WAIT	os.P_WAIT
builtins.int"builtins.int*3
WNOHANG
os.WNOHANG
builtins.int"builtins.int*9

WCONTINUEDos.WCONTINUED
builtins.int"builtins.int*7
	WUNTRACEDos.WUNTRACED
builtins.int"builtins.int*3
TMP_MAX
os.TMP_MAX
builtins.int"builtins.int*;
MFD_CLOEXECos.MFD_CLOEXEC
builtins.int"builtins.int*G
MFD_ALLOW_SEALINGos.MFD_ALLOW_SEALING
builtins.int"builtins.int*;
MFD_HUGETLBos.MFD_HUGETLB
builtins.int"builtins.int*A
MFD_HUGE_SHIFTos.MFD_HUGE_SHIFT
builtins.int"builtins.int*?
MFD_HUGE_MASKos.MFD_HUGE_MASK
builtins.int"builtins.int*?
MFD_HUGE_64KBos.MFD_HUGE_64KB
builtins.int"builtins.int*A
MFD_HUGE_512KBos.MFD_HUGE_512KB
builtins.int"builtins.int*=
MFD_HUGE_1MBos.MFD_HUGE_1MB
builtins.int"builtins.int*=
MFD_HUGE_2MBos.MFD_HUGE_2MB
builtins.int"builtins.int*=
MFD_HUGE_8MBos.MFD_HUGE_8MB
builtins.int"builtins.int*?
MFD_HUGE_16MBos.MFD_HUGE_16MB
builtins.int"builtins.int*?
MFD_HUGE_32MBos.MFD_HUGE_32MB
builtins.int"builtins.int*A
MFD_HUGE_256MBos.MFD_HUGE_256MB
builtins.int"builtins.int*A
MFD_HUGE_512MBos.MFD_HUGE_512MB
builtins.int"builtins.int*=
MFD_HUGE_1GBos.MFD_HUGE_1GB
builtins.int"builtins.int*=
MFD_HUGE_2GBos.MFD_HUGE_2GB
builtins.int"builtins.int*?
MFD_HUGE_16GBos.MFD_HUGE_16GB
builtins.int"builtins.int