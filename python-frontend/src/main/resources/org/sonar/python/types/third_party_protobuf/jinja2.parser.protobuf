
jinja2.parserî6
Parserjinja2.parser.Parser"builtins.object*Ô
__init__jinja2.parser.Parser.__init__"
None*6
self,
jinja2.parser.Parser"jinja2.parser.Parser*
environment
Any*
source
Any*2
name&
Union[Any,None]
Any
None *6
filename&
Union[Any,None]
Any
None *3
state&
Union[Any,None]
Any
None z35z36z37z38z39z310*×
failjinja2.parser.Parser.fail"
Any*6
self,
jinja2.parser.Parser"jinja2.parser.Parser*
msg
Any*4
lineno&
Union[Any,None]
Any
None *
exc
Any z35z36z37z38z39z310*Ü
fail_unknown_tag%jinja2.parser.Parser.fail_unknown_tag"
Any*6
self,
jinja2.parser.Parser"jinja2.parser.Parser*
name
Any*4
lineno&
Union[Any,None]
Any
None z35z36z37z38z39z310*ó
fail_eofjinja2.parser.Parser.fail_eof"
Any*6
self,
jinja2.parser.Parser"jinja2.parser.Parser*8

end_tokens&
Union[Any,None]
Any
None *4
lineno&
Union[Any,None]
Any
None z35z36z37z38z39z310*Ê
is_tuple_end!jinja2.parser.Parser.is_tuple_end"
Any*6
self,
jinja2.parser.Parser"jinja2.parser.Parser*=
extra_end_rules&
Union[Any,None]
Any
None z35z36z37z38z39z310*Ç
free_identifier$jinja2.parser.Parser.free_identifier"
Any*6
self,
jinja2.parser.Parser"jinja2.parser.Parser*4
lineno&
Union[Any,None]
Any
None z35z36z37z38z39z310*Z
parse_statement$jinja2.parser.Parser.parse_statement*
selfz35z36z37z38z39z310*ß
parse_statements%jinja2.parser.Parser.parse_statements"
Any*6
self,
jinja2.parser.Parser"jinja2.parser.Parser*

end_tokens
Any*1
drop_needle
builtins.bool"builtins.bool z35z36z37z38z39z310*N
	parse_setjinja2.parser.Parser.parse_set*
selfz35z36z37z38z39z310*N
	parse_forjinja2.parser.Parser.parse_for*
selfz35z36z37z38z39z310*L
parse_ifjinja2.parser.Parser.parse_if*
selfz35z36z37z38z39z310*R
parse_block jinja2.parser.Parser.parse_block*
selfz35z36z37z38z39z310*V
parse_extends"jinja2.parser.Parser.parse_extends*
selfz35z36z37z38z39z310*{
parse_import_context)jinja2.parser.Parser.parse_import_context*
self*
node*
defaultz35z36z37z38z39z310*V
parse_include"jinja2.parser.Parser.parse_include*
selfz35z36z37z38z39z310*T
parse_import!jinja2.parser.Parser.parse_import*
selfz35z36z37z38z39z310*P

parse_fromjinja2.parser.Parser.parse_from*
selfz35z36z37z38z39z310*d
parse_signature$jinja2.parser.Parser.parse_signature*
self*
nodez35z36z37z38z39z310*\
parse_call_block%jinja2.parser.Parser.parse_call_block*
selfz35z36z37z38z39z310*`
parse_filter_block'jinja2.parser.Parser.parse_filter_block*
selfz35z36z37z38z39z310*R
parse_macro jinja2.parser.Parser.parse_macro*
selfz35z36z37z38z39z310*R
parse_print jinja2.parser.Parser.parse_print*
selfz35z36z37z38z39z310*»
parse_assign_target(jinja2.parser.Parser.parse_assign_target"
Any*6
self,
jinja2.parser.Parser"jinja2.parser.Parser*0

with_tuple
builtins.bool"builtins.bool */
	name_only
builtins.bool"builtins.bool *=
extra_end_rules&
Union[Any,None]
Any
None z35z36z37z38z39z310*È
parse_expression%jinja2.parser.Parser.parse_expression"
Any*6
self,
jinja2.parser.Parser"jinja2.parser.Parser*3
with_condexpr
builtins.bool"builtins.bool z35z36z37z38z39z310*X
parse_condexpr#jinja2.parser.Parser.parse_condexpr*
selfz35z36z37z38z39z310*L
parse_orjinja2.parser.Parser.parse_or*
selfz35z36z37z38z39z310*N
	parse_andjinja2.parser.Parser.parse_and*
selfz35z36z37z38z39z310*N
	parse_notjinja2.parser.Parser.parse_not*
selfz35z36z37z38z39z310*V
parse_compare"jinja2.parser.Parser.parse_compare*
selfz35z36z37z38z39z310*N
	parse_addjinja2.parser.Parser.parse_add*
selfz35z36z37z38z39z310*N
	parse_subjinja2.parser.Parser.parse_sub*
selfz35z36z37z38z39z310*T
parse_concat!jinja2.parser.Parser.parse_concat*
selfz35z36z37z38z39z310*N
	parse_muljinja2.parser.Parser.parse_mul*
selfz35z36z37z38z39z310*N
	parse_divjinja2.parser.Parser.parse_div*
selfz35z36z37z38z39z310*X
parse_floordiv#jinja2.parser.Parser.parse_floordiv*
selfz35z36z37z38z39z310*N
	parse_modjinja2.parser.Parser.parse_mod*
selfz35z36z37z38z39z310*N
	parse_powjinja2.parser.Parser.parse_pow*
selfz35z36z37z38z39z310*¼
parse_unary jinja2.parser.Parser.parse_unary"
Any*6
self,
jinja2.parser.Parser"jinja2.parser.Parser*1
with_filter
builtins.bool"builtins.bool z35z36z37z38z39z310*V
parse_primary"jinja2.parser.Parser.parse_primary*
selfz35z36z37z38z39z310*ë
parse_tuple jinja2.parser.Parser.parse_tuple"
Any*6
self,
jinja2.parser.Parser"jinja2.parser.Parser*0

simplified
builtins.bool"builtins.bool *3
with_condexpr
builtins.bool"builtins.bool *=
extra_end_rules&
Union[Any,None]
Any
None *:
explicit_parentheses
builtins.bool"builtins.bool z35z36z37z38z39z310*P

parse_listjinja2.parser.Parser.parse_list*
selfz35z36z37z38z39z310*P

parse_dictjinja2.parser.Parser.parse_dict*
selfz35z36z37z38z39z310*`
parse_postfix"jinja2.parser.Parser.parse_postfix*
self*
nodez35z36z37z38z39z310*h
parse_filter_expr&jinja2.parser.Parser.parse_filter_expr*
self*
nodez35z36z37z38z39z310*d
parse_subscript$jinja2.parser.Parser.parse_subscript*
self*
nodez35z36z37z38z39z310*\
parse_subscribed%jinja2.parser.Parser.parse_subscribed*
selfz35z36z37z38z39z310*Z

parse_calljinja2.parser.Parser.parse_call*
self*
nodez35z36z37z38z39z310*Ò
parse_filter!jinja2.parser.Parser.parse_filter"
Any*6
self,
jinja2.parser.Parser"jinja2.parser.Parser*
node
Any*2
start_inline
builtins.bool"builtins.bool z35z36z37z38z39z310*Z

parse_testjinja2.parser.Parser.parse_test*
self*
nodez35z36z37z38z39z310*½
subparsejinja2.parser.Parser.subparse"
Any*6
self,
jinja2.parser.Parser"jinja2.parser.Parser*8

end_tokens&
Union[Any,None]
Any
None z35z36z37z38z39z310*F
parsejinja2.parser.Parser.parse*
selfz35z36z37z38z39z310j35j36j37j38j39j310rQ
environment jinja2.parser.Parser.environment
Any*35*36*37*38*39*310rG
streamjinja2.parser.Parser.stream
Any*35*36*37*38*39*310rC
namejinja2.parser.Parser.name
Any*35*36*37*38*39*310rK
filenamejinja2.parser.Parser.filename
Any*35*36*37*38*39*310r^
closedjinja2.parser.Parser.closed
builtins.bool"builtins.bool*35*36*37*38*39*310rO

extensionsjinja2.parser.Parser.extensions
Any*35*36*37*38*39*310