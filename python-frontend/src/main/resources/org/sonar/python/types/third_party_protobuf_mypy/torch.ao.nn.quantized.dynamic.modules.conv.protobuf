
*torch.ao.nn.quantized.dynamic.modules.conv™
Conv1d1torch.ao.nn.quantized.dynamic.modules.conv.Conv1d")torch.ao.nn.quantized.modules.conv.Conv1d*ø
__init__:torch.ao.nn.quantized.dynamic.modules.conv.Conv1d.__init__"
None*p
selff
1torch.ao.nn.quantized.dynamic.modules.conv.Conv1d"1torch.ao.nn.quantized.dynamic.modules.conv.Conv1d*-
in_channels
builtins.int"builtins.int*.
out_channels
builtins.int"builtins.int*ë
kernel_sizeˇ
STypeAlias[TypeAlias[Union[torch.nn.common_types.T,Tuple[torch.nn.common_types.T]]]]Ñ
HTypeAlias[Union[torch.nn.common_types.T,Tuple[torch.nn.common_types.T]]]â
=Union[torch.nn.common_types.T,Tuple[torch.nn.common_types.T]]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.objectt
Tuple[torch.nn.common_types.T]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object"*torch.nn.common_types._scalar_or_tuple_1_t"torch.nn.common_types._size_1_t*é
strideˇ
STypeAlias[TypeAlias[Union[torch.nn.common_types.T,Tuple[torch.nn.common_types.T]]]]Ñ
HTypeAlias[Union[torch.nn.common_types.T,Tuple[torch.nn.common_types.T]]]â
=Union[torch.nn.common_types.T,Tuple[torch.nn.common_types.T]]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.objectt
Tuple[torch.nn.common_types.T]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object"*torch.nn.common_types._scalar_or_tuple_1_t"torch.nn.common_types._size_1_t *è
paddingˇ
STypeAlias[TypeAlias[Union[torch.nn.common_types.T,Tuple[torch.nn.common_types.T]]]]Ñ
HTypeAlias[Union[torch.nn.common_types.T,Tuple[torch.nn.common_types.T]]]â
=Union[torch.nn.common_types.T,Tuple[torch.nn.common_types.T]]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.objectt
Tuple[torch.nn.common_types.T]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object"*torch.nn.common_types._scalar_or_tuple_1_t"torch.nn.common_types._size_1_t *ê
dilationˇ
STypeAlias[TypeAlias[Union[torch.nn.common_types.T,Tuple[torch.nn.common_types.T]]]]Ñ
HTypeAlias[Union[torch.nn.common_types.T,Tuple[torch.nn.common_types.T]]]â
=Union[torch.nn.common_types.T,Tuple[torch.nn.common_types.T]]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.objectt
Tuple[torch.nn.common_types.T]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object"*torch.nn.common_types._scalar_or_tuple_1_t"torch.nn.common_types._size_1_t **
groups
builtins.int"builtins.int **
bias
builtins.bool"builtins.bool *0
padding_mode
builtins.str"builtins.str *
device
Any *
dtype
Any *
reduce_range
Any *R
	_get_name;torch.ao.nn.quantized.dynamic.modules.conv.Conv1d._get_name*
self*—
forward9torch.ao.nn.quantized.dynamic.modules.conv.Conv1d.forward",
torch._tensor.Tensor"torch._tensor.Tensor*p
selff
1torch.ao.nn.quantized.dynamic.modules.conv.Conv1d"1torch.ao.nn.quantized.dynamic.modules.conv.Conv1d*7
input,
torch._tensor.Tensor"torch._tensor.Tensor*2
reduce_range
builtins.bool"builtins.bool rë
_FLOAT_MODULE?torch.ao.nn.quantized.dynamic.modules.conv.Conv1d._FLOAT_MODULE?
CallableType[builtins.type]
builtins.type"builtins.typerb
_NNIQAT_CONV_BN_MODULEHtorch.ao.nn.quantized.dynamic.modules.conv.Conv1d._NNIQAT_CONV_BN_MODULEr`
_NNI_CONV_RELU_MODULEGtorch.ao.nn.quantized.dynamic.modules.conv.Conv1d._NNI_CONV_RELU_MODULEÂ
Conv2d1torch.ao.nn.quantized.dynamic.modules.conv.Conv2d")torch.ao.nn.quantized.modules.conv.Conv2d*˙
__init__:torch.ao.nn.quantized.dynamic.modules.conv.Conv2d.__init__*
self*
in_channels*
out_channels*
kernel_size*
stride *
padding *
dilation *
groups *

bias *
padding_mode *
device *
dtype *R
	_get_name;torch.ao.nn.quantized.dynamic.modules.conv.Conv2d._get_name*
self*—
forward9torch.ao.nn.quantized.dynamic.modules.conv.Conv2d.forward",
torch._tensor.Tensor"torch._tensor.Tensor*p
selff
1torch.ao.nn.quantized.dynamic.modules.conv.Conv2d"1torch.ao.nn.quantized.dynamic.modules.conv.Conv2d*7
input,
torch._tensor.Tensor"torch._tensor.Tensor*2
reduce_range
builtins.bool"builtins.bool rë
_FLOAT_MODULE?torch.ao.nn.quantized.dynamic.modules.conv.Conv2d._FLOAT_MODULE?
CallableType[builtins.type]
builtins.type"builtins.typerb
_NNIQAT_CONV_BN_MODULEHtorch.ao.nn.quantized.dynamic.modules.conv.Conv2d._NNIQAT_CONV_BN_MODULEr`
_NNI_CONV_RELU_MODULEGtorch.ao.nn.quantized.dynamic.modules.conv.Conv2d._NNI_CONV_RELU_MODULEÂ
Conv3d1torch.ao.nn.quantized.dynamic.modules.conv.Conv3d")torch.ao.nn.quantized.modules.conv.Conv3d*˙
__init__:torch.ao.nn.quantized.dynamic.modules.conv.Conv3d.__init__*
self*
in_channels*
out_channels*
kernel_size*
stride *
padding *
dilation *
groups *

bias *
padding_mode *
device *
dtype *R
	_get_name;torch.ao.nn.quantized.dynamic.modules.conv.Conv3d._get_name*
self*—
forward9torch.ao.nn.quantized.dynamic.modules.conv.Conv3d.forward",
torch._tensor.Tensor"torch._tensor.Tensor*p
selff
1torch.ao.nn.quantized.dynamic.modules.conv.Conv3d"1torch.ao.nn.quantized.dynamic.modules.conv.Conv3d*7
input,
torch._tensor.Tensor"torch._tensor.Tensor*2
reduce_range
builtins.bool"builtins.bool rë
_FLOAT_MODULE?torch.ao.nn.quantized.dynamic.modules.conv.Conv3d._FLOAT_MODULE?
CallableType[builtins.type]
builtins.type"builtins.typerb
_NNIQAT_CONV_BN_MODULEHtorch.ao.nn.quantized.dynamic.modules.conv.Conv3d._NNIQAT_CONV_BN_MODULEr`
_NNI_CONV_RELU_MODULEGtorch.ao.nn.quantized.dynamic.modules.conv.Conv3d._NNI_CONV_RELU_MODULEá
ConvTranspose1d:torch.ao.nn.quantized.dynamic.modules.conv.ConvTranspose1d"2torch.ao.nn.quantized.modules.conv.ConvTranspose1d*ô
__init__Ctorch.ao.nn.quantized.dynamic.modules.conv.ConvTranspose1d.__init__*
self*
in_channels*
out_channels*
kernel_size*
stride *
padding *
output_padding *
groups *

bias *
dilation *
padding_mode *
device *
dtype *[
	_get_nameDtorch.ao.nn.quantized.dynamic.modules.conv.ConvTranspose1d._get_name*
self*Ì
forwardBtorch.ao.nn.quantized.dynamic.modules.conv.ConvTranspose1d.forward",
torch._tensor.Tensor"torch._tensor.Tensor*Ç
selfx
:torch.ao.nn.quantized.dynamic.modules.conv.ConvTranspose1d":torch.ao.nn.quantized.dynamic.modules.conv.ConvTranspose1d*7
input,
torch._tensor.Tensor"torch._tensor.Tensor*2
reduce_range
builtins.bool"builtins.bool rö
_FLOAT_MODULEHtorch.ao.nn.quantized.dynamic.modules.conv.ConvTranspose1d._FLOAT_MODULE?
CallableType[builtins.type]
builtins.type"builtins.typeá
ConvTranspose2d:torch.ao.nn.quantized.dynamic.modules.conv.ConvTranspose2d"2torch.ao.nn.quantized.modules.conv.ConvTranspose2d*ô
__init__Ctorch.ao.nn.quantized.dynamic.modules.conv.ConvTranspose2d.__init__*
self*
in_channels*
out_channels*
kernel_size*
stride *
padding *
output_padding *
groups *

bias *
dilation *
padding_mode *
device *
dtype *[
	_get_nameDtorch.ao.nn.quantized.dynamic.modules.conv.ConvTranspose2d._get_name*
self*Ì
forwardBtorch.ao.nn.quantized.dynamic.modules.conv.ConvTranspose2d.forward",
torch._tensor.Tensor"torch._tensor.Tensor*Ç
selfx
:torch.ao.nn.quantized.dynamic.modules.conv.ConvTranspose2d":torch.ao.nn.quantized.dynamic.modules.conv.ConvTranspose2d*7
input,
torch._tensor.Tensor"torch._tensor.Tensor*2
reduce_range
builtins.bool"builtins.bool rö
_FLOAT_MODULEHtorch.ao.nn.quantized.dynamic.modules.conv.ConvTranspose2d._FLOAT_MODULE?
CallableType[builtins.type]
builtins.type"builtins.typeá
ConvTranspose3d:torch.ao.nn.quantized.dynamic.modules.conv.ConvTranspose3d"2torch.ao.nn.quantized.modules.conv.ConvTranspose3d*ô
__init__Ctorch.ao.nn.quantized.dynamic.modules.conv.ConvTranspose3d.__init__*
self*
in_channels*
out_channels*
kernel_size*
stride *
padding *
output_padding *
groups *

bias *
dilation *
padding_mode *
device *
dtype *[
	_get_nameDtorch.ao.nn.quantized.dynamic.modules.conv.ConvTranspose3d._get_name*
self*Ì
forwardBtorch.ao.nn.quantized.dynamic.modules.conv.ConvTranspose3d.forward",
torch._tensor.Tensor"torch._tensor.Tensor*Ç
selfx
:torch.ao.nn.quantized.dynamic.modules.conv.ConvTranspose3d":torch.ao.nn.quantized.dynamic.modules.conv.ConvTranspose3d*7
input,
torch._tensor.Tensor"torch._tensor.Tensor*2
reduce_range
builtins.bool"builtins.bool rö
_FLOAT_MODULEHtorch.ao.nn.quantized.dynamic.modules.conv.ConvTranspose3d._FLOAT_MODULE?
CallableType[builtins.type]
builtins.type"builtins.type*¶
__annotations__:torch.ao.nn.quantized.dynamic.modules.conv.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
nntorch.nn *
Ftorch.nn.functional *
nnqtorch.ao.nn.quantized *â
__all__2torch.ao.nn.quantized.dynamic.modules.conv.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list