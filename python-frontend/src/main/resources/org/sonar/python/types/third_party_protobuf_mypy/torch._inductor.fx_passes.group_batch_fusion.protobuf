
,torch._inductor.fx_passes.group_batch_fusion®
GroupBatchFusionBaseAtorch._inductor.fx_passes.group_batch_fusion.GroupBatchFusionBase"builtins.object*l
__init__Jtorch._inductor.fx_passes.group_batch_fusion.GroupBatchFusionBase.__init__*
self*

kwargs*d
matchGtorch._inductor.fx_passes.group_batch_fusion.GroupBatchFusionBase.match*
self*
node*o
fuseFtorch._inductor.fx_passes.group_batch_fusion.GroupBatchFusionBase.fuse*
self*	
graph*

subsetrw
graph_search_optionsVtorch._inductor.fx_passes.group_batch_fusion.GroupBatchFusionBase.graph_search_options
Anyä
GroupFusion8torch._inductor.fx_passes.group_batch_fusion.GroupFusion"Atorch._inductor.fx_passes.group_batch_fusion.GroupBatchFusionBaseä
BatchFusion8torch._inductor.fx_passes.group_batch_fusion.BatchFusion"Atorch._inductor.fx_passes.group_batch_fusion.GroupBatchFusionBaseÜ
BatchPointwiseOpsFusionFactoryKtorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseOpsFusionFactory"8torch._inductor.fx_passes.group_batch_fusion.BatchFusion*~
__init__Ttorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseOpsFusionFactory.__init__*
self*
op*

kwargsr]
opNtorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseOpsFusionFactory.op
Any–
PostGradBatchLinearFusionFtorch._inductor.fx_passes.group_batch_fusion.PostGradBatchLinearFusion"8torch._inductor.fx_passes.group_batch_fusion.BatchFusion*Ì
_addmm_node_can_be_fused_torch._inductor.fx_passes.group_batch_fusion.PostGradBatchLinearFusion._addmm_node_can_be_fused"
builtins.bool"builtins.bool*õ
selfê
Ftorch._inductor.fx_passes.group_batch_fusion.PostGradBatchLinearFusion"Ftorch._inductor.fx_passes.group_batch_fusion.PostGradBatchLinearFusion*2
node(
torch.fx.node.Node"torch.fx.node.Node*÷
_is_input_2dStorch._inductor.fx_passes.group_batch_fusion.PostGradBatchLinearFusion._is_input_2d"
builtins.bool"builtins.bool*õ
selfê
Ftorch._inductor.fx_passes.group_batch_fusion.PostGradBatchLinearFusion"Ftorch._inductor.fx_passes.group_batch_fusion.PostGradBatchLinearFusion*3
input(
torch.fx.node.Node"torch.fx.node.Node*´
matchLtorch._inductor.fx_passes.group_batch_fusion.PostGradBatchLinearFusion.match"Å
aUnion[Tuple[builtins.str,builtins.int,builtins.int,builtins.int,builtins.bool,builtins.str],None]è
UTuple[builtins.str,builtins.int,builtins.int,builtins.int,builtins.bool,builtins.str]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.bool"builtins.bool
builtins.str"builtins.str
None*õ
selfê
Ftorch._inductor.fx_passes.group_batch_fusion.PostGradBatchLinearFusion"Ftorch._inductor.fx_passes.group_batch_fusion.PostGradBatchLinearFusion*2
node(
torch.fx.node.Node"torch.fx.node.Node*∑
fuseKtorch._inductor.fx_passes.group_batch_fusion.PostGradBatchLinearFusion.fuse"
Any*õ
selfê
Ftorch._inductor.fx_passes.group_batch_fusion.PostGradBatchLinearFusion"Ftorch._inductor.fx_passes.group_batch_fusion.PostGradBatchLinearFusion*Q
graphF
!torch.fx.graph_module.GraphModule"!torch.fx.graph_module.GraphModule*h
subset\
!builtins.list[torch.fx.node.Node](
torch.fx.node.Node"torch.fx.node.Node"builtins.list8‚
GroupLinearFusion>torch._inductor.fx_passes.group_batch_fusion.GroupLinearFusion"8torch._inductor.fx_passes.group_batch_fusion.GroupFusion*æ
_addmm_node_can_be_fusedWtorch._inductor.fx_passes.group_batch_fusion.GroupLinearFusion._addmm_node_can_be_fused"
Any*ã
selfÄ
>torch._inductor.fx_passes.group_batch_fusion.GroupLinearFusion">torch._inductor.fx_passes.group_batch_fusion.GroupLinearFusion*2
node(
torch.fx.node.Node"torch.fx.node.Node*∏
_mm_node_can_be_fusedTtorch._inductor.fx_passes.group_batch_fusion.GroupLinearFusion._mm_node_can_be_fused"
Any*ã
selfÄ
>torch._inductor.fx_passes.group_batch_fusion.GroupLinearFusion">torch._inductor.fx_passes.group_batch_fusion.GroupLinearFusion*2
node(
torch.fx.node.Node"torch.fx.node.Node*≤
matchDtorch._inductor.fx_passes.group_batch_fusion.GroupLinearFusion.match"†
-Union[Tuple[builtins.str,builtins.bool],None]c
!Tuple[builtins.str,builtins.bool]
builtins.str"builtins.str
builtins.bool"builtins.bool
None*ã
selfÄ
>torch._inductor.fx_passes.group_batch_fusion.GroupLinearFusion">torch._inductor.fx_passes.group_batch_fusion.GroupLinearFusion*2
node(
torch.fx.node.Node"torch.fx.node.Node*ü
fuseCtorch._inductor.fx_passes.group_batch_fusion.GroupLinearFusion.fuse"
Any*ã
selfÄ
>torch._inductor.fx_passes.group_batch_fusion.GroupLinearFusion">torch._inductor.fx_passes.group_batch_fusion.GroupLinearFusion*Q
graphF
!torch.fx.graph_module.GraphModule"!torch.fx.graph_module.GraphModule*h
subset\
!builtins.list[torch.fx.node.Node](
torch.fx.node.Node"torch.fx.node.Node"builtins.list8Ú
#BatchPointwiseMathOpsPostGradFusionPtorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseMathOpsPostGradFusion"Ktorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseOpsFusionFactory*É
__init__Ytorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseMathOpsPostGradFusion.__init__*
self*
op*

kwargs*¸
_pointwise_node_can_be_fusedmtorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseMathOpsPostGradFusion._pointwise_node_can_be_fused"
Any*Ø
self§
Ptorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseMathOpsPostGradFusion"Ptorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseMathOpsPostGradFusion*2
node(
torch.fx.node.Node"torch.fx.node.Node*Œ
matchVtorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseMathOpsPostGradFusion.match"
Any*Ø
self§
Ptorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseMathOpsPostGradFusion"Ptorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseMathOpsPostGradFusion*2
node(
torch.fx.node.Node"torch.fx.node.Node*’
fuseUtorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseMathOpsPostGradFusion.fuse"
Any*Ø
self§
Ptorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseMathOpsPostGradFusion"Ptorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseMathOpsPostGradFusion*Q
graphF
!torch.fx.graph_module.GraphModule"!torch.fx.graph_module.GraphModule*h
subset\
!builtins.list[torch.fx.node.Node](
torch.fx.node.Node"torch.fx.node.Node"builtins.listè
BatchLinearLHSFusionAtorch._inductor.fx_passes.group_batch_fusion.BatchLinearLHSFusion"8torch._inductor.fx_passes.group_batch_fusion.BatchFusion*Ã
matchGtorch._inductor.fx_passes.group_batch_fusion.BatchLinearLHSFusion.match"±
1Union[Tuple[builtins.str,builtins.bool,Any],None]p
%Tuple[builtins.str,builtins.bool,Any]
builtins.str"builtins.str
builtins.bool"builtins.bool
Any
None*ë
selfÜ
Atorch._inductor.fx_passes.group_batch_fusion.BatchLinearLHSFusion"Atorch._inductor.fx_passes.group_batch_fusion.BatchLinearLHSFusion*2
node(
torch.fx.node.Node"torch.fx.node.Node*®
fuseFtorch._inductor.fx_passes.group_batch_fusion.BatchLinearLHSFusion.fuse"
Any*ë
selfÜ
Atorch._inductor.fx_passes.group_batch_fusion.BatchLinearLHSFusion"Atorch._inductor.fx_passes.group_batch_fusion.BatchLinearLHSFusion*Q
graphF
!torch.fx.graph_module.GraphModule"!torch.fx.graph_module.GraphModule*h
subset\
!builtins.list[torch.fx.node.Node](
torch.fx.node.Node"torch.fx.node.Node"builtins.list8Ã	
PreGradBatchLinearFusionEtorch._inductor.fx_passes.group_batch_fusion.PreGradBatchLinearFusion"8torch._inductor.fx_passes.group_batch_fusion.BatchFusion*≈
_getitem_argsStorch._inductor.fx_passes.group_batch_fusion.PreGradBatchLinearFusion._getitem_args"
Any*ô
selfé
Etorch._inductor.fx_passes.group_batch_fusion.PreGradBatchLinearFusion"Etorch._inductor.fx_passes.group_batch_fusion.PreGradBatchLinearFusion*:
getitem_node(
torch.fx.node.Node"torch.fx.node.Node*≠
matchKtorch._inductor.fx_passes.group_batch_fusion.PreGradBatchLinearFusion.match"
Any*ô
selfé
Etorch._inductor.fx_passes.group_batch_fusion.PreGradBatchLinearFusion"Etorch._inductor.fx_passes.group_batch_fusion.PreGradBatchLinearFusion*2
node(
torch.fx.node.Node"torch.fx.node.Node*¥
fuseJtorch._inductor.fx_passes.group_batch_fusion.PreGradBatchLinearFusion.fuse"
Any*ô
selfé
Etorch._inductor.fx_passes.group_batch_fusion.PreGradBatchLinearFusion"Etorch._inductor.fx_passes.group_batch_fusion.PreGradBatchLinearFusion*Q
graphF
!torch.fx.graph_module.GraphModule"!torch.fx.graph_module.GraphModule*h
subset\
!builtins.list[torch.fx.node.Node](
torch.fx.node.Node"torch.fx.node.Node"builtins.list8‰
BatchLayernormFusionAtorch._inductor.fx_passes.group_batch_fusion.BatchLayernormFusion"8torch._inductor.fx_passes.group_batch_fusion.BatchFusion*°
matchGtorch._inductor.fx_passes.group_batch_fusion.BatchLayernormFusion.match"
Any*ë
selfÜ
Atorch._inductor.fx_passes.group_batch_fusion.BatchLayernormFusion"Atorch._inductor.fx_passes.group_batch_fusion.BatchLayernormFusion*2
node(
torch.fx.node.Node"torch.fx.node.Node*®
fuseFtorch._inductor.fx_passes.group_batch_fusion.BatchLayernormFusion.fuse"
Any*ë
selfÜ
Atorch._inductor.fx_passes.group_batch_fusion.BatchLayernormFusion"Atorch._inductor.fx_passes.group_batch_fusion.BatchLayernormFusion*Q
graphF
!torch.fx.graph_module.GraphModule"!torch.fx.graph_module.GraphModule*h
subset\
!builtins.list[torch.fx.node.Node](
torch.fx.node.Node"torch.fx.node.Node"builtins.list8≈
BatchPointwiseOpsPreGradFusionKtorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseOpsPreGradFusion"Ktorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseOpsFusionFactory*~
__init__Ttorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseOpsPreGradFusion.__init__*
self*
op*

kwargs*ø
matchQtorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseOpsPreGradFusion.match"
Any*•
selfö
Ktorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseOpsPreGradFusion"Ktorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseOpsPreGradFusion*2
node(
torch.fx.node.Node"torch.fx.node.Node*∆
fusePtorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseOpsPreGradFusion.fuse"
Any*•
selfö
Ktorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseOpsPreGradFusion"Ktorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseOpsPreGradFusion*Q
graphF
!torch.fx.graph_module.GraphModule"!torch.fx.graph_module.GraphModule*h
subset\
!builtins.list[torch.fx.node.Node](
torch.fx.node.Node"torch.fx.node.Node"builtins.listŒ
BatchPointwiseOpsPostGradFusionLtorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseOpsPostGradFusion"Ktorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseOpsFusionFactory*
__init__Utorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseOpsPostGradFusion.__init__*
self*
op*

kwargs*¬
matchRtorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseOpsPostGradFusion.match"
Any*ß
selfú
Ltorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseOpsPostGradFusion"Ltorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseOpsPostGradFusion*2
node(
torch.fx.node.Node"torch.fx.node.Node*…
fuseQtorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseOpsPostGradFusion.fuse"
Any*ß
selfú
Ltorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseOpsPostGradFusion"Ltorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseOpsPostGradFusion*Q
graphF
!torch.fx.graph_module.GraphModule"!torch.fx.graph_module.GraphModule*h
subset\
!builtins.list[torch.fx.node.Node](
torch.fx.node.Node"torch.fx.node.Node"builtins.listú
BatchTanhPreGradFusionCtorch._inductor.fx_passes.group_batch_fusion.BatchTanhPreGradFusion"Ktorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseOpsPreGradFusion*n
__init__Ltorch._inductor.fx_passes.group_batch_fusion.BatchTanhPreGradFusion.__init__*
self*

kwargs8•
BatchSigmoidPreGradFusionFtorch._inductor.fx_passes.group_batch_fusion.BatchSigmoidPreGradFusion"Ktorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseOpsPreGradFusion*q
__init__Otorch._inductor.fx_passes.group_batch_fusion.BatchSigmoidPreGradFusion.__init__*
self*

kwargs8ú
BatchReLuPreGradFusionCtorch._inductor.fx_passes.group_batch_fusion.BatchReLuPreGradFusion"Ktorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseOpsPreGradFusion*n
__init__Ltorch._inductor.fx_passes.group_batch_fusion.BatchReLuPreGradFusion.__init__*
self*

kwargs8†
BatchTanhPostGradFusionDtorch._inductor.fx_passes.group_batch_fusion.BatchTanhPostGradFusion"Ltorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseOpsPostGradFusion*o
__init__Mtorch._inductor.fx_passes.group_batch_fusion.BatchTanhPostGradFusion.__init__*
self*

kwargs8©
BatchSigmoidPostGradFusionGtorch._inductor.fx_passes.group_batch_fusion.BatchSigmoidPostGradFusion"Ltorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseOpsPostGradFusion*r
__init__Ptorch._inductor.fx_passes.group_batch_fusion.BatchSigmoidPostGradFusion.__init__*
self*

kwargs8†
BatchReLuPostGradFusionDtorch._inductor.fx_passes.group_batch_fusion.BatchReLuPostGradFusion"Ltorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseOpsPostGradFusion*o
__init__Mtorch._inductor.fx_passes.group_batch_fusion.BatchReLuPostGradFusion.__init__*
self*

kwargs8°
BatchAddPostGradFusionCtorch._inductor.fx_passes.group_batch_fusion.BatchAddPostGradFusion"Ptorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseMathOpsPostGradFusion*n
__init__Ltorch._inductor.fx_passes.group_batch_fusion.BatchAddPostGradFusion.__init__*
self*

kwargs8°
BatchSubPostGradFusionCtorch._inductor.fx_passes.group_batch_fusion.BatchSubPostGradFusion"Ptorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseMathOpsPostGradFusion*n
__init__Ltorch._inductor.fx_passes.group_batch_fusion.BatchSubPostGradFusion.__init__*
self*

kwargs8°
BatchDivPostGradFusionCtorch._inductor.fx_passes.group_batch_fusion.BatchDivPostGradFusion"Ptorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseMathOpsPostGradFusion*n
__init__Ltorch._inductor.fx_passes.group_batch_fusion.BatchDivPostGradFusion.__init__*
self*

kwargs8°
BatchMulPostGradFusionCtorch._inductor.fx_passes.group_batch_fusion.BatchMulPostGradFusion"Ptorch._inductor.fx_passes.group_batch_fusion.BatchPointwiseMathOpsPostGradFusion*n
__init__Ltorch._inductor.fx_passes.group_batch_fusion.BatchMulPostGradFusion.__init__*
self*

kwargs8„
_OrderedSet8torch._inductor.fx_passes.group_batch_fusion._OrderedSet"builtins.object*d
__init__Atorch._inductor.fx_passes.group_batch_fusion._OrderedSet.__init__*
self*
param *Y
__contains__Etorch._inductor.fx_passes.group_batch_fusion._OrderedSet.__contains__* * *M
__len__@torch._inductor.fx_passes.group_batch_fusion._OrderedSet.__len__* *Z
append?torch._inductor.fx_passes.group_batch_fusion._OrderedSet.append*
self*
o*O
__iter__Atorch._inductor.fx_passes.group_batch_fusion._OrderedSet.__iter__* rL
rep<torch._inductor.fx_passes.group_batch_fusion._OrderedSet.rep
Anyí
update_stack_example_valueGtorch._inductor.fx_passes.group_batch_fusion.update_stack_example_value*
node*
metadata*	
dim *
op ü
update_pointwise_example_valueKtorch._inductor.fx_passes.group_batch_fusion.update_pointwise_example_value*
pointwise_node*	
input*	
other*
opô
register_fusion<torch._inductor.fx_passes.group_batch_fusion.register_fusion"
Any*&
name
builtins.str"builtins.str*
pre_grad
Any ∆
list_group_batch_fusionsEtorch._inductor.fx_passes.group_batch_fusion.list_group_batch_fusions"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*
pre_grad
Any Ï
decompose_stack<torch._inductor.fx_passes.group_batch_fusion.decompose_stack"
Any*Q
graphF
!torch.fx.graph_module.GraphModule"!torch.fx.graph_module.GraphModule*?
input_tensors,
builtins.list[Any]
Any"builtins.list¿
is_node_meta_valid?torch._inductor.fx_passes.group_batch_fusion.is_node_meta_valid"
Any*`
nodeV
Union[torch.fx.node.Node,None](
torch.fx.node.Node"torch.fx.node.Node
None§
is_linear_node_can_be_fusedHtorch._inductor.fx_passes.group_batch_fusion.is_linear_node_can_be_fused"
Any*2
node(
torch.fx.node.Node"torch.fx.node.Node˝
find_independent_subset_greedyKtorch._inductor.fx_passes.group_batch_fusion.find_independent_subset_greedy"©
4typing.Iterator[typing.Iterable[torch.fx.node.Node]]`
#typing.Iterable[torch.fx.node.Node](
torch.fx.node.Node"torch.fx.node.Node"typing.Iterable"typing.Iterator*o
	node_list`
#typing.Iterable[torch.fx.node.Node](
torch.fx.node.Node"torch.fx.node.Node"typing.Iterable*q
graph_search_optionsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict÷
get_fusion_candidatesBtorch._inductor.fx_passes.group_batch_fusion.get_fusion_candidates"¿
>collections.defaultdict[Any,builtins.list[torch.fx.node.Node]]
Any\
!builtins.list[torch.fx.node.Node](
torch.fx.node.Node"torch.fx.node.Node"builtins.list"collections.defaultdict*ë
ruleÜ
Atorch._inductor.fx_passes.group_batch_fusion.GroupBatchFusionBase"Atorch._inductor.fx_passes.group_batch_fusion.GroupBatchFusionBase*7
	root_node(
torch.fx.node.Node"torch.fx.node.Node*i
	fused_setZ
 builtins.set[torch.fx.node.Node](
torch.fx.node.Node"torch.fx.node.Node"builtins.set—
apply_group_batch_fusionEtorch._inductor.fx_passes.group_batch_fusion.apply_group_batch_fusion"
Any*Q
graphF
!torch.fx.graph_module.GraphModule"!torch.fx.graph_module.GraphModule*ë
ruleÜ
Atorch._inductor.fx_passes.group_batch_fusion.GroupBatchFusionBase"Atorch._inductor.fx_passes.group_batch_fusion.GroupBatchFusionBaseˆ
generate_fusion_from_configHtorch._inductor.fx_passes.group_batch_fusion.generate_fusion_from_config"
Any*k
config_optionsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
pre_grad
Any æ
group_batch_fusion_passesFtorch._inductor.fx_passes.group_batch_fusion.group_batch_fusion_passes"
Any*7
graph,
torch.fx.graph.Graph"torch.fx.graph.Graph*
pre_grad
Any *®
__annotations__<torch._inductor.fx_passes.group_batch_fusion.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*R
deeplearning9torch._inductor.fx_passes.group_batch_fusion.deeplearning
Any*e

has_fbgemm7torch._inductor.fx_passes.group_batch_fusion.has_fbgemm
builtins.bool"builtins.bool*B
aten1torch._inductor.fx_passes.group_batch_fusion.aten
Any*Y
log0torch._inductor.fx_passes.group_batch_fusion.log 
logging.Logger"logging.Logger*q
MIN_FUSE_SET_SIZE>torch._inductor.fx_passes.group_batch_fusion.MIN_FUSE_SET_SIZE
builtins.int"builtins.int*q
MAX_FUSE_SET_SIZE>torch._inductor.fx_passes.group_batch_fusion.MAX_FUSE_SET_SIZE
builtins.int"builtins.int*y
MAX_FUSE_SEARCH_DEPTHBtorch._inductor.fx_passes.group_batch_fusion.MAX_FUSE_SEARCH_DEPTH
builtins.int"builtins.int*ë
!MAX_FUSE_TENSOR_SIZE_GROUP_LINEARNtorch._inductor.fx_passes.group_batch_fusion.MAX_FUSE_TENSOR_SIZE_GROUP_LINEAR
builtins.int"builtins.int*á
FUSE_NODES_WITH_SAME_PARENTHtorch._inductor.fx_passes.group_batch_fusion.FUSE_NODES_WITH_SAME_PARENT
builtins.bool"builtins.bool*â
SHAPE_BROADCAST_BATCH_LINEARItorch._inductor.fx_passes.group_batch_fusion.SHAPE_BROADCAST_BATCH_LINEAR
builtins.bool"builtins.bool*Ö
Fuse_NODES_WITH_SAME_USERSGtorch._inductor.fx_passes.group_batch_fusion.Fuse_NODES_WITH_SAME_USERS
builtins.bool"builtins.bool*Û
SEARCH_EXCLUSIONS>torch._inductor.fx_passes.group_batch_fusion.SEARCH_EXCLUSIONSù
-builtins.set[CallableType[builtins.function]]^
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.function"builtins.set*‡
default_graph_search_optionsItorch._inductor.fx_passes.group_batch_fusion.default_graph_search_optionsu
(builtins.dict[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"builtins.dict*–
graph_search_optionsAtorch._inductor.fx_passes.group_batch_fusion.graph_search_optionsu
(builtins.dict[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"builtins.dict*È
PRE_GRAD_FUSIONS=torch._inductor.fx_passes.group_batch_fusion.PRE_GRAD_FUSIONSï
]builtins.dict[builtins.str,torch._inductor.fx_passes.group_batch_fusion.GroupBatchFusionBase]
builtins.str"builtins.strÜ
Atorch._inductor.fx_passes.group_batch_fusion.GroupBatchFusionBase"Atorch._inductor.fx_passes.group_batch_fusion.GroupBatchFusionBase"builtins.dict*Î
POST_GRAD_FUSIONS>torch._inductor.fx_passes.group_batch_fusion.POST_GRAD_FUSIONSï
]builtins.dict[builtins.str,torch._inductor.fx_passes.group_batch_fusion.GroupBatchFusionBase]
builtins.str"builtins.strÜ
Atorch._inductor.fx_passes.group_batch_fusion.GroupBatchFusionBase"Atorch._inductor.fx_passes.group_batch_fusion.GroupBatchFusionBase"builtins.dict