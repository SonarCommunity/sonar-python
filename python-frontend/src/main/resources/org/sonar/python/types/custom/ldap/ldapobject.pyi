from typing import Any, Optional, Tuple

class SimpleLDAPObject(CustomStubBase):
    def simple_bind(self, *args, **kwargs) -> int: ...
    def simple_bind_s(self, *args, **kwargs) -> None: ...
    def bind(self, *args, **kwargs) -> int:...
    def bind_s(self, *args, **kwargs) -> None:...
    def search(self, *args, **kwargs) -> int:...

    def search_s(self, *args, **kwargs) -> Optional[list]: ...
    def search_st(self, *args, **kwargs) -> Optional[list]: ...
    def search_ext(self, *args, **kwargs) -> Optional[list]: ...
    def search_ext_s(self, *args, **kwargs) -> Optional[list]: ...

    # add_ext(dn, modlist[,serverctrls=None[,clientctrls=None]]) -> int
    def add(self, *args, **kwargs) -> int: ...
    def add_s(self, *args, **kwargs) -> None: ...
    def add_ext(self, *args, **kwargs) -> int: ...
    def add_ext_s(self, *args, **kwargs) -> Tuple: ...
    
    def delete(self, *args, **kwargs) -> int: ...
    def delete_s(self, *args, **kwargs) -> None: ...
    def delete_ext(self, *args, **kwargs) -> int: ...
    def delete_ext_s(self, *args, **kwargs) -> Tuple: ...


    def modify(self, *args, **kwargs) -> int: ...
    def modify_s(self, *args, **kwargs) -> None: ...
    def modify_ext(self, *args, **kwargs) -> int: ...
    def modify_ext_s(self, *args, **kwargs) -> Tuple: ...

class LDAPObject(SimpleLDAPObject): ...
class ReconnectLDAPObject(SimpleLDAPObject): ...
