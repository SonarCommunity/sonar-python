
ntpathù
existsgenericpath.exists"
builtins.bool"builtins.bool*º
path¯
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]²
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPathƒ
getatimegenericpath.getatime" 
builtins.float"builtins.float*¾
filename¯
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]²
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPathƒ
getctimegenericpath.getctime" 
builtins.float"builtins.float*¾
filename¯
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]²
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPathƒ
getmtimegenericpath.getmtime" 
builtins.float"builtins.float*¾
filename¯
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]²
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPathý
getsizegenericpath.getsize"
builtins.int"builtins.int*¾
filename¯
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]²
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPathô
isdirgenericpath.isdir"
builtins.bool"builtins.bool*·
s¯
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]²
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPathù
isfilegenericpath.isfile"
builtins.bool"builtins.bool*º
path¯
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]²
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath¶
samefilegenericpath.samefile"
builtins.bool"builtins.bool*¸
f1¯
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]²
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath*¸
f2¯
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]²
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath–
sameopenfilegenericpath.sameopenfile"
builtins.bool"builtins.bool*%
fp1
builtins.int"builtins.int*%
fp2
builtins.int"builtins.int”
samestatgenericpath.samestat"
builtins.bool"builtins.bool*(
s1 
os.stat_result"os.stat_result*(
s2 
os.stat_result"os.stat_resultò
isabsposixpath.isabs"
builtins.bool"builtins.bool*·
s¯
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]²
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath÷
islinkposixpath.islink"
builtins.bool"builtins.bool*º
path¯
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]²
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPathù
ismountposixpath.ismount"
builtins.bool"builtins.bool*º
path¯
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]²
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPathù
lexistsposixpath.lexists"
builtins.bool"builtins.bool*º
path¯
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]²
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.AnyPath"ª
commonprefixgenericpath.commonprefix§
commonprefixgenericpath.commonprefix"
builtins.str"builtins.str*Ð
mÈ
Ityping.Sequence[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]]é
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]—
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath"typing.Sequence0:overloadX®
commonprefixgenericpath.commonprefix"Š
+Union[builtins.bytes,Literal[builtins.str]] 
builtins.bytes"builtins.bytes7
Literal[builtins.str]	
builtins.str"builtins.str*è
mà
Mtyping.Sequence[TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]]]ý
<TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]]¥
1Union[builtins.bytes,os.PathLike[builtins.bytes]] 
builtins.bytes"builtins.bytesL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.BytesPath"typing.Sequence0:overloadXÏ
commonprefixgenericpath.commonprefix"`
,typing.Sequence[_typeshed.SupportsLessThanT]
_typeshed.SupportsLessThanT"typing.Sequence*´
m¬
;typing.Sequence[builtins.list[_typeshed.SupportsLessThanT]]\
*builtins.list[_typeshed.SupportsLessThanT]
_typeshed.SupportsLessThanT"builtins.list"typing.Sequence0:overloadXÒ
commonprefixgenericpath.commonprefix"`
,typing.Sequence[_typeshed.SupportsLessThanT]
_typeshed.SupportsLessThanT"typing.Sequence*·
m¯
<typing.Sequence[builtins.tuple[_typeshed.SupportsLessThanT]]^
+builtins.tuple[_typeshed.SupportsLessThanT]
_typeshed.SupportsLessThanT"builtins.tuple"typing.Sequence0:overloadX"€
abspathposixpath.abspath…
abspathposixpath.abspath"
typing.AnyStr*F
path<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadXZ
abspathposixpath.abspath"
typing.AnyStr*
path
typing.AnyStr0:overloadX"€
basenameposixpath.basename„
basenameposixpath.basename"
typing.AnyStr*C
p<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadXY
basenameposixpath.basename"
typing.AnyStr*
p
typing.AnyStr0:overloadX"Ž

commonpathposixpath.commonpath¥

commonpathposixpath.commonpath"
builtins.str"builtins.str*Ô
pathsÈ
Ityping.Sequence[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]]é
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]—
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath"typing.Sequence0:overloadXÁ

commonpathposixpath.commonpath" 
builtins.bytes"builtins.bytes*ì
pathsà
Mtyping.Sequence[TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]]]ý
<TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]]¥
1Union[builtins.bytes,os.PathLike[builtins.bytes]] 
builtins.bytes"builtins.bytesL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.BytesPath"typing.Sequence0:overloadX"ú
dirnameposixpath.dirname‚
dirnameposixpath.dirname"
typing.AnyStr*C
p<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadXW
dirnameposixpath.dirname"
typing.AnyStr*
p
typing.AnyStr0:overloadX"’

expanduserposixpath.expanduser‹

expanduserposixpath.expanduser"
typing.AnyStr*F
path<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadX`

expanduserposixpath.expanduser"
typing.AnyStr*
path
typing.AnyStr0:overloadX"’

expandvarsposixpath.expandvars‹

expandvarsposixpath.expandvars"
typing.AnyStr*F
path<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadX`

expandvarsposixpath.expandvars"
typing.AnyStr*
path
typing.AnyStr0:overloadX"€
normcaseposixpath.normcase„
normcaseposixpath.normcase"
typing.AnyStr*C
s<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadXY
normcaseposixpath.normcase"
typing.AnyStr*
s
typing.AnyStr0:overloadX"†
normpathposixpath.normpath‡
normpathposixpath.normpath"
typing.AnyStr*F
path<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadX\
normpathposixpath.normpath"
typing.AnyStr*
path
typing.AnyStr0:overloadX"´
relpathposixpath.relpathœ
relpathposixpath.relpath" 
builtins.bytes"builtins.bytes*ˆ
pathý
<TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]]¥
1Union[builtins.bytes,os.PathLike[builtins.bytes]] 
builtins.bytes"builtins.bytesL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.BytesPath*Â
start´
6Union[builtins.bytes,os.PathLike[builtins.bytes],None] 
builtins.bytes"builtins.bytesL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None 0:overloadXö
relpathposixpath.relpath"
builtins.str"builtins.str*ô
pathé
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]—
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*´
start¦
2Union[builtins.str,os.PathLike[builtins.str],None]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
None 0:overloadX"å
splitposixpath.split¹
splitposixpath.split"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*C
p<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadXŽ
splitposixpath.split"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*
p
typing.AnyStr0:overloadX"ƒ

splitdriveposixpath.splitdriveÃ

splitdriveposixpath.splitdrive"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*C
p<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadX˜

splitdriveposixpath.splitdrive"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*
p
typing.AnyStr0:overloadX"÷
splitextposixpath.splitext¿
splitextposixpath.splitext"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*C
p<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadX”
splitextposixpath.splitext"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*
p
typing.AnyStr0:overloadX"¡	
joinntpath.join®
joinntpath.join"
builtins.str"builtins.str*ô
pathé
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]—
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*õ
pathsé
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]—
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath0:overloadXÚ
joinntpath.join" 
builtins.bytes"builtins.bytes*ˆ
pathý
<TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]]¥
1Union[builtins.bytes,os.PathLike[builtins.bytes]] 
builtins.bytes"builtins.bytesL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.BytesPath*‰
pathsý
<TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]]¥
1Union[builtins.bytes,os.PathLike[builtins.bytes]] 
builtins.bytes"builtins.bytesL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.BytesPath0:overloadX*8
curdirposixpath.curdir
builtins.str"builtins.str*:
defpathposixpath.defpath
builtins.str"builtins.str*:
devnullposixpath.devnull
builtins.str"builtins.str*8
extsepposixpath.extsep
builtins.str"builtins.str*8
pardirposixpath.pardir
builtins.str"builtins.str*:
pathsepposixpath.pathsep
builtins.str"builtins.str*2
sepposixpath.sep
builtins.str"builtins.str*b
supports_unicode_filenames$posixpath.supports_unicode_filenames
builtins.bool"builtins.bool*5
altsepntpath.altsep
builtins.str"builtins.str*{
realpathntpath.realpath^
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.function