
openpyxl.stylesÏ7
	Alignment#openpyxl.styles.alignment.Alignment".openpyxl.descriptors.serialisable.Serialisable*‰
__init__,openpyxl.styles.alignment.Alignment.__init__"
None*T
selfJ
#openpyxl.styles.alignment.Alignment"#openpyxl.styles.alignment.Alignment*m

horizontal[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *k
vertical[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *0
textRotation
builtins.int"builtins.int *¸
wrapTextÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *ˇ
shrinkToFitÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *
indent
Any *
relativeIndent
Any *É
justifyLastLineÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *
readingOrder
Any *p
text_rotation[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	wrap_text[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *p
shrink_to_fit[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	mergeCell[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z36z37z38z39z310z311z312z313*”
__iter__,openpyxl.styles.alignment.Alignment.__iter__"¶
1typing.Iterator[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Iterator*LJ
#openpyxl.styles.alignment.Alignment"#openpyxl.styles.alignment.Alignmentz36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rx
tagname+openpyxl.styles.alignment.Alignment.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313rÔ

horizontal.openpyxl.styles.alignment.Alignment.horizontal®
1openpyxl.descriptors.base.NoneSet[TypeAlias[Any]]P
TypeAlias[Any]
Any"3openpyxl.styles.alignment._HorizontalAlignmentsType"!openpyxl.descriptors.base.NoneSet*36*37rÈ	

horizontal.openpyxl.styles.alignment.Alignment.horizontalé	
‰openpyxl.descriptors.base.NoneSet[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]Å
¡TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]É
∂Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"3openpyxl.styles.alignment._HorizontalAlignmentsType"!openpyxl.descriptors.base.NoneSet*38*39*310*311*312*313rÈ
vertical,openpyxl.styles.alignment.Alignment.vertical¶
1openpyxl.descriptors.base.NoneSet[TypeAlias[Any]]N
TypeAlias[Any]
Any"1openpyxl.styles.alignment._VerticalAlignmentsType"!openpyxl.descriptors.base.NoneSet*36*37r
vertical,openpyxl.styles.alignment.Alignment.verticalô
¢openpyxl.descriptors.base.NoneSet[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]Œ
TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ï
tUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"1openpyxl.styles.alignment._VerticalAlignmentsType"!openpyxl.descriptors.base.NoneSet*38*39*310*311*312*313rÿ
textRotation0openpyxl.styles.alignment.Alignment.textRotationr
/openpyxl.descriptors.base.NoneSet[builtins.int]
builtins.int"builtins.int"!openpyxl.descriptors.base.NoneSet*36*37*38*39*310*311*312*313r™
text_rotation1openpyxl.styles.alignment.Alignment.text_rotationB
openpyxl.descriptors.base.Alias"openpyxl.descriptors.base.Alias*36*37*38*39*310*311*312*313rû
wrapText,openpyxl.styles.alignment.Alignment.wrapText@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313r¢
	wrap_text-openpyxl.styles.alignment.Alignment.wrap_textB
openpyxl.descriptors.base.Alias"openpyxl.descriptors.base.Alias*36*37*38*39*310*311*312*313r§
shrinkToFit/openpyxl.styles.alignment.Alignment.shrinkToFit@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313r™
shrink_to_fit1openpyxl.styles.alignment.Alignment.shrink_to_fitB
openpyxl.descriptors.base.Alias"openpyxl.descriptors.base.Alias*36*37*38*39*310*311*312*313r¨
indent*openpyxl.styles.alignment.Alignment.indentR
%openpyxl.descriptors.base.MinMax[Any]
Any" openpyxl.descriptors.base.MinMax*36*37*38*39*310*311*312*313rº
relativeIndent2openpyxl.styles.alignment.Alignment.relativeIndentR
%openpyxl.descriptors.base.MinMax[Any]
Any" openpyxl.descriptors.base.MinMax*36*37*38*39*310*311*312*313r¨
justifyLastLine3openpyxl.styles.alignment.Alignment.justifyLastLine@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313r≤
readingOrder0openpyxl.styles.alignment.Alignment.readingOrderL
"openpyxl.descriptors.base.Min[Any]
Any"openpyxl.descriptors.base.Min*36*37*38*39*310*311*312*313å)
Borderopenpyxl.styles.borders.Border".openpyxl.descriptors.serialisable.Serialisable*æ
__init__'openpyxl.styles.borders.Border.__init__"
None*J
self@
openpyxl.styles.borders.Border"openpyxl.styles.borders.Border*Ä
leftt
(Union[openpyxl.styles.borders.Side,None]<
openpyxl.styles.borders.Side"openpyxl.styles.borders.Side
None *Å
rightt
(Union[openpyxl.styles.borders.Side,None]<
openpyxl.styles.borders.Side"openpyxl.styles.borders.Side
None *
topt
(Union[openpyxl.styles.borders.Side,None]<
openpyxl.styles.borders.Side"openpyxl.styles.borders.Side
None *Ç
bottomt
(Union[openpyxl.styles.borders.Side,None]<
openpyxl.styles.borders.Side"openpyxl.styles.borders.Side
None *Ñ
diagonalt
(Union[openpyxl.styles.borders.Side,None]<
openpyxl.styles.borders.Side"openpyxl.styles.borders.Side
None *u
diagonal_direction[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *Ñ
verticalt
(Union[openpyxl.styles.borders.Side,None]<
openpyxl.styles.borders.Side"openpyxl.styles.borders.Side
None *Ü

horizontalt
(Union[openpyxl.styles.borders.Side,None]<
openpyxl.styles.borders.Side"openpyxl.styles.borders.Side
None *£

diagonalUpê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *•
diagonalDownê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *†
outlineê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *Å
startt
(Union[openpyxl.styles.borders.Side,None]<
openpyxl.styles.borders.Side"openpyxl.styles.borders.Side
None *
endt
(Union[openpyxl.styles.borders.Side,None]<
openpyxl.styles.borders.Side"openpyxl.styles.borders.Side
None z36z37z38z39z310z311z312z313*ƒ
__iter__'openpyxl.styles.borders.Border.__iter__"¶
1typing.Iterator[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Iterator*B@
openpyxl.styles.borders.Border"openpyxl.styles.borders.Borderz36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rs
tagname&openpyxl.styles.borders.Border.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313r≠
__elements__+openpyxl.styles.borders.Border.__elements__L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*36*37*38*39*310*311*312*313r£
start$openpyxl.styles.borders.Border.startP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313rü
end"openpyxl.styles.borders.Border.endP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313r°
left#openpyxl.styles.borders.Border.leftP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313r£
right$openpyxl.styles.borders.Border.rightP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313rü
top"openpyxl.styles.borders.Border.topP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313r•
bottom%openpyxl.styles.borders.Border.bottomP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313r©
diagonal'openpyxl.styles.borders.Border.diagonalP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313r©
vertical'openpyxl.styles.borders.Border.verticalP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313r≠

horizontal)openpyxl.styles.borders.Border.horizontalP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313ró
outline&openpyxl.styles.borders.Border.outline@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313rù

diagonalUp)openpyxl.styles.borders.Border.diagonalUp@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313r°
diagonalDown+openpyxl.styles.borders.Border.diagonalDown@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313rû
diagonal_direction1openpyxl.styles.borders.Border.diagonal_direction1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313œ)
Sideopenpyxl.styles.borders.Side".openpyxl.descriptors.serialisable.Serialisable*≤
__init__%openpyxl.styles.borders.Side.__init__"
None*F
self<
openpyxl.styles.borders.Side"openpyxl.styles.borders.Side*É
stylev
Union[TypeAlias[Any],Any,None]?
TypeAlias[Any]
Any""openpyxl.styles.borders._SideStyle
Any
None *≠
colorü
5Union[builtins.str,openpyxl.styles.colors.Color,None]
builtins.str"builtins.str<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color
None *o
border_style[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z36z37*÷
__init__%openpyxl.styles.borders.Side.__init__"
None*F
self<
openpyxl.styles.borders.Side"openpyxl.styles.borders.Side*ì
styleÖ
—Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.str],None]È

ØTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]é
§Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str""openpyxl.styles.borders._SideStyle7
Literal[builtins.str]	
builtins.str"builtins.str
None *≠
colorü
5Union[builtins.str,openpyxl.styles.colors.Color,None]
builtins.str"builtins.str<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color
None *o
border_style[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313j36j37j38j39j310j311j312j313r°
color"openpyxl.styles.borders.Side.colorP
&openpyxl.styles.colors.ColorDescriptor"&openpyxl.styles.colors.ColorDescriptor*36*37*38*39*310*311*312*313rÕ
style"openpyxl.styles.borders.Side.styleó
1openpyxl.descriptors.base.NoneSet[TypeAlias[Any]]?
TypeAlias[Any]
Any""openpyxl.styles.borders._SideStyle"!openpyxl.descriptors.base.NoneSet*36*37rÆ
style"openpyxl.styles.borders.Side.style‰
“openpyxl.descriptors.base.NoneSet[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]È

ØTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]é
§Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str""openpyxl.styles.borders._SideStyle"!openpyxl.descriptors.base.NoneSet*38*39*310*311*312*313r°
border_style)openpyxl.styles.borders.Side.border_styleB
openpyxl.descriptors.base.Alias"openpyxl.descriptors.base.Alias*36*37*38*39*310*311*312*313ı"
Coloropenpyxl.styles.colors.Color".openpyxl.descriptors.serialisable.Serialisable*ú
__init__%openpyxl.styles.colors.Color.__init__"
None*F
self<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color*
rgb
Any *5
indexed&
Union[Any,None]
Any
None *¯
autoÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *3
theme&
Union[Any,None]
Any
None *
tint
Any *3
index&
Union[Any,None]
Any
None *.
type"
builtins.object"builtins.object z36z37z38z39z310z311z312z313*æ
__iter__%openpyxl.styles.colors.Color.__iter__"¶
1typing.Iterator[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Iterator*><
openpyxl.styles.colors.Color"openpyxl.styles.colors.Colorz36z37z38z39z310z311z312z313*∂
index"openpyxl.styles.colors.Color.index"é
.Union[builtins.str,builtins.int,builtins.bool]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.bool"builtins.bool*F
self<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color0:property`z36z37z38z39z310z311z312z3132ô
value"openpyxl.styles.colors.Color.valueî
value"openpyxl.styles.colors.Color.value"é
.Union[builtins.str,builtins.int,builtins.bool]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.bool"builtins.bool*F
self<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color0:propertyX`∞
value"openpyxl.styles.colors.Color.value"
None*F
self<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color*†
valueî
VUnion[builtins.str,Any,TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]]
builtins.str"builtins.str
Anyê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool0:value.setter"36"37"38"39"310"311"312"3132≈
__add__$openpyxl.styles.colors.Color.__add__à
__add__$openpyxl.styles.colors.Color.__add__"Å
!openpyxl.styles.colors.Color.Self<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color"openpyxl.styles.colors.Color*ÑÅ
!openpyxl.styles.colors.Color.Self<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color"openpyxl.styles.colors.Color*><
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color0:overloadX‰
__add__$openpyxl.styles.colors.Color.__add__"Ø
openpyxl.styles.colors._S`
.openpyxl.descriptors.serialisable.Serialisable".openpyxl.descriptors.serialisable.Serialisable".openpyxl.descriptors.serialisable.Serialisable*><
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color*≤Ø
openpyxl.styles.colors._S`
.openpyxl.descriptors.serialisable.Serialisable".openpyxl.descriptors.serialisable.Serialisable".openpyxl.descriptors.serialisable.Serialisable0:overloadX"36"37"38"39"310"311"312"313j36j37j38j39j310j311j312j313rq
tagname$openpyxl.styles.colors.Color.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313rÖ
rgb openpyxl.styles.colors.Color.rgb8
openpyxl.styles.colors.RGB"openpyxl.styles.colors.RGB*36*37*38*39*310*311*312*313rõ
indexed$openpyxl.styles.colors.Color.indexedF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313rè
auto!openpyxl.styles.colors.Color.auto@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313ró
theme"openpyxl.styles.colors.Color.themeF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313r°
tint!openpyxl.styles.colors.Color.tintR
%openpyxl.descriptors.base.MinMax[Any]
Any" openpyxl.descriptors.base.MinMax*36*37*38*39*310*311*312*313rì
type!openpyxl.styles.colors.Color.typeD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313µ
Fillopenpyxl.styles.fills.Fill".openpyxl.descriptors.serialisable.Serialisable*À
	from_tree$openpyxl.styles.fills.Fill.from_tree"
PUnion[openpyxl.styles.fills.PatternFill,openpyxl.styles.fills.GradientFill,None]F
!openpyxl.styles.fills.PatternFill"!openpyxl.styles.fills.PatternFillH
"openpyxl.styles.fills.GradientFill""openpyxl.styles.fills.GradientFill
None*m
clsd
 Type[openpyxl.styles.fills.Fill]8
openpyxl.styles.fills.Fill"openpyxl.styles.fills.Fill"type*Ä
el˜
gtyping.Iterable[typing.Sequence[openpyxl.xml._functions_overloads._SupportsIterAndAttribAndTextAndTag]]˙
Vtyping.Sequence[openpyxl.xml._functions_overloads._SupportsIterAndAttribAndTextAndTag]é
Eopenpyxl.xml._functions_overloads._SupportsIterAndAttribAndTextAndTag"Eopenpyxl.xml._functions_overloads._SupportsIterAndAttribAndTextAndTag"typing.Sequence"typing.Iterable0:classmethodpz36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313ro
tagname"openpyxl.styles.fills.Fill.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313Ç
GradientFill"openpyxl.styles.fills.GradientFill"openpyxl.styles.fills.Fill*Ò
__init__+openpyxl.styles.fills.GradientFill.__init__"
None*R
selfH
"openpyxl.styles.fills.GradientFill""openpyxl.styles.fills.GradientFill*P
typeD
TypeAlias[Any]
Any"'openpyxl.styles.fills._GradientFillType *
degree
Any *
left
Any *
right
Any *
top
Any *
bottom
Any *
stop
Any z36z37*ÿ
__init__+openpyxl.styles.fills.GradientFill.__init__"
None*R
selfH
"openpyxl.styles.fills.GradientFill""openpyxl.styles.fills.GradientFill*¢
typeï
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"'openpyxl.styles.fills._GradientFillType *
degree
Any *
left
Any *
right
Any *
top
Any *
bottom
Any *
stop
Any z38z39z310z311z312z313*–
__iter__+openpyxl.styles.fills.GradientFill.__iter__"¶
1typing.Iterator[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Iterator*JH
"openpyxl.styles.fills.GradientFill""openpyxl.styles.fills.GradientFillz36z37z38z39z310z311z312z313*Ñ
to_tree*openpyxl.styles.fills.GradientFill.to_tree">
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*R
selfH
"openpyxl.styles.fills.GradientFill""openpyxl.styles.fills.GradientFill*1
tagname"
builtins.object"builtins.object *3
	namespace"
builtins.object"builtins.object *-
idx"
builtins.object"builtins.object z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rw
tagname*openpyxl.styles.fills.GradientFill.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313rŒ
type'openpyxl.styles.fills.GradientFill.typeî
-openpyxl.descriptors.base.Set[TypeAlias[Any]]D
TypeAlias[Any]
Any"'openpyxl.styles.fills._GradientFillType"openpyxl.descriptors.base.Set*36*37r„
type'openpyxl.styles.fills.GradientFill.typeï
\openpyxl.descriptors.base.Set[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]]ï
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"'openpyxl.styles.fills._GradientFillType"openpyxl.descriptors.base.Set*38*39*310*311*312*313r°
	fill_type,openpyxl.styles.fills.GradientFill.fill_typeB
openpyxl.descriptors.base.Alias"openpyxl.descriptors.base.Alias*36*37*38*39*310*311*312*313rõ
degree)openpyxl.styles.fills.GradientFill.degreeB
openpyxl.descriptors.base.Float"openpyxl.descriptors.base.Float*36*37*38*39*310*311*312*313ró
left'openpyxl.styles.fills.GradientFill.leftB
openpyxl.descriptors.base.Float"openpyxl.descriptors.base.Float*36*37*38*39*310*311*312*313rô
right(openpyxl.styles.fills.GradientFill.rightB
openpyxl.descriptors.base.Float"openpyxl.descriptors.base.Float*36*37*38*39*310*311*312*313rï
top&openpyxl.styles.fills.GradientFill.topB
openpyxl.descriptors.base.Float"openpyxl.descriptors.base.Float*36*37*38*39*310*311*312*313rõ
bottom)openpyxl.styles.fills.GradientFill.bottomB
openpyxl.descriptors.base.Float"openpyxl.descriptors.base.Float*36*37*38*39*310*311*312*313rÜ
stop'openpyxl.styles.fills.GradientFill.stop1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313˜V
PatternFill!openpyxl.styles.fills.PatternFill"openpyxl.styles.fills.Fill*‹
__init__*openpyxl.styles.fills.PatternFill.__init__"
None*P
selfF
!openpyxl.styles.fills.PatternFill"!openpyxl.styles.fills.PatternFill*á
patternTypet
Union[TypeAlias[Any],Any,None]=
TypeAlias[Any]
Any" openpyxl.styles.fills._FillsType
Any
None *†
fgColorê
0Union[builtins.str,openpyxl.styles.colors.Color]
builtins.str"builtins.str<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color *†
bgColorê
0Union[builtins.str,openpyxl.styles.colors.Color]
builtins.str"builtins.str<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color *Ö
	fill_typet
Union[TypeAlias[Any],Any,None]=
TypeAlias[Any]
Any" openpyxl.styles.fills._FillsType
Any
None *≥
start_colorü
5Union[builtins.str,openpyxl.styles.colors.Color,None]
builtins.str"builtins.str<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color
None *±
	end_colorü
5Union[builtins.str,openpyxl.styles.colors.Color,None]
builtins.str"builtins.str<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color
None z36z37*ﬁ,
__init__*openpyxl.styles.fills.PatternFill.__init__"
None*P
selfF
!openpyxl.styles.fills.PatternFill"!openpyxl.styles.fills.PatternFill*˛
patternTypeÍ
øUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.str],None]‡
ùTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ô
íUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" openpyxl.styles.fills._FillsType7
Literal[builtins.str]	
builtins.str"builtins.str
None *†
fgColorê
0Union[builtins.str,openpyxl.styles.colors.Color]
builtins.str"builtins.str<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color *†
bgColorê
0Union[builtins.str,openpyxl.styles.colors.Color]
builtins.str"builtins.str<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color *¸
	fill_typeÍ
øUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.str],None]‡
ùTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ô
íUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" openpyxl.styles.fills._FillsType7
Literal[builtins.str]	
builtins.str"builtins.str
None *≥
start_colorü
5Union[builtins.str,openpyxl.styles.colors.Color,None]
builtins.str"builtins.str<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color
None *±
	end_colorü
5Union[builtins.str,openpyxl.styles.colors.Color,None]
builtins.str"builtins.str<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color
None z38z39z310z311z312z313*Ã
to_tree)openpyxl.styles.fills.PatternFill.to_tree">
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*P
selfF
!openpyxl.styles.fills.PatternFill"!openpyxl.styles.fills.PatternFill*1
tagname"
builtins.object"builtins.object *-
idx"
builtins.object"builtins.object z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rv
tagname)openpyxl.styles.fills.PatternFill.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313r∞
__elements__.openpyxl.styles.fills.PatternFill.__elements__L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*36*37*38*39*310*311*312*313r‹
patternType-openpyxl.styles.fills.PatternFill.patternTypeï
1openpyxl.descriptors.base.NoneSet[TypeAlias[Any]]=
TypeAlias[Any]
Any" openpyxl.styles.fills._FillsType"!openpyxl.descriptors.base.NoneSet*36*37r§
patternType-openpyxl.styles.fills.PatternFill.patternType…
¿openpyxl.descriptors.base.NoneSet[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]‡
ùTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ô
íUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" openpyxl.styles.fills._FillsType"!openpyxl.descriptors.base.NoneSet*38*39*310*311*312*313r†
	fill_type+openpyxl.styles.fills.PatternFill.fill_typeB
openpyxl.descriptors.base.Alias"openpyxl.descriptors.base.Alias*36*37*38*39*310*311*312*313r™
fgColor)openpyxl.styles.fills.PatternFill.fgColorP
&openpyxl.styles.colors.ColorDescriptor"&openpyxl.styles.colors.ColorDescriptor*36*37*38*39*310*311*312*313r§
start_color-openpyxl.styles.fills.PatternFill.start_colorB
openpyxl.descriptors.base.Alias"openpyxl.descriptors.base.Alias*36*37*38*39*310*311*312*313r™
bgColor)openpyxl.styles.fills.PatternFill.bgColorP
&openpyxl.styles.colors.ColorDescriptor"&openpyxl.styles.colors.ColorDescriptor*36*37*38*39*310*311*312*313r†
	end_color+openpyxl.styles.fills.PatternFill.end_colorB
openpyxl.descriptors.base.Alias"openpyxl.descriptors.base.Alias*36*37*38*39*310*311*312*313ïÏ
Fontopenpyxl.styles.fonts.Font".openpyxl.descriptors.serialisable.Serialisable*ÚV
__init__#openpyxl.styles.fonts.Font.__init__"
None*B
self8
openpyxl.styles.fonts.Font"openpyxl.styles.fonts.Font*.
name"
builtins.object"builtins.object *ê
szÖ
PUnion[openpyxl.xml._functions_overloads._HasTagAndGet[Union[Any,None]],Any,None]õ
@openpyxl.xml._functions_overloads._HasTagAndGet[Union[Any,None]]&
Union[Any,None]
Any
None"/openpyxl.xml._functions_overloads._HasTagAndGet
Any
None *∆
bº
~Union[openpyxl.xml._functions_overloads._HasTagAndGet[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]],Unknown]µ
oopenpyxl.xml._functions_overloads._HasTagAndGet[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool"/openpyxl.xml._functions_overloads._HasTagAndGet  *∆
iº
~Union[openpyxl.xml._functions_overloads._HasTagAndGet[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]],Unknown]µ
oopenpyxl.xml._functions_overloads._HasTagAndGet[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool"/openpyxl.xml._functions_overloads._HasTagAndGet  *ï
charsetÖ
PUnion[openpyxl.xml._functions_overloads._HasTagAndGet[Union[Any,None]],Any,None]õ
@openpyxl.xml._functions_overloads._HasTagAndGet[Union[Any,None]]&
Union[Any,None]
Any
None"/openpyxl.xml._functions_overloads._HasTagAndGet
Any
None *Å
u˜
ïTypeAlias[Union[openpyxl.xml._functions_overloads._HasTagAndGet[Union[openpyxl.descriptors.base._T,Any,None]],openpyxl.descriptors.base._T,Any,None]]©
äUnion[openpyxl.xml._functions_overloads._HasTagAndGet[Union[openpyxl.descriptors.base._T,Any,None]],openpyxl.descriptors.base._T,Any,None]≠
]openpyxl.xml._functions_overloads._HasTagAndGet[Union[openpyxl.descriptors.base._T,Any,None]]ö
,Union[openpyxl.descriptors.base._T,Any,None]U
openpyxl.descriptors.base._T"
builtins.object"builtins.object"builtins.object
Any
None"/openpyxl.xml._functions_overloads._HasTagAndGetU
openpyxl.descriptors.base._T"
builtins.object"builtins.object"builtins.object
Any
None"/openpyxl.descriptors.nested._NestedNoneSetParam *Œ
strikeø
èUnion[openpyxl.xml._functions_overloads._HasTagAndGet[Union[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]],Unknown,None]ú
{openpyxl.xml._functions_overloads._HasTagAndGet[Union[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]]Î
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None"/openpyxl.xml._functions_overloads._HasTagAndGet 
None *≠
colorü
5Union[builtins.str,openpyxl.styles.colors.Color,None]
builtins.str"builtins.str<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color
None *Ü
scheme˜
ïTypeAlias[Union[openpyxl.xml._functions_overloads._HasTagAndGet[Union[openpyxl.descriptors.base._T,Any,None]],openpyxl.descriptors.base._T,Any,None]]©
äUnion[openpyxl.xml._functions_overloads._HasTagAndGet[Union[openpyxl.descriptors.base._T,Any,None]],openpyxl.descriptors.base._T,Any,None]≠
]openpyxl.xml._functions_overloads._HasTagAndGet[Union[openpyxl.descriptors.base._T,Any,None]]ö
,Union[openpyxl.descriptors.base._T,Any,None]U
openpyxl.descriptors.base._T"
builtins.object"builtins.object"builtins.object
Any
None"/openpyxl.xml._functions_overloads._HasTagAndGetU
openpyxl.descriptors.base._T"
builtins.object"builtins.object"builtins.object
Any
None"/openpyxl.descriptors.nested._NestedNoneSetParam *î
familyÖ
PUnion[openpyxl.xml._functions_overloads._HasTagAndGet[Union[Any,None]],Any,None]õ
@openpyxl.xml._functions_overloads._HasTagAndGet[Union[Any,None]]&
Union[Any,None]
Any
None"/openpyxl.xml._functions_overloads._HasTagAndGet
Any
None *⁄
sizeÕ
DUnion[openpyxl.xml._functions_overloads._HasTagAndGet[Any],Any,None]p
4openpyxl.xml._functions_overloads._HasTagAndGet[Any]
Any"/openpyxl.xml._functions_overloads._HasTagAndGet
Any
None *Ÿ
boldÃ
ÉUnion[openpyxl.xml._functions_overloads._HasTagAndGet[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]],Unknown,None]µ
oopenpyxl.xml._functions_overloads._HasTagAndGet[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool"/openpyxl.xml._functions_overloads._HasTagAndGet 
None *€
italicÃ
ÉUnion[openpyxl.xml._functions_overloads._HasTagAndGet[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]],Unknown,None]µ
oopenpyxl.xml._functions_overloads._HasTagAndGet[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool"/openpyxl.xml._functions_overloads._HasTagAndGet 
None *‚
strikethroughÃ
ÉUnion[openpyxl.xml._functions_overloads._HasTagAndGet[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]],Unknown,None]µ
oopenpyxl.xml._functions_overloads._HasTagAndGet[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool"/openpyxl.xml._functions_overloads._HasTagAndGet 
None *â
	underline˜
ïTypeAlias[Union[openpyxl.xml._functions_overloads._HasTagAndGet[Union[openpyxl.descriptors.base._T,Any,None]],openpyxl.descriptors.base._T,Any,None]]©
äUnion[openpyxl.xml._functions_overloads._HasTagAndGet[Union[openpyxl.descriptors.base._T,Any,None]],openpyxl.descriptors.base._T,Any,None]≠
]openpyxl.xml._functions_overloads._HasTagAndGet[Union[openpyxl.descriptors.base._T,Any,None]]ö
,Union[openpyxl.descriptors.base._T,Any,None]U
openpyxl.descriptors.base._T"
builtins.object"builtins.object"builtins.object
Any
None"/openpyxl.xml._functions_overloads._HasTagAndGetU
openpyxl.descriptors.base._T"
builtins.object"builtins.object"builtins.object
Any
None"/openpyxl.descriptors.nested._NestedNoneSetParam *â
	vertAlign˜
ïTypeAlias[Union[openpyxl.xml._functions_overloads._HasTagAndGet[Union[openpyxl.descriptors.base._T,Any,None]],openpyxl.descriptors.base._T,Any,None]]©
äUnion[openpyxl.xml._functions_overloads._HasTagAndGet[Union[openpyxl.descriptors.base._T,Any,None]],openpyxl.descriptors.base._T,Any,None]≠
]openpyxl.xml._functions_overloads._HasTagAndGet[Union[openpyxl.descriptors.base._T,Any,None]]ö
,Union[openpyxl.descriptors.base._T,Any,None]U
openpyxl.descriptors.base._T"
builtins.object"builtins.object"builtins.object
Any
None"/openpyxl.xml._functions_overloads._HasTagAndGetU
openpyxl.descriptors.base._T"
builtins.object"builtins.object"builtins.object
Any
None"/openpyxl.descriptors.nested._NestedNoneSetParam *œ
outlineø
èUnion[openpyxl.xml._functions_overloads._HasTagAndGet[Union[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]],Unknown,None]ú
{openpyxl.xml._functions_overloads._HasTagAndGet[Union[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]]Î
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None"/openpyxl.xml._functions_overloads._HasTagAndGet 
None *Œ
shadowø
èUnion[openpyxl.xml._functions_overloads._HasTagAndGet[Union[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]],Unknown,None]ú
{openpyxl.xml._functions_overloads._HasTagAndGet[Union[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]]Î
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None"/openpyxl.xml._functions_overloads._HasTagAndGet 
None *–
condenseø
èUnion[openpyxl.xml._functions_overloads._HasTagAndGet[Union[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]],Unknown,None]ú
{openpyxl.xml._functions_overloads._HasTagAndGet[Union[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]]Î
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None"/openpyxl.xml._functions_overloads._HasTagAndGet 
None *Œ
extendø
èUnion[openpyxl.xml._functions_overloads._HasTagAndGet[Union[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]],Unknown,None]ú
{openpyxl.xml._functions_overloads._HasTagAndGet[Union[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]]Î
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None"/openpyxl.xml._functions_overloads._HasTagAndGet 
None z36z37*∂]
__init__#openpyxl.styles.fonts.Font.__init__"
None*B
self8
openpyxl.styles.fonts.Font"openpyxl.styles.fonts.Font*.
name"
builtins.object"builtins.object *ê
szÖ
PUnion[openpyxl.xml._functions_overloads._HasTagAndGet[Union[Any,None]],Any,None]õ
@openpyxl.xml._functions_overloads._HasTagAndGet[Union[Any,None]]&
Union[Any,None]
Any
None"/openpyxl.xml._functions_overloads._HasTagAndGet
Any
None *∆
bº
~Union[openpyxl.xml._functions_overloads._HasTagAndGet[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]],Unknown]µ
oopenpyxl.xml._functions_overloads._HasTagAndGet[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool"/openpyxl.xml._functions_overloads._HasTagAndGet  *∆
iº
~Union[openpyxl.xml._functions_overloads._HasTagAndGet[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]],Unknown]µ
oopenpyxl.xml._functions_overloads._HasTagAndGet[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool"/openpyxl.xml._functions_overloads._HasTagAndGet  *ï
charsetÖ
PUnion[openpyxl.xml._functions_overloads._HasTagAndGet[Union[Any,None]],Any,None]õ
@openpyxl.xml._functions_overloads._HasTagAndGet[Union[Any,None]]&
Union[Any,None]
Any
None"/openpyxl.xml._functions_overloads._HasTagAndGet
Any
None *Õ
u√
πTypeAlias[Union[openpyxl.xml._functions_overloads._HasTagAndGet[Union[openpyxl.descriptors.base._T,Literal[builtins.str],None]],openpyxl.descriptors.base._T,Literal[builtins.str],None]]—
ÆUnion[openpyxl.xml._functions_overloads._HasTagAndGet[Union[openpyxl.descriptors.base._T,Literal[builtins.str],None]],openpyxl.descriptors.base._T,Literal[builtins.str],None]Å
oopenpyxl.xml._functions_overloads._HasTagAndGet[Union[openpyxl.descriptors.base._T,Literal[builtins.str],None]]‹
>Union[openpyxl.descriptors.base._T,Literal[builtins.str],None]U
openpyxl.descriptors.base._T"
builtins.object"builtins.object"builtins.object7
Literal[builtins.str]	
builtins.str"builtins.str
None"/openpyxl.xml._functions_overloads._HasTagAndGetU
openpyxl.descriptors.base._T"
builtins.object"builtins.object"builtins.object7
Literal[builtins.str]	
builtins.str"builtins.str
None"/openpyxl.descriptors.nested._NestedNoneSetParam *Œ
strikeø
èUnion[openpyxl.xml._functions_overloads._HasTagAndGet[Union[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]],Unknown,None]ú
{openpyxl.xml._functions_overloads._HasTagAndGet[Union[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]]Î
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None"/openpyxl.xml._functions_overloads._HasTagAndGet 
None *≠
colorü
5Union[builtins.str,openpyxl.styles.colors.Color,None]
builtins.str"builtins.str<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color
None *“
scheme√
πTypeAlias[Union[openpyxl.xml._functions_overloads._HasTagAndGet[Union[openpyxl.descriptors.base._T,Literal[builtins.str],None]],openpyxl.descriptors.base._T,Literal[builtins.str],None]]—
ÆUnion[openpyxl.xml._functions_overloads._HasTagAndGet[Union[openpyxl.descriptors.base._T,Literal[builtins.str],None]],openpyxl.descriptors.base._T,Literal[builtins.str],None]Å
oopenpyxl.xml._functions_overloads._HasTagAndGet[Union[openpyxl.descriptors.base._T,Literal[builtins.str],None]]‹
>Union[openpyxl.descriptors.base._T,Literal[builtins.str],None]U
openpyxl.descriptors.base._T"
builtins.object"builtins.object"builtins.object7
Literal[builtins.str]	
builtins.str"builtins.str
None"/openpyxl.xml._functions_overloads._HasTagAndGetU
openpyxl.descriptors.base._T"
builtins.object"builtins.object"builtins.object7
Literal[builtins.str]	
builtins.str"builtins.str
None"/openpyxl.descriptors.nested._NestedNoneSetParam *î
familyÖ
PUnion[openpyxl.xml._functions_overloads._HasTagAndGet[Union[Any,None]],Any,None]õ
@openpyxl.xml._functions_overloads._HasTagAndGet[Union[Any,None]]&
Union[Any,None]
Any
None"/openpyxl.xml._functions_overloads._HasTagAndGet
Any
None *⁄
sizeÕ
DUnion[openpyxl.xml._functions_overloads._HasTagAndGet[Any],Any,None]p
4openpyxl.xml._functions_overloads._HasTagAndGet[Any]
Any"/openpyxl.xml._functions_overloads._HasTagAndGet
Any
None *Ÿ
boldÃ
ÉUnion[openpyxl.xml._functions_overloads._HasTagAndGet[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]],Unknown,None]µ
oopenpyxl.xml._functions_overloads._HasTagAndGet[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool"/openpyxl.xml._functions_overloads._HasTagAndGet 
None *€
italicÃ
ÉUnion[openpyxl.xml._functions_overloads._HasTagAndGet[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]],Unknown,None]µ
oopenpyxl.xml._functions_overloads._HasTagAndGet[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool"/openpyxl.xml._functions_overloads._HasTagAndGet 
None *‚
strikethroughÃ
ÉUnion[openpyxl.xml._functions_overloads._HasTagAndGet[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]],Unknown,None]µ
oopenpyxl.xml._functions_overloads._HasTagAndGet[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool"/openpyxl.xml._functions_overloads._HasTagAndGet 
None *’
	underline√
πTypeAlias[Union[openpyxl.xml._functions_overloads._HasTagAndGet[Union[openpyxl.descriptors.base._T,Literal[builtins.str],None]],openpyxl.descriptors.base._T,Literal[builtins.str],None]]—
ÆUnion[openpyxl.xml._functions_overloads._HasTagAndGet[Union[openpyxl.descriptors.base._T,Literal[builtins.str],None]],openpyxl.descriptors.base._T,Literal[builtins.str],None]Å
oopenpyxl.xml._functions_overloads._HasTagAndGet[Union[openpyxl.descriptors.base._T,Literal[builtins.str],None]]‹
>Union[openpyxl.descriptors.base._T,Literal[builtins.str],None]U
openpyxl.descriptors.base._T"
builtins.object"builtins.object"builtins.object7
Literal[builtins.str]	
builtins.str"builtins.str
None"/openpyxl.xml._functions_overloads._HasTagAndGetU
openpyxl.descriptors.base._T"
builtins.object"builtins.object"builtins.object7
Literal[builtins.str]	
builtins.str"builtins.str
None"/openpyxl.descriptors.nested._NestedNoneSetParam *’
	vertAlign√
πTypeAlias[Union[openpyxl.xml._functions_overloads._HasTagAndGet[Union[openpyxl.descriptors.base._T,Literal[builtins.str],None]],openpyxl.descriptors.base._T,Literal[builtins.str],None]]—
ÆUnion[openpyxl.xml._functions_overloads._HasTagAndGet[Union[openpyxl.descriptors.base._T,Literal[builtins.str],None]],openpyxl.descriptors.base._T,Literal[builtins.str],None]Å
oopenpyxl.xml._functions_overloads._HasTagAndGet[Union[openpyxl.descriptors.base._T,Literal[builtins.str],None]]‹
>Union[openpyxl.descriptors.base._T,Literal[builtins.str],None]U
openpyxl.descriptors.base._T"
builtins.object"builtins.object"builtins.object7
Literal[builtins.str]	
builtins.str"builtins.str
None"/openpyxl.xml._functions_overloads._HasTagAndGetU
openpyxl.descriptors.base._T"
builtins.object"builtins.object"builtins.object7
Literal[builtins.str]	
builtins.str"builtins.str
None"/openpyxl.descriptors.nested._NestedNoneSetParam *œ
outlineø
èUnion[openpyxl.xml._functions_overloads._HasTagAndGet[Union[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]],Unknown,None]ú
{openpyxl.xml._functions_overloads._HasTagAndGet[Union[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]]Î
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None"/openpyxl.xml._functions_overloads._HasTagAndGet 
None *Œ
shadowø
èUnion[openpyxl.xml._functions_overloads._HasTagAndGet[Union[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]],Unknown,None]ú
{openpyxl.xml._functions_overloads._HasTagAndGet[Union[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]]Î
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None"/openpyxl.xml._functions_overloads._HasTagAndGet 
None *–
condenseø
èUnion[openpyxl.xml._functions_overloads._HasTagAndGet[Union[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]],Unknown,None]ú
{openpyxl.xml._functions_overloads._HasTagAndGet[Union[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]]Î
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None"/openpyxl.xml._functions_overloads._HasTagAndGet 
None *Œ
extendø
èUnion[openpyxl.xml._functions_overloads._HasTagAndGet[Union[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]],Unknown,None]ú
{openpyxl.xml._functions_overloads._HasTagAndGet[Union[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]]Î
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None"/openpyxl.xml._functions_overloads._HasTagAndGet 
None z38z39z310z311z312z313*∂
	from_tree$openpyxl.styles.fonts.Font.from_tree"y
openpyxl.styles.fonts.Font.Self8
openpyxl.styles.fonts.Font"openpyxl.styles.fonts.Font"openpyxl.styles.fonts.Font*¥
cls™
%Type[openpyxl.styles.fonts.Font.Self]y
openpyxl.styles.fonts.Font.Self8
openpyxl.styles.fonts.Font"openpyxl.styles.fonts.Font"openpyxl.styles.fonts.Font"type*õ
nodeê
Fopenpyxl.xml._functions_overloads._SupportsFindAndIterAndAttribAndText"Fopenpyxl.xml._functions_overloads._SupportsFindAndIterAndAttribAndText0:classmethodpz36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rP
UNDERLINE_DOUBLE+openpyxl.styles.fonts.Font.UNDERLINE_DOUBLE
Any*36*37ry
UNDERLINE_DOUBLE+openpyxl.styles.fonts.Font.UNDERLINE_DOUBLE
builtins.str"builtins.str*38*39*310*311*312*313rf
UNDERLINE_DOUBLE_ACCOUNTING6openpyxl.styles.fonts.Font.UNDERLINE_DOUBLE_ACCOUNTING
Any*36*37rè
UNDERLINE_DOUBLE_ACCOUNTING6openpyxl.styles.fonts.Font.UNDERLINE_DOUBLE_ACCOUNTING
builtins.str"builtins.str*38*39*310*311*312*313rP
UNDERLINE_SINGLE+openpyxl.styles.fonts.Font.UNDERLINE_SINGLE
Any*36*37ry
UNDERLINE_SINGLE+openpyxl.styles.fonts.Font.UNDERLINE_SINGLE
builtins.str"builtins.str*38*39*310*311*312*313rf
UNDERLINE_SINGLE_ACCOUNTING6openpyxl.styles.fonts.Font.UNDERLINE_SINGLE_ACCOUNTING
Any*36*37rè
UNDERLINE_SINGLE_ACCOUNTING6openpyxl.styles.fonts.Font.UNDERLINE_SINGLE_ACCOUNTING
builtins.str"builtins.str*38*39*310*311*312*313r°
nameopenpyxl.styles.fonts.Font.nameT
(openpyxl.descriptors.nested.NestedString"(openpyxl.descriptors.nested.NestedString*36*37*38*39*310*311*312*313r©
charset"openpyxl.styles.fonts.Font.charsetV
)openpyxl.descriptors.nested.NestedInteger")openpyxl.descriptors.nested.NestedInteger*36*37*38*39*310*311*312*313r≥
family!openpyxl.styles.fonts.Font.familyb
-openpyxl.descriptors.nested.NestedMinMax[Any]
Any"(openpyxl.descriptors.nested.NestedMinMax*36*37*38*39*310*311*312*313rõ
szopenpyxl.styles.fonts.Font.szR
'openpyxl.descriptors.nested.NestedFloat"'openpyxl.descriptors.nested.NestedFloat*36*37*38*39*310*311*312*313rè
sizeopenpyxl.styles.fonts.Font.sizeB
openpyxl.descriptors.base.Alias"openpyxl.descriptors.base.Alias*36*37*38*39*310*311*312*313ró
bopenpyxl.styles.fonts.Font.bP
&openpyxl.descriptors.nested.NestedBool"&openpyxl.descriptors.nested.NestedBool*36*37*38*39*310*311*312*313rè
boldopenpyxl.styles.fonts.Font.boldB
openpyxl.descriptors.base.Alias"openpyxl.descriptors.base.Alias*36*37*38*39*310*311*312*313ró
iopenpyxl.styles.fonts.Font.iP
&openpyxl.descriptors.nested.NestedBool"&openpyxl.descriptors.nested.NestedBool*36*37*38*39*310*311*312*313rì
italic!openpyxl.styles.fonts.Font.italicB
openpyxl.descriptors.base.Alias"openpyxl.descriptors.base.Alias*36*37*38*39*310*311*312*313r°
strike!openpyxl.styles.fonts.Font.strikeP
&openpyxl.descriptors.nested.NestedBool"&openpyxl.descriptors.nested.NestedBool*36*37*38*39*310*311*312*313r°
strikethrough(openpyxl.styles.fonts.Font.strikethroughB
openpyxl.descriptors.base.Alias"openpyxl.descriptors.base.Alias*36*37*38*39*310*311*312*313r£
outline"openpyxl.styles.fonts.Font.outlineP
&openpyxl.descriptors.nested.NestedBool"&openpyxl.descriptors.nested.NestedBool*36*37*38*39*310*311*312*313r°
shadow!openpyxl.styles.fonts.Font.shadowP
&openpyxl.descriptors.nested.NestedBool"&openpyxl.descriptors.nested.NestedBool*36*37*38*39*310*311*312*313r•
condense#openpyxl.styles.fonts.Font.condenseP
&openpyxl.descriptors.nested.NestedBool"&openpyxl.descriptors.nested.NestedBool*36*37*38*39*310*311*312*313r°
extend!openpyxl.styles.fonts.Font.extendP
&openpyxl.descriptors.nested.NestedBool"&openpyxl.descriptors.nested.NestedBool*36*37*38*39*310*311*312*313rÕ
uopenpyxl.styles.fonts.Font.u°
9openpyxl.descriptors.nested.NestedNoneSet[TypeAlias[Any]]9
TypeAlias[Any]
Any"openpyxl.styles.fonts._FontU")openpyxl.descriptors.nested.NestedNoneSet*36*37rŸ
uopenpyxl.styles.fonts.Font.uô
îopenpyxl.descriptors.nested.NestedNoneSet[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]‘
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"openpyxl.styles.fonts._FontU")openpyxl.descriptors.nested.NestedNoneSet*38*39*310*311*312*313rô
	underline$openpyxl.styles.fonts.Font.underlineB
openpyxl.descriptors.base.Alias"openpyxl.descriptors.base.Alias*36*37*38*39*310*311*312*313rÂ
	vertAlign$openpyxl.styles.fonts.Font.vertAlign©
9openpyxl.descriptors.nested.NestedNoneSet[TypeAlias[Any]]A
TypeAlias[Any]
Any"$openpyxl.styles.fonts._FontVertAlign")openpyxl.descriptors.nested.NestedNoneSet*36*37rı
	vertAlign$openpyxl.styles.fonts.Font.vertAlign•
~openpyxl.descriptors.nested.NestedNoneSet[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]˜
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"$openpyxl.styles.fonts._FontVertAlign")openpyxl.descriptors.nested.NestedNoneSet*38*39*310*311*312*313rü
color openpyxl.styles.fonts.Font.colorP
&openpyxl.styles.colors.ColorDescriptor"&openpyxl.styles.colors.ColorDescriptor*36*37*38*39*310*311*312*313r‹
scheme!openpyxl.styles.fonts.Font.scheme¶
9openpyxl.descriptors.nested.NestedNoneSet[TypeAlias[Any]]>
TypeAlias[Any]
Any"!openpyxl.styles.fonts._FontScheme")openpyxl.descriptors.nested.NestedNoneSet*36*37rÒ
scheme!openpyxl.styles.fonts.Font.schemeß
hopenpyxl.descriptors.nested.NestedNoneSet[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]]è
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!openpyxl.styles.fonts._FontScheme")openpyxl.descriptors.nested.NestedNoneSet*38*39*310*311*312*313ro
tagname"openpyxl.styles.fonts.Font.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313r©
__elements__'openpyxl.styles.fonts.Font.__elements__L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*36*37*38*39*310*311*312*313≥&

NamedStyle'openpyxl.styles.named_styles.NamedStyle".openpyxl.descriptors.serialisable.Serialisable*‡
__init__0openpyxl.styles.named_styles.NamedStyle.__init__"
None*\
selfR
'openpyxl.styles.named_styles.NamedStyle"'openpyxl.styles.named_styles.NamedStyle*(
name
builtins.str"builtins.str *z
fontn
&Union[openpyxl.styles.fonts.Font,None]8
openpyxl.styles.fonts.Font"openpyxl.styles.fonts.Font
None *z
filln
&Union[openpyxl.styles.fills.Fill,None]8
openpyxl.styles.fills.Fill"openpyxl.styles.fills.Fill
None *à
borderz
*Union[openpyxl.styles.borders.Border,None]@
openpyxl.styles.borders.Border"openpyxl.styles.borders.Border
None *õ
	alignmentâ
/Union[openpyxl.styles.alignment.Alignment,None]J
#openpyxl.styles.alignment.Alignment"#openpyxl.styles.alignment.Alignment
None *p
number_format[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *¢

protectionè
1Union[openpyxl.styles.protection.Protection,None]N
%openpyxl.styles.protection.Protection"%openpyxl.styles.protection.Protection
None *7
	builtinId&
Union[Any,None]
Any
None *˙
hiddenÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None z36z37z38z39z310z311z312z313*ä
__setattr__3openpyxl.styles.named_styles.NamedStyle.__setattr__"
None*\
selfR
'openpyxl.styles.named_styles.NamedStyle"'openpyxl.styles.named_styles.NamedStyle*&
attr
builtins.str"builtins.str*
value
Anyz36z37z38z39z310z311z312z313*ﬂ
__iter__0openpyxl.styles.named_styles.NamedStyle.__iter__"¶
1typing.Iterator[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Iterator*TR
'openpyxl.styles.named_styles.NamedStyle"'openpyxl.styles.named_styles.NamedStylez36z37z38z39z310z311z312z313*î
bind,openpyxl.styles.named_styles.NamedStyle.bind"
None*\
selfR
'openpyxl.styles.named_styles.NamedStyle"'openpyxl.styles.named_styles.NamedStyle*R
wbJ
#openpyxl.workbook.workbook.Workbook"#openpyxl.workbook.workbook.Workbookz36z37z38z39z310z311z312z313*é
as_tuple0openpyxl.styles.named_styles.NamedStyle.as_tuple"N
%openpyxl.styles.cell_style.StyleArray"%openpyxl.styles.cell_style.StyleArray*\
selfR
'openpyxl.styles.named_styles.NamedStyle"'openpyxl.styles.named_styles.NamedStylez36z37z38z39z310z311z312z313*Ü
as_xf-openpyxl.styles.named_styles.NamedStyle.as_xf"L
$openpyxl.styles.cell_style.CellStyle"$openpyxl.styles.cell_style.CellStyle*\
selfR
'openpyxl.styles.named_styles.NamedStyle"'openpyxl.styles.named_styles.NamedStylez36z37z38z39z310z311z312z313*ö
as_name/openpyxl.styles.named_styles.NamedStyle.as_name"\
,openpyxl.styles.named_styles._NamedCellStyle",openpyxl.styles.named_styles._NamedCellStyle*\
selfR
'openpyxl.styles.named_styles.NamedStyle"'openpyxl.styles.named_styles.NamedStylez36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313r™
font,openpyxl.styles.named_styles.NamedStyle.fontP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313r™
fill,openpyxl.styles.named_styles.NamedStyle.fillP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313rÆ
border.openpyxl.styles.named_styles.NamedStyle.borderP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313r¥
	alignment1openpyxl.styles.named_styles.NamedStyle.alignmentP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313rù
number_format5openpyxl.styles.named_styles.NamedStyle.number_format1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313r∂

protection2openpyxl.styles.named_styles.NamedStyle.protectionP
$openpyxl.descriptors.base.Typed[Any]
Any"openpyxl.descriptors.base.Typed*36*37*38*39*310*311*312*313r™
	builtinId1openpyxl.styles.named_styles.NamedStyle.builtinIdF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313rû
hidden.openpyxl.styles.named_styles.NamedStyle.hidden@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313rû
name,openpyxl.styles.named_styles.NamedStyle.nameD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313Ö
NumberFormatDescriptor.openpyxl.styles.numbers.NumberFormatDescriptor" openpyxl.descriptors.base.String*Ù
__set__6openpyxl.styles.numbers.NumberFormatDescriptor.__set__"
None*j
self`
.openpyxl.styles.numbers.NumberFormatDescriptor".openpyxl.styles.numbers.NumberFormatDescriptor*Ç
instanceÛ
QUnion[openpyxl.descriptors.serialisable.Serialisable,openpyxl.descriptors.Strict]`
.openpyxl.descriptors.serialisable.Serialisable".openpyxl.descriptors.serialisable.Serialisable:
openpyxl.descriptors.Strict"openpyxl.descriptors.Strict*
value
Anyz36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313 


Protection%openpyxl.styles.protection.Protection".openpyxl.descriptors.serialisable.Serialisable*Ü
__init__.openpyxl.styles.protection.Protection.__init__"
None*X
selfN
%openpyxl.styles.protection.Protection"%openpyxl.styles.protection.Protection*ü
lockedê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *ü
hiddenê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rz
tagname-openpyxl.styles.protection.Protection.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313rú
locked,openpyxl.styles.protection.Protection.locked@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313rú
hidden,openpyxl.styles.protection.Protection.hidden@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313√

is_builtin"openpyxl.styles.numbers.is_builtin"
builtins.bool"builtins.bool*M
fmtD
Union[builtins.str,None]
builtins.str"builtins.str
Nonez36z37z38z39z310z311z312z313À
is_date_format&openpyxl.styles.numbers.is_date_format"
builtins.bool"builtins.bool*M
fmtD
Union[builtins.str,None]
builtins.str"builtins.str
Nonez36z37z38z39z310z311z312z313*î
__path__openpyxl.styles.__path__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*36*37*38*39*310*311*312*313*Ø
__annotations__openpyxl.styles.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313*C
DEFAULT_FONT"openpyxl.styles.fonts.DEFAULT_FONT
Any*36*37*à
DEFAULT_FONT"openpyxl.styles.fonts.DEFAULT_FONT8
openpyxl.styles.fonts.Font"openpyxl.styles.fonts.Font*38*39*310*311*312*313