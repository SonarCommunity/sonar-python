

emoji.coreB
_EmojiListReturnemoji.core._EmojiListReturn"typing._TypedDict÷
emojizeemoji.core.emojize"
builtins.str"builtins.str*(
string
builtins.str"builtins.str*r

delimiters`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str *Ç
variant·
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None *,
language
builtins.str"builtins.str *Y
versionJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *È
handle_version±
8Union[builtins.str,CallableType[builtins.function],None]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function
None ¯
demojizeemoji.core.demojize"
builtins.str"builtins.str*(
string
builtins.str"builtins.str*r

delimiters`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str *,
language
builtins.str"builtins.str *Y
versionJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *È
handle_version±
8Union[builtins.str,CallableType[builtins.function],None]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function
None ×
replace_emojiemoji.core.replace_emoji"
builtins.str"builtins.str*(
string
builtins.str"builtins.str*²
replace¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function */
version 
builtins.float"builtins.float É

emoji_listemoji.core.emoji_list"z
#builtins.list[TypeAlias[TypedDict]]D
TypeAlias[TypedDict]
	TypedDict"emoji.core._EmojiListReturn"builtins.list*(
string
builtins.str"builtins.str«
distinct_emoji_listemoji.core.distinct_emoji_list"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*(
string
builtins.str"builtins.str›
emoji_countemoji.core.emoji_count"
builtins.int"builtins.int*(
string
builtins.str"builtins.str*,
unique
builtins.bool"builtins.bool i
versionemoji.core.version" 
builtins.float"builtins.float*(
string
builtins.str"builtins.stri
is_emojiemoji.core.is_emoji"
builtins.bool"builtins.bool*(
string
builtins.str"builtins.str*†
__annotations__emoji.core.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*Q
_DEFAULT_DELIMITERemoji.core._DEFAULT_DELIMITER
builtins.str"builtins.str