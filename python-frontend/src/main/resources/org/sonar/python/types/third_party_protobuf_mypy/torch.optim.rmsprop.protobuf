
torch.optim.rmspropû
RMSproptorch.optim.rmsprop.RMSprop"torch.optim.optimizer.Optimizer*Ë
__init__$torch.optim.rmsprop.RMSprop.__init__"
None*D
self:
torch.optim.rmsprop.RMSprop"torch.optim.rmsprop.RMSprop*É
paramsˆ
hTypeAlias[Union[typing.Iterable[torch._tensor.Tensor],typing.Iterable[builtins.dict[builtins.str,Any]]]]Ë
]Union[typing.Iterable[torch._tensor.Tensor],typing.Iterable[builtins.dict[builtins.str,Any]]]f
%typing.Iterable[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"typing.Iterableú
0typing.Iterable[builtins.dict[builtins.str,Any]]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"typing.Iterable"torch.optim.optimizer.ParamsT**
lr 
builtins.float"builtins.float *-
alpha 
builtins.float"builtins.float *+
eps 
builtins.float"builtins.float *4
weight_decay 
builtins.float"builtins.float *0
momentum 
builtins.float"builtins.float *
centered
Any *

capturable
Any *V
foreachG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *.
maximize
builtins.bool"builtins.bool *4
differentiable
builtins.bool"builtins.bool *M
__setstate__(torch.optim.rmsprop.RMSprop.__setstate__*
self*	
state*∑
_init_group'torch.optim.rmsprop.RMSprop._init_group*
self*	
group*
params_with_grad*	
grads*
square_avgs*
momentum_buffer_list*
	grad_avgs*
state_steps*a
step torch.optim.rmsprop.RMSprop.step*
self*
closure 0:_use_grad_for_differentiableﬁ	
_single_tensor_rmsprop*torch.optim.rmsprop._single_tensor_rmsprop"
Any*n
paramsb
#builtins.list[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"builtins.list*m
gradsb
#builtins.list[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"builtins.list*s
square_avgsb
#builtins.list[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"builtins.list*q
	grad_avgsb
#builtins.list[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"builtins.list*|
momentum_buffer_listb
#builtins.list[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"builtins.list*s
state_stepsb
#builtins.list[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"builtins.list*(
lr 
builtins.float"builtins.float*+
alpha 
builtins.float"builtins.float*)
eps 
builtins.float"builtins.float*2
weight_decay 
builtins.float"builtins.float*.
momentum 
builtins.float"builtins.float*,
centered
builtins.bool"builtins.bool*,
maximize
builtins.bool"builtins.bool*2
differentiable
builtins.bool"builtins.bool*.

capturable
builtins.bool"builtins.bool*/
has_complex
builtins.bool"builtins.bool‹	
_multi_tensor_rmsprop)torch.optim.rmsprop._multi_tensor_rmsprop"
Any*n
paramsb
#builtins.list[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"builtins.list*m
gradsb
#builtins.list[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"builtins.list*s
square_avgsb
#builtins.list[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"builtins.list*q
	grad_avgsb
#builtins.list[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"builtins.list*|
momentum_buffer_listb
#builtins.list[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"builtins.list*s
state_stepsb
#builtins.list[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"builtins.list*(
lr 
builtins.float"builtins.float*+
alpha 
builtins.float"builtins.float*)
eps 
builtins.float"builtins.float*2
weight_decay 
builtins.float"builtins.float*.
momentum 
builtins.float"builtins.float*,
centered
builtins.bool"builtins.bool*,
maximize
builtins.bool"builtins.bool*2
differentiable
builtins.bool"builtins.bool*.

capturable
builtins.bool"builtins.bool*/
has_complex
builtins.bool"builtins.bool*è
__annotations__#torch.optim.rmsprop.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*r
__all__torch.optim.rmsprop.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list