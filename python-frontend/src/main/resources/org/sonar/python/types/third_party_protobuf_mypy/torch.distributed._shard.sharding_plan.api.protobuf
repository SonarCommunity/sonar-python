
*torch.distributed._shard.sharding_plan.api§
ShardingPlan7torch.distributed._shard.sharding_plan.api.ShardingPlan"builtins.object*Í	
__init__@torch.distributed._shard.sharding_plan.api.ShardingPlan.__init__"
None*|
selfr
7torch.distributed._shard.sharding_plan.api.ShardingPlan"7torch.distributed._shard.sharding_plan.api.ShardingPlan*ˆ
planÎ
Ébuiltins.dict[builtins.str,Union[torch.distributed._shard.sharding_spec.api.ShardingSpec,torch.distributed._shard.sharder.Sharder]]
builtins.str"builtins.strµ
gUnion[torch.distributed._shard.sharding_spec.api.ShardingSpec,torch.distributed._shard.sharder.Sharder]r
7torch.distributed._shard.sharding_spec.api.ShardingSpec"7torch.distributed._shard.sharding_spec.api.ShardingSpecT
(torch.distributed._shard.sharder.Sharder"(torch.distributed._shard.sharder.Sharder"builtins.dict*˙
output_planÊ
_Union[builtins.dict[builtins.str,torch.distributed._shard.sharding_spec.api.ShardingSpec],None]ˆ
Sbuiltins.dict[builtins.str,torch.distributed._shard.sharding_spec.api.ShardingSpec]
builtins.str"builtins.strr
7torch.distributed._shard.sharding_spec.api.ShardingSpec"7torch.distributed._shard.sharding_spec.api.ShardingSpec"builtins.dict
None *ù
return_local_tensorÅ
'Union[builtins.list[builtins.str],None]J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
None 8r≤
plan<torch.distributed._shard.sharding_plan.api.ShardingPlan.planÎ
Ébuiltins.dict[builtins.str,Union[torch.distributed._shard.sharding_spec.api.ShardingSpec,torch.distributed._shard.sharder.Sharder]]
builtins.str"builtins.strµ
gUnion[torch.distributed._shard.sharding_spec.api.ShardingSpec,torch.distributed._shard.sharder.Sharder]r
7torch.distributed._shard.sharding_spec.api.ShardingSpec"7torch.distributed._shard.sharding_spec.api.ShardingSpecT
(torch.distributed._shard.sharder.Sharder"(torch.distributed._shard.sharder.Sharder"builtins.dictrª
output_planCtorch.distributed._shard.sharding_plan.api.ShardingPlan.output_planÊ
_Union[builtins.dict[builtins.str,torch.distributed._shard.sharding_spec.api.ShardingSpec],None]ˆ
Sbuiltins.dict[builtins.str,torch.distributed._shard.sharding_spec.api.ShardingSpec]
builtins.str"builtins.strr
7torch.distributed._shard.sharding_spec.api.ShardingSpec"7torch.distributed._shard.sharding_spec.api.ShardingSpec"builtins.dict
NonerÊ
return_local_tensorKtorch.distributed._shard.sharding_plan.api.ShardingPlan.return_local_tensorÅ
'Union[builtins.list[builtins.str],None]J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
Noner˛
__dataclass_fields__Ltorch.distributed._shard.sharding_plan.api.ShardingPlan.__dataclass_fields__ó
2builtins.dict[builtins.str,dataclasses.Field[Any]]
builtins.str"builtins.str4
dataclasses.Field[Any]
Any"dataclasses.Field"builtins.dictã
ShardingPlanner:torch.distributed._shard.sharding_plan.api.ShardingPlanner"abc.ABC*≤

build_planEtorch.distributed._shard.sharding_plan.api.ShardingPlanner.build_plan"r
7torch.distributed._shard.sharding_plan.api.ShardingPlan"7torch.distributed._shard.sharding_plan.api.ShardingPlan*Ç
selfx
:torch.distributed._shard.sharding_plan.api.ShardingPlanner":torch.distributed._shard.sharding_plan.api.ShardingPlanner*L
module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module0:abc.abstractmethod@*¶
__annotations__:torch.distributed._shard.sharding_plan.api.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
nntorch.nn 