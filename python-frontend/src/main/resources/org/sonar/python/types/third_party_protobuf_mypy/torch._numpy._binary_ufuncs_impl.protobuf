
 torch._numpy._binary_ufuncs_impl?
matmul'torch._numpy._binary_ufuncs_impl.matmul*
x*
y?
divmod'torch._numpy._binary_ufuncs_impl.divmod*
x*
y"Ï

left_shift.torch._C._VariableFunctions.bitwise_left_shift€
bitwise_left_shift.torch._C._VariableFunctions.bitwise_left_shift",
torch._tensor.Tensor"torch._tensor.Tensor*7
input,
torch._tensor.Tensor"torch._tensor.Tensor*7
other,
torch._tensor.Tensor"torch._tensor.Tensor*g
out\
 Union[torch._tensor.Tensor,None],
torch._tensor.Tensor"torch._tensor.Tensor
None 0:overloadX±
bitwise_left_shift.torch._C._VariableFunctions.bitwise_left_shift",
torch._tensor.Tensor"torch._tensor.Tensor*ı
selfÍ
SUnion[TypeAlias[Union[builtins.int,builtins.float,builtins.bool]],builtins.complex]Í
;TypeAlias[Union[builtins.int,builtins.float,builtins.bool]]î
0Union[builtins.int,builtins.float,builtins.bool]
builtins.int"builtins.int 
builtins.float"builtins.float
builtins.bool"builtins.bool"torch.types.Number$
builtins.complex"builtins.complex*7
other,
torch._tensor.Tensor"torch._tensor.Tensor0:overloadXõ
bitwise_left_shift.torch._C._VariableFunctions.bitwise_left_shift",
torch._tensor.Tensor"torch._tensor.Tensor*7
input,
torch._tensor.Tensor"torch._tensor.Tensor*ˆ
otherÍ
SUnion[TypeAlias[Union[builtins.int,builtins.float,builtins.bool]],builtins.complex]Í
;TypeAlias[Union[builtins.int,builtins.float,builtins.bool]]î
0Union[builtins.int,builtins.float,builtins.bool]
builtins.int"builtins.int 
builtins.float"builtins.float
builtins.bool"builtins.bool"torch.types.Number$
builtins.complex"builtins.complex*g
out\
 Union[torch._tensor.Tensor,None],
torch._tensor.Tensor"torch._tensor.Tensor
None 0:overloadX"Ù
right_shift/torch._C._VariableFunctions.bitwise_right_shift›
bitwise_right_shift/torch._C._VariableFunctions.bitwise_right_shift",
torch._tensor.Tensor"torch._tensor.Tensor*7
input,
torch._tensor.Tensor"torch._tensor.Tensor*7
other,
torch._tensor.Tensor"torch._tensor.Tensor*g
out\
 Union[torch._tensor.Tensor,None],
torch._tensor.Tensor"torch._tensor.Tensor
None 0:overloadX≥
bitwise_right_shift/torch._C._VariableFunctions.bitwise_right_shift",
torch._tensor.Tensor"torch._tensor.Tensor*ı
selfÍ
SUnion[TypeAlias[Union[builtins.int,builtins.float,builtins.bool]],builtins.complex]Í
;TypeAlias[Union[builtins.int,builtins.float,builtins.bool]]î
0Union[builtins.int,builtins.float,builtins.bool]
builtins.int"builtins.int 
builtins.float"builtins.float
builtins.bool"builtins.bool"torch.types.Number$
builtins.complex"builtins.complex*7
other,
torch._tensor.Tensor"torch._tensor.Tensor0:overloadXù
bitwise_right_shift/torch._C._VariableFunctions.bitwise_right_shift",
torch._tensor.Tensor"torch._tensor.Tensor*7
input,
torch._tensor.Tensor"torch._tensor.Tensor*ˆ
otherÍ
SUnion[TypeAlias[Union[builtins.int,builtins.float,builtins.bool]],builtins.complex]Í
;TypeAlias[Union[builtins.int,builtins.float,builtins.bool]]î
0Union[builtins.int,builtins.float,builtins.bool]
builtins.int"builtins.int 
builtins.float"builtins.float
builtins.bool"builtins.bool"torch.types.Number$
builtins.complex"builtins.complex*g
out\
 Union[torch._tensor.Tensor,None],
torch._tensor.Tensor"torch._tensor.Tensor
None 0:overloadX"„
equaltorch._C._VariableFunctions.eqª
eqtorch._C._VariableFunctions.eq",
torch._tensor.Tensor"torch._tensor.Tensor*7
input,
torch._tensor.Tensor"torch._tensor.Tensor*7
other,
torch._tensor.Tensor"torch._tensor.Tensor*g
out\
 Union[torch._tensor.Tensor,None],
torch._tensor.Tensor"torch._tensor.Tensor
None 0:overloadX˚
eqtorch._C._VariableFunctions.eq",
torch._tensor.Tensor"torch._tensor.Tensor*7
input,
torch._tensor.Tensor"torch._tensor.Tensor*ˆ
otherÍ
SUnion[TypeAlias[Union[builtins.int,builtins.float,builtins.bool]],builtins.complex]Í
;TypeAlias[Union[builtins.int,builtins.float,builtins.bool]]î
0Union[builtins.int,builtins.float,builtins.bool]
builtins.int"builtins.int 
builtins.float"builtins.float
builtins.bool"builtins.bool"torch.types.Number$
builtins.complex"builtins.complex*g
out\
 Union[torch._tensor.Tensor,None],
torch._tensor.Tensor"torch._tensor.Tensor
None 0:overloadX"
powertorch._C._VariableFunctions.pow¿
powtorch._C._VariableFunctions.pow",
torch._tensor.Tensor"torch._tensor.Tensor*7
input,
torch._tensor.Tensor"torch._tensor.Tensor*:
exponent,
torch._tensor.Tensor"torch._tensor.Tensor*g
out\
 Union[torch._tensor.Tensor,None],
torch._tensor.Tensor"torch._tensor.Tensor
None 0:overloadXˇ
powtorch._C._VariableFunctions.pow",
torch._tensor.Tensor"torch._tensor.Tensor*ı
selfÍ
SUnion[TypeAlias[Union[builtins.int,builtins.float,builtins.bool]],builtins.complex]Í
;TypeAlias[Union[builtins.int,builtins.float,builtins.bool]]î
0Union[builtins.int,builtins.float,builtins.bool]
builtins.int"builtins.int 
builtins.float"builtins.float
builtins.bool"builtins.bool"torch.types.Number$
builtins.complex"builtins.complex*:
exponent,
torch._tensor.Tensor"torch._tensor.Tensor*g
out\
 Union[torch._tensor.Tensor,None],
torch._tensor.Tensor"torch._tensor.Tensor
None 0:overloadXÄ
powtorch._C._VariableFunctions.pow",
torch._tensor.Tensor"torch._tensor.Tensor*7
input,
torch._tensor.Tensor"torch._tensor.Tensor*˘
exponentÍ
SUnion[TypeAlias[Union[builtins.int,builtins.float,builtins.bool]],builtins.complex]Í
;TypeAlias[Union[builtins.int,builtins.float,builtins.bool]]î
0Union[builtins.int,builtins.float,builtins.bool]
builtins.int"builtins.int 
builtins.float"builtins.float
builtins.bool"builtins.bool"torch.types.Number$
builtins.complex"builtins.complex*g
out\
 Union[torch._tensor.Tensor,None],
torch._tensor.Tensor"torch._tensor.Tensor
None 0:overloadX"¶
mod%torch._C._VariableFunctions.remainder…
	remainder%torch._C._VariableFunctions.remainder",
torch._tensor.Tensor"torch._tensor.Tensor*7
input,
torch._tensor.Tensor"torch._tensor.Tensor*7
other,
torch._tensor.Tensor"torch._tensor.Tensor*g
out\
 Union[torch._tensor.Tensor,None],
torch._tensor.Tensor"torch._tensor.Tensor
None 0:overloadXü
	remainder%torch._C._VariableFunctions.remainder",
torch._tensor.Tensor"torch._tensor.Tensor*ı
selfÍ
SUnion[TypeAlias[Union[builtins.int,builtins.float,builtins.bool]],builtins.complex]Í
;TypeAlias[Union[builtins.int,builtins.float,builtins.bool]]î
0Union[builtins.int,builtins.float,builtins.bool]
builtins.int"builtins.int 
builtins.float"builtins.float
builtins.bool"builtins.bool"torch.types.Number$
builtins.complex"builtins.complex*7
other,
torch._tensor.Tensor"torch._tensor.Tensor0:overloadXâ
	remainder%torch._C._VariableFunctions.remainder",
torch._tensor.Tensor"torch._tensor.Tensor*7
input,
torch._tensor.Tensor"torch._tensor.Tensor*ˆ
otherÍ
SUnion[TypeAlias[Union[builtins.int,builtins.float,builtins.bool]],builtins.complex]Í
;TypeAlias[Union[builtins.int,builtins.float,builtins.bool]]î
0Union[builtins.int,builtins.float,builtins.bool]
builtins.int"builtins.int 
builtins.float"builtins.float
builtins.bool"builtins.bool"torch.types.Number$
builtins.complex"builtins.complex*g
out\
 Union[torch._tensor.Tensor,None],
torch._tensor.Tensor"torch._tensor.Tensor
None 0:overloadX*ú
__annotations__0torch._numpy._binary_ufuncs_impl.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict