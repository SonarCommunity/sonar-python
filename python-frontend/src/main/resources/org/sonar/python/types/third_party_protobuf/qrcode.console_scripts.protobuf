
qrcode.console_scriptsè
mainqrcode.console_scripts.main"
None*”
args‡
)Union[typing.Sequence[builtins.str],None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
None z36z37z38z39z310z311z312z313è
get_factory"qrcode.console_scripts.get_factory"g
!Type[qrcode.image.base.BaseImage]:
qrcode.image.base.BaseImage"qrcode.image.base.BaseImage"type*(
module
builtins.str"builtins.strz36z37z38z39z310z311z312z313{
get_drawer_help&qrcode.console_scripts.get_drawer_help"
builtins.str"builtins.strz36z37z38z39z310z311z312z313ð
commasqrcode.console_scripts.commas"
builtins.str"builtins.str*Y
itemsN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable**
joiner
builtins.str"builtins.str z36z37z38z39z310z311z312z313*¶
__annotations__&qrcode.console_scripts.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313*Ø
default_factories(qrcode.console_scripts.default_factoriesu
(builtins.dict[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.dict*36*37*38*39*310*311*312*313*Ö
error_correction'qrcode.console_scripts.error_correctionu
(builtins.dict[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"builtins.dict*36*37*38*39*310*311*312*313