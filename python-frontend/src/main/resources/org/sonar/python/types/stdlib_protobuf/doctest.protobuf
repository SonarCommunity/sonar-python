
doctestπ
TestResultsdoctest.TestResults"builtins.tuple*Â
_replacedoctest.TestResults._replace"
doctest.TestResults._NT*&
_self
doctest.TestResults._NT**
failed
builtins.int"builtins.int *-
	attempted
builtins.int"builtins.int z27z35z36z37z38z39z310*Å
__new__doctest.TestResults.__new__"
doctest.TestResults._NT*H
_cls>
Type[doctest.TestResults._NT]
doctest.TestResults._NT*(
failed
builtins.int"builtins.int*+
	attempted
builtins.int"builtins.intz27z35z36z37z38z39z310*ƒ
_asdictdoctest.TestResults._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*&
_self
doctest.TestResults._NTz27z35z36z37z38z39z310*ü
_makedoctest.TestResults._make"
doctest.TestResults._NT*H
_cls>
Type[doctest.TestResults._NT]
doctest.TestResults._NT*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpz27z35z36z37z38z39z310j27j35j36j37j38j39j310r|
faileddoctest.TestResults.failed
builtins.int"builtins.int*27*27*35*35*36*36*37*37*38*38*39*39*310*310rÇ
	attempteddoctest.TestResults.attempted
builtins.int"builtins.int*27*27*35*35*36*36*37*37*38*38*39*39*310*310r•
_fieldsdoctest.TestResults._fields`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*27*35*36*37*38*39*310r¶
_field_types doctest.TestResults._field_typesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*27*35*36*37*38*39*310r¨
_field_defaults#doctest.TestResults._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*27*35*36*37*38*39*310ra
_sourcedoctest.TestResults._source
builtins.str"builtins.str*27*35*36*37*38*39*310r¨
__annotations__#doctest.TestResults.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*27*35*36*37*38*39*310◊
Exampledoctest.Example"builtins.object*»
__init__doctest.Example.__init__"
None*,
self"
doctest.Example"doctest.Example*(
source
builtins.str"builtins.str*&
want
builtins.str"builtins.str*S
exc_msgD
Union[builtins.str,None]
builtins.str"builtins.str
None **
lineno
builtins.int"builtins.int **
indent
builtins.int"builtins.int *Õ
optionsΩ
5Union[builtins.dict[builtins.int,builtins.bool],None]x
)builtins.dict[builtins.int,builtins.bool]
builtins.int"builtins.int
builtins.bool"builtins.bool"builtins.dict
None z27z35z36z37z38z39z310*ç
__hash__doctest.Example.__hash__"
builtins.int"builtins.int*,
self"
doctest.Example"doctest.Examplez27z35z36z37z38z39z310j27j35j36j37j38j39j310r[
sourcedoctest.Example.source
builtins.str"builtins.str*27*35*36*37*38*39*310rW
wantdoctest.Example.want
builtins.str"builtins.str*27*35*36*37*38*39*310rÖ
exc_msgdoctest.Example.exc_msgD
Union[builtins.str,None]
builtins.str"builtins.str
None*27*35*36*37*38*39*310r[
linenodoctest.Example.lineno
builtins.int"builtins.int*27*35*36*37*38*39*310r[
indentdoctest.Example.indent
builtins.int"builtins.int*27*35*36*37*38*39*310rπ
optionsdoctest.Example.optionsx
)builtins.dict[builtins.int,builtins.bool]
builtins.int"builtins.int
builtins.bool"builtins.bool"builtins.dict*27*35*36*37*38*39*310ú
DocTestdoctest.DocTest"builtins.object*„
__init__doctest.DocTest.__init__"
None*,
self"
doctest.DocTest"doctest.DocTest*a
examplesS
builtins.list[doctest.Example]"
doctest.Example"doctest.Example"builtins.list*b
globsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*&
name
builtins.str"builtins.str*R
filenameD
Union[builtins.str,None]
builtins.str"builtins.str
None*P
linenoD
Union[builtins.int,None]
builtins.int"builtins.int
None*S
	docstringD
Union[builtins.str,None]
builtins.str"builtins.str
Nonez27z35z36z37z38z39z310*ç
__hash__doctest.DocTest.__hash__"
builtins.int"builtins.int*,
self"
doctest.DocTest"doctest.DocTestz27z35z36z37z38z39z310*∂
__lt__doctest.DocTest.__lt__"
builtins.bool"builtins.bool**
self"
doctest.DocTest"doctest.DocTest*+
other"
doctest.DocTest"doctest.DocTestz27z35z36z37z38z39z310j27j35j36j37j38j39j310rñ
examplesdoctest.DocTest.examplesS
builtins.list[doctest.Example]"
doctest.Example"doctest.Example"builtins.list*27*35*36*37*38*39*310rî
globsdoctest.DocTest.globsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*27*35*36*37*38*39*310rW
namedoctest.DocTest.name
builtins.str"builtins.str*27*35*36*37*38*39*310rá
filenamedoctest.DocTest.filenameD
Union[builtins.str,None]
builtins.str"builtins.str
None*27*35*36*37*38*39*310rÉ
linenodoctest.DocTest.linenoD
Union[builtins.int,None]
builtins.int"builtins.int
None*27*35*36*37*38*39*310râ
	docstringdoctest.DocTest.docstringD
Union[builtins.str,None]
builtins.str"builtins.str
None*27*35*36*37*38*39*310ñ

DocTestParserdoctest.DocTestParser"builtins.object*Ä
parsedoctest.DocTestParser.parse"Æ
2builtins.list[Union[builtins.str,doctest.Example]]i
#Union[builtins.str,doctest.Example]
builtins.str"builtins.str"
doctest.Example"doctest.Example"builtins.list*8
self.
doctest.DocTestParser"doctest.DocTestParser*(
string
builtins.str"builtins.str*(
name
builtins.str"builtins.str z27z35z36z37z38z39z310*á
get_doctest!doctest.DocTestParser.get_doctest""
doctest.DocTest"doctest.DocTest*8
self.
doctest.DocTestParser"doctest.DocTestParser*(
string
builtins.str"builtins.str*b
globsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*&
name
builtins.str"builtins.str*R
filenameD
Union[builtins.str,None]
builtins.str"builtins.str
None*P
linenoD
Union[builtins.int,None]
builtins.int"builtins.int
Nonez27z35z36z37z38z39z310*≤
get_examples"doctest.DocTestParser.get_examples"S
builtins.list[doctest.Example]"
doctest.Example"doctest.Example"builtins.list*8
self.
doctest.DocTestParser"doctest.DocTestParser*(
string
builtins.str"builtins.str*(
name
builtins.str"builtins.str z27z35z36z37z38z39z310j27j35j36j37j38j39j310›	
DocTestFinderdoctest.DocTestFinder"builtins.object*‹
__init__doctest.DocTestFinder.__init__"
None*8
self.
doctest.DocTestFinder"doctest.DocTestFinder*-
verbose
builtins.bool"builtins.bool *<
parser.
doctest.DocTestParser"doctest.DocTestParser *-
recurse
builtins.bool"builtins.bool *3
exclude_empty
builtins.bool"builtins.bool z27z35z36z37z38z39z310*ß
finddoctest.DocTestFinder.find"S
builtins.list[doctest.DocTest]"
doctest.DocTest"doctest.DocTest"builtins.list*8
self.
doctest.DocTestFinder"doctest.DocTestFinder*+
obj"
builtins.object"builtins.object*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *å
module~
*Union[None,builtins.bool,types.ModuleType]
None
builtins.bool"builtins.bool$
types.ModuleType"types.ModuleType *†
globsí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *•

extraglobsí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None z27z35z36z37z38z39z310j27j35j36j37j38j39j310∞!
DocTestRunnerdoctest.DocTestRunner"builtins.object*Ñ
__init__doctest.DocTestRunner.__init__"
None*8
self.
doctest.DocTestRunner"doctest.DocTestRunner*n
checker_
!Union[doctest.OutputChecker,None].
doctest.OutputChecker"doctest.OutputChecker
None *V
verboseG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None */
optionflags
builtins.int"builtins.int z27z35z36z37z38z39z310*à
report_start"doctest.DocTestRunner.report_start"
None*8
self.
doctest.DocTestRunner"doctest.DocTestRunner*ì
outâ
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"doctest._Out*,
test"
doctest.DocTest"doctest.DocTest*/
example"
doctest.Example"doctest.Examplez27z35z36z37z38z39z310*≥
report_success$doctest.DocTestRunner.report_success"
None*8
self.
doctest.DocTestRunner"doctest.DocTestRunner*ì
outâ
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"doctest._Out*,
test"
doctest.DocTest"doctest.DocTest*/
example"
doctest.Example"doctest.Example*%
got
builtins.str"builtins.strz27z35z36z37z38z39z310*≥
report_failure$doctest.DocTestRunner.report_failure"
None*8
self.
doctest.DocTestRunner"doctest.DocTestRunner*ì
outâ
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"doctest._Out*,
test"
doctest.DocTest"doctest.DocTest*/
example"
doctest.Example"doctest.Example*%
got
builtins.str"builtins.strz27z35z36z37z38z39z310*Æ
report_unexpected_exception1doctest.DocTestRunner.report_unexpected_exception"
None*8
self.
doctest.DocTestRunner"doctest.DocTestRunner*ì
outâ
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"doctest._Out*,
test"
doctest.DocTest"doctest.DocTest*/
example"
doctest.Example"doctest.Example*Ö
exc_infoˆ
YTypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]]Ñ
NTuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseException*
types.TracebackType"types.TracebackType"doctest._ExcInfoz27z35z36z37z38z39z310*©
rundoctest.DocTestRunner.run"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*8
self.
doctest.DocTestRunner"doctest.DocTestRunner*,
test"
doctest.DocTest"doctest.DocTest*X
compileflagsD
Union[builtins.int,None]
builtins.int"builtins.int
None *í
outÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *1
clear_globs
builtins.bool"builtins.bool z27z35z36z37z38z39z310*Ω
	summarizedoctest.DocTestRunner.summarize"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*8
self.
doctest.DocTestRunner"doctest.DocTestRunner*V
verboseG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None z27z35z36z37z38z39z310*¿
mergedoctest.DocTestRunner.merge"
None*8
self.
doctest.DocTestRunner"doctest.DocTestRunner*9
other.
doctest.DocTestRunner"doctest.DocTestRunnerz27z35z36z37z38z39z310j27j35j36j37j38j39j310rc
DIVIDERdoctest.DocTestRunner.DIVIDER
builtins.str"builtins.str*27*35*36*37*38*39*310rk
optionflags!doctest.DocTestRunner.optionflags
builtins.int"builtins.int*27*35*36*37*38*39*310r}
original_optionflags*doctest.DocTestRunner.original_optionflags
builtins.int"builtins.int*27*35*36*37*38*39*310r_
triesdoctest.DocTestRunner.tries
builtins.int"builtins.int*27*35*36*37*38*39*310re
failuresdoctest.DocTestRunner.failures
builtins.int"builtins.int*27*35*36*37*38*39*310rc
testdoctest.DocTestRunner.test"
doctest.DocTest"doctest.DocTest*27*35*36*37*38*39*310π
OutputCheckerdoctest.OutputChecker"builtins.object*ß
check_output"doctest.OutputChecker.check_output"
builtins.bool"builtins.bool*8
self.
doctest.OutputChecker"doctest.OutputChecker*&
want
builtins.str"builtins.str*%
got
builtins.str"builtins.str*-
optionflags
builtins.int"builtins.intz27z35z36z37z38z39z310*∏
output_difference'doctest.OutputChecker.output_difference"
builtins.str"builtins.str*8
self.
doctest.OutputChecker"doctest.OutputChecker*/
example"
doctest.Example"doctest.Example*%
got
builtins.str"builtins.str*-
optionflags
builtins.int"builtins.intz27z35z36z37z38z39z310j27j35j36j37j38j39j310†
DocTestFailuredoctest.DocTestFailure"builtins.Exception*î
__init__doctest.DocTestFailure.__init__"
None*:
self0
doctest.DocTestFailure"doctest.DocTestFailure*,
test"
doctest.DocTest"doctest.DocTest*/
example"
doctest.Example"doctest.Example*%
got
builtins.str"builtins.strz27z35z36z37z38z39z310j27j35j36j37j38j39j310rd
testdoctest.DocTestFailure.test"
doctest.DocTest"doctest.DocTest*27*35*36*37*38*39*310rj
exampledoctest.DocTestFailure.example"
doctest.Example"doctest.Example*27*35*36*37*38*39*310r\
gotdoctest.DocTestFailure.got
builtins.str"builtins.str*27*35*36*37*38*39*310è
UnexpectedExceptiondoctest.UnexpectedException"builtins.Exception*Ñ
__init__$doctest.UnexpectedException.__init__"
None*D
self:
doctest.UnexpectedException"doctest.UnexpectedException*,
test"
doctest.DocTest"doctest.DocTest*/
example"
doctest.Example"doctest.Example*Ö
exc_infoˆ
YTypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]]Ñ
NTuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseException*
types.TracebackType"types.TracebackType"doctest._ExcInfoz27z35z36z37z38z39z310j27j35j36j37j38j39j310ri
test doctest.UnexpectedException.test"
doctest.DocTest"doctest.DocTest*27*35*36*37*38*39*310ro
example#doctest.UnexpectedException.example"
doctest.Example"doctest.Example*27*35*36*37*38*39*310r∆
exc_info$doctest.UnexpectedException.exc_infoˆ
YTypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]]Ñ
NTuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseException*
types.TracebackType"types.TracebackType"doctest._ExcInfo*27*35*36*37*38*39*310V
DebugRunnerdoctest.DebugRunner"doctest.DocTestRunnerj27j35j36j37j38j39j310î
DocTestCasedoctest.DocTestCase"unittest.TestCase*Ï
__init__doctest.DocTestCase.__init__"
None*4
self*
doctest.DocTestCase"doctest.DocTestCase*,
test"
doctest.DocTest"doctest.DocTest*/
optionflags
builtins.int"builtins.int *î
setUpÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *ó
tearDownÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *n
checker_
!Union[doctest.OutputChecker,None].
doctest.OutputChecker"doctest.OutputChecker
None z27*f
setUpdoctest.DocTestCase.setUp"
None*4
self*
doctest.DocTestCase"doctest.DocTestCasez27*l
tearDowndoctest.DocTestCase.tearDown"
None*4
self*
doctest.DocTestCase"doctest.DocTestCasez27*j
runTestdoctest.DocTestCase.runTest"
None*4
self*
doctest.DocTestCase"doctest.DocTestCasez27*≥
format_failure"doctest.DocTestCase.format_failure"
builtins.str"builtins.str*4
self*
doctest.DocTestCase"doctest.DocTestCase*%
err
builtins.str"builtins.strz27*f
debugdoctest.DocTestCase.debug"
None*4
self*
doctest.DocTestCase"doctest.DocTestCasez27*t
iddoctest.DocTestCase.id"
builtins.str"builtins.str*4
self*
doctest.DocTestCase"doctest.DocTestCasez27*Ä
__hash__doctest.DocTestCase.__hash__"
builtins.int"builtins.int*4
self*
doctest.DocTestCase"doctest.DocTestCasez27*ê
shortDescription$doctest.DocTestCase.shortDescription"
builtins.str"builtins.str*4
self*
doctest.DocTestCase"doctest.DocTestCasez27j27Ì
DocTestCasedoctest.DocTestCase"unittest.case.TestCase*Å
__init__doctest.DocTestCase.__init__"
None*4
self*
doctest.DocTestCase"doctest.DocTestCase*,
test"
doctest.DocTest"doctest.DocTest*/
optionflags
builtins.int"builtins.int *î
setUpÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *ó
tearDownÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *n
checker_
!Union[doctest.OutputChecker,None].
doctest.OutputChecker"doctest.OutputChecker
None z35z36z37z38z39z310*{
setUpdoctest.DocTestCase.setUp"
None*4
self*
doctest.DocTestCase"doctest.DocTestCasez35z36z37z38z39z310*Å
tearDowndoctest.DocTestCase.tearDown"
None*4
self*
doctest.DocTestCase"doctest.DocTestCasez35z36z37z38z39z310*
runTestdoctest.DocTestCase.runTest"
None*4
self*
doctest.DocTestCase"doctest.DocTestCasez35z36z37z38z39z310*»
format_failure"doctest.DocTestCase.format_failure"
builtins.str"builtins.str*4
self*
doctest.DocTestCase"doctest.DocTestCase*%
err
builtins.str"builtins.strz35z36z37z38z39z310*{
debugdoctest.DocTestCase.debug"
None*4
self*
doctest.DocTestCase"doctest.DocTestCasez35z36z37z38z39z310*â
iddoctest.DocTestCase.id"
builtins.str"builtins.str*4
self*
doctest.DocTestCase"doctest.DocTestCasez35z36z37z38z39z310*ï
__hash__doctest.DocTestCase.__hash__"
builtins.int"builtins.int*4
self*
doctest.DocTestCase"doctest.DocTestCasez35z36z37z38z39z310*•
shortDescription$doctest.DocTestCase.shortDescription"
builtins.str"builtins.str*4
self*
doctest.DocTestCase"doctest.DocTestCasez35z36z37z38z39z310j35j36j37j38j39j310˛
SkipDocTestCasedoctest.SkipDocTestCase"doctest.DocTestCase*√
__init__ doctest.SkipDocTestCase.__init__"
None*<
self2
doctest.SkipDocTestCase"doctest.SkipDocTestCase*0
module$
types.ModuleType"types.ModuleTypez27z35z36z37z38z39z310*ã
setUpdoctest.SkipDocTestCase.setUp"
None*<
self2
doctest.SkipDocTestCase"doctest.SkipDocTestCasez27z35z36z37z38z39z310*ì
	test_skip!doctest.SkipDocTestCase.test_skip"
None*<
self2
doctest.SkipDocTestCase"doctest.SkipDocTestCasez27z35z36z37z38z39z310*µ
shortDescription(doctest.SkipDocTestCase.shortDescription"
builtins.str"builtins.str*<
self2
doctest.SkipDocTestCase"doctest.SkipDocTestCasez27z35z36z37z38z39z310j27j35j36j37j38j39j310≥
DocFileCasedoctest.DocFileCase"doctest.DocTestCase*ç
iddoctest.DocFileCase.id"
builtins.str"builtins.str*4
self*
doctest.DocFileCase"doctest.DocFileCasez27z35z36z37z38z39z310*Ã
format_failure"doctest.DocFileCase.format_failure"
builtins.str"builtins.str*4
self*
doctest.DocFileCase"doctest.DocFileCase*%
err
builtins.str"builtins.strz27z35z36z37z38z39z310j27j35j36j37j38j39j310Y
_DocTestSuitedoctest._DocTestSuite"unittest.suite.TestSuitej35j36j37j38j39j310ï
register_optionflagdoctest.register_optionflag"
builtins.int"builtins.int*&
name
builtins.str"builtins.strz27z35z36z37z38z39z310≥
testmoddoctest.testmod"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*Y
mP
Union[types.ModuleType,None]$
types.ModuleType"types.ModuleType
None *P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *†
globsí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *V
verboseG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *,
report
builtins.bool"builtins.bool */
optionflags
builtins.int"builtins.int *•

extraglobsí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *4
raise_on_error
builtins.bool"builtins.bool *3
exclude_empty
builtins.bool"builtins.bool z27z35z36z37z38z39z310©	
testfiledoctest.testfile"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int**
filename
builtins.str"builtins.str*5
module_relative
builtins.bool"builtins.bool *P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *ä
package{
)Union[None,builtins.str,types.ModuleType]
None
builtins.str"builtins.str$
types.ModuleType"types.ModuleType *†
globsí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *V
verboseG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *,
report
builtins.bool"builtins.bool */
optionflags
builtins.int"builtins.int *•

extraglobsí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *4
raise_on_error
builtins.bool"builtins.bool *<
parser.
doctest.DocTestParser"doctest.DocTestParser *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None z27z35z36z37z38z39z310“
run_docstring_examplesdoctest.run_docstring_examples"
None*)
f"
builtins.object"builtins.object*b
globsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*-
verbose
builtins.bool"builtins.bool *(
name
builtins.str"builtins.str *X
compileflagsD
Union[builtins.int,None]
builtins.int"builtins.int
None */
optionflags
builtins.int"builtins.int z27z35z36z37z38z39z310†
set_unittest_reportflags doctest.set_unittest_reportflags"
builtins.int"builtins.int*'
flags
builtins.int"builtins.intz27z35z36z37z38z39z310≥
DocTestSuitedoctest.DocTestSuite"(
unittest.TestSuite"unittest.TestSuite*â
module{
)Union[None,builtins.str,types.ModuleType]
None
builtins.str"builtins.str$
types.ModuleType"types.ModuleType *†
globsí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *•

extraglobsí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *r
test_finder_
!Union[doctest.DocTestFinder,None].
doctest.DocTestFinder"doctest.DocTestFinder
None *
options
Anyz27Œ
DocTestSuitedoctest.DocTestSuite".
doctest._DocTestSuite"doctest._DocTestSuite*â
module{
)Union[None,builtins.str,types.ModuleType]
None
builtins.str"builtins.str$
types.ModuleType"types.ModuleType *†
globsí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *•

extraglobsí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *r
test_finder_
!Union[doctest.DocTestFinder,None].
doctest.DocTestFinder"doctest.DocTestFinder
None *
options
Anyz35z36z37z38z39z310§
DocFileTestdoctest.DocFileTest"*
doctest.DocFileCase"doctest.DocFileCase*&
path
builtins.str"builtins.str*5
module_relative
builtins.bool"builtins.bool *ä
package{
)Union[None,builtins.str,types.ModuleType]
None
builtins.str"builtins.str$
types.ModuleType"types.ModuleType *†
globsí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *<
parser.
doctest.DocTestParser"doctest.DocTestParser *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *
options
Anyz27z35z36z37z38z39z310å
DocFileSuitedoctest.DocFileSuite"(
unittest.TestSuite"unittest.TestSuite*'
paths
builtins.str"builtins.str*
kw
Anyz27ß
DocFileSuitedoctest.DocFileSuite".
doctest._DocTestSuite"doctest._DocTestSuite*'
paths
builtins.str"builtins.str*
kw
Anyz35z36z37z38z39z310î
script_from_examplesdoctest.script_from_examples"
builtins.str"builtins.str*#
s
builtins.str"builtins.strz27z35z36z37z38z39z310ç

testsourcedoctest.testsource"
builtins.str"builtins.str*á
module{
)Union[None,builtins.str,types.ModuleType]
None
builtins.str"builtins.str$
types.ModuleType"types.ModuleType*&
name
builtins.str"builtins.strz27z35z36z37z38z39z310π
	debug_srcdoctest.debug_src"
None*%
src
builtins.str"builtins.str*(
pm
builtins.bool"builtins.bool *†
globsí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None z27z35z36z37z38z39z310ø
debug_scriptdoctest.debug_script"
None*%
src
builtins.str"builtins.str*(
pm
builtins.bool"builtins.bool *†
globsí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None z27z35z36z37z38z39z310ô
debugdoctest.debug"
None*á
module{
)Union[None,builtins.str,types.ModuleType]
None
builtins.str"builtins.str$
types.ModuleType"types.ModuleType*&
name
builtins.str"builtins.str*(
pm
builtins.bool"builtins.bool z27z35z36z37z38z39z310*∆
OPTIONFLAGS_BY_NAMEdoctest.OPTIONFLAGS_BY_NAMEu
(builtins.dict[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"builtins.dict*27*35*36*37*38*39*310*s
DONT_ACCEPT_TRUE_FOR_1doctest.DONT_ACCEPT_TRUE_FOR_1
builtins.int"builtins.int*27*35*36*37*38*39*310*q
DONT_ACCEPT_BLANKLINEdoctest.DONT_ACCEPT_BLANKLINE
builtins.int"builtins.int*27*35*36*37*38*39*310*o
NORMALIZE_WHITESPACEdoctest.NORMALIZE_WHITESPACE
builtins.int"builtins.int*27*35*36*37*38*39*310*W
ELLIPSISdoctest.ELLIPSIS
builtins.int"builtins.int*27*35*36*37*38*39*310*O
SKIPdoctest.SKIP
builtins.int"builtins.int*27*35*36*37*38*39*310*u
IGNORE_EXCEPTION_DETAILdoctest.IGNORE_EXCEPTION_DETAIL
builtins.int"builtins.int*27*35*36*37*38*39*310*g
COMPARISON_FLAGSdoctest.COMPARISON_FLAGS
builtins.int"builtins.int*27*35*36*37*38*39*310*_
REPORT_UDIFFdoctest.REPORT_UDIFF
builtins.int"builtins.int*27*35*36*37*38*39*310*_
REPORT_CDIFFdoctest.REPORT_CDIFF
builtins.int"builtins.int*27*35*36*37*38*39*310*_
REPORT_NDIFFdoctest.REPORT_NDIFF
builtins.int"builtins.int*27*35*36*37*38*39*310*y
REPORT_ONLY_FIRST_FAILURE!doctest.REPORT_ONLY_FIRST_FAILURE
builtins.int"builtins.int*27*35*36*37*38*39*310*e
REPORTING_FLAGSdoctest.REPORTING_FLAGS
builtins.int"builtins.int*27*35*36*37*38*39*310*g
BLANKLINE_MARKERdoctest.BLANKLINE_MARKER
builtins.str"builtins.str*27*35*36*37*38*39*310*e
ELLIPSIS_MARKERdoctest.ELLIPSIS_MARKER
builtins.str"builtins.str*27*35*36*37*38*39*310*ñ
masterdoctest.master_
!Union[doctest.DocTestRunner,None].
doctest.DocTestRunner"doctest.DocTestRunner
None*27*35*36*37*38*39*310*U
	FAIL_FASTdoctest.FAIL_FAST
builtins.int"builtins.int*35*36*37*38*39*310