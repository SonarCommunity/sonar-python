
filelockπÜ
Loggerlogging.Logger"logging.Filterer*Ã
__init__logging.Logger.__init__"
None**
self 
logging.Logger"logging.Logger*&
name
builtins.str"builtins.str*Ø
level°
+TypeAlias[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"logging._Level z35z36z37z38z39z310*¢
setLevellogging.Logger.setLevel"
None**
self 
logging.Logger"logging.Logger*≠
level°
+TypeAlias[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"logging._Levelz35z36z37z38z39z310*π
isEnabledForlogging.Logger.isEnabledFor"
builtins.bool"builtins.bool**
self 
logging.Logger"logging.Logger*'
level
builtins.int"builtins.intz35z36z37z38z39z310*ò
getEffectiveLevel logging.Logger.getEffectiveLevel"
builtins.int"builtins.int**
self 
logging.Logger"logging.Loggerz35z36z37z38z39z310*¥
getChildlogging.Logger.getChild" 
logging.Logger"logging.Logger**
self 
logging.Logger"logging.Logger*(
suffix
builtins.str"builtins.strz35z36z37z38z39z310*é
debuglogging.Logger.debug"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*ø
debuglogging.Logger.debug"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*å
infologging.Logger.info"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*Ω
infologging.Logger.info"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*í
warninglogging.Logger.warning"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*√
warninglogging.Logger.warning"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*å
warnlogging.Logger.warn"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*Ω
warnlogging.Logger.warn"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*é
errorlogging.Logger.error"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*ø
errorlogging.Logger.error"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*î
criticallogging.Logger.critical"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*≈
criticallogging.Logger.critical"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*≥
loglogging.Logger.log"
None**
self 
logging.Logger"logging.Logger*'
level
builtins.int"builtins.int*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*‰
loglogging.Logger.log"
None**
self 
logging.Logger"logging.Logger*'
level
builtins.int"builtins.int*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*ñ
	exceptionlogging.Logger.exception"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*«
	exceptionlogging.Logger.exception"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*∂

_loglogging.Logger._log"
None**
self 
logging.Logger"logging.Logger*'
level
builtins.int"builtins.int*
msg
Any*µ
args™
FTypeAlias[Union[builtins.tuple[Any],typing.Mapping[builtins.str,Any]]] 
;Union[builtins.tuple[Any],typing.Mapping[builtins.str,Any]].
builtins.tuple[Any]
Any"builtins.tupleY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"logging._ArgsType*é
exc_info˝
°Union[builtins.bool,Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None],builtins.BaseException,None]
builtins.bool"builtins.boolø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None0
builtins.BaseException"builtins.BaseException
None *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *0

stack_info
builtins.bool"builtins.bool z35z36z37*Á

_loglogging.Logger._log"
None**
self 
logging.Logger"logging.Logger*'
level
builtins.int"builtins.int*
msg
Any*µ
args™
FTypeAlias[Union[builtins.tuple[Any],typing.Mapping[builtins.str,Any]]] 
;Union[builtins.tuple[Any],typing.Mapping[builtins.str,Any]].
builtins.tuple[Any]
Any"builtins.tupleY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"logging._ArgsType*é
exc_info˝
°Union[builtins.bool,Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None],builtins.BaseException,None]
builtins.bool"builtins.boolø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None0
builtins.BaseException"builtins.BaseException
None *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int z38z39z310*∏
filterlogging.Logger.filter"
builtins.bool"builtins.bool**
self 
logging.Logger"logging.Logger*2
record&
logging.LogRecord"logging.LogRecordz35z36z37z38z39z310*§

addHandlerlogging.Logger.addHandler"
None**
self 
logging.Logger"logging.Logger*,
hdlr"
logging.Handler"logging.Handlerz35z36z37z38z39z310*™
removeHandlerlogging.Logger.removeHandler"
None**
self 
logging.Logger"logging.Logger*,
hdlr"
logging.Handler"logging.Handlerz35z36z37z38z39z310*˛

findCallerlogging.Logger.findCaller"Í
FTuple[builtins.str,builtins.int,builtins.str,Union[builtins.str,None]]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
None**
self 
logging.Logger"logging.Logger*0

stack_info
builtins.bool"builtins.bool z35z36z37*Ø

findCallerlogging.Logger.findCaller"Í
FTuple[builtins.str,builtins.int,builtins.str,Union[builtins.str,None]]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
None**
self 
logging.Logger"logging.Logger*0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int z38z39z310*¢
handlelogging.Logger.handle"
None**
self 
logging.Logger"logging.Logger*2
record&
logging.LogRecord"logging.LogRecordz35z36z37z38z39z310*ﬁ

makeRecordlogging.Logger.makeRecord"&
logging.LogRecord"logging.LogRecord**
self 
logging.Logger"logging.Logger*&
name
builtins.str"builtins.str*'
level
builtins.int"builtins.int*$
fn
builtins.str"builtins.str*%
lno
builtins.int"builtins.int*
msg
Any*µ
args™
FTypeAlias[Union[builtins.tuple[Any],typing.Mapping[builtins.str,Any]]] 
;Union[builtins.tuple[Any],typing.Mapping[builtins.str,Any]].
builtins.tuple[Any]
Any"builtins.tupleY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"logging._ArgsType*î
exc_infoÖ
|Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None],None]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None
None*P
funcD
Union[builtins.str,None]
builtins.str"builtins.str
None *£
extraï
,Union[typing.Mapping[builtins.str,Any],None]Y
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping
None *Q
sinfoD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39z310*é
hasHandlerslogging.Logger.hasHandlers"
builtins.bool"builtins.bool**
self 
logging.Logger"logging.Loggerz35z36z37z38z39z310*Æ
callHandlerslogging.Logger.callHandlers"
None**
self 
logging.Logger"logging.Logger*2
record&
logging.LogRecord"logging.LogRecordz35z36z37z38z39z310j35j36j37j38j39j310rR
namelogging.Logger.name
builtins.str"builtins.str*35*36*37*38*39*310rT
levellogging.Logger.level
builtins.int"builtins.int*35*36*37*38*39*310rÑ
parentlogging.Logger.parentJ
Union[logging.Logger,None] 
logging.Logger"logging.Logger
None*35*36*37*38*39*310r^
	propagatelogging.Logger.propagate
builtins.bool"builtins.bool*35*36*37*38*39*310rë
handlerslogging.Logger.handlersS
builtins.list[logging.Handler]"
logging.Handler"logging.Handler"builtins.list*35*36*37*38*39*310r\
disabledlogging.Logger.disabled
builtins.bool"builtins.bool*35*36*37*38*39*310r^
rootlogging.Logger.root(
logging.RootLogger"logging.RootLogger*35*36*37*38*39*310r^
managerlogging.Logger.manager"
logging.Manager"logging.Manager*35*36*37*38*39*310rÉ
fatallogging.Logger.fatalK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310ú

TracebackTypetypes.TracebackType"builtins.object*Õ
tb_nexttypes.TracebackType.tb_next"Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None*4
self*
types.TracebackType"types.TracebackType0:property`z35z36*©
tb_frametypes.TracebackType.tb_frame""
types.FrameType"types.FrameType*4
self*
types.TracebackType"types.TracebackType0:property`z35z36z37z38z39z310*£
tb_lastitypes.TracebackType.tb_lasti"
builtins.int"builtins.int*4
self*
types.TracebackType"types.TracebackType0:property`z35z36z37z38z39z310*•
	tb_linenotypes.TracebackType.tb_lineno"
builtins.int"builtins.int*4
self*
types.TracebackType"types.TracebackType0:property`z35z36z37z38z39z310*Ï
__init__types.TracebackType.__init__"
None*4
self*
types.TracebackType"types.TracebackType*f
tb_nextY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None*0
tb_frame"
types.FrameType"types.FrameType**
tb_lasti
builtins.int"builtins.int*+
	tb_lineno
builtins.int"builtins.intz37z38z39z310j35j36j37j38j39j310rí
tb_nexttypes.TracebackType.tb_nextY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None*37*38*39*310˛
Timeoutfilelock.Timeout"builtins.TimeoutError*•
__init__filelock.Timeout.__init__"
None*.
self$
filelock.Timeout"filelock.Timeout*+
	lock_file
builtins.str"builtins.strz35z36z37z38z39z310*à
__str__filelock.Timeout.__str__"
builtins.str"builtins.str*,
self$
filelock.Timeout"filelock.Timeoutz35z36z37z38z39z310j35j36j37j38j39j310
_Acquire_ReturnProxyfilelock._Acquire_ReturnProxy"builtins.object*«
__init__&filelock._Acquire_ReturnProxy.__init__"
None*H
self>
filelock._Acquire_ReturnProxy"filelock._Acquire_ReturnProxy*&
lock
builtins.str"builtins.strz35z36z37z38z39z310*≥
	__enter__'filelock._Acquire_ReturnProxy.__enter__"
builtins.str"builtins.str*F
self>
filelock._Acquire_ReturnProxy"filelock._Acquire_ReturnProxyz35z36z37z38z39z310*é
__exit__&filelock._Acquire_ReturnProxy.__exit__"
None*F
self>
filelock._Acquire_ReturnProxy"filelock._Acquire_ReturnProxy*ó
exc_typeä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*m
exc_valb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*f
	tracebackY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Nonez35z36z37z38z39z310j35j36j37j38j39j310π
BaseFileLockfilelock.BaseFileLock"builtins.object*ÿ
__init__filelock.BaseFileLock.__init__"
None*8
self.
filelock.BaseFileLock"filelock.BaseFileLock*+
	lock_file
builtins.str"builtins.str*°
timeoutë
/Union[builtins.float,builtins.int,builtins.str] 
builtins.float"builtins.float
builtins.int"builtins.int
builtins.str"builtins.str z35z36z37z38z39z310*´
	lock_filefilelock.BaseFileLock.lock_file"
builtins.str"builtins.str*8
self.
filelock.BaseFileLock"filelock.BaseFileLock0:property`z35z36z37z38z39z310*≠
	is_lockedfilelock.BaseFileLock.is_locked"
builtins.bool"builtins.bool*8
self.
filelock.BaseFileLock"filelock.BaseFileLock0:property`z35z36z37z38z39z310*Œ
acquirefilelock.BaseFileLock.acquire">
filelock._Acquire_ReturnProxy"filelock._Acquire_ReturnProxy*8
self.
filelock.BaseFileLock"filelock.BaseFileLock*Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *6
poll_intervall 
builtins.float"builtins.float z35z36z37z38z39z310*≤
releasefilelock.BaseFileLock.release"
None*8
self.
filelock.BaseFileLock"filelock.BaseFileLock*+
force
builtins.bool"builtins.bool z35z36z37z38z39z310*≠
	__enter__filelock.BaseFileLock.__enter__".
filelock.BaseFileLock"filelock.BaseFileLock*6
self.
filelock.BaseFileLock"filelock.BaseFileLockz35z36z37z38z39z310*ˆ
__exit__filelock.BaseFileLock.__exit__"
None*6
self.
filelock.BaseFileLock"filelock.BaseFileLock*ó
exc_typeä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*m
exc_valb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*f
	tracebackY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Nonez35z36z37z38z39z310*É
__del__filelock.BaseFileLock.__del__"
None*6
self.
filelock.BaseFileLock"filelock.BaseFileLockz35z36z37z38z39z3102˘
timeoutfilelock.BaseFileLock.timeoutî
timeoutfilelock.BaseFileLock.timeout" 
builtins.float"builtins.float*8
self.
filelock.BaseFileLock"filelock.BaseFileLock0:propertyX`û
timeoutfilelock.BaseFileLock.timeout"
None*8
self.
filelock.BaseFileLock"filelock.BaseFileLock*ù
valueë
/Union[builtins.int,builtins.str,builtins.float]
builtins.int"builtins.int
builtins.str"builtins.str 
builtins.float"builtins.float0:timeout.setter"35"36"37"38"39"310j35j36j37j38j39j310Å
WindowsFileLockfilelock.WindowsFileLock"filelock.BaseFileLock*ê
_acquire!filelock.WindowsFileLock._acquire"
None*>
self4
filelock.WindowsFileLock"filelock.WindowsFileLockz35z36z37z38z39z310*ê
_release!filelock.WindowsFileLock._release"
None*>
self4
filelock.WindowsFileLock"filelock.WindowsFileLockz35z36z37z38z39z310j35j36j37j38j39j310È
UnixFileLockfilelock.UnixFileLock"filelock.BaseFileLock*á
_acquirefilelock.UnixFileLock._acquire"
None*8
self.
filelock.UnixFileLock"filelock.UnixFileLockz35z36z37z38z39z310*á
_releasefilelock.UnixFileLock._release"
None*8
self.
filelock.UnixFileLock"filelock.UnixFileLockz35z36z37z38z39z310j35j36j37j38j39j310È
SoftFileLockfilelock.SoftFileLock"filelock.BaseFileLock*á
_acquirefilelock.SoftFileLock._acquire"
None*8
self.
filelock.SoftFileLock"filelock.SoftFileLockz35z36z37z38z39z310*á
_releasefilelock.SoftFileLock._release"
None*8
self.
filelock.SoftFileLock"filelock.SoftFileLockz35z36z37z38z39z310j35j36j37j38j39j310T
loggerfilelock.logger" 
logging.Logger"logging.Loggerz35z36z37z38z39z310*%
syssys *35*36*37*38*39*310*`
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*X
Typetyping.Type*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*Z
Uniontyping.Union*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310