
csvcsv8
excel	csv.excel"_csv.Dialectr27r35r36r37r38r39K
	excel_tabcsv.excel_tab"	csv.excel*_csv.Dialectr27r35r36r37r38r39◊!

DictReadercsv.DictReader"typing.Iterator*typing.Iterable2Ø
__iter__csv.DictReader.__iter__"4
csv.DictReader[csv._T]

csv._T"csv.DictReader*<
self4
csv.DictReader[csv._T]

csv._T"csv.DictReaderz27z35z36z37z38z392æ
nextcsv.DictReader.next"]
"builtins.dict[csv._T,builtins.str]

csv._T
builtins.str"builtins.str"builtins.dict*>
self4
csv.DictReader[csv._T]

csv._T"csv.DictReaderz272‚
__next__csv.DictReader.__next__"q
,collections.OrderedDict[csv._T,builtins.str]

csv._T
builtins.str"builtins.str"collections.OrderedDict*>
self4
csv.DictReader[csv._T]

csv._T"csv.DictReaderz35z36z372 
__next__csv.DictReader.__next__"]
"builtins.dict[csv._T,builtins.str]

csv._T
builtins.str"builtins.str"builtins.dict*>
self4
csv.DictReader[csv._T]

csv._T"csv.DictReaderz38z39:Æ
__init__csv.DictReader.__init__ä
__init__csv.DictReader.__init__"
None*>
self4
csv.DictReader[csv._T]

csv._T"csv.DictReader*a
fZ
!typing.Iterable[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Iterable*F

fieldnames6
typing.Sequence[csv._T]

csv._T"typing.Sequence*S
restkeyD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
restvalD
Union[builtins.str,None]
builtins.str"builtins.str
None *ë
dialectÅ
>TypeAlias[Union[builtins.str,_csv.Dialect,Type[_csv.Dialect]]]©
3Union[builtins.str,_csv.Dialect,Type[_csv.Dialect]]
builtins.str"builtins.str
_csv.Dialect"_csv.Dialect4
Type[_csv.Dialect]
_csv.Dialect"_csv.Dialect"_csv._DialectLike *
args
Any*
kwds
Any0:overloadX˜
__init__csv.DictReader.__init__"
None*V
selfL
csv.DictReader[builtins.str]
builtins.str"builtins.str"csv.DictReader*a
fZ
!typing.Iterable[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Iterable*ö

fieldnamesá
)Union[typing.Sequence[builtins.str],None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
None *S
restkeyD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
restvalD
Union[builtins.str,None]
builtins.str"builtins.str
None *ë
dialectÅ
>TypeAlias[Union[builtins.str,_csv.Dialect,Type[_csv.Dialect]]]©
3Union[builtins.str,_csv.Dialect,Type[_csv.Dialect]]
builtins.str"builtins.str
_csv.Dialect"_csv.Dialect4
Type[_csv.Dialect]
_csv.Dialect"_csv.Dialect"_csv._DialectLike *
args
Any*
kwds
Any0:overloadX"27:¶
__init__csv.DictReader.__init__˛
__init__csv.DictReader.__init__"
None*>
self4
csv.DictReader[csv._T]

csv._T"csv.DictReader*U
fN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable*F

fieldnames6
typing.Sequence[csv._T]

csv._T"typing.Sequence*S
restkeyD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
restvalD
Union[builtins.str,None]
builtins.str"builtins.str
None *ë
dialectÅ
>TypeAlias[Union[builtins.str,_csv.Dialect,Type[_csv.Dialect]]]©
3Union[builtins.str,_csv.Dialect,Type[_csv.Dialect]]
builtins.str"builtins.str
_csv.Dialect"_csv.Dialect4
Type[_csv.Dialect]
_csv.Dialect"_csv.Dialect"_csv._DialectLike *
args
Any*
kwds
Any0:overloadXÎ
__init__csv.DictReader.__init__"
None*V
selfL
csv.DictReader[builtins.str]
builtins.str"builtins.str"csv.DictReader*U
fN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable*ö

fieldnamesá
)Union[typing.Sequence[builtins.str],None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
None *S
restkeyD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
restvalD
Union[builtins.str,None]
builtins.str"builtins.str
None *ë
dialectÅ
>TypeAlias[Union[builtins.str,_csv.Dialect,Type[_csv.Dialect]]]©
3Union[builtins.str,_csv.Dialect,Type[_csv.Dialect]]
builtins.str"builtins.str
_csv.Dialect"_csv.Dialect4
Type[_csv.Dialect]
_csv.Dialect"_csv.Dialect"_csv._DialectLike *
args
Any*
kwds
Any0:overloadX"35"36"37"38"39Xr27r35r36r37r38r39¿

DictWritercsv.DictWriter"builtins.object2Ä
__init__csv.DictWriter.__init__"
None*>
self4
csv.DictWriter[csv._T]

csv._T"csv.DictWriter*
f
Any*F

fieldnames6
typing.Sequence[csv._T]

csv._T"typing.Sequence*5
restval&
Union[Any,None]
Any
None *0
extrasaction
builtins.str"builtins.str *ë
dialectÅ
>TypeAlias[Union[builtins.str,_csv.Dialect,Type[_csv.Dialect]]]©
3Union[builtins.str,_csv.Dialect,Type[_csv.Dialect]]
builtins.str"builtins.str
_csv.Dialect"_csv.Dialect4
Type[_csv.Dialect]
_csv.Dialect"_csv.Dialect"_csv._DialectLike *
args
Any*
kwds
Anyz27z35z36z37z38z392É
writeheadercsv.DictWriter.writeheader"
None*>
self4
csv.DictWriter[csv._T]

csv._T"csv.DictWriterz27z35z36z372z
writeheadercsv.DictWriter.writeheader"
Any*>
self4
csv.DictWriter[csv._T]

csv._T"csv.DictWriterz38z392‘
writerowcsv.DictWriter.writerow"
Any*>
self4
csv.DictWriter[csv._T]

csv._T"csv.DictWriter*N
rowdictA
typing.Mapping[csv._T,Any]

csv._T
Any"typing.Mappingz27z35z36z37z38z392ö
	writerowscsv.DictWriter.writerows"
None*>
self4
csv.DictWriter[csv._T]

csv._T"csv.DictWriter*ê
rowdictsÅ
+typing.Iterable[typing.Mapping[csv._T,Any]]A
typing.Mapping[csv._T,Any]

csv._T
Any"typing.Mapping"typing.Iterablez27z35z36z37z38z39Xr27r35r36r37r38r39Î
Sniffercsv.Sniffer"builtins.object2h
__init__csv.Sniffer.__init__"
None*$
self
csv.Sniffer"csv.Snifferz27z35z36z37z38z392ê
sniffcsv.Sniffer.sniff"4
Type[_csv.Dialect]
_csv.Dialect"_csv.Dialect*$
self
csv.Sniffer"csv.Sniffer*(
sample
builtins.str"builtins.str*V

delimitersD
Union[builtins.str,None]
builtins.str"builtins.str
None z27z35z36z37z38z392¨

has_headercsv.Sniffer.has_header"
builtins.bool"builtins.bool*$
self
csv.Sniffer"csv.Sniffer*(
sample
builtins.str"builtins.strz27z35z36z37z38z39r27r35r36r37r38r39B
unix_dialectcsv.unix_dialect"_csv.Dialectr35r36r37r38r39