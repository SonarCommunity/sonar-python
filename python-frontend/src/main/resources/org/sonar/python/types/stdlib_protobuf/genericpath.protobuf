
genericpathp
existsgenericpath.exists"
builtins.bool"builtins.bool*.
path$
builtins.unicode"builtins.unicodez27ô
existsgenericpath.exists"
builtins.bool"builtins.bool*¡
path∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39z310t
getsizegenericpath.getsize"
builtins.int"builtins.int*2
filename$
builtins.unicode"builtins.unicodez27ù
getsizegenericpath.getsize"
builtins.int"builtins.int*≈
filename∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39z310p
isfilegenericpath.isfile"
builtins.bool"builtins.bool*.
path$
builtins.unicode"builtins.unicodez27ô
isfilegenericpath.isfile"
builtins.bool"builtins.bool*¡
path∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39z310k
isdirgenericpath.isdir"
builtins.bool"builtins.bool*+
s$
builtins.unicode"builtins.unicodez27î
isdirgenericpath.isdir"
builtins.bool"builtins.bool*æ
s∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39z310z
getatimegenericpath.getatime" 
builtins.float"builtins.float*2
filename$
builtins.unicode"builtins.unicodez27£
getatimegenericpath.getatime" 
builtins.float"builtins.float*≈
filename∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39z310z
getmtimegenericpath.getmtime" 
builtins.float"builtins.float*2
filename$
builtins.unicode"builtins.unicodez27£
getmtimegenericpath.getmtime" 
builtins.float"builtins.float*≈
filename∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39z310z
getctimegenericpath.getctime" 
builtins.float"builtins.float*2
filename$
builtins.unicode"builtins.unicodez27£
getctimegenericpath.getctime" 
builtins.float"builtins.float*≈
filename∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39z310›
samefilegenericpath.samefile"
builtins.bool"builtins.bool*ø
f1∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*ø
f2∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39z310Ø
sameopenfilegenericpath.sameopenfile"
builtins.bool"builtins.bool*%
fp1
builtins.int"builtins.int*%
fp2
builtins.int"builtins.intz35z36z37z38z39z310≠
samestatgenericpath.samestat"
builtins.bool"builtins.bool*(
s1 
os.stat_result"os.stat_result*(
s2 
os.stat_result"os.stat_resultz35z36z37z38z39z310"º	
commonprefixgenericpath.commonprefix§
commonprefixgenericpath.commonprefix"î
-Union[builtins.str,Literal[builtins.unicode]]
builtins.str"builtins.strC
Literal[builtins.unicode]	$
builtins.unicode"builtins.unicode*U
mN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence0:overloadXø
commonprefixgenericpath.commonprefix"$
builtins.unicode"builtins.unicode*a
mZ
!typing.Sequence[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Sequence0:overloadXœ
commonprefixgenericpath.commonprefix"`
,typing.Sequence[_typeshed.SupportsLessThanT]
_typeshed.SupportsLessThanT"typing.Sequence*¥
m¨
;typing.Sequence[builtins.list[_typeshed.SupportsLessThanT]]\
*builtins.list[_typeshed.SupportsLessThanT]
_typeshed.SupportsLessThanT"builtins.list"typing.Sequence0:overloadX“
commonprefixgenericpath.commonprefix"`
,typing.Sequence[_typeshed.SupportsLessThanT]
_typeshed.SupportsLessThanT"typing.Sequence*∑
mØ
<typing.Sequence[builtins.tuple[_typeshed.SupportsLessThanT]]^
+builtins.tuple[_typeshed.SupportsLessThanT]
_typeshed.SupportsLessThanT"builtins.tuple"typing.Sequence0:overloadX"27"√
commonprefixgenericpath.commonprefixß
commonprefixgenericpath.commonprefix"
builtins.str"builtins.str*–
m»
Ityping.Sequence[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]]È
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath"typing.Sequence0:overloadXÆ
commonprefixgenericpath.commonprefix"ä
+Union[builtins.bytes,Literal[builtins.str]] 
builtins.bytes"builtins.bytes7
Literal[builtins.str]	
builtins.str"builtins.str*Ë
m‡
Mtyping.Sequence[TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]]]˝
<TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]]•
1Union[builtins.bytes,os.PathLike[builtins.bytes]] 
builtins.bytes"builtins.bytesL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.BytesPath"typing.Sequence0:overloadXœ
commonprefixgenericpath.commonprefix"`
,typing.Sequence[_typeshed.SupportsLessThanT]
_typeshed.SupportsLessThanT"typing.Sequence*¥
m¨
;typing.Sequence[builtins.list[_typeshed.SupportsLessThanT]]\
*builtins.list[_typeshed.SupportsLessThanT]
_typeshed.SupportsLessThanT"builtins.list"typing.Sequence0:overloadX“
commonprefixgenericpath.commonprefix"`
,typing.Sequence[_typeshed.SupportsLessThanT]
_typeshed.SupportsLessThanT"typing.Sequence*∑
mØ
<typing.Sequence[builtins.tuple[_typeshed.SupportsLessThanT]]^
+builtins.tuple[_typeshed.SupportsLessThanT]
_typeshed.SupportsLessThanT"builtins.tuple"typing.Sequence0:overloadX"35"36"37"38"39"310