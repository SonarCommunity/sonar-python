
datetime˘
tzinfodatetime.tzinfo"builtins.object*ˇ
tznamedatetime.tzinfo.tzname"D
Union[builtins.str,None]
builtins.str"builtins.str
None*,
self"
datetime.tzinfo"datetime.tzinfo*US
Union[datetime.datetime,None]&
datetime.datetime"datetime.datetime
None0:abstractmethod@*ó
	utcoffsetdatetime.tzinfo.utcoffset"V
Union[datetime.timedelta,None](
datetime.timedelta"datetime.timedelta
None*,
self"
datetime.tzinfo"datetime.tzinfo*US
Union[datetime.datetime,None]&
datetime.datetime"datetime.datetime
None0:abstractmethod@*ã
dstdatetime.tzinfo.dst"V
Union[datetime.timedelta,None](
datetime.timedelta"datetime.timedelta
None*,
self"
datetime.tzinfo"datetime.tzinfo*US
Union[datetime.datetime,None]&
datetime.datetime"datetime.datetime
None0:abstractmethod@*¢
fromutcdatetime.tzinfo.fromutc"&
datetime.datetime"datetime.datetime*,
self"
datetime.tzinfo"datetime.tzinfo*(&
datetime.datetime"datetime.datetime£
timezonedatetime.timezone"datetime.tzinfo*¬
__init__datetime.timezone.__init__"
None*0
self&
datetime.timezone"datetime.timezone*4
offset(
datetime.timedelta"datetime.timedelta*(
name
builtins.str"builtins.str *…
tznamedatetime.timezone.tzname"
builtins.str"builtins.str*0
self&
datetime.timezone"datetime.timezone*US
Union[datetime.datetime,None]&
datetime.datetime"datetime.datetime
None*€
	utcoffsetdatetime.timezone.utcoffset"(
datetime.timedelta"datetime.timedelta*0
self&
datetime.timezone"datetime.timezone*US
Union[datetime.datetime,None]&
datetime.datetime"datetime.datetime
None*Ø
dstdatetime.timezone.dst"
None*0
self&
datetime.timezone"datetime.timezone*US
Union[datetime.datetime,None]&
datetime.datetime"datetime.datetime
None8rD
utcdatetime.timezone.utc&
datetime.timezone"datetime.timezonerD
mindatetime.timezone.min&
datetime.timezone"datetime.timezonerD
maxdatetime.timezone.max&
datetime.timezone"datetime.timezone£(
datedatetime.date"builtins.object*·
__new__datetime.date.__new__"
datetime.date.Self*=
cls4
Type[datetime.date.Self]
datetime.date.Self*L
yearB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex*M
monthB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex*K
dayB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex*∏
fromtimestampdatetime.date.fromtimestamp"
datetime.date.Self*=
cls4
Type[datetime.date.Self]
datetime.date.Self*" 
builtins.float"builtins.float0:classmethodp*Ñ
todaydatetime.date.today"
datetime.date.Self*=
cls4
Type[datetime.date.Self]
datetime.date.Self0:classmethodp*∞
fromordinaldatetime.date.fromordinal"
datetime.date.Self*=
cls4
Type[datetime.date.Self]
datetime.date.Self*
builtins.int"builtins.int0:classmethodp*¥
fromisoformatdatetime.date.fromisoformat"
datetime.date.Self*=
cls4
Type[datetime.date.Self]
datetime.date.Self*
builtins.str"builtins.str0:classmethodp*è
fromisocalendardatetime.date.fromisocalendar"
datetime.date.Self*=
cls4
Type[datetime.date.Self]
datetime.date.Self*&
year
builtins.int"builtins.int*&
week
builtins.int"builtins.int*%
day
builtins.int"builtins.int0:classmethodp*p
yeardatetime.date.year"
builtins.int"builtins.int*(
self
datetime.date"datetime.date0:property`*r
monthdatetime.date.month"
builtins.int"builtins.int*(
self
datetime.date"datetime.date0:property`*n
daydatetime.date.day"
builtins.int"builtins.int*(
self
datetime.date"datetime.date0:property`*d
ctimedatetime.date.ctime"
builtins.str"builtins.str*(
self
datetime.date"datetime.date*ä
strftimedatetime.date.strftime"
builtins.str"builtins.str*(
self
datetime.date"datetime.date*
builtins.str"builtins.str*é

__format__datetime.date.__format__"
builtins.str"builtins.str*(
self
datetime.date"datetime.date*
builtins.str"builtins.str*l
	isoformatdatetime.date.isoformat"
builtins.str"builtins.str*(
self
datetime.date"datetime.date*˛
	timetupledatetime.date.timetuple"≠
ÜTypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]]ç
{Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int"time.struct_time*(
self
datetime.date"datetime.date*l
	toordinaldatetime.date.toordinal"
builtins.int"builtins.int*(
self
datetime.date"datetime.date* 
replacedatetime.date.replace"
datetime.date.Self* 
self
datetime.date.Self*N
yearB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex *O
monthB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex *M
dayB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex *Ç
__le__datetime.date.__le__"
builtins.bool"builtins.bool* 
datetime.date"datetime.date* 
datetime.date"datetime.date*Ç
__lt__datetime.date.__lt__"
builtins.bool"builtins.bool* 
datetime.date"datetime.date* 
datetime.date"datetime.date*Ç
__ge__datetime.date.__ge__"
builtins.bool"builtins.bool* 
datetime.date"datetime.date* 
datetime.date"datetime.date*Ç
__gt__datetime.date.__gt__"
builtins.bool"builtins.bool* 
datetime.date"datetime.date* 
datetime.date"datetime.date*~
__add__datetime.date.__add__"
datetime.date.Self*
datetime.date.Self**(
datetime.timedelta"datetime.timedelta*Ä
__radd__datetime.date.__radd__"
datetime.date.Self*
datetime.date.Self**(
datetime.timedelta"datetime.timedelta*h
weekdaydatetime.date.weekday"
builtins.int"builtins.int*(
self
datetime.date"datetime.date*n

isoweekdaydatetime.date.isoweekday"
builtins.int"builtins.int*(
self
datetime.date"datetime.date*‡
isocalendardatetime.date.isocalendar"ã
-Tuple[builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int*(
self
datetime.date"datetime.date2∫
__sub__datetime.date.__sub__å
__sub__datetime.date.__sub__"
datetime.date.Self*
datetime.date.Self**(
datetime.timedelta"datetime.timedelta0:overloadXà
__sub__datetime.date.__sub__"
NoReturn
* 
datetime.date"datetime.date*(&
datetime.datetime"datetime.datetime0:overloadX~
__sub__datetime.date.__sub__"(
datetime.timedelta"datetime.timedelta*
datetime._D*
datetime._D0:overloadXr8
mindatetime.date.min
datetime.date"datetime.dater8
maxdatetime.date.max
datetime.date"datetime.daterP

resolutiondatetime.date.resolution(
datetime.timedelta"datetime.timedeltaº
timedatetime.time"builtins.object*…
__new__datetime.time.__new__"
datetime.time.Self*=
cls4
Type[datetime.time.Self]
datetime.time.Self*N
hourB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex *P
minuteB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex *P
secondB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex *U
microsecondB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex *[
tzinfoM
Union[datetime.tzinfo,None]"
datetime.tzinfo"datetime.tzinfo
None *(
fold
builtins.int"builtins.int *p
hourdatetime.time.hour"
builtins.int"builtins.int*(
self
datetime.time"datetime.time0:property`*t
minutedatetime.time.minute"
builtins.int"builtins.int*(
self
datetime.time"datetime.time0:property`*t
seconddatetime.time.second"
builtins.int"builtins.int*(
self
datetime.time"datetime.time0:property`*~
microseconddatetime.time.microsecond"
builtins.int"builtins.int*(
self
datetime.time"datetime.time0:property`*•
tzinfodatetime.time.tzinfo"M
Union[datetime.tzinfo,None]"
datetime.tzinfo"datetime.tzinfo
None*(
self
datetime.time"datetime.time0:property`*p
folddatetime.time.fold"
builtins.int"builtins.int*(
self
datetime.time"datetime.time0:property`*Ç
__le__datetime.time.__le__"
builtins.bool"builtins.bool* 
datetime.time"datetime.time* 
datetime.time"datetime.time*Ç
__lt__datetime.time.__lt__"
builtins.bool"builtins.bool* 
datetime.time"datetime.time* 
datetime.time"datetime.time*Ç
__ge__datetime.time.__ge__"
builtins.bool"builtins.bool* 
datetime.time"datetime.time* 
datetime.time"datetime.time*Ç
__gt__datetime.time.__gt__"
builtins.bool"builtins.bool* 
datetime.time"datetime.time* 
datetime.time"datetime.time*ö
	isoformatdatetime.time.isoformat"
builtins.str"builtins.str*(
self
datetime.time"datetime.time*,
timespec
builtins.str"builtins.str *¥
fromisoformatdatetime.time.fromisoformat"
datetime.time.Self*=
cls4
Type[datetime.time.Self]
datetime.time.Self*
builtins.str"builtins.str0:classmethodp*ä
strftimedatetime.time.strftime"
builtins.str"builtins.str*(
self
datetime.time"datetime.time*
builtins.str"builtins.str*é

__format__datetime.time.__format__"
builtins.str"builtins.str*(
self
datetime.time"datetime.time*
builtins.str"builtins.str*¶
	utcoffsetdatetime.time.utcoffset"V
Union[datetime.timedelta,None](
datetime.timedelta"datetime.timedelta
None*(
self
datetime.time"datetime.time*é
tznamedatetime.time.tzname"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
datetime.time"datetime.time*ö
dstdatetime.time.dst"V
Union[datetime.timedelta,None](
datetime.timedelta"datetime.timedelta
None*(
self
datetime.time"datetime.time*¨
replacedatetime.time.replace"
datetime.time.Self* 
self
datetime.time.Self*N
hourB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex *P
minuteB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex *P
secondB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex *U
microsecondB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex *[
tzinfoM
Union[datetime.tzinfo,None]"
datetime.tzinfo"datetime.tzinfo
None *(
fold
builtins.int"builtins.int r8
mindatetime.time.min
datetime.time"datetime.timer8
maxdatetime.time.max
datetime.time"datetime.timerP

resolutiondatetime.time.resolution(
datetime.timedelta"datetime.timedeltaÊ$
	timedeltadatetime.timedelta"builtins.object*Â
__new__datetime.timedelta.__new__"
datetime.timedelta.Self*G
cls>
Type[datetime.timedelta.Self]
datetime.timedelta.Self*,
days 
builtins.float"builtins.float */
seconds 
builtins.float"builtins.float *4
microseconds 
builtins.float"builtins.float *4
milliseconds 
builtins.float"builtins.float */
minutes 
builtins.float"builtins.float *-
hours 
builtins.float"builtins.float *-
weeks 
builtins.float"builtins.float *
daysdatetime.timedelta.days"
builtins.int"builtins.int*2
self(
datetime.timedelta"datetime.timedelta0:property`*Ö
secondsdatetime.timedelta.seconds"
builtins.int"builtins.int*2
self(
datetime.timedelta"datetime.timedelta0:property`*è
microsecondsdatetime.timedelta.microseconds"
builtins.int"builtins.int*2
self(
datetime.timedelta"datetime.timedelta0:property`*á
total_seconds datetime.timedelta.total_seconds" 
builtins.float"builtins.float*2
self(
datetime.timedelta"datetime.timedelta*ß
__add__datetime.timedelta.__add__"(
datetime.timedelta"datetime.timedelta**(
datetime.timedelta"datetime.timedelta**(
datetime.timedelta"datetime.timedelta*©
__radd__datetime.timedelta.__radd__"(
datetime.timedelta"datetime.timedelta**(
datetime.timedelta"datetime.timedelta**(
datetime.timedelta"datetime.timedelta*ß
__sub__datetime.timedelta.__sub__"(
datetime.timedelta"datetime.timedelta**(
datetime.timedelta"datetime.timedelta**(
datetime.timedelta"datetime.timedelta*©
__rsub__datetime.timedelta.__rsub__"(
datetime.timedelta"datetime.timedelta**(
datetime.timedelta"datetime.timedelta**(
datetime.timedelta"datetime.timedelta*{
__neg__datetime.timedelta.__neg__"(
datetime.timedelta"datetime.timedelta**(
datetime.timedelta"datetime.timedelta*{
__pos__datetime.timedelta.__pos__"(
datetime.timedelta"datetime.timedelta**(
datetime.timedelta"datetime.timedelta*{
__abs__datetime.timedelta.__abs__"(
datetime.timedelta"datetime.timedelta**(
datetime.timedelta"datetime.timedelta*ü
__mul__datetime.timedelta.__mul__"(
datetime.timedelta"datetime.timedelta**(
datetime.timedelta"datetime.timedelta*" 
builtins.float"builtins.float*°
__rmul__datetime.timedelta.__rmul__"(
datetime.timedelta"datetime.timedelta**(
datetime.timedelta"datetime.timedelta*" 
builtins.float"builtins.float*ß
__mod__datetime.timedelta.__mod__"(
datetime.timedelta"datetime.timedelta**(
datetime.timedelta"datetime.timedelta**(
datetime.timedelta"datetime.timedelta*˜

__divmod__datetime.timedelta.__divmod__"r
&Tuple[builtins.int,datetime.timedelta]
builtins.int"builtins.int(
datetime.timedelta"datetime.timedelta**(
datetime.timedelta"datetime.timedelta**(
datetime.timedelta"datetime.timedelta*õ
__le__datetime.timedelta.__le__"
builtins.bool"builtins.bool**(
datetime.timedelta"datetime.timedelta**(
datetime.timedelta"datetime.timedelta*õ
__lt__datetime.timedelta.__lt__"
builtins.bool"builtins.bool**(
datetime.timedelta"datetime.timedelta**(
datetime.timedelta"datetime.timedelta*õ
__ge__datetime.timedelta.__ge__"
builtins.bool"builtins.bool**(
datetime.timedelta"datetime.timedelta**(
datetime.timedelta"datetime.timedelta*õ
__gt__datetime.timedelta.__gt__"
builtins.bool"builtins.bool**(
datetime.timedelta"datetime.timedelta**(
datetime.timedelta"datetime.timedelta*{
__bool__datetime.timedelta.__bool__"
builtins.bool"builtins.bool*2
self(
datetime.timedelta"datetime.timedelta2õ
__floordiv__datetime.timedelta.__floordiv__≥
__floordiv__datetime.timedelta.__floordiv__"
builtins.int"builtins.int**(
datetime.timedelta"datetime.timedelta**(
datetime.timedelta"datetime.timedelta0:overloadX≥
__floordiv__datetime.timedelta.__floordiv__"(
datetime.timedelta"datetime.timedelta**(
datetime.timedelta"datetime.timedelta*
builtins.int"builtins.int0:overloadX2ù
__truediv__datetime.timedelta.__truediv__µ
__truediv__datetime.timedelta.__truediv__" 
builtins.float"builtins.float**(
datetime.timedelta"datetime.timedelta**(
datetime.timedelta"datetime.timedelta0:overloadXµ
__truediv__datetime.timedelta.__truediv__"(
datetime.timedelta"datetime.timedelta**(
datetime.timedelta"datetime.timedelta*" 
builtins.float"builtins.float0:overloadXrG
mindatetime.timedelta.min(
datetime.timedelta"datetime.timedeltarG
maxdatetime.timedelta.max(
datetime.timedelta"datetime.timedeltarU

resolutiondatetime.timedelta.resolution(
datetime.timedelta"datetime.timedelta∫7
datetimedatetime.datetime"datetime.date*√
__new__datetime.datetime.__new__"
datetime.datetime.Self*E
cls<
Type[datetime.datetime.Self]
datetime.datetime.Self*L
yearB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex*M
monthB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex*K
dayB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex*N
hourB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex *P
minuteB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex *P
secondB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex *U
microsecondB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex *[
tzinfoM
Union[datetime.tzinfo,None]"
datetime.tzinfo"datetime.tzinfo
None *(
fold
builtins.int"builtins.int *|
hourdatetime.datetime.hour"
builtins.int"builtins.int*0
self&
datetime.datetime"datetime.datetime0:property`*Ä
minutedatetime.datetime.minute"
builtins.int"builtins.int*0
self&
datetime.datetime"datetime.datetime0:property`*Ä
seconddatetime.datetime.second"
builtins.int"builtins.int*0
self&
datetime.datetime"datetime.datetime0:property`*ä
microseconddatetime.datetime.microsecond"
builtins.int"builtins.int*0
self&
datetime.datetime"datetime.datetime0:property`*±
tzinfodatetime.datetime.tzinfo"M
Union[datetime.tzinfo,None]"
datetime.tzinfo"datetime.tzinfo
None*0
self&
datetime.datetime"datetime.datetime0:property`*|
folddatetime.datetime.fold"
builtins.int"builtins.int*0
self&
datetime.datetime"datetime.datetime0:property`*°
fromtimestampdatetime.datetime.fromtimestamp"
datetime.datetime.Self*E
cls<
Type[datetime.datetime.Self]
datetime.datetime.Self*" 
builtins.float"builtins.float*W
tzM
Union[datetime.tzinfo,None]"
datetime.tzinfo"datetime.tzinfo
None 0:classmethodp*Œ
utcfromtimestamp"datetime.datetime.utcfromtimestamp"
datetime.datetime.Self*E
cls<
Type[datetime.datetime.Self]
datetime.datetime.Self*" 
builtins.float"builtins.float0:classmethodp*È
nowdatetime.datetime.now"
datetime.datetime.Self*E
cls<
Type[datetime.datetime.Self]
datetime.datetime.Self*W
tzM
Union[datetime.tzinfo,None]"
datetime.tzinfo"datetime.tzinfo
None 0:classmethodp*ñ
utcnowdatetime.datetime.utcnow"
datetime.datetime.Self*E
cls<
Type[datetime.datetime.Self]
datetime.datetime.Self0:classmethodp*…
combinedatetime.datetime.combine"
datetime.datetime.Self*E
cls<
Type[datetime.datetime.Self]
datetime.datetime.Self*(
date
datetime.date"datetime.date*(
time
datetime.time"datetime.time*[
tzinfoM
Union[datetime.tzinfo,None]"
datetime.tzinfo"datetime.tzinfo
None 0:classmethodp*|
	timestampdatetime.datetime.timestamp" 
builtins.float"builtins.float*0
self&
datetime.datetime"datetime.datetime*ê
utctimetupledatetime.datetime.utctimetuple"≠
ÜTypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]]ç
{Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int"time.struct_time*0
self&
datetime.datetime"datetime.datetime*p
datedatetime.datetime.date"
datetime.date"datetime.date*0
self&
datetime.datetime"datetime.datetime*p
timedatetime.datetime.time"
datetime.time"datetime.time*0
self&
datetime.datetime"datetime.datetime*t
timetzdatetime.datetime.timetz"
datetime.time"datetime.time*0
self&
datetime.datetime"datetime.datetime*®
replacedatetime.datetime.replace"
datetime.datetime.Self*$
self
datetime.datetime.Self*N
yearB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex *O
monthB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex *M
dayB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex *N
hourB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex *P
minuteB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex *P
secondB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex *U
microsecondB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex *[
tzinfoM
Union[datetime.tzinfo,None]"
datetime.tzinfo"datetime.tzinfo
None *(
fold
builtins.int"builtins.int *≈

astimezonedatetime.datetime.astimezone"
datetime.datetime.Self*$
self
datetime.datetime.Self*W
tzM
Union[datetime.tzinfo,None]"
datetime.tzinfo"datetime.tzinfo
None *œ
	isoformatdatetime.datetime.isoformat"
builtins.str"builtins.str*0
self&
datetime.datetime"datetime.datetime*'
sep
builtins.str"builtins.str *,
timespec
builtins.str"builtins.str *⁄
strptimedatetime.datetime.strptime"
datetime.datetime.Self*E
cls<
Type[datetime.datetime.Self]
datetime.datetime.Self*
builtins.str"builtins.str*
builtins.str"builtins.str0:classmethodp*≤
	utcoffsetdatetime.datetime.utcoffset"V
Union[datetime.timedelta,None](
datetime.timedelta"datetime.timedelta
None*0
self&
datetime.datetime"datetime.datetime*ö
tznamedatetime.datetime.tzname"D
Union[builtins.str,None]
builtins.str"builtins.str
None*0
self&
datetime.datetime"datetime.datetime*¶
dstdatetime.datetime.dst"V
Union[datetime.timedelta,None](
datetime.timedelta"datetime.timedelta
None*0
self&
datetime.datetime"datetime.datetime*ñ
__le__datetime.datetime.__le__"
builtins.bool"builtins.bool*(&
datetime.datetime"datetime.datetime*(&
datetime.datetime"datetime.datetime*ñ
__lt__datetime.datetime.__lt__"
builtins.bool"builtins.bool*(&
datetime.datetime"datetime.datetime*(&
datetime.datetime"datetime.datetime*ñ
__ge__datetime.datetime.__ge__"
builtins.bool"builtins.bool*(&
datetime.datetime"datetime.datetime*(&
datetime.datetime"datetime.datetime*ñ
__gt__datetime.datetime.__gt__"
builtins.bool"builtins.bool*(&
datetime.datetime"datetime.datetime*(&
datetime.datetime"datetime.datetime2ƒ
__sub__datetime.datetime.__sub__ò
__sub__datetime.datetime.__sub__"
datetime.datetime.Self*
datetime.datetime.Self**(
datetime.timedelta"datetime.timedelta0:overloadXÇ
__sub__datetime.datetime.__sub__"(
datetime.timedelta"datetime.timedelta*
datetime._D*
datetime._D0:overloadXrD
mindatetime.datetime.min&
datetime.datetime"datetime.datetimerD
maxdatetime.datetime.max&
datetime.datetime"datetime.datetime*Ñ
__annotations__datetime.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*T
MINYEARdatetime.MINYEAR7
Literal[builtins.int]	
builtins.int"builtins.int*T
MAXYEARdatetime.MAXYEAR7
Literal[builtins.int]	
builtins.int"builtins.int