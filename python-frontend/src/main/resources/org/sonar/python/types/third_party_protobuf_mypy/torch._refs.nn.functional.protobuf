
torch._refs.nn.functionalÍ
_dropout_helper)torch._refs.nn.functional._dropout_helper",
torch._tensor.Tensor"torch._tensor.Tensor*6
self,
torch._tensor.Tensor"torch._tensor.Tensor*)
val 
builtins.float"builtins.floatF
_inplace_wrapper*torch._refs.nn.functional._inplace_wrapper*
fnÊ

group_norm$torch._refs.nn.functional.group_norm",
torch._tensor.Tensor"torch._tensor.Tensor*7
input,
torch._tensor.Tensor"torch._tensor.Tensor*,

num_groups
builtins.int"builtins.int*j
weight\
 Union[torch._tensor.Tensor,None],
torch._tensor.Tensor"torch._tensor.Tensor
None *h
bias\
 Union[torch._tensor.Tensor,None],
torch._tensor.Tensor"torch._tensor.Tensor
None *+
eps 
builtins.float"builtins.float ¿

layer_norm$torch._refs.nn.functional.layer_norm",
torch._tensor.Tensor"torch._tensor.Tensor*7
input,
torch._tensor.Tensor"torch._tensor.Tensor* 
normalized_shape‰
XTypeAlias[Union[torch._C.Size,builtins.list[builtins.int],builtins.tuple[builtins.int]]]‹
MUnion[torch._C.Size,builtins.list[builtins.int],builtins.tuple[builtins.int]]
torch._C.Size"torch._C.SizeJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.listL
builtins.tuple[builtins.int]
builtins.int"builtins.int"builtins.tuple"torch._prims_common.ShapeType*j
weight\
 Union[torch._tensor.Tensor,None],
torch._tensor.Tensor"torch._tensor.Tensor
None *h
bias\
 Union[torch._tensor.Tensor,None],
torch._tensor.Tensor"torch._tensor.Tensor
None *+
eps 
builtins.float"builtins.float ê
softmax!torch._refs.nn.functional.softmax",
torch._tensor.Tensor"torch._tensor.Tensor*3
a,
torch._tensor.Tensor"torch._tensor.Tensor*O
dimD
Union[builtins.int,None]
builtins.int"builtins.int
None */
_stacklevel
builtins.int"builtins.int *W
dtypeJ
Union[torch._C.dtype,None] 
torch._C.dtype"torch._C.dtype
None ê
softmin!torch._refs.nn.functional.softmin",
torch._tensor.Tensor"torch._tensor.Tensor*3
a,
torch._tensor.Tensor"torch._tensor.Tensor*O
dimD
Union[builtins.int,None]
builtins.int"builtins.int
None */
_stacklevel
builtins.int"builtins.int *W
dtypeJ
Union[torch._C.dtype,None] 
torch._C.dtype"torch._C.dtype
None “
_reduction_int_to_str/torch._refs.nn.functional._reduction_int_to_str"
builtins.str"builtins.str*+
	reduction
builtins.int"builtins.intÛ
_apply_loss_reduction/torch._refs.nn.functional._apply_loss_reduction",
torch._tensor.Tensor"torch._tensor.Tensor*6
loss,
torch._tensor.Tensor"torch._tensor.Tensor*+
	reduction
builtins.str"builtins.str€
_check_reduction_value0torch._refs.nn.functional._check_reduction_value"
Any*+
	reduction
builtins.str"builtins.strž
_get_string_reduction_arg3torch._refs.nn.functional._get_string_reduction_arg"
builtins.str"builtins.str*Y
size_averageG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*S
reduceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
Noneò
log_softmax%torch._refs.nn.functional.log_softmax",
torch._tensor.Tensor"torch._tensor.Tensor*3
a,
torch._tensor.Tensor"torch._tensor.Tensor*O
dimD
Union[builtins.int,None]
builtins.int"builtins.int
None */
_stacklevel
builtins.int"builtins.int *W
dtypeJ
Union[torch._C.dtype,None] 
torch._C.dtype"torch._C.dtype
None ž
_nll_loss_nd&torch._refs.nn.functional._nll_loss_nd",
torch._tensor.Tensor"torch._tensor.Tensor*7
input,
torch._tensor.Tensor"torch._tensor.Tensor*8
target,
torch._tensor.Tensor"torch._tensor.Tensor*h
weight\
 Union[torch._tensor.Tensor,None],
torch._tensor.Tensor"torch._tensor.Tensor
None*+
	reduction
builtins.str"builtins.str*.
ignore_index
builtins.int"builtins.int»
triplet_margin_loss-torch._refs.nn.functional.triplet_margin_loss",
torch._tensor.Tensor"torch._tensor.Tensor*8
anchor,
torch._tensor.Tensor"torch._tensor.Tensor*:
positive,
torch._tensor.Tensor"torch._tensor.Tensor*:
negative,
torch._tensor.Tensor"torch._tensor.Tensor*.
margin 
builtins.float"builtins.float *)
p 
builtins.float"builtins.float *+
eps 
builtins.float"builtins.float **
swap
builtins.bool"builtins.bool *[
size_averageG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *U
reduceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *-
	reduction
builtins.str"builtins.str ð
"_triplet_margin_with_distance_loss<torch._refs.nn.functional._triplet_margin_with_distance_loss",
torch._tensor.Tensor"torch._tensor.Tensor*8
anchor,
torch._tensor.Tensor"torch._tensor.Tensor*:
positive,
torch._tensor.Tensor"torch._tensor.Tensor*:
negative,
torch._tensor.Tensor"torch._tensor.Tensor* 
distance_function†
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *.
margin 
builtins.float"builtins.float **
swap
builtins.bool"builtins.bool *-
	reduction
builtins.str"builtins.str *z
__path__"torch._refs.nn.functional.__path__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*•
__annotations__)torch._refs.nn.functional.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
primstorch._prims *
utilstorch._prims_common *
refstorch._refs *x
__all__!torch._refs.nn.functional.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*/
atentorch._refs.nn.functional.aten
Any*1
celu_torch._refs.nn.functional.celu_
Any*/
elu_torch._refs.nn.functional.elu_
Any*1
mish_torch._refs.nn.functional.mish_
Any*1
selu_torch._refs.nn.functional.selu_
Any*;

threshold_$torch._refs.nn.functional.threshold_
Any