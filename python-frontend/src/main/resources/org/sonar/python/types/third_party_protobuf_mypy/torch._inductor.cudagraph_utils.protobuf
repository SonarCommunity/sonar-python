
torch._inductor.cudagraph_utilsË

FunctionID*torch._inductor.cudagraph_utils.FunctionID"builtins.object*”
__init__3torch._inductor.cudagraph_utils.FunctionID.__init__"
None*b
selfX
*torch._inductor.cudagraph_utils.FunctionID"*torch._inductor.cudagraph_utils.FunctionID*$
id
builtins.int"builtins.int8rQ
id-torch._inductor.cudagraph_utils.FunctionID.id
builtins.int"builtins.intrÒ
__dataclass_fields__?torch._inductor.cudagraph_utils.FunctionID.__dataclass_fields__ó
2builtins.dict[builtins.str,dataclasses.Field[Any]]
builtins.str"builtins.str4
dataclasses.Field[Any]
Any"dataclasses.Field"builtins.dictæ
WrappedFunction/torch._inductor.cudagraph_utils.WrappedFunction"builtins.object*¢
__init__8torch._inductor.cudagraph_utils.WrappedFunction.__init__"
None*l
selfb
/torch._inductor.cudagraph_utils.WrappedFunction"/torch._inductor.cudagraph_utils.WrappedFunction*V
modelK
CallableType[builtins.function]&
builtins.function"builtins.function*a
static_input_idxsJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*`
idX
*torch._inductor.cudagraph_utils.FunctionID"*torch._inductor.cudagraph_utils.FunctionID*s
	constantsd
$builtins.tuple[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"builtins.tuple*n
placeholders\
!builtins.list[torch.fx.node.Node](
torch.fx.node.Node"torch.fx.node.Node"builtins.list*b
mutated_input_idxsJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list8rã
model5torch._inductor.cudagraph_utils.WrappedFunction.modelK
CallableType[builtins.function]&
builtins.function"builtins.functionr¢
static_input_idxsAtorch._inductor.cudagraph_utils.WrappedFunction.static_input_idxsJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.listrí
id2torch._inductor.cudagraph_utils.WrappedFunction.idX
*torch._inductor.cudagraph_utils.FunctionID"*torch._inductor.cudagraph_utils.FunctionIDr¨
	constants9torch._inductor.cudagraph_utils.WrappedFunction.constantsd
$builtins.tuple[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"builtins.tupler™
placeholders<torch._inductor.cudagraph_utils.WrappedFunction.placeholders\
!builtins.list[torch.fx.node.Node](
torch.fx.node.Node"torch.fx.node.Node"builtins.listr§
mutated_input_idxsBtorch._inductor.cudagraph_utils.WrappedFunction.mutated_input_idxsJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.listrˆ
__dataclass_fields__Dtorch._inductor.cudagraph_utils.WrappedFunction.__dataclass_fields__ó
2builtins.dict[builtins.str,dataclasses.Field[Any]]
builtins.str"builtins.str4
dataclasses.Field[Any]
Any"dataclasses.Field"builtins.dict˘
BoxedDeviceIndex0torch._inductor.cudagraph_utils.BoxedDeviceIndex"builtins.object*ä
set4torch._inductor.cudagraph_utils.BoxedDeviceIndex.set"
Any*n
selfd
0torch._inductor.cudagraph_utils.BoxedDeviceIndex"0torch._inductor.cudagraph_utils.BoxedDeviceIndex*T

device_idxD
Union[builtins.int,None]
builtins.int"builtins.int
None*ê
__init__9torch._inductor.cudagraph_utils.BoxedDeviceIndex.__init__"
None*n
selfd
0torch._inductor.cudagraph_utils.BoxedDeviceIndex"0torch._inductor.cudagraph_utils.BoxedDeviceIndex*O
valueD
Union[builtins.int,None]
builtins.int"builtins.int
None8rÖ
value6torch._inductor.cudagraph_utils.BoxedDeviceIndex.valueD
Union[builtins.int,None]
builtins.int"builtins.int
Noner˜
__dataclass_fields__Etorch._inductor.cudagraph_utils.BoxedDeviceIndex.__dataclass_fields__ó
2builtins.dict[builtins.str,dataclasses.Field[Any]]
builtins.str"builtins.str4
dataclasses.Field[Any]
Any"dataclasses.Field"builtins.dict€
get_placeholders0torch._inductor.cudagraph_utils.get_placeholders"\
!builtins.list[torch.fx.node.Node](
torch.fx.node.Node"torch.fx.node.Node"builtins.list*7
graph,
torch.fx.graph.Graph"torch.fx.graph.Graph‚
get_mutating_use_stack_trace<torch._inductor.cudagraph_utils.get_mutating_use_stack_trace"D
Union[builtins.str,None]
builtins.str"builtins.str
None*>
placeholder_node(
torch.fx.node.Node"torch.fx.node.Node¢
format_default_skip_message;torch._inductor.cudagraph_utils.format_default_skip_message"
builtins.str"builtins.str*(
reason
builtins.str"builtins.strƒ
get_mutation_stack_trace8torch._inductor.cudagraph_utils.get_mutation_stack_trace"
builtins.str"builtins.str*n
placeholders\
!builtins.list[torch.fx.node.Node](
torch.fx.node.Node"torch.fx.node.Node"builtins.list*`
mutation_indicesJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list‹
check_for_mutation2torch._inductor.cudagraph_utils.check_for_mutation"D
Union[builtins.str,None]
builtins.str"builtins.str
None*l
funcb
/torch._inductor.cudagraph_utils.WrappedFunction"/torch._inductor.cudagraph_utils.WrappedFunction*n
inputsb
#builtins.list[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"builtins.list*n
is_cuda_graph_recorded_tensorK
CallableType[builtins.function]&
builtins.function"builtins.function£
get_use_stack_trace3torch._inductor.cudagraph_utils.get_use_stack_trace"D
Union[builtins.str,None]
builtins.str"builtins.str
None*
node
AnyÂ
'check_multiple_devices_or_any_cpu_nodesGtorch._inductor.cudagraph_utils.check_multiple_devices_or_any_cpu_nodes"D
Union[builtins.str,None]
builtins.str"builtins.str
None*™
device_node_mappingê
1builtins.dict[torch._C.device,torch.fx.node.Node]"
torch._C.device"torch._C.device(
torch.fx.node.Node"torch.fx.node.Node"builtins.dictö
 check_lowering_disable_cudagraph@torch._inductor.cudagraph_utils.check_lowering_disable_cudagraph"
Any*™
device_node_mappingê
1builtins.dict[torch._C.device,torch.fx.node.Node]"
torch._C.device"torch._C.device(
torch.fx.node.Node"torch.fx.node.Node"builtins.dicts
#log_cudagraph_skip_and_bump_counterCtorch._inductor.cudagraph_utils.log_cudagraph_skip_and_bump_counter*
msg†
3check_for_mutation_ignore_cuda_graph_managed_tensorStorch._inductor.cudagraph_utils.check_for_mutation_ignore_cuda_graph_managed_tensor"D
Union[builtins.str,None]
builtins.str"builtins.str
None*N
gmF
!torch.fx.graph_module.GraphModule"!torch.fx.graph_module.GraphModule*
compiled_graph
Any*a
static_input_idxsJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list€
get_placeholder_stack_trace;torch._inductor.cudagraph_utils.get_placeholder_stack_trace"D
Union[builtins.str,None]
builtins.str"builtins.str
None*9
placeholder(
torch.fx.node.Node"torch.fx.node.Node*õ
__annotations__/torch._inductor.cudagraph_utils.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*G
perf_hint_log-torch._inductor.cudagraph_utils.perf_hint_log
Any