
_pytest.tmpdirÚ
TempPathFactory_pytest.tmpdir.TempPathFactory"builtins.object*þ
__init__'_pytest.tmpdir.TempPathFactory.__init__"
None*J
self@
_pytest.tmpdir.TempPathFactory"_pytest.tmpdir.TempPathFactory*X
given_basetempD
Union[pathlib.Path,None]
pathlib.Path"pathlib.Path
None*
trace
Any*T
basetempD
Union[pathlib.Path,None]
pathlib.Path"pathlib.Path
None */
	_ispytest
builtins.bool"builtins.bool *ô
from_config*_pytest.tmpdir.TempPathFactory.from_config"@
_pytest.tmpdir.TempPathFactory"_pytest.tmpdir.TempPathFactory*y
clsp
$Type[_pytest.tmpdir.TempPathFactory]@
_pytest.tmpdir.TempPathFactory"_pytest.tmpdir.TempPathFactory"type*:
config.
_pytest.config.Config"_pytest.config.Config*/
	_ispytest
builtins.bool"builtins.bool 0:classmethodp*ñ
_ensure_relative_to_basetemp;_pytest.tmpdir.TempPathFactory._ensure_relative_to_basetemp"
builtins.str"builtins.str*J
self@
_pytest.tmpdir.TempPathFactory"_pytest.tmpdir.TempPathFactory**
basename
builtins.str"builtins.str*õ
mktemp%_pytest.tmpdir.TempPathFactory.mktemp"
pathlib.Path"pathlib.Path*J
self@
_pytest.tmpdir.TempPathFactory"_pytest.tmpdir.TempPathFactory**
basename
builtins.str"builtins.str*.
numbered
builtins.bool"builtins.bool *£
getbasetemp*_pytest.tmpdir.TempPathFactory.getbasetemp"
pathlib.Path"pathlib.Path*J
self@
_pytest.tmpdir.TempPathFactory"_pytest.tmpdir.TempPathFactory*×
__attrs_init__-_pytest.tmpdir.TempPathFactory.__attrs_init__"
None*J
self@
_pytest.tmpdir.TempPathFactory"_pytest.tmpdir.TempPathFactory*X
given_basetempD
Union[pathlib.Path,None]
pathlib.Path"pathlib.Path
None*
trace
Any*R
basetempD
Union[pathlib.Path,None]
pathlib.Path"pathlib.Path
None*ž
__lt__%_pytest.tmpdir.TempPathFactory.__lt__"
builtins.bool"builtins.bool*e
self[
"_pytest.tmpdir.TempPathFactory._AT"
builtins.object"builtins.object"builtins.object*f
other[
"_pytest.tmpdir.TempPathFactory._AT"
builtins.object"builtins.object"builtins.object*ž
__le__%_pytest.tmpdir.TempPathFactory.__le__"
builtins.bool"builtins.bool*e
self[
"_pytest.tmpdir.TempPathFactory._AT"
builtins.object"builtins.object"builtins.object*f
other[
"_pytest.tmpdir.TempPathFactory._AT"
builtins.object"builtins.object"builtins.object*ž
__gt__%_pytest.tmpdir.TempPathFactory.__gt__"
builtins.bool"builtins.bool*e
self[
"_pytest.tmpdir.TempPathFactory._AT"
builtins.object"builtins.object"builtins.object*f
other[
"_pytest.tmpdir.TempPathFactory._AT"
builtins.object"builtins.object"builtins.object*ž
__ge__%_pytest.tmpdir.TempPathFactory.__ge__"
builtins.bool"builtins.bool*e
self[
"_pytest.tmpdir.TempPathFactory._AT"
builtins.object"builtins.object"builtins.object*f
other[
"_pytest.tmpdir.TempPathFactory._AT"
builtins.object"builtins.object"builtins.object8r‡
_given_basetemp._pytest.tmpdir.TempPathFactory._given_basetempD
Union[pathlib.Path,None]
pathlib.Path"pathlib.Path
Noner8
_trace%_pytest.tmpdir.TempPathFactory._trace
Anyr{
	_basetemp(_pytest.tmpdir.TempPathFactory._basetempD
Union[pathlib.Path,None]
pathlib.Path"pathlib.Path
Nonerê
__attrs_attrs__._pytest.tmpdir.TempPathFactory.__attrs_attrs__¦
lTuple[attr.Attribute[Union[pathlib.Path,None]],attr.Attribute[Any],attr.Attribute[Union[pathlib.Path,None]]]€
(attr.Attribute[Union[pathlib.Path,None]]D
Union[pathlib.Path,None]
pathlib.Path"pathlib.Path
None"attr.Attribute.
attr.Attribute[Any]
Any"attr.Attribute€
(attr.Attribute[Union[pathlib.Path,None]]D
Union[pathlib.Path,None]
pathlib.Path"pathlib.Path
None"attr.Attributei
get_user_pytest.tmpdir.get_user"D
Union[builtins.str,None]
builtins.str"builtins.str
Noney
pytest_configure_pytest.tmpdir.pytest_configure"
None*:
config.
_pytest.config.Config"_pytest.config.Configß
_mk_tmp_pytest.tmpdir._mk_tmp"
pathlib.Path"pathlib.Path*O
requestB
_pytest.fixtures.FixtureRequest"_pytest.fixtures.FixtureRequest*M
factory@
_pytest.tmpdir.TempPathFactory"_pytest.tmpdir.TempPathFactory*Š
__annotations___pytest.tmpdir.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict