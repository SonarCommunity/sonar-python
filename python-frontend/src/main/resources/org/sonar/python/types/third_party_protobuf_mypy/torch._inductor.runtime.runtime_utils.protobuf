
%torch._inductor.runtime.runtime_utilsZ
conditional_product9torch._inductor.runtime.runtime_utils.conditional_product*
args®
ceildiv-torch._inductor.runtime.runtime_utils.ceildiv"
builtins.int"builtins.int*'
numer
builtins.int"builtins.int*'
denom
builtins.int"builtins.intã
next_power_of_25torch._inductor.runtime.runtime_utils.next_power_of_2"
builtins.int"builtins.int*#
n
builtins.int"builtins.intœ
get_num_bytes3torch._inductor.runtime.runtime_utils.get_num_bytes"
builtins.int"builtins.int*6
args,
torch._tensor.Tensor"torch._tensor.Tensor*3
num_in_out_args
builtins.int"builtins.int e
triton_config_to_hashable?torch._inductor.runtime.runtime_utils.triton_config_to_hashable*
cfgß
create_bandwidth_info_str?torch._inductor.runtime.runtime_utils.create_bandwidth_info_str*
ms*

num_gb*
gb_per_s*
prefix *
suffix *
color F
get_max_y_grid4torch._inductor.runtime.runtime_utils.get_max_y_gridj
do_bench.torch._inductor.runtime.runtime_utils.do_bench*
fn*
fn_args*
	fn_kwargs*

kwargsX
do_bench_gpu2torch._inductor.runtime.runtime_utils.do_bench_gpu*
args*

kwargse
do_bench_cpu2torch._inductor.runtime.runtime_utils.do_bench_cpu*
fn*
warmup *
times Z
	cache_dir/torch._inductor.runtime.runtime_utils.cache_dir"
builtins.str"builtins.strT
_color_text1torch._inductor.runtime.runtime_utils._color_text*
msg*	
colorG

green_text0torch._inductor.runtime.runtime_utils.green_text*
msgI
yellow_text1torch._inductor.runtime.runtime_utils.yellow_text*
msgC
red_text.torch._inductor.runtime.runtime_utils.red_text*
msgE
	blue_text/torch._inductor.runtime.runtime_utils.blue_text*
msgZ
get_first_attr4torch._inductor.runtime.runtime_utils.get_first_attr*
obj*	
attrsä
dynamo_timed-redefinition2torch._inductor.runtime.runtime_utils.dynamo_timed*
original_function *

phase_name *
fwd_only *°
__annotations__5torch._inductor.runtime.runtime_utils.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*b
HAS_COLORAMA2torch._inductor.runtime.runtime_utils.HAS_COLORAMA
builtins.bool"builtins.bool*C
colorama.torch._inductor.runtime.runtime_utils.colorama
Any*è
dynamo_timed2torch._inductor.runtime.runtime_utils.dynamo_timedK
CallableType[builtins.function]&
builtins.function"builtins.function