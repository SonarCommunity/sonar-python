
lib2to3.fixes.fix_idioms—	
	FixIdioms"lib2to3.fixes.fix_idioms.FixIdioms"builtins.object*_
match(lib2to3.fixes.fix_idioms.FixIdioms.match*
self*
nodez36z37z38z39z310z311*t
	transform,lib2to3.fixes.fix_idioms.FixIdioms.transform*
self*
node*
resultsz36z37z38z39z310z311*Š
transform_isinstance7lib2to3.fixes.fix_idioms.FixIdioms.transform_isinstance*
self*
node*
resultsz36z37z38z39z310z311*æ
transform_while2lib2to3.fixes.fix_idioms.FixIdioms.transform_while"
None*R
selfH
"lib2to3.fixes.fix_idioms.FixIdioms""lib2to3.fixes.fix_idioms.FixIdioms*
node
Any*
results
Anyz36z37z38z39z310z311*ä
transform_sort1lib2to3.fixes.fix_idioms.FixIdioms.transform_sort"
None*R
selfH
"lib2to3.fixes.fix_idioms.FixIdioms""lib2to3.fixes.fix_idioms.FixIdioms*
node
Any*
results
Anyz36z37z38z39z310z311j36j37j38j39j310j311r—
BM_compatible0lib2to3.fixes.fix_idioms.FixIdioms.BM_compatible:
Literal[builtins.bool]	
builtins.bool"builtins.bool*36*37*38*39*310*311rm
PATTERN*lib2to3.fixes.fix_idioms.FixIdioms.PATTERN
builtins.str"builtins.str*36*37*38*39*310*311*®
__annotations__(lib2to3.fixes.fix_idioms.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*[
CMPlib2to3.fixes.fix_idioms.CMP
builtins.str"builtins.str*36*37*38*39*310*311*]
TYPElib2to3.fixes.fix_idioms.TYPE
builtins.str"builtins.str*36*37*38*39*310*311