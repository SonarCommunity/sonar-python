
)torch._inductor.codegen.cpp_gemm_template“
CppPackedGemmTemplate?torch._inductor.codegen.cpp_gemm_template.CppPackedGemmTemplate"0torch._inductor.codegen.cpp_template.CppTemplate*≈
__init__Htorch._inductor.codegen.cpp_gemm_template.CppPackedGemmTemplate.__init__"
None*ç
selfÇ
?torch._inductor.codegen.cpp_gemm_template.CppPackedGemmTemplate"?torch._inductor.codegen.cpp_gemm_template.CppPackedGemmTemplate*
input_nodes
Any*B
layout6
torch._inductor.ir.Layout"torch._inductor.ir.Layout*-
num_threads
builtins.int"builtins.int*ú
register_blockingÑ
TypeAlias[Tuple[Any,Any,Any]]1
Tuple[Any,Any,Any]
Any
Any
Any".torch._inductor.codegen.cpp_utils.GemmBlocking*
beta
Any *
alpha
Any *ä
thread_blockingOtorch._inductor.codegen.cpp_gemm_template.CppPackedGemmTemplate.thread_blocking"Ñ
TypeAlias[Tuple[Any,Any,Any]]1
Tuple[Any,Any,Any]
Any
Any
Any".torch._inductor.codegen.cpp_utils.GemmBlocking*ç
selfÇ
?torch._inductor.codegen.cpp_gemm_template.CppPackedGemmTemplate"?torch._inductor.codegen.cpp_gemm_template.CppPackedGemmTemplate0:cache_on_self*à
cache_blockingNtorch._inductor.codegen.cpp_gemm_template.CppPackedGemmTemplate.cache_blocking"Ñ
TypeAlias[Tuple[Any,Any,Any]]1
Tuple[Any,Any,Any]
Any
Any
Any".torch._inductor.codegen.cpp_utils.GemmBlocking*ç
selfÇ
?torch._inductor.codegen.cpp_gemm_template.CppPackedGemmTemplate"?torch._inductor.codegen.cpp_gemm_template.CppPackedGemmTemplate0:cache_on_self*”
add_choicesKtorch._inductor.codegen.cpp_gemm_template.CppPackedGemmTemplate.add_choices*
choices*

layout*
input_nodes*

beta *
alpha *
trans_w *
input_indices 0:staticmethodh*õ
renderFtorch._inductor.codegen.cpp_gemm_template.CppPackedGemmTemplate.render"
builtins.str"builtins.str*ç
selfÇ
?torch._inductor.codegen.cpp_gemm_template.CppPackedGemmTemplate"?torch._inductor.codegen.cpp_gemm_template.CppPackedGemmTemplate*ä
kernel~
=torch._inductor.codegen.cpp_template_kernel.CppTemplateKernel"=torch._inductor.codegen.cpp_template_kernel.CppTemplateKernel*©
template_buffer_nodeå
0Union[torch._inductor.ir.CppTemplateBuffer,None]L
$torch._inductor.ir.CppTemplateBuffer"$torch._inductor.ir.CppTemplateBuffer
None *Ã
epilogue_nodesµ
4Union[builtins.list[torch._inductor.ir.IRNode],None]q
(builtins.list[torch._inductor.ir.IRNode]6
torch._inductor.ir.IRNode"torch._inductor.ir.IRNode"builtins.list
None *
kwargs
AnyrU
betaDtorch._inductor.codegen.cpp_gemm_template.CppPackedGemmTemplate.beta
AnyrW
alphaEtorch._inductor.codegen.cpp_gemm_template.CppPackedGemmTemplate.alpha
Anyrx
num_threadsKtorch._inductor.codegen.cpp_gemm_template.CppPackedGemmTemplate.num_threads
builtins.int"builtins.intrÌ
register_blockingQtorch._inductor.codegen.cpp_gemm_template.CppPackedGemmTemplate.register_blockingÑ
TypeAlias[Tuple[Any,Any,Any]]1
Tuple[Any,Any,Any]
Any
Any
Any".torch._inductor.codegen.cpp_utils.GemmBlockingrO
mAtorch._inductor.codegen.cpp_gemm_template.CppPackedGemmTemplate.m
AnyrO
nAtorch._inductor.codegen.cpp_gemm_template.CppPackedGemmTemplate.n
AnyrO
kAtorch._inductor.codegen.cpp_gemm_template.CppPackedGemmTemplate.k
Anyre
is_dynamic_MLtorch._inductor.codegen.cpp_gemm_template.CppPackedGemmTemplate.is_dynamic_M
Any*•
__annotations__9torch._inductor.codegen.cpp_gemm_template.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
Ltorch._inductor.lowering *f
GEMM_TEMPLATE7torch._inductor.codegen.cpp_gemm_template.GEMM_TEMPLATE
builtins.str"builtins.str