

contextlib
AbstractContextManager!contextlib.AbstractContextManager"builtins.object*¿
	__enter__+contextlib.AbstractContextManager.__enter__"
contextlib._T_co*pn
3contextlib.AbstractContextManager[contextlib._T_co]
contextlib._T_co"!contextlib.AbstractContextManager*ÿ
__exit__*contextlib.AbstractContextManager.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*pn
3contextlib.AbstractContextManager[contextlib._T_co]
contextlib._T_co"!contextlib.AbstractContextManager*çä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*db
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*[Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None0:abstractmethod@8PX‡
AbstractAsyncContextManager&contextlib.AbstractAsyncContextManager"builtins.object*Æ

__aenter__1contextlib.AbstractAsyncContextManager.__aenter__"f
*typing.Coroutine[Any,Any,contextlib._T_co]
Any
Any
contextlib._T_co"typing.Coroutine*Ç
selfx
8contextlib.AbstractAsyncContextManager[contextlib._T_co]
contextlib._T_co"&contextlib.AbstractAsyncContextManagerH*–
	__aexit__0contextlib.AbstractAsyncContextManager.__aexit__"¢
3typing.Coroutine[Any,Any,Union[builtins.bool,None]]
Any
AnyG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None"typing.Coroutine*Ç
selfx
8contextlib.AbstractAsyncContextManager[contextlib._T_co]
contextlib._T_co"&contextlib.AbstractAsyncContextManager*çä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*db
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*[Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None0:abstractmethod@H8PXÈ
ContextDecoratorcontextlib.ContextDecorator"builtins.object*¶
__call__$contextlib.ContextDecorator.__call__"
contextlib._F*D
self:
contextlib.ContextDecorator"contextlib.ContextDecorator*
func
contextlib._Fã
_GeneratorContextManager#contextlib._GeneratorContextManager"!contextlib.AbstractContextManager"contextlib.ContextDecorator*¥
__init__,contextlib._GeneratorContextManager.__init__"
None*|
selfr
5contextlib._GeneratorContextManager[contextlib._T_co]
contextlib._T_co"#contextlib._GeneratorContextManager*U
funcK
CallableType[builtins.function]&
builtins.function"builtins.function*8
args.
builtins.tuple[Any]
Any"builtins.tuple*a
kwdsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict* 
__exit__,contextlib._GeneratorContextManager.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*tr
5contextlib._GeneratorContextManager[contextlib._T_co]
contextlib._T_co"#contextlib._GeneratorContextManager*çä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*db
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*[Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
NonePrñ
gen'contextlib._GeneratorContextManager.genf
*typing.Generator[contextlib._T_co,Any,Any]
contextlib._T_co
Any
Any"typing.Generatorr}
func(contextlib._GeneratorContextManager.funcK
CallableType[builtins.function]&
builtins.function"builtins.functionr`
args(contextlib._GeneratorContextManager.args.
builtins.tuple[Any]
Any"builtins.tuplerâ
kwds(contextlib._GeneratorContextManager.kwdsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict¥
_AsyncGeneratorContextManager(contextlib._AsyncGeneratorContextManager"&contextlib.AbstractAsyncContextManager*ƒ
__init__1contextlib._AsyncGeneratorContextManager.__init__"
None*Ü
self|
:contextlib._AsyncGeneratorContextManager[contextlib._T_co]
contextlib._T_co"(contextlib._AsyncGeneratorContextManager*U
funcK
CallableType[builtins.function]&
builtins.function"builtins.function*8
args.
builtins.tuple[Any]
Any"builtins.tuple*a
kwdsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*ﬂ
	__aexit__2contextlib._AsyncGeneratorContextManager.__aexit__"¢
3typing.Coroutine[Any,Any,Union[builtins.bool,None]]
Any
AnyG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None"typing.Coroutine*Ü
self|
:contextlib._AsyncGeneratorContextManager[contextlib._T_co]
contextlib._T_co"(contextlib._AsyncGeneratorContextManager*î
typä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*m
valueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*h
	tracebackY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
NoneHPrò
gen,contextlib._AsyncGeneratorContextManager.genc
+typing.AsyncGenerator[contextlib._T_co,Any]
contextlib._T_co
Any"typing.AsyncGeneratorrÇ
func-contextlib._AsyncGeneratorContextManager.funcK
CallableType[builtins.function]&
builtins.function"builtins.functionre
args-contextlib._AsyncGeneratorContextManager.args.
builtins.tuple[Any]
Any"builtins.tupleré
kwds-contextlib._AsyncGeneratorContextManager.kwdsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictœ
_SupportsClosecontextlib._SupportsClose"builtins.object*é
closecontextlib._SupportsClose.close""
builtins.object"builtins.object*@
self6
contextlib._SupportsClose"contextlib._SupportsCloseX’
closingcontextlib.closing"!contextlib.AbstractContextManager*Ã
__init__contextlib.closing.__init__"
None*n
selfd
.contextlib.closing[contextlib._SupportsCloseT]
contextlib._SupportsCloseT"contextlib.closing*)
thing
contextlib._SupportsCloseT*¡
__exit__contextlib.closing.__exit__"
None*fd
.contextlib.closing[contextlib._SupportsCloseT]
contextlib._SupportsCloseT"contextlib.closing*&"
builtins.object"builtins.objectP›
suppresscontextlib.suppress"!contextlib.AbstractContextManager*Ã
__init__contextlib.suppress.__init__"
None*4
self*
contextlib.suppress"contextlib.suppress*b

exceptionsR
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException*…
__exit__contextlib.suppress.__exit__"
builtins.bool"builtins.bool*,*
contextlib.suppress"contextlib.suppress*çä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*db
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*[Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Noneì
_RedirectStreamcontextlib._RedirectStream"!contextlib.AbstractContextManager*À
__init__#contextlib._RedirectStream.__init__"
None*j
self`
,contextlib._RedirectStream[contextlib._T_io]
contextlib._T_io"contextlib._RedirectStream*$

new_target
contextlib._T_io*
__exit__#contextlib._RedirectStream.__exit__"
None*b`
,contextlib._RedirectStream[contextlib._T_io]
contextlib._T_io"contextlib._RedirectStream*çä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*db
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*[Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
NonePK
redirect_stdoutcontextlib.redirect_stdout"contextlib._RedirectStreamPK
redirect_stderrcontextlib.redirect_stderr"contextlib._RedirectStreamPÁ
	ExitStackcontextlib.ExitStack"builtins.object*
enter_context"contextlib.ExitStack.enter_context"
contextlib._T*6
self,
contextlib.ExitStack"contextlib.ExitStack*p
cmh
0contextlib.AbstractContextManager[contextlib._T]
contextlib._T"!contextlib.AbstractContextManager*ë
pushcontextlib.ExitStack.push"
contextlib._CM_EF*6
self,
contextlib.ExitStack"contextlib.ExitStack*
exit
contextlib._CM_EF*ï
callbackcontextlib.ExitStack.callback"K
CallableType[builtins.function]&
builtins.function"builtins.function*6
self,
contextlib.ExitStack"contextlib.ExitStack*MK
CallableType[builtins.function]&
builtins.function"builtins.function*

args *

kwds *o
pop_allcontextlib.ExitStack.pop_all"
contextlib.ExitStack.Self*'
self
contextlib.ExitStack.Self*e
closecontextlib.ExitStack.close"
None*6
self,
contextlib.ExitStack"contextlib.ExitStack*k
	__enter__contextlib.ExitStack.__enter__"
contextlib.ExitStack.Self*
contextlib.ExitStack.Self*Ã
__exit__contextlib.ExitStack.__exit__"
builtins.bool"builtins.bool*.,
contextlib.ExitStack"contextlib.ExitStack*çä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*db
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*[Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None@œ
AsyncExitStackcontextlib.AsyncExitStack"builtins.object*ˇ
enter_context'contextlib.AsyncExitStack.enter_context"
contextlib._T*@
self6
contextlib.AsyncExitStack"contextlib.AsyncExitStack*p
cmh
0contextlib.AbstractContextManager[contextlib._T]
contextlib._T"!contextlib.AbstractContextManager*Ê
enter_async_context-contextlib.AsyncExitStack.enter_async_context"`
'typing.Coroutine[Any,Any,contextlib._T]
Any
Any
contextlib._T"typing.Coroutine*@
self6
contextlib.AsyncExitStack"contextlib.AsyncExitStack*z
cmr
5contextlib.AbstractAsyncContextManager[contextlib._T]
contextlib._T"&contextlib.AbstractAsyncContextManagerH*†
pushcontextlib.AsyncExitStack.push"
contextlib._CM_EF*@
self6
contextlib.AsyncExitStack"contextlib.AsyncExitStack*
exit
contextlib._CM_EF*∏
push_async_exit)contextlib.AsyncExitStack.push_async_exit"
contextlib._ACM_EF*@
self6
contextlib.AsyncExitStack"contextlib.AsyncExitStack* 
exit
contextlib._ACM_EF*§
callback"contextlib.AsyncExitStack.callback"K
CallableType[builtins.function]&
builtins.function"builtins.function*@
self6
contextlib.AsyncExitStack"contextlib.AsyncExitStack*MK
CallableType[builtins.function]&
builtins.function"builtins.function*

args *

kwds *∫
push_async_callback-contextlib.AsyncExitStack.push_async_callback"K
CallableType[builtins.function]&
builtins.function"builtins.function*@
self6
contextlib.AsyncExitStack"contextlib.AsyncExitStack*MK
CallableType[builtins.function]&
builtins.function"builtins.function*

args *

kwds *~
pop_all!contextlib.AsyncExitStack.pop_all""
contextlib.AsyncExitStack.Self*,
self"
contextlib.AsyncExitStack.Self*æ
aclose contextlib.AsyncExitStack.aclose"N
typing.Coroutine[Any,Any,None]
Any
Any
None"typing.Coroutine*@
self6
contextlib.AsyncExitStack"contextlib.AsyncExitStackH*Á

__aenter__$contextlib.AsyncExitStack.__aenter__"Ç
8typing.Coroutine[Any,Any,contextlib.AsyncExitStack.Self]
Any
Any"
contextlib.AsyncExitStack.Self"typing.Coroutine*,
self"
contextlib.AsyncExitStack.SelfH*∂
	__aexit__#contextlib.AsyncExitStack.__aexit__"m
'typing.Coroutine[Any,Any,builtins.bool]
Any
Any
builtins.bool"builtins.bool"typing.Coroutine*@
self6
contextlib.AsyncExitStack"contextlib.AsyncExitStack*çä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*db
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*[Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
NoneH@à
nullcontextcontextlib.nullcontext"!contextlib.AbstractContextManager*ñ
	__enter__ contextlib.nullcontext.__enter__"
contextlib._T*TR
%contextlib.nullcontext[contextlib._T]
contextlib._T"contextlib.nullcontext*≥
__exit__contextlib.nullcontext.__exit__"
None*TR
%contextlib.nullcontext[contextlib._T]
contextlib._T"contextlib.nullcontext*&"
builtins.object"builtins.object2§
__init__contextlib.nullcontext.__init__≠
__init__contextlib.nullcontext.__init__"
None*J
self@
contextlib.nullcontext[None]
None"contextlib.nullcontext*
enter_result
None 0:overloadX∆
__init__contextlib.nullcontext.__init__"
None*\
selfR
%contextlib.nullcontext[contextlib._T]
contextlib._T"contextlib.nullcontext*#
enter_result
contextlib._T0:overloadXPrF
enter_result#contextlib.nullcontext.enter_result
contextlib._Tœ
contextmanagercontextlib.contextmanager"K
CallableType[builtins.function]&
builtins.function"builtins.function*U
funcK
CallableType[builtins.function]&
builtins.function"builtins.functionŸ
asynccontextmanagercontextlib.asynccontextmanager"K
CallableType[builtins.function]&
builtins.function"builtins.function*U
funcK
CallableType[builtins.function]&
builtins.function"builtins.function*Ü
__annotations__contextlib.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*i
__all__contextlib.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list