
loggingƒ
Filtererlogging.Filterer"builtins.object*ä
	addFilterlogging.Filterer.addFilter"
None*.
self$
logging.Filterer"logging.Filterer*ë
filterÑ
@TypeAlias[Union[logging.Filter,CallableType[builtins.function]]]®
5Union[logging.Filter,CallableType[builtins.function]] 
logging.Filter"logging.FilterK
CallableType[builtins.function]&
builtins.function"builtins.function"logging._FilterTypez36z37z38z39z310*ê
removeFilterlogging.Filterer.removeFilter"
None*.
self$
logging.Filterer"logging.Filterer*ë
filterÑ
@TypeAlias[Union[logging.Filter,CallableType[builtins.function]]]®
5Union[logging.Filter,CallableType[builtins.function]] 
logging.Filter"logging.FilterK
CallableType[builtins.function]&
builtins.function"builtins.function"logging._FilterTypez36z37z38z39z310*∫
filterlogging.Filterer.filter"
builtins.bool"builtins.bool*.
self$
logging.Filterer"logging.Filterer*2
record&
logging.LogRecord"logging.LogRecordz36z37z38z39z310j36j37j38j39j310r¢
filterslogging.Filterer.filtersÁ
Obuiltins.list[TypeAlias[Union[logging.Filter,CallableType[builtins.function]]]]Ñ
@TypeAlias[Union[logging.Filter,CallableType[builtins.function]]]®
5Union[logging.Filter,CallableType[builtins.function]] 
logging.Filter"logging.FilterK
CallableType[builtins.function]&
builtins.function"builtins.function"logging._FilterType"builtins.list*36*37*38*39*310±
Managerlogging.Manager"builtins.object*©
__init__logging.Manager.__init__"
None*,
self"
logging.Manager"logging.Manager*6
rootnode(
logging.RootLogger"logging.RootLoggerz36z37z38z39z310*≥
	getLoggerlogging.Manager.getLogger" 
logging.Logger"logging.Logger*,
self"
logging.Manager"logging.Manager*&
name
builtins.str"builtins.strz36z37z38z39z310*ƒ
setLoggerClasslogging.Manager.setLoggerClass"
None*,
self"
logging.Manager"logging.Manager*E
klass:
Type[logging.Logger] 
logging.Logger"logging.Loggerz36z37z38z39z310*·
setLogRecordFactory#logging.Manager.setLogRecordFactory"
None*,
self"
logging.Manager"logging.Manager*X
factoryK
CallableType[builtins.function]&
builtins.function"builtins.functionz36z37z38z39z310j36j37j38j39j310r[
rootlogging.Manager.root(
logging.RootLogger"logging.RootLogger*36*37*38*39*310rU
disablelogging.Manager.disable
builtins.int"builtins.int*36*37*38*39*310rw
emittedNoHandlerWarning'logging.Manager.emittedNoHandlerWarning
builtins.bool"builtins.bool*36*37*38*39*310r±

loggerDictlogging.Manager.loggerDictÒ
Ebuiltins.dict[builtins.str,Union[logging.Logger,logging.PlaceHolder]]
builtins.str"builtins.str{
)Union[logging.Logger,logging.PlaceHolder] 
logging.Logger"logging.Logger*
logging.PlaceHolder"logging.PlaceHolder"builtins.dict*36*37*38*39*310r´
loggerClasslogging.Manager.loggerClassj
 Union[Type[logging.Logger],None]:
Type[logging.Logger] 
logging.Logger"logging.Logger
None*36*37*38*39*310r“
logRecordFactory logging.Manager.logRecordFactoryÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None*36*37*38*39*310È°
Loggerlogging.Logger"logging.Filterer*»
__init__logging.Logger.__init__"
None**
self 
logging.Logger"logging.Logger*&
name
builtins.str"builtins.str*Ø
level°
+TypeAlias[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"logging._Level z36z37z38z39z310*û
setLevellogging.Logger.setLevel"
None**
self 
logging.Logger"logging.Logger*≠
level°
+TypeAlias[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"logging._Levelz36z37z38z39z310*µ
isEnabledForlogging.Logger.isEnabledFor"
builtins.bool"builtins.bool**
self 
logging.Logger"logging.Logger*'
level
builtins.int"builtins.intz36z37z38z39z310*î
getEffectiveLevel logging.Logger.getEffectiveLevel"
builtins.int"builtins.int**
self 
logging.Logger"logging.Loggerz36z37z38z39z310*û
getChildlogging.Logger.getChild"
logging.Logger.Self*!
self
logging.Logger.Self*(
suffix
builtins.str"builtins.strz36z37z38z39z310*‚
debuglogging.Logger.debug"
None**
self 
logging.Logger"logging.Logger*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37*ó
debuglogging.Logger.debug"
None**
self 
logging.Logger"logging.Logger*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310*‡
infologging.Logger.info"
None**
self 
logging.Logger"logging.Logger*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37*ï
infologging.Logger.info"
None**
self 
logging.Logger"logging.Logger*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310*Ê
warninglogging.Logger.warning"
None**
self 
logging.Logger"logging.Logger*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37*õ
warninglogging.Logger.warning"
None**
self 
logging.Logger"logging.Logger*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310*‡
warnlogging.Logger.warn"
None**
self 
logging.Logger"logging.Logger*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37*ï
warnlogging.Logger.warn"
None**
self 
logging.Logger"logging.Logger*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310*‚
errorlogging.Logger.error"
None**
self 
logging.Logger"logging.Logger*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37*ó
errorlogging.Logger.error"
None**
self 
logging.Logger"logging.Logger*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310*Ë
criticallogging.Logger.critical"
None**
self 
logging.Logger"logging.Logger*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37*ù
criticallogging.Logger.critical"
None**
self 
logging.Logger"logging.Logger*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310*á
loglogging.Logger.log"
None**
self 
logging.Logger"logging.Logger*'
level
builtins.int"builtins.int*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37*º
loglogging.Logger.log"
None**
self 
logging.Logger"logging.Logger*'
level
builtins.int"builtins.int*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310*Í
	exceptionlogging.Logger.exception"
None**
self 
logging.Logger"logging.Logger*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37*ü
	exceptionlogging.Logger.exception"
None**
self 
logging.Logger"logging.Logger*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310*Ó
_loglogging.Logger._log"
None**
self 
logging.Logger"logging.Logger*'
level
builtins.int"builtins.int*+
msg"
builtins.object"builtins.object*¥
args©
^TypeAlias[Union[builtins.tuple[builtins.object],typing.Mapping[builtins.str,builtins.object]]]±
SUnion[builtins.tuple[builtins.object],typing.Mapping[builtins.str,builtins.object]]U
builtins.tuple[builtins.object]"
builtins.object"builtins.object"builtins.tupleÄ
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping"logging._ArgsType*˘

exc_infoË

 Union[TypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]],None]å	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType
None *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *0

stack_info
builtins.bool"builtins.bool z36z37*£
_loglogging.Logger._log"
None**
self 
logging.Logger"logging.Logger*'
level
builtins.int"builtins.int*+
msg"
builtins.object"builtins.object*¥
args©
^TypeAlias[Union[builtins.tuple[builtins.object],typing.Mapping[builtins.str,builtins.object]]]±
SUnion[builtins.tuple[builtins.object],typing.Mapping[builtins.str,builtins.object]]U
builtins.tuple[builtins.object]"
builtins.object"builtins.object"builtins.tupleÄ
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping"logging._ArgsType*˘

exc_infoË

 Union[TypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]],None]å	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType
None *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int z38z39z310*†

addHandlerlogging.Logger.addHandler"
None**
self 
logging.Logger"logging.Logger*,
hdlr"
logging.Handler"logging.Handlerz36z37z38z39z310*¶
removeHandlerlogging.Logger.removeHandler"
None**
self 
logging.Logger"logging.Logger*,
hdlr"
logging.Handler"logging.Handlerz36z37z38z39z310*˙

findCallerlogging.Logger.findCaller"Í
FTuple[builtins.str,builtins.int,builtins.str,Union[builtins.str,None]]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
None**
self 
logging.Logger"logging.Logger*0

stack_info
builtins.bool"builtins.bool z36z37*Ø

findCallerlogging.Logger.findCaller"Í
FTuple[builtins.str,builtins.int,builtins.str,Union[builtins.str,None]]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
None**
self 
logging.Logger"logging.Logger*0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int z38z39z310*û
handlelogging.Logger.handle"
None**
self 
logging.Logger"logging.Logger*2
record&
logging.LogRecord"logging.LogRecordz36z37z38z39z310*‹

makeRecordlogging.Logger.makeRecord"&
logging.LogRecord"logging.LogRecord**
self 
logging.Logger"logging.Logger*&
name
builtins.str"builtins.str*'
level
builtins.int"builtins.int*$
fn
builtins.str"builtins.str*%
lno
builtins.int"builtins.int*+
msg"
builtins.object"builtins.object*¥
args©
^TypeAlias[Union[builtins.tuple[builtins.object],typing.Mapping[builtins.str,builtins.object]]]±
SUnion[builtins.tuple[builtins.object],typing.Mapping[builtins.str,builtins.object]]U
builtins.tuple[builtins.object]"
builtins.object"builtins.object"builtins.tupleÄ
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping"logging._ArgsType*»
exc_infoπ
éUnion[TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],None]ô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType
None*P
funcD
Union[builtins.str,None]
builtins.str"builtins.str
None *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *Q
sinfoD
Union[builtins.str,None]
builtins.str"builtins.str
None z36z37z38z39z310*ä
hasHandlerslogging.Logger.hasHandlers"
builtins.bool"builtins.bool**
self 
logging.Logger"logging.Loggerz36z37z38z39z310*™
callHandlerslogging.Logger.callHandlers"
None**
self 
logging.Logger"logging.Logger*2
record&
logging.LogRecord"logging.LogRecordz36z37z38z39z310j36j37j38j39j310rN
namelogging.Logger.name
builtins.str"builtins.str*36*37*38*39*310rP
levellogging.Logger.level
builtins.int"builtins.int*36*37*38*39*310rÄ
parentlogging.Logger.parentJ
Union[logging.Logger,None] 
logging.Logger"logging.Logger
None*36*37*38*39*310rZ
	propagatelogging.Logger.propagate
builtins.bool"builtins.bool*36*37*38*39*310rç
handlerslogging.Logger.handlersS
builtins.list[logging.Handler]"
logging.Handler"logging.Handler"builtins.list*36*37*38*39*310rX
disabledlogging.Logger.disabled
builtins.bool"builtins.bool*36*37*38*39*310rZ
rootlogging.Logger.root(
logging.RootLogger"logging.RootLogger*36*37*38*39*310rZ
managerlogging.Logger.manager"
logging.Manager"logging.Manager*36*37*38*39*310r
fatallogging.Logger.fatalK
CallableType[builtins.function]&
builtins.function"builtins.function*36*37*38*39*310⁄
Handlerlogging.Handler"logging.Filterer*£
__init__logging.Handler.__init__"
None*,
self"
logging.Handler"logging.Handler*Ø
level°
+TypeAlias[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"logging._Level z36z37z38z39z310*Ö
get_namelogging.Handler.get_name"
builtins.str"builtins.str*,
self"
logging.Handler"logging.Handlerz36z37z38z39z310*ô
set_namelogging.Handler.set_name"
None*,
self"
logging.Handler"logging.Handler*&
name
builtins.str"builtins.strz36z37z38z39z310*u

createLocklogging.Handler.createLock"
None*,
self"
logging.Handler"logging.Handlerz36z37z38z39z310*o
acquirelogging.Handler.acquire"
None*,
self"
logging.Handler"logging.Handlerz36z37z38z39z310*o
releaselogging.Handler.release"
None*,
self"
logging.Handler"logging.Handlerz36z37z38z39z310*°
setLevellogging.Handler.setLevel"
None*,
self"
logging.Handler"logging.Handler*≠
level°
+TypeAlias[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"logging._Levelz36z37z38z39z310*◊
setFormatterlogging.Handler.setFormatter"
None*,
self"
logging.Handler"logging.Handler*\
fmtS
Union[logging.Formatter,None]&
logging.Formatter"logging.Formatter
Nonez36z37z38z39z310*k
flushlogging.Handler.flush"
None*,
self"
logging.Handler"logging.Handlerz36z37z38z39z310*k
closelogging.Handler.close"
None*,
self"
logging.Handler"logging.Handlerz36z37z38z39z310*∑
handlelogging.Handler.handle"
builtins.bool"builtins.bool*,
self"
logging.Handler"logging.Handler*2
record&
logging.LogRecord"logging.LogRecordz36z37z38z39z310*´
handleErrorlogging.Handler.handleError"
None*,
self"
logging.Handler"logging.Handler*2
record&
logging.LogRecord"logging.LogRecordz36z37z38z39z310*µ
formatlogging.Handler.format"
builtins.str"builtins.str*,
self"
logging.Handler"logging.Handler*2
record&
logging.LogRecord"logging.LogRecordz36z37z38z39z310*ù
emitlogging.Handler.emit"
None*,
self"
logging.Handler"logging.Handler*2
record&
logging.LogRecord"logging.LogRecordz36z37z38z39z310j36j37j38j39j310rQ
levellogging.Handler.level
builtins.int"builtins.int*36*37*38*39*310rê
	formatterlogging.Handler.formatterS
Union[logging.Formatter,None]&
logging.Formatter"logging.Formatter
None*36*37*38*39*310r}
locklogging.Handler.lockJ
Union[threading.Lock,None] 
threading.Lock"threading.Lock
None*36*37*38*39*310rw
namelogging.Handler.nameD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310˙&
	Formatterlogging.Formatter"builtins.object*à
__init__logging.Formatter.__init__"
None*0
self&
logging.Formatter"logging.Formatter*O
fmtD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
datefmtD
Union[builtins.str,None]
builtins.str"builtins.str
None *ı
styleÁ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"logging._FormatStyle z36z37*∏
__init__logging.Formatter.__init__"
None*0
self&
logging.Formatter"logging.Formatter*O
fmtD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
datefmtD
Union[builtins.str,None]
builtins.str"builtins.str
None *ı
styleÁ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"logging._FormatStyle *.
validate
builtins.bool"builtins.bool z38z39*ﬁ
__init__logging.Formatter.__init__"
None*0
self&
logging.Formatter"logging.Formatter*O
fmtD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
datefmtD
Union[builtins.str,None]
builtins.str"builtins.str
None *ı
styleÁ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"logging._FormatStyle *.
validate
builtins.bool"builtins.bool *¶
defaultsï
,Union[typing.Mapping[builtins.str,Any],None]Y
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping
None z310*ª
formatlogging.Formatter.format"
builtins.str"builtins.str*0
self&
logging.Formatter"logging.Formatter*2
record&
logging.LogRecord"logging.LogRecordz36z37z38z39z310*ò

formatTimelogging.Formatter.formatTime"
builtins.str"builtins.str*0
self&
logging.Formatter"logging.Formatter*2
record&
logging.LogRecord"logging.LogRecord*S
datefmtD
Union[builtins.str,None]
builtins.str"builtins.str
None z36z37z38z39z310*æ
formatException!logging.Formatter.formatException"
builtins.str"builtins.str*0
self&
logging.Formatter"logging.Formatter*¢
eiô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoTypez36z37z38z39z310*…
formatMessagelogging.Formatter.formatMessage"
builtins.str"builtins.str*0
self&
logging.Formatter"logging.Formatter*2
record&
logging.LogRecord"logging.LogRecordz36z37z38z39z310*ø
formatStacklogging.Formatter.formatStack"
builtins.str"builtins.str*0
self&
logging.Formatter"logging.Formatter*,

stack_info
builtins.str"builtins.strz36z37z38z39z310*ç
usesTimelogging.Formatter.usesTime"
builtins.bool"builtins.bool*0
self&
logging.Formatter"logging.Formatterz36z37z38z39z310j36j37j38j39j310rä
	converterlogging.Formatter.converterK
CallableType[builtins.function]&
builtins.function"builtins.function*36*37*38*39*310ry
_fmtlogging.Formatter._fmtD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310r
datefmtlogging.Formatter.datefmtD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310re
_stylelogging.Formatter._style,
logging.PercentStyle"logging.PercentStyle*36*37*38*39*310ro
default_time_format%logging.Formatter.default_time_format
builtins.str"builtins.str*36*37*38*39*310rf
default_msec_format%logging.Formatter.default_msec_format
builtins.str"builtins.str*36*37*38rã
default_msec_format%logging.Formatter.default_msec_formatD
Union[builtins.str,None]
builtins.str"builtins.str
None*39*310Ü

BufferingFormatterlogging.BufferingFormatter"builtins.object*ˆ
__init__#logging.BufferingFormatter.__init__"
None*B
self8
logging.BufferingFormatter"logging.BufferingFormatter*b
linefmtS
Union[logging.Formatter,None]&
logging.Formatter"logging.Formatter
None z36z37z38z39z310*ö
formatHeader'logging.BufferingFormatter.formatHeader"
builtins.str"builtins.str*B
self8
logging.BufferingFormatter"logging.BufferingFormatter*j
records]
"typing.Sequence[logging.LogRecord]&
logging.LogRecord"logging.LogRecord"typing.Sequencez36z37z38z39z310*ö
formatFooter'logging.BufferingFormatter.formatFooter"
builtins.str"builtins.str*B
self8
logging.BufferingFormatter"logging.BufferingFormatter*j
records]
"typing.Sequence[logging.LogRecord]&
logging.LogRecord"logging.LogRecord"typing.Sequencez36z37z38z39z310*é
format!logging.BufferingFormatter.format"
builtins.str"builtins.str*B
self8
logging.BufferingFormatter"logging.BufferingFormatter*j
records]
"typing.Sequence[logging.LogRecord]&
logging.LogRecord"logging.LogRecord"typing.Sequencez36z37z38z39z310j36j37j38j39j310rj
linefmt"logging.BufferingFormatter.linefmt&
logging.Formatter"logging.Formatter*36*37*38*39*310∞
Filterlogging.Filter"builtins.object*ò
__init__logging.Filter.__init__"
None**
self 
logging.Filter"logging.Filter*(
name
builtins.str"builtins.str z36z37z38z39z310*¥
filterlogging.Filter.filter"
builtins.bool"builtins.bool**
self 
logging.Filter"logging.Filter*2
record&
logging.LogRecord"logging.LogRecordz36z37z38z39z310j36j37j38j39j310rN
namelogging.Filter.name
builtins.str"builtins.str*36*37*38*39*310rN
nlenlogging.Filter.nlen
builtins.int"builtins.int*36*37*38*39*310˙-
	LogRecordlogging.LogRecord"builtins.object*Ì
__init__logging.LogRecord.__init__"
None*0
self&
logging.LogRecord"logging.LogRecord*&
name
builtins.str"builtins.str*'
level
builtins.int"builtins.int**
pathname
builtins.str"builtins.str*(
lineno
builtins.int"builtins.int*+
msg"
builtins.object"builtins.object*Ø
args§
jUnion[TypeAlias[Union[builtins.tuple[builtins.object],typing.Mapping[builtins.str,builtins.object]]],None]©
^TypeAlias[Union[builtins.tuple[builtins.object],typing.Mapping[builtins.str,builtins.object]]]±
SUnion[builtins.tuple[builtins.object],typing.Mapping[builtins.str,builtins.object]]U
builtins.tuple[builtins.object]"
builtins.object"builtins.object"builtins.tupleÄ
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping"logging._ArgsType
None*»
exc_infoπ
éUnion[TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],None]ô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType
None*P
funcD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
sinfoD
Union[builtins.str,None]
builtins.str"builtins.str
None z36z37z38z39z310*è

getMessagelogging.LogRecord.getMessage"
builtins.str"builtins.str*0
self&
logging.LogRecord"logging.LogRecordz36z37z38z39z310*®
__setattr__logging.LogRecord.__setattr__"
None*0
self&
logging.LogRecord"logging.LogRecord*
builtins.str"builtins.str*	
Anyz36z37z38z39z310j36j37j38j39j310r⁄
argslogging.LogRecord.args§
jUnion[TypeAlias[Union[builtins.tuple[builtins.object],typing.Mapping[builtins.str,builtins.object]]],None]©
^TypeAlias[Union[builtins.tuple[builtins.object],typing.Mapping[builtins.str,builtins.object]]]±
SUnion[builtins.tuple[builtins.object],typing.Mapping[builtins.str,builtins.object]]U
builtins.tuple[builtins.object]"
builtins.object"builtins.object"builtins.tupleÄ
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping"logging._ArgsType
None*36*37*38*39*310rW
asctimelogging.LogRecord.asctime
builtins.str"builtins.str*36*37*38*39*310r[
createdlogging.LogRecord.created 
builtins.float"builtins.float*36*37*38*39*310r˜
exc_infologging.LogRecord.exc_infoπ
éUnion[TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],None]ô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType
None*36*37*38*39*310rÅ
exc_textlogging.LogRecord.exc_textD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310rY
filenamelogging.LogRecord.filename
builtins.str"builtins.str*36*37*38*39*310rY
funcNamelogging.LogRecord.funcName
builtins.str"builtins.str*36*37*38*39*310r[
	levelnamelogging.LogRecord.levelname
builtins.str"builtins.str*36*37*38*39*310rW
levelnologging.LogRecord.levelno
builtins.int"builtins.int*36*37*38*39*310rU
linenologging.LogRecord.lineno
builtins.int"builtins.int*36*37*38*39*310rU
modulelogging.LogRecord.module
builtins.str"builtins.str*36*37*38*39*310rW
msecslogging.LogRecord.msecs 
builtins.float"builtins.float*36*37*38*39*310rW
messagelogging.LogRecord.message
builtins.str"builtins.str*36*37*38*39*310ru
msglogging.LogRecord.msgB
Union[builtins.str,Any]
builtins.str"builtins.str
Any*36*37*38*39*310rQ
namelogging.LogRecord.name
builtins.str"builtins.str*36*37*38*39*310rY
pathnamelogging.LogRecord.pathname
builtins.str"builtins.str*36*37*38*39*310r
processlogging.LogRecord.processD
Union[builtins.int,None]
builtins.int"builtins.int
None*36*37*38*39*310rá
processNamelogging.LogRecord.processNameD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310rk
relativeCreated!logging.LogRecord.relativeCreated 
builtins.float"builtins.float*36*37*38*39*310rÖ

stack_infologging.LogRecord.stack_infoD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310r}
threadlogging.LogRecord.threadD
Union[builtins.int,None]
builtins.int"builtins.int
None*36*37*38*39*310rÖ

threadNamelogging.LogRecord.threadNameD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310‚Ü
LoggerAdapterlogging.LoggerAdapter"builtins.object*≈
__init__logging.LoggerAdapter.__init__"
None*T
selfJ
!logging.LoggerAdapter[logging._L]

logging._L"logging.LoggerAdapter*
logger

logging._L*å
extraÄ
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mappingz36z37z38z39*Ö
__init__logging.LoggerAdapter.__init__"
None*T
selfJ
!logging.LoggerAdapter[logging._L]

logging._L"logging.LoggerAdapter*
logger

logging._L*◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z310*≈
processlogging.LoggerAdapter.process"®
2Tuple[Any,typing.MutableMapping[builtins.str,Any]]
Anyg
'typing.MutableMapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.MutableMapping*T
selfJ
!logging.LoggerAdapter[logging._L]

logging._L"logging.LoggerAdapter*
msg
Any*s
kwargsg
'typing.MutableMapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.MutableMappingz36z37z38z39z310*√
debuglogging.LoggerAdapter.debug"
None*T
selfJ
!logging.LoggerAdapter[logging._L]

logging._L"logging.LoggerAdapter*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz36z37*¯
debuglogging.LoggerAdapter.debug"
None*T
selfJ
!logging.LoggerAdapter[logging._L]

logging._L"logging.LoggerAdapter*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz38z39z310*¡
infologging.LoggerAdapter.info"
None*T
selfJ
!logging.LoggerAdapter[logging._L]

logging._L"logging.LoggerAdapter*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz36z37*ˆ
infologging.LoggerAdapter.info"
None*T
selfJ
!logging.LoggerAdapter[logging._L]

logging._L"logging.LoggerAdapter*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz38z39z310*«
warninglogging.LoggerAdapter.warning"
None*T
selfJ
!logging.LoggerAdapter[logging._L]

logging._L"logging.LoggerAdapter*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz36z37*¸
warninglogging.LoggerAdapter.warning"
None*T
selfJ
!logging.LoggerAdapter[logging._L]

logging._L"logging.LoggerAdapter*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz38z39z310*¡
warnlogging.LoggerAdapter.warn"
None*T
selfJ
!logging.LoggerAdapter[logging._L]

logging._L"logging.LoggerAdapter*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz36z37*ˆ
warnlogging.LoggerAdapter.warn"
None*T
selfJ
!logging.LoggerAdapter[logging._L]

logging._L"logging.LoggerAdapter*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz38z39z310*√
errorlogging.LoggerAdapter.error"
None*T
selfJ
!logging.LoggerAdapter[logging._L]

logging._L"logging.LoggerAdapter*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz36z37*¯
errorlogging.LoggerAdapter.error"
None*T
selfJ
!logging.LoggerAdapter[logging._L]

logging._L"logging.LoggerAdapter*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz38z39z310*À
	exceptionlogging.LoggerAdapter.exception"
None*T
selfJ
!logging.LoggerAdapter[logging._L]

logging._L"logging.LoggerAdapter*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz36z37*Ä
	exceptionlogging.LoggerAdapter.exception"
None*T
selfJ
!logging.LoggerAdapter[logging._L]

logging._L"logging.LoggerAdapter*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz38z39z310*…
criticallogging.LoggerAdapter.critical"
None*T
selfJ
!logging.LoggerAdapter[logging._L]

logging._L"logging.LoggerAdapter*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz36z37*˛
criticallogging.LoggerAdapter.critical"
None*T
selfJ
!logging.LoggerAdapter[logging._L]

logging._L"logging.LoggerAdapter*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz38z39z310*Ë
loglogging.LoggerAdapter.log"
None*T
selfJ
!logging.LoggerAdapter[logging._L]

logging._L"logging.LoggerAdapter*'
level
builtins.int"builtins.int*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz36z37*ù
loglogging.LoggerAdapter.log"
None*T
selfJ
!logging.LoggerAdapter[logging._L]

logging._L"logging.LoggerAdapter*'
level
builtins.int"builtins.int*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz38z39z310*Ê
isEnabledFor"logging.LoggerAdapter.isEnabledFor"
builtins.bool"builtins.bool*T
selfJ
!logging.LoggerAdapter[logging._L]

logging._L"logging.LoggerAdapter*'
level
builtins.int"builtins.intz36z37z38z39z310*≈
getEffectiveLevel'logging.LoggerAdapter.getEffectiveLevel"
builtins.int"builtins.int*T
selfJ
!logging.LoggerAdapter[logging._L]

logging._L"logging.LoggerAdapterz36z37z38z39z310*œ
setLevellogging.LoggerAdapter.setLevel"
None*T
selfJ
!logging.LoggerAdapter[logging._L]

logging._L"logging.LoggerAdapter*≠
level°
+TypeAlias[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"logging._Levelz36z37z38z39z310*ª
hasHandlers!logging.LoggerAdapter.hasHandlers"
builtins.bool"builtins.bool*T
selfJ
!logging.LoggerAdapter[logging._L]

logging._L"logging.LoggerAdapterz36z37z38z39z310*¨
_loglogging.LoggerAdapter._log"
None*T
selfJ
!logging.LoggerAdapter[logging._L]

logging._L"logging.LoggerAdapter*'
level
builtins.int"builtins.int*+
msg"
builtins.object"builtins.object*¥
args©
^TypeAlias[Union[builtins.tuple[builtins.object],typing.Mapping[builtins.str,builtins.object]]]±
SUnion[builtins.tuple[builtins.object],typing.Mapping[builtins.str,builtins.object]]U
builtins.tuple[builtins.object]"
builtins.object"builtins.object"builtins.tupleÄ
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping"logging._ArgsType*˘

exc_infoË

 Union[TypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]],None]å	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType
None *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *0

stack_info
builtins.bool"builtins.bool z36z37z38z39z310*π
namelogging.LoggerAdapter.name"
builtins.str"builtins.str*T
selfJ
!logging.LoggerAdapter[logging._L]

logging._L"logging.LoggerAdapter0:property`z36z37z38z39z310Pj36j37j38j39j310rK
loggerlogging.LoggerAdapter.logger

logging._L*36*37*38*39*310ra
managerlogging.LoggerAdapter.manager"
logging.Manager"logging.Manager*36*37*38*39*310r∑
extralogging.LoggerAdapter.extraÄ
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping*36*37*38*39rı
extralogging.LoggerAdapter.extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None*310ﬂ
StreamHandlerlogging.StreamHandler"logging.Handler*á
	setStreamlogging.StreamHandler.setStream"@
Union[logging._StreamT,None]
logging._StreamT
None*`
selfV
'logging.StreamHandler[logging._StreamT]
logging._StreamT"logging.StreamHandler* 
stream
logging._StreamTz36z37z38z39z3102Œ
__init__logging.StreamHandler.__init__√
__init__logging.StreamHandler.__init__"
None*g
self]
$logging.StreamHandler[typing.TextIO]
typing.TextIO"typing.TextIO"logging.StreamHandler*
stream
None 0:overloadX∆
__init__logging.StreamHandler.__init__"
None*`
selfV
'logging.StreamHandler[logging._StreamT]
logging._StreamT"logging.StreamHandler* 
stream
logging._StreamT0:overloadX"36"37"38"39"310Pj36j37j38j39j310rQ
streamlogging.StreamHandler.stream
logging._StreamT*36*37*38*39*310ra

terminator logging.StreamHandler.terminator
builtins.str"builtins.str*36*37*38*39*310Å
FileHandlerlogging.FileHandler"logging.StreamHandler*ú
__init__logging.FileHandler.__init__"
None*4
self*
logging.FileHandler"logging.FileHandler*¯
filenameÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*(
mode
builtins.str"builtins.str *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *+
delay
builtins.bool"builtins.bool z36z37z38*Ì
__init__logging.FileHandler.__init__"
None*4
self*
logging.FileHandler"logging.FileHandler*¯
filenameÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*(
mode
builtins.str"builtins.str *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *+
delay
builtins.bool"builtins.bool *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None z39z310*ì
_openlogging.FileHandler._open"$
io.TextIOWrapper"io.TextIOWrapper*4
self*
logging.FileHandler"logging.FileHandlerz36z37z38z39z310j36j37j38j39j310rc
baseFilename logging.FileHandler.baseFilename
builtins.str"builtins.str*36*37*38*39*310rS
modelogging.FileHandler.mode
builtins.str"builtins.str*36*37*38*39*310rÉ
encodinglogging.FileHandler.encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310rW
delaylogging.FileHandler.delay
builtins.bool"builtins.bool*36*37*38*39*310rs
errorslogging.FileHandler.errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None*39*310H
NullHandlerlogging.NullHandler"logging.Handlerj36j37j38j39j310≈
PlaceHolderlogging.PlaceHolder"builtins.object*¨
__init__logging.PlaceHolder.__init__"
None*4
self*
logging.PlaceHolder"logging.PlaceHolder*-
alogger 
logging.Logger"logging.Loggerz36z37z38z39z310*®
appendlogging.PlaceHolder.append"
None*4
self*
logging.PlaceHolder"logging.PlaceHolder*-
alogger 
logging.Logger"logging.Loggerz36z37z38z39z310j36j37j38j39j310r†
	loggerMaplogging.PlaceHolder.loggerMap_
"builtins.dict[logging.Logger,None] 
logging.Logger"logging.Logger
None"builtins.dict*36*37*38*39*310Î

RootLoggerlogging.RootLogger"logging.Logger*£
__init__logging.RootLogger.__init__"
None*2
self(
logging.RootLogger"logging.RootLogger*'
level
builtins.int"builtins.intz36z37z38z39z310j36j37j38j39j310î
PercentStylelogging.PercentStyle"builtins.object*¢
__init__logging.PercentStyle.__init__"
None*6
self,
logging.PercentStyle"logging.PercentStyle*%
fmt
builtins.str"builtins.strz36z37z38z39*¿
__init__logging.PercentStyle.__init__"
None*6
self,
logging.PercentStyle"logging.PercentStyle*%
fmt
builtins.str"builtins.str*¶
defaultsï
,Union[typing.Mapping[builtins.str,Any],None]Y
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping
None z310*ñ
usesTimelogging.PercentStyle.usesTime"
builtins.bool"builtins.bool*6
self,
logging.PercentStyle"logging.PercentStylez36z37z38z39z310*•
formatlogging.PercentStyle.format"
builtins.str"builtins.str*6
self,
logging.PercentStyle"logging.PercentStyle*
record
Anyz36z37z38z39z310*x
validatelogging.PercentStyle.validate"
None*6
self,
logging.PercentStyle"logging.PercentStylez38z39z310j36j37j38j39j310rh
default_format#logging.PercentStyle.default_format
builtins.str"builtins.str*36*37*38*39*310rh
asctime_format#logging.PercentStyle.asctime_format
builtins.str"builtins.str*36*37*38*39*310rh
asctime_search#logging.PercentStyle.asctime_search
builtins.str"builtins.str*36*37*38*39*310rT
_fmtlogging.PercentStyle._fmt
builtins.str"builtins.str*36*37*38*39*310rê
validation_pattern'logging.PercentStyle.validation_patternD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*38*39*310È
StrFormatStylelogging.StrFormatStyle"logging.PercentStylej36j37j38j39j310rÜ
fmt_speclogging.StrFormatStyle.fmt_specD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*36*37*38*39*310rä

field_spec!logging.StrFormatStyle.field_specD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*36*37*38*39*310¿
StringTemplateStylelogging.StringTemplateStyle"logging.PercentStylej36j37j38j39j310ra
_tpl logging.StringTemplateStyle._tpl"
string.Template"string.Template*36*37*38*39*310]
currentframelogging.currentframe""
types.FrameType"types.FrameTypez36z37z38z39z310ß
	getLoggerlogging.getLogger" 
logging.Logger"logging.Logger*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None z36z37z38z39z310y
getLoggerClasslogging.getLoggerClass":
Type[logging.Logger] 
logging.Logger"logging.Loggerz36z37z38z39z310î
getLogRecordFactorylogging.getLogRecordFactory"K
CallableType[builtins.function]&
builtins.function"builtins.functionz36z37z38z39z310Ø
debuglogging.debug"
None*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37‰
debuglogging.debug"
None*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310≠
infologging.info"
None*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37‚
infologging.info"
None*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310≥
warninglogging.warning"
None*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37Ë
warninglogging.warning"
None*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310≠
warnlogging.warn"
None*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37‚
warnlogging.warn"
None*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310Ø
errorlogging.error"
None*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37‰
errorlogging.error"
None*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310µ
criticallogging.critical"
None*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37Í
criticallogging.critical"
None*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310∑
	exceptionlogging.exception"
None*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37Ï
	exceptionlogging.exception"
None*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310‘
loglogging.log"
None*'
level
builtins.int"builtins.int*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37â
loglogging.log"
None*'
level
builtins.int"builtins.int*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310d
disablelogging.disable"
None*)
level
builtins.int"builtins.int z36z37z38z39z310ô
addLevelNamelogging.addLevelName"
None*'
level
builtins.int"builtins.int*+
	levelName
builtins.str"builtins.strz36z37z38z39z310Ú
getLevelNamelogging.getLevelName"
Any*≠
level°
+TypeAlias[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"logging._Levelz36z37z38z39z310Ò
makeLogRecordlogging.makeLogRecord"&
logging.LogRecord"logging.LogRecord*ã
dictÄ
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mappingz36z37z38z39z310ˇ
basicConfiglogging.basicConfig"
None*œ
filenameæ
DUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],None]È
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath
None *,
filemode
builtins.str"builtins.str **
format
builtins.str"builtins.str *S
datefmtD
Union[builtins.str,None]
builtins.str"builtins.str
None *ı
styleÁ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"logging._FormatStyle *˜
levelÈ
7Union[TypeAlias[Union[builtins.int,builtins.str]],None]°
+TypeAlias[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"logging._Level
None *Æ
streamü
1Union[_typeshed.SupportsWrite[builtins.str],None]^
%_typeshed.SupportsWrite[builtins.str]
builtins.str"builtins.str"_typeshed.SupportsWrite
None *§
handlersì
,Union[typing.Iterable[logging.Handler],None]W
 typing.Iterable[logging.Handler]"
logging.Handler"logging.Handler"typing.Iterable
None z36z37®
basicConfiglogging.basicConfig"
None*œ
filenameæ
DUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],None]È
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath
None *,
filemode
builtins.str"builtins.str **
format
builtins.str"builtins.str *S
datefmtD
Union[builtins.str,None]
builtins.str"builtins.str
None *ı
styleÁ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"logging._FormatStyle *˜
levelÈ
7Union[TypeAlias[Union[builtins.int,builtins.str]],None]°
+TypeAlias[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"logging._Level
None *Æ
streamü
1Union[_typeshed.SupportsWrite[builtins.str],None]^
%_typeshed.SupportsWrite[builtins.str]
builtins.str"builtins.str"_typeshed.SupportsWrite
None *§
handlersì
,Union[typing.Iterable[logging.Handler],None]W
 typing.Iterable[logging.Handler]"
logging.Handler"logging.Handler"typing.Iterable
None *+
force
builtins.bool"builtins.bool z38Ä
basicConfiglogging.basicConfig"
None*œ
filenameæ
DUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],None]È
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath
None *,
filemode
builtins.str"builtins.str **
format
builtins.str"builtins.str *S
datefmtD
Union[builtins.str,None]
builtins.str"builtins.str
None *ı
styleÁ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"logging._FormatStyle *˜
levelÈ
7Union[TypeAlias[Union[builtins.int,builtins.str]],None]°
+TypeAlias[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"logging._Level
None *Æ
streamü
1Union[_typeshed.SupportsWrite[builtins.str],None]^
%_typeshed.SupportsWrite[builtins.str]
builtins.str"builtins.str"_typeshed.SupportsWrite
None *§
handlersì
,Union[typing.Iterable[logging.Handler],None]W
 typing.Iterable[logging.Handler]"
logging.Handler"logging.Handler"typing.Iterable
None *T
forceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None z39z310Ä
shutdownlogging.shutdown"
None*C
handlerList0
typing.Sequence[Any]
Any"typing.Sequence z36z37z38z39z310é
setLoggerClasslogging.setLoggerClass"
None*E
klass:
Type[logging.Logger] 
logging.Logger"logging.Loggerz36z37z38z39z310v
captureWarningslogging.captureWarnings"
None*+
capture
builtins.bool"builtins.boolz36z37z38z39z310´
setLogRecordFactorylogging.setLogRecordFactory"
None*X
factoryK
CallableType[builtins.function]&
builtins.function"builtins.functionz36z37z38z39z310*}
__path__logging.__path__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*36*37*38*39*310*ò
__annotations__logging.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*{
__all__logging.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*36*37*38*39*310*_
raiseExceptionslogging.raiseExceptions
builtins.bool"builtins.bool*36*37*38*39*310*U

logThreadslogging.logThreads
builtins.bool"builtins.bool*36*37*38*39*310*e
logMultiprocessinglogging.logMultiprocessing
builtins.bool"builtins.bool*36*37*38*39*310*Y
logProcesseslogging.logProcesses
builtins.bool"builtins.bool*36*37*38*39*310*w
_srcfilelogging._srcfileD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310*∞
_levelToNamelogging._levelToNameu
(builtins.dict[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"builtins.dict*36*37*38*39*310*∞
_nameToLevellogging._nameToLevelu
(builtins.dict[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"builtins.dict*36*37*38*39*310*O
CRITICALlogging.CRITICAL
builtins.int"builtins.int*36*37*38*39*310*I
FATALlogging.FATAL
builtins.int"builtins.int*36*37*38*39*310*I
ERRORlogging.ERROR
builtins.int"builtins.int*36*37*38*39*310*M
WARNINGlogging.WARNING
builtins.int"builtins.int*36*37*38*39*310*G
WARNlogging.WARN
builtins.int"builtins.int*36*37*38*39*310*G
INFOlogging.INFO
builtins.int"builtins.int*36*37*38*39*310*I
DEBUGlogging.DEBUG
builtins.int"builtins.int*36*37*38*39*310*K
NOTSETlogging.NOTSET
builtins.int"builtins.int*36*37*38*39*310*x
fatallogging.fatalK
CallableType[builtins.function]&
builtins.function"builtins.function*36*37*38*39*310*©

lastResortlogging.lastResortr
&Union[logging.StreamHandler[Any],None]<
logging.StreamHandler[Any]
Any"logging.StreamHandler
None*36*37*38*39*310*S
rootlogging.root(
logging.RootLogger"logging.RootLogger*36*37*38*39*310*ü
_STYLESlogging._STYLESÌ
Dbuiltins.dict[builtins.str,Tuple[logging.PercentStyle,builtins.str]]
builtins.str"builtins.strx
(Tuple[logging.PercentStyle,builtins.str],
logging.PercentStyle"logging.PercentStyle
builtins.str"builtins.str"builtins.dict*36*37*38*39*310*W
BASIC_FORMATlogging.BASIC_FORMAT
builtins.str"builtins.str*36*37*38*39*310