
logging›
Filtererlogging.Filterer"builtins.object*è
	addFilterlogging.Filterer.addFilter"
None*.
self$
logging.Filterer"logging.Filterer*ë
filterÑ
@TypeAlias[Union[logging.Filter,CallableType[builtins.function]]]®
5Union[logging.Filter,CallableType[builtins.function]] 
logging.Filter"logging.FilterK
CallableType[builtins.function]&
builtins.function"builtins.function"logging._FilterTypez36z37z38z39z310z311*ï
removeFilterlogging.Filterer.removeFilter"
None*.
self$
logging.Filterer"logging.Filterer*ë
filterÑ
@TypeAlias[Union[logging.Filter,CallableType[builtins.function]]]®
5Union[logging.Filter,CallableType[builtins.function]] 
logging.Filter"logging.FilterK
CallableType[builtins.function]&
builtins.function"builtins.function"logging._FilterTypez36z37z38z39z310z311*ø
filterlogging.Filterer.filter"
builtins.bool"builtins.bool*.
self$
logging.Filterer"logging.Filterer*2
record&
logging.LogRecord"logging.LogRecordz36z37z38z39z310z311j36j37j38j39j310j311rß
filterslogging.Filterer.filtersÁ
Obuiltins.list[TypeAlias[Union[logging.Filter,CallableType[builtins.function]]]]Ñ
@TypeAlias[Union[logging.Filter,CallableType[builtins.function]]]®
5Union[logging.Filter,CallableType[builtins.function]] 
logging.Filter"logging.FilterK
CallableType[builtins.function]&
builtins.function"builtins.function"logging._FilterType"builtins.list*36*37*38*39*310*311Ù
Managerlogging.Manager"builtins.object*Æ
__init__logging.Manager.__init__"
None*,
self"
logging.Manager"logging.Manager*6
rootnode(
logging.RootLogger"logging.RootLoggerz36z37z38z39z310z311*∏
	getLoggerlogging.Manager.getLogger" 
logging.Logger"logging.Logger*,
self"
logging.Manager"logging.Manager*&
name
builtins.str"builtins.strz36z37z38z39z310z311*œ
setLoggerClasslogging.Manager.setLoggerClass"
None*,
self"
logging.Manager"logging.Manager*K
klass@
Type[logging.Logger] 
logging.Logger"logging.Logger"typez36z37z38z39z310z311*Ê
setLogRecordFactory#logging.Manager.setLogRecordFactory"
None*,
self"
logging.Manager"logging.Manager*X
factoryK
CallableType[builtins.function]&
builtins.function"builtins.functionz36z37z38z39z310z311j36j37j38j39j310j311r`
rootlogging.Manager.root(
logging.RootLogger"logging.RootLogger*36*37*38*39*310*311rZ
disablelogging.Manager.disable
builtins.int"builtins.int*36*37*38*39*310*311r|
emittedNoHandlerWarning'logging.Manager.emittedNoHandlerWarning
builtins.bool"builtins.bool*36*37*38*39*310*311r∂

loggerDictlogging.Manager.loggerDictÒ
Ebuiltins.dict[builtins.str,Union[logging.Logger,logging.PlaceHolder]]
builtins.str"builtins.str{
)Union[logging.Logger,logging.PlaceHolder] 
logging.Logger"logging.Logger*
logging.PlaceHolder"logging.PlaceHolder"builtins.dict*36*37*38*39*310*311r∂
loggerClasslogging.Manager.loggerClassp
 Union[Type[logging.Logger],None]@
Type[logging.Logger] 
logging.Logger"logging.Logger"type
None*36*37*38*39*310*311r◊
logRecordFactory logging.Manager.logRecordFactoryÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None*36*37*38*39*310*311€§
Loggerlogging.Logger"logging.Filterer*Õ
__init__logging.Logger.__init__"
None**
self 
logging.Logger"logging.Logger*&
name
builtins.str"builtins.str*Ø
level°
+TypeAlias[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"logging._Level z36z37z38z39z310z311*£
setLevellogging.Logger.setLevel"
None**
self 
logging.Logger"logging.Logger*≠
level°
+TypeAlias[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"logging._Levelz36z37z38z39z310z311*∫
isEnabledForlogging.Logger.isEnabledFor"
builtins.bool"builtins.bool**
self 
logging.Logger"logging.Logger*'
level
builtins.int"builtins.intz36z37z38z39z310z311*ô
getEffectiveLevel logging.Logger.getEffectiveLevel"
builtins.int"builtins.int**
self 
logging.Logger"logging.Loggerz36z37z38z39z310z311*á
getChildlogging.Logger.getChild"I
logging.Logger.Self 
logging.Logger"logging.Logger"logging.Logger*S
selfI
logging.Logger.Self 
logging.Logger"logging.Logger"logging.Logger*(
suffix
builtins.str"builtins.strz36z37z38z39z310z311*Ë
debuglogging.Logger.debug"
None**
self 
logging.Logger"logging.Logger*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37*¢
debuglogging.Logger.debug"
None**
self 
logging.Logger"logging.Logger*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310z311*Ê
infologging.Logger.info"
None**
self 
logging.Logger"logging.Logger*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37*†
infologging.Logger.info"
None**
self 
logging.Logger"logging.Logger*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310z311*Ï
warninglogging.Logger.warning"
None**
self 
logging.Logger"logging.Logger*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37*¶
warninglogging.Logger.warning"
None**
self 
logging.Logger"logging.Logger*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310z311*Ê
warnlogging.Logger.warn"
None**
self 
logging.Logger"logging.Logger*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37*†
warnlogging.Logger.warn"
None**
self 
logging.Logger"logging.Logger*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310z311*Ë
errorlogging.Logger.error"
None**
self 
logging.Logger"logging.Logger*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37*¢
errorlogging.Logger.error"
None**
self 
logging.Logger"logging.Logger*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310z311*Ó
criticallogging.Logger.critical"
None**
self 
logging.Logger"logging.Logger*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37*®
criticallogging.Logger.critical"
None**
self 
logging.Logger"logging.Logger*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310z311*ç
loglogging.Logger.log"
None**
self 
logging.Logger"logging.Logger*'
level
builtins.int"builtins.int*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37*«
loglogging.Logger.log"
None**
self 
logging.Logger"logging.Logger*'
level
builtins.int"builtins.int*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310z311*
	exceptionlogging.Logger.exception"
None**
self 
logging.Logger"logging.Logger*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37*™
	exceptionlogging.Logger.exception"
None**
self 
logging.Logger"logging.Logger*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310z311*Ù
_loglogging.Logger._log"
None**
self 
logging.Logger"logging.Logger*'
level
builtins.int"builtins.int*+
msg"
builtins.object"builtins.object*¥
args©
^TypeAlias[Union[builtins.tuple[builtins.object],typing.Mapping[builtins.str,builtins.object]]]±
SUnion[builtins.tuple[builtins.object],typing.Mapping[builtins.str,builtins.object]]U
builtins.tuple[builtins.object]"
builtins.object"builtins.object"builtins.tupleÄ
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping"logging._ArgsType*ˇ

exc_infoÓ

 Union[TypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]],None]í	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType
None *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *0

stack_info
builtins.bool"builtins.bool z36z37*Æ
_loglogging.Logger._log"
None**
self 
logging.Logger"logging.Logger*'
level
builtins.int"builtins.int*+
msg"
builtins.object"builtins.object*¥
args©
^TypeAlias[Union[builtins.tuple[builtins.object],typing.Mapping[builtins.str,builtins.object]]]±
SUnion[builtins.tuple[builtins.object],typing.Mapping[builtins.str,builtins.object]]U
builtins.tuple[builtins.object]"
builtins.object"builtins.object"builtins.tupleÄ
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping"logging._ArgsType*ˇ

exc_infoÓ

 Union[TypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]],None]í	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType
None *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int z38z39z310z311*•

addHandlerlogging.Logger.addHandler"
None**
self 
logging.Logger"logging.Logger*,
hdlr"
logging.Handler"logging.Handlerz36z37z38z39z310z311*´
removeHandlerlogging.Logger.removeHandler"
None**
self 
logging.Logger"logging.Logger*,
hdlr"
logging.Handler"logging.Handlerz36z37z38z39z310z311*˙

findCallerlogging.Logger.findCaller"Í
FTuple[builtins.str,builtins.int,builtins.str,Union[builtins.str,None]]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
None**
self 
logging.Logger"logging.Logger*0

stack_info
builtins.bool"builtins.bool z36z37*¥

findCallerlogging.Logger.findCaller"Í
FTuple[builtins.str,builtins.int,builtins.str,Union[builtins.str,None]]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
None**
self 
logging.Logger"logging.Logger*0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int z38z39z310z311*£
handlelogging.Logger.handle"
None**
self 
logging.Logger"logging.Logger*2
record&
logging.LogRecord"logging.LogRecordz36z37z38z39z310z311*Á

makeRecordlogging.Logger.makeRecord"&
logging.LogRecord"logging.LogRecord**
self 
logging.Logger"logging.Logger*&
name
builtins.str"builtins.str*'
level
builtins.int"builtins.int*$
fn
builtins.str"builtins.str*%
lno
builtins.int"builtins.int*+
msg"
builtins.object"builtins.object*¥
args©
^TypeAlias[Union[builtins.tuple[builtins.object],typing.Mapping[builtins.str,builtins.object]]]±
SUnion[builtins.tuple[builtins.object],typing.Mapping[builtins.str,builtins.object]]U
builtins.tuple[builtins.object]"
builtins.object"builtins.object"builtins.tupleÄ
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping"logging._ArgsType*Œ
exc_infoø
éUnion[TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],None]ü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType
None*P
funcD
Union[builtins.str,None]
builtins.str"builtins.str
None *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *Q
sinfoD
Union[builtins.str,None]
builtins.str"builtins.str
None z36z37z38z39z310z311*è
hasHandlerslogging.Logger.hasHandlers"
builtins.bool"builtins.bool**
self 
logging.Logger"logging.Loggerz36z37z38z39z310z311*Ø
callHandlerslogging.Logger.callHandlers"
None**
self 
logging.Logger"logging.Logger*2
record&
logging.LogRecord"logging.LogRecordz36z37z38z39z310z311j36j37j38j39j310j311rS
namelogging.Logger.name
builtins.str"builtins.str*36*37*38*39*310*311rU
levellogging.Logger.level
builtins.int"builtins.int*36*37*38*39*310*311rÖ
parentlogging.Logger.parentJ
Union[logging.Logger,None] 
logging.Logger"logging.Logger
None*36*37*38*39*310*311r_
	propagatelogging.Logger.propagate
builtins.bool"builtins.bool*36*37*38*39*310*311rí
handlerslogging.Logger.handlersS
builtins.list[logging.Handler]"
logging.Handler"logging.Handler"builtins.list*36*37*38*39*310*311r]
disabledlogging.Logger.disabled
builtins.bool"builtins.bool*36*37*38*39*310*311r_
rootlogging.Logger.root(
logging.RootLogger"logging.RootLogger*36*37*38*39*310*311r_
managerlogging.Logger.manager"
logging.Manager"logging.Manager*36*37*38*39*310*311rÑ
fatallogging.Logger.fatalK
CallableType[builtins.function]&
builtins.function"builtins.function*36*37*38*39*310*311∫
Handlerlogging.Handler"logging.Filterer*®
__init__logging.Handler.__init__"
None*,
self"
logging.Handler"logging.Handler*Ø
level°
+TypeAlias[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"logging._Level z36z37z38z39z310z311*ä
get_namelogging.Handler.get_name"
builtins.str"builtins.str*,
self"
logging.Handler"logging.Handlerz36z37z38z39z310z311*û
set_namelogging.Handler.set_name"
None*,
self"
logging.Handler"logging.Handler*&
name
builtins.str"builtins.strz36z37z38z39z310z311*z

createLocklogging.Handler.createLock"
None*,
self"
logging.Handler"logging.Handlerz36z37z38z39z310z311*t
acquirelogging.Handler.acquire"
None*,
self"
logging.Handler"logging.Handlerz36z37z38z39z310z311*t
releaselogging.Handler.release"
None*,
self"
logging.Handler"logging.Handlerz36z37z38z39z310z311*¶
setLevellogging.Handler.setLevel"
None*,
self"
logging.Handler"logging.Handler*≠
level°
+TypeAlias[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"logging._Levelz36z37z38z39z310z311*‹
setFormatterlogging.Handler.setFormatter"
None*,
self"
logging.Handler"logging.Handler*\
fmtS
Union[logging.Formatter,None]&
logging.Formatter"logging.Formatter
Nonez36z37z38z39z310z311*p
flushlogging.Handler.flush"
None*,
self"
logging.Handler"logging.Handlerz36z37z38z39z310z311*p
closelogging.Handler.close"
None*,
self"
logging.Handler"logging.Handlerz36z37z38z39z310z311*º
handlelogging.Handler.handle"
builtins.bool"builtins.bool*,
self"
logging.Handler"logging.Handler*2
record&
logging.LogRecord"logging.LogRecordz36z37z38z39z310z311*∞
handleErrorlogging.Handler.handleError"
None*,
self"
logging.Handler"logging.Handler*2
record&
logging.LogRecord"logging.LogRecordz36z37z38z39z310z311*∫
formatlogging.Handler.format"
builtins.str"builtins.str*,
self"
logging.Handler"logging.Handler*2
record&
logging.LogRecord"logging.LogRecordz36z37z38z39z310z311*¢
emitlogging.Handler.emit"
None*,
self"
logging.Handler"logging.Handler*2
record&
logging.LogRecord"logging.LogRecordz36z37z38z39z310z311j36j37j38j39j310j311rV
levellogging.Handler.level
builtins.int"builtins.int*36*37*38*39*310*311rï
	formatterlogging.Handler.formatterS
Union[logging.Formatter,None]&
logging.Formatter"logging.Formatter
None*36*37*38*39*310*311rÇ
locklogging.Handler.lockJ
Union[threading.Lock,None] 
threading.Lock"threading.Lock
None*36*37*38*39*310*311r|
namelogging.Handler.nameD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310*311«'
	Formatterlogging.Formatter"builtins.object*à
__init__logging.Formatter.__init__"
None*0
self&
logging.Formatter"logging.Formatter*O
fmtD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
datefmtD
Union[builtins.str,None]
builtins.str"builtins.str
None *ı
styleÁ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"logging._FormatStyle z36z37*∏
__init__logging.Formatter.__init__"
None*0
self&
logging.Formatter"logging.Formatter*O
fmtD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
datefmtD
Union[builtins.str,None]
builtins.str"builtins.str
None *ı
styleÁ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"logging._FormatStyle *.
validate
builtins.bool"builtins.bool z38z39*„
__init__logging.Formatter.__init__"
None*0
self&
logging.Formatter"logging.Formatter*O
fmtD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
datefmtD
Union[builtins.str,None]
builtins.str"builtins.str
None *ı
styleÁ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"logging._FormatStyle *.
validate
builtins.bool"builtins.bool *¶
defaultsï
,Union[typing.Mapping[builtins.str,Any],None]Y
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping
None z310z311*¿
formatlogging.Formatter.format"
builtins.str"builtins.str*0
self&
logging.Formatter"logging.Formatter*2
record&
logging.LogRecord"logging.LogRecordz36z37z38z39z310z311*ù

formatTimelogging.Formatter.formatTime"
builtins.str"builtins.str*0
self&
logging.Formatter"logging.Formatter*2
record&
logging.LogRecord"logging.LogRecord*S
datefmtD
Union[builtins.str,None]
builtins.str"builtins.str
None z36z37z38z39z310z311*…
formatException!logging.Formatter.formatException"
builtins.str"builtins.str*0
self&
logging.Formatter"logging.Formatter*®
eiü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoTypez36z37z38z39z310z311*Œ
formatMessagelogging.Formatter.formatMessage"
builtins.str"builtins.str*0
self&
logging.Formatter"logging.Formatter*2
record&
logging.LogRecord"logging.LogRecordz36z37z38z39z310z311*ƒ
formatStacklogging.Formatter.formatStack"
builtins.str"builtins.str*0
self&
logging.Formatter"logging.Formatter*,

stack_info
builtins.str"builtins.strz36z37z38z39z310z311*í
usesTimelogging.Formatter.usesTime"
builtins.bool"builtins.bool*0
self&
logging.Formatter"logging.Formatterz36z37z38z39z310z311j36j37j38j39j310j311rè
	converterlogging.Formatter.converterK
CallableType[builtins.function]&
builtins.function"builtins.function*36*37*38*39*310*311r~
_fmtlogging.Formatter._fmtD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310*311rÑ
datefmtlogging.Formatter.datefmtD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310*311rj
_stylelogging.Formatter._style,
logging.PercentStyle"logging.PercentStyle*36*37*38*39*310*311rt
default_time_format%logging.Formatter.default_time_format
builtins.str"builtins.str*36*37*38*39*310*311rf
default_msec_format%logging.Formatter.default_msec_format
builtins.str"builtins.str*36*37*38rê
default_msec_format%logging.Formatter.default_msec_formatD
Union[builtins.str,None]
builtins.str"builtins.str
None*39*310*311§

BufferingFormatterlogging.BufferingFormatter"builtins.object*˚
__init__#logging.BufferingFormatter.__init__"
None*B
self8
logging.BufferingFormatter"logging.BufferingFormatter*b
linefmtS
Union[logging.Formatter,None]&
logging.Formatter"logging.Formatter
None z36z37z38z39z310z311*ü
formatHeader'logging.BufferingFormatter.formatHeader"
builtins.str"builtins.str*B
self8
logging.BufferingFormatter"logging.BufferingFormatter*j
records]
"typing.Sequence[logging.LogRecord]&
logging.LogRecord"logging.LogRecord"typing.Sequencez36z37z38z39z310z311*ü
formatFooter'logging.BufferingFormatter.formatFooter"
builtins.str"builtins.str*B
self8
logging.BufferingFormatter"logging.BufferingFormatter*j
records]
"typing.Sequence[logging.LogRecord]&
logging.LogRecord"logging.LogRecord"typing.Sequencez36z37z38z39z310z311*ì
format!logging.BufferingFormatter.format"
builtins.str"builtins.str*B
self8
logging.BufferingFormatter"logging.BufferingFormatter*j
records]
"typing.Sequence[logging.LogRecord]&
logging.LogRecord"logging.LogRecord"typing.Sequencez36z37z38z39z310z311j36j37j38j39j310j311ro
linefmt"logging.BufferingFormatter.linefmt&
logging.Formatter"logging.Formatter*36*37*38*39*310*311…
Filterlogging.Filter"builtins.object*ù
__init__logging.Filter.__init__"
None**
self 
logging.Filter"logging.Filter*(
name
builtins.str"builtins.str z36z37z38z39z310z311*π
filterlogging.Filter.filter"
builtins.bool"builtins.bool**
self 
logging.Filter"logging.Filter*2
record&
logging.LogRecord"logging.LogRecordz36z37z38z39z310z311j36j37j38j39j310j311rS
namelogging.Filter.name
builtins.str"builtins.str*36*37*38*39*310*311rS
nlenlogging.Filter.nlen
builtins.int"builtins.int*36*37*38*39*310*311ä/
	LogRecordlogging.LogRecord"builtins.object*¯
__init__logging.LogRecord.__init__"
None*0
self&
logging.LogRecord"logging.LogRecord*&
name
builtins.str"builtins.str*'
level
builtins.int"builtins.int**
pathname
builtins.str"builtins.str*(
lineno
builtins.int"builtins.int*+
msg"
builtins.object"builtins.object*Ø
args§
jUnion[TypeAlias[Union[builtins.tuple[builtins.object],typing.Mapping[builtins.str,builtins.object]]],None]©
^TypeAlias[Union[builtins.tuple[builtins.object],typing.Mapping[builtins.str,builtins.object]]]±
SUnion[builtins.tuple[builtins.object],typing.Mapping[builtins.str,builtins.object]]U
builtins.tuple[builtins.object]"
builtins.object"builtins.object"builtins.tupleÄ
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping"logging._ArgsType
None*Œ
exc_infoø
éUnion[TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],None]ü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType
None*P
funcD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
sinfoD
Union[builtins.str,None]
builtins.str"builtins.str
None z36z37z38z39z310z311*î

getMessagelogging.LogRecord.getMessage"
builtins.str"builtins.str*0
self&
logging.LogRecord"logging.LogRecordz36z37z38z39z310z311*≠
__setattr__logging.LogRecord.__setattr__"
None*0
self&
logging.LogRecord"logging.LogRecord*
builtins.str"builtins.str*	
Anyz36z37z38z39z310z311j36j37j38j39j310j311rﬂ
argslogging.LogRecord.args§
jUnion[TypeAlias[Union[builtins.tuple[builtins.object],typing.Mapping[builtins.str,builtins.object]]],None]©
^TypeAlias[Union[builtins.tuple[builtins.object],typing.Mapping[builtins.str,builtins.object]]]±
SUnion[builtins.tuple[builtins.object],typing.Mapping[builtins.str,builtins.object]]U
builtins.tuple[builtins.object]"
builtins.object"builtins.object"builtins.tupleÄ
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping"logging._ArgsType
None*36*37*38*39*310*311r\
asctimelogging.LogRecord.asctime
builtins.str"builtins.str*36*37*38*39*310*311r`
createdlogging.LogRecord.created 
builtins.float"builtins.float*36*37*38*39*310*311rÇ
exc_infologging.LogRecord.exc_infoø
éUnion[TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],None]ü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType
None*36*37*38*39*310*311rÜ
exc_textlogging.LogRecord.exc_textD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310*311r^
filenamelogging.LogRecord.filename
builtins.str"builtins.str*36*37*38*39*310*311r^
funcNamelogging.LogRecord.funcName
builtins.str"builtins.str*36*37*38*39*310*311r`
	levelnamelogging.LogRecord.levelname
builtins.str"builtins.str*36*37*38*39*310*311r\
levelnologging.LogRecord.levelno
builtins.int"builtins.int*36*37*38*39*310*311rZ
linenologging.LogRecord.lineno
builtins.int"builtins.int*36*37*38*39*310*311rZ
modulelogging.LogRecord.module
builtins.str"builtins.str*36*37*38*39*310*311r\
msecslogging.LogRecord.msecs 
builtins.float"builtins.float*36*37*38*39*310*311r\
messagelogging.LogRecord.message
builtins.str"builtins.str*36*37*38*39*310*311rz
msglogging.LogRecord.msgB
Union[builtins.str,Any]
builtins.str"builtins.str
Any*36*37*38*39*310*311rV
namelogging.LogRecord.name
builtins.str"builtins.str*36*37*38*39*310*311r^
pathnamelogging.LogRecord.pathname
builtins.str"builtins.str*36*37*38*39*310*311rÑ
processlogging.LogRecord.processD
Union[builtins.int,None]
builtins.int"builtins.int
None*36*37*38*39*310*311rå
processNamelogging.LogRecord.processNameD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310*311rp
relativeCreated!logging.LogRecord.relativeCreated 
builtins.float"builtins.float*36*37*38*39*310*311rä

stack_infologging.LogRecord.stack_infoD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310*311rÇ
threadlogging.LogRecord.threadD
Union[builtins.int,None]
builtins.int"builtins.int
None*36*37*38*39*310*311rä

threadNamelogging.LogRecord.threadNameD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310*311ß≠
LoggerAdapterlogging.LoggerAdapter"builtins.object*¯
__init__logging.LoggerAdapter.__init__"
None*Ì
self‚
!logging.LoggerAdapter[logging._L]•

logging._Lî
0Union[logging.Logger,logging.LoggerAdapter[Any]] 
logging.Logger"logging.Logger<
logging.LoggerAdapter[Any]
Any"logging.LoggerAdapter"logging.LoggerAdapter*≤
logger•

logging._Lî
0Union[logging.Logger,logging.LoggerAdapter[Any]] 
logging.Logger"logging.Logger<
logging.LoggerAdapter[Any]
Any"logging.LoggerAdapter*å
extraÄ
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mappingz36z37z38z39*Ω
__init__logging.LoggerAdapter.__init__"
None*Ì
self‚
!logging.LoggerAdapter[logging._L]•

logging._Lî
0Union[logging.Logger,logging.LoggerAdapter[Any]] 
logging.Logger"logging.Logger<
logging.LoggerAdapter[Any]
Any"logging.LoggerAdapter"logging.LoggerAdapter*≤
logger•

logging._Lî
0Union[logging.Logger,logging.LoggerAdapter[Any]] 
logging.Logger"logging.Logger<
logging.LoggerAdapter[Any]
Any"logging.LoggerAdapter*◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z310z311*‰
processlogging.LoggerAdapter.process"®
2Tuple[Any,typing.MutableMapping[builtins.str,Any]]
Anyg
'typing.MutableMapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.MutableMapping*Ì
self‚
!logging.LoggerAdapter[logging._L]•

logging._Lî
0Union[logging.Logger,logging.LoggerAdapter[Any]] 
logging.Logger"logging.Logger<
logging.LoggerAdapter[Any]
Any"logging.LoggerAdapter"logging.LoggerAdapter*
msg
Any*s
kwargsg
'typing.MutableMapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.MutableMappingz36z37z38z39z310z311*„
debuglogging.LoggerAdapter.debug"
None*Ì
self‚
!logging.LoggerAdapter[logging._L]•

logging._Lî
0Union[logging.Logger,logging.LoggerAdapter[Any]] 
logging.Logger"logging.Logger<
logging.LoggerAdapter[Any]
Any"logging.LoggerAdapter"logging.LoggerAdapter*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz36z37*ù
debuglogging.LoggerAdapter.debug"
None*Ì
self‚
!logging.LoggerAdapter[logging._L]•

logging._Lî
0Union[logging.Logger,logging.LoggerAdapter[Any]] 
logging.Logger"logging.Logger<
logging.LoggerAdapter[Any]
Any"logging.LoggerAdapter"logging.LoggerAdapter*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz38z39z310z311*·
infologging.LoggerAdapter.info"
None*Ì
self‚
!logging.LoggerAdapter[logging._L]•

logging._Lî
0Union[logging.Logger,logging.LoggerAdapter[Any]] 
logging.Logger"logging.Logger<
logging.LoggerAdapter[Any]
Any"logging.LoggerAdapter"logging.LoggerAdapter*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz36z37*õ
infologging.LoggerAdapter.info"
None*Ì
self‚
!logging.LoggerAdapter[logging._L]•

logging._Lî
0Union[logging.Logger,logging.LoggerAdapter[Any]] 
logging.Logger"logging.Logger<
logging.LoggerAdapter[Any]
Any"logging.LoggerAdapter"logging.LoggerAdapter*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz38z39z310z311*Á
warninglogging.LoggerAdapter.warning"
None*Ì
self‚
!logging.LoggerAdapter[logging._L]•

logging._Lî
0Union[logging.Logger,logging.LoggerAdapter[Any]] 
logging.Logger"logging.Logger<
logging.LoggerAdapter[Any]
Any"logging.LoggerAdapter"logging.LoggerAdapter*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz36z37*°
warninglogging.LoggerAdapter.warning"
None*Ì
self‚
!logging.LoggerAdapter[logging._L]•

logging._Lî
0Union[logging.Logger,logging.LoggerAdapter[Any]] 
logging.Logger"logging.Logger<
logging.LoggerAdapter[Any]
Any"logging.LoggerAdapter"logging.LoggerAdapter*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz38z39z310z311*·
warnlogging.LoggerAdapter.warn"
None*Ì
self‚
!logging.LoggerAdapter[logging._L]•

logging._Lî
0Union[logging.Logger,logging.LoggerAdapter[Any]] 
logging.Logger"logging.Logger<
logging.LoggerAdapter[Any]
Any"logging.LoggerAdapter"logging.LoggerAdapter*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz36z37*õ
warnlogging.LoggerAdapter.warn"
None*Ì
self‚
!logging.LoggerAdapter[logging._L]•

logging._Lî
0Union[logging.Logger,logging.LoggerAdapter[Any]] 
logging.Logger"logging.Logger<
logging.LoggerAdapter[Any]
Any"logging.LoggerAdapter"logging.LoggerAdapter*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz38z39z310z311*„
errorlogging.LoggerAdapter.error"
None*Ì
self‚
!logging.LoggerAdapter[logging._L]•

logging._Lî
0Union[logging.Logger,logging.LoggerAdapter[Any]] 
logging.Logger"logging.Logger<
logging.LoggerAdapter[Any]
Any"logging.LoggerAdapter"logging.LoggerAdapter*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz36z37*ù
errorlogging.LoggerAdapter.error"
None*Ì
self‚
!logging.LoggerAdapter[logging._L]•

logging._Lî
0Union[logging.Logger,logging.LoggerAdapter[Any]] 
logging.Logger"logging.Logger<
logging.LoggerAdapter[Any]
Any"logging.LoggerAdapter"logging.LoggerAdapter*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz38z39z310z311*Î
	exceptionlogging.LoggerAdapter.exception"
None*Ì
self‚
!logging.LoggerAdapter[logging._L]•

logging._Lî
0Union[logging.Logger,logging.LoggerAdapter[Any]] 
logging.Logger"logging.Logger<
logging.LoggerAdapter[Any]
Any"logging.LoggerAdapter"logging.LoggerAdapter*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz36z37*•
	exceptionlogging.LoggerAdapter.exception"
None*Ì
self‚
!logging.LoggerAdapter[logging._L]•

logging._Lî
0Union[logging.Logger,logging.LoggerAdapter[Any]] 
logging.Logger"logging.Logger<
logging.LoggerAdapter[Any]
Any"logging.LoggerAdapter"logging.LoggerAdapter*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz38z39z310z311*È
criticallogging.LoggerAdapter.critical"
None*Ì
self‚
!logging.LoggerAdapter[logging._L]•

logging._Lî
0Union[logging.Logger,logging.LoggerAdapter[Any]] 
logging.Logger"logging.Logger<
logging.LoggerAdapter[Any]
Any"logging.LoggerAdapter"logging.LoggerAdapter*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz36z37*£
criticallogging.LoggerAdapter.critical"
None*Ì
self‚
!logging.LoggerAdapter[logging._L]•

logging._Lî
0Union[logging.Logger,logging.LoggerAdapter[Any]] 
logging.Logger"logging.Logger<
logging.LoggerAdapter[Any]
Any"logging.LoggerAdapter"logging.LoggerAdapter*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz38z39z310z311*à
loglogging.LoggerAdapter.log"
None*Ì
self‚
!logging.LoggerAdapter[logging._L]•

logging._Lî
0Union[logging.Logger,logging.LoggerAdapter[Any]] 
logging.Logger"logging.Logger<
logging.LoggerAdapter[Any]
Any"logging.LoggerAdapter"logging.LoggerAdapter*'
level
builtins.int"builtins.int*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz36z37*¬
loglogging.LoggerAdapter.log"
None*Ì
self‚
!logging.LoggerAdapter[logging._L]•

logging._Lî
0Union[logging.Logger,logging.LoggerAdapter[Any]] 
logging.Logger"logging.Logger<
logging.LoggerAdapter[Any]
Any"logging.LoggerAdapter"logging.LoggerAdapter*'
level
builtins.int"builtins.int*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *.
kwargs"
builtins.object"builtins.objectz38z39z310z311*Ö
isEnabledFor"logging.LoggerAdapter.isEnabledFor"
builtins.bool"builtins.bool*Ì
self‚
!logging.LoggerAdapter[logging._L]•

logging._Lî
0Union[logging.Logger,logging.LoggerAdapter[Any]] 
logging.Logger"logging.Logger<
logging.LoggerAdapter[Any]
Any"logging.LoggerAdapter"logging.LoggerAdapter*'
level
builtins.int"builtins.intz36z37z38z39z310z311*‰
getEffectiveLevel'logging.LoggerAdapter.getEffectiveLevel"
builtins.int"builtins.int*Ì
self‚
!logging.LoggerAdapter[logging._L]•

logging._Lî
0Union[logging.Logger,logging.LoggerAdapter[Any]] 
logging.Logger"logging.Logger<
logging.LoggerAdapter[Any]
Any"logging.LoggerAdapter"logging.LoggerAdapterz36z37z38z39z310z311*Ó
setLevellogging.LoggerAdapter.setLevel"
None*Ì
self‚
!logging.LoggerAdapter[logging._L]•

logging._Lî
0Union[logging.Logger,logging.LoggerAdapter[Any]] 
logging.Logger"logging.Logger<
logging.LoggerAdapter[Any]
Any"logging.LoggerAdapter"logging.LoggerAdapter*≠
level°
+TypeAlias[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"logging._Levelz36z37z38z39z310z311*⁄
hasHandlers!logging.LoggerAdapter.hasHandlers"
builtins.bool"builtins.bool*Ì
self‚
!logging.LoggerAdapter[logging._L]•

logging._Lî
0Union[logging.Logger,logging.LoggerAdapter[Any]] 
logging.Logger"logging.Logger<
logging.LoggerAdapter[Any]
Any"logging.LoggerAdapter"logging.LoggerAdapterz36z37z38z39z310z311*—
_loglogging.LoggerAdapter._log"
None*Ì
self‚
!logging.LoggerAdapter[logging._L]•

logging._Lî
0Union[logging.Logger,logging.LoggerAdapter[Any]] 
logging.Logger"logging.Logger<
logging.LoggerAdapter[Any]
Any"logging.LoggerAdapter"logging.LoggerAdapter*'
level
builtins.int"builtins.int*+
msg"
builtins.object"builtins.object*¥
args©
^TypeAlias[Union[builtins.tuple[builtins.object],typing.Mapping[builtins.str,builtins.object]]]±
SUnion[builtins.tuple[builtins.object],typing.Mapping[builtins.str,builtins.object]]U
builtins.tuple[builtins.object]"
builtins.object"builtins.object"builtins.tupleÄ
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping"logging._ArgsType*ˇ

exc_infoÓ

 Union[TypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]],None]í	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType
None *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None *0

stack_info
builtins.bool"builtins.bool z36z37z38z39z310z311*ÿ
namelogging.LoggerAdapter.name"
builtins.str"builtins.str*Ì
self‚
!logging.LoggerAdapter[logging._L]•

logging._Lî
0Union[logging.Logger,logging.LoggerAdapter[Any]] 
logging.Logger"logging.Logger<
logging.LoggerAdapter[Any]
Any"logging.LoggerAdapter"logging.LoggerAdapter0:property`z36z37z38z39z310z311*£
__class_getitem__'logging.LoggerAdapter.__class_getitem__"(
types.GenericAlias"types.GenericAlias*†
clsñ
'Type[logging.LoggerAdapter[logging._L]]‚
!logging.LoggerAdapter[logging._L]•

logging._Lî
0Union[logging.Logger,logging.LoggerAdapter[Any]] 
logging.Logger"logging.Logger<
logging.LoggerAdapter[Any]
Any"logging.LoggerAdapter"logging.LoggerAdapter"type*
item
Anypz311Pj36j37j38j39j310j311rË
loggerlogging.LoggerAdapter.logger•

logging._Lî
0Union[logging.Logger,logging.LoggerAdapter[Any]] 
logging.Logger"logging.Logger<
logging.LoggerAdapter[Any]
Any"logging.LoggerAdapter*36*37*38*39*310*311rf
managerlogging.LoggerAdapter.manager"
logging.Manager"logging.Manager*36*37*38*39*310*311r∑
extralogging.LoggerAdapter.extraÄ
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping*36*37*38*39r˙
extralogging.LoggerAdapter.extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None*310*311ˆ
StreamHandlerlogging.StreamHandler"logging.Handler*˛
	setStreamlogging.StreamHandler.setStream"∫
Union[logging._StreamT,None]ç
logging._StreamT^
%_typeshed.SupportsWrite[builtins.str]
builtins.str"builtins.str"_typeshed.SupportsWrite"_typeshed.SupportsWrite
None*€
self–
'logging.StreamHandler[logging._StreamT]ç
logging._StreamT^
%_typeshed.SupportsWrite[builtins.str]
builtins.str"builtins.str"_typeshed.SupportsWrite"_typeshed.SupportsWrite"logging.StreamHandler*ö
streamç
logging._StreamT^
%_typeshed.SupportsWrite[builtins.str]
builtins.str"builtins.str"_typeshed.SupportsWrite"_typeshed.SupportsWritez36z37z38z39z310z311*ó
__class_getitem__'logging.StreamHandler.__class_getitem__"(
types.GenericAlias"types.GenericAlias*î
clsä
-Type[logging.StreamHandler[logging._StreamT]]–
'logging.StreamHandler[logging._StreamT]ç
logging._StreamT^
%_typeshed.SupportsWrite[builtins.str]
builtins.str"builtins.str"_typeshed.SupportsWrite"_typeshed.SupportsWrite"logging.StreamHandler"type*
item
Anypz3112 
__init__logging.StreamHandler.__init__√
__init__logging.StreamHandler.__init__"
None*g
self]
$logging.StreamHandler[typing.TextIO]
typing.TextIO"typing.TextIO"logging.StreamHandler*
stream
None 0:overloadXΩ
__init__logging.StreamHandler.__init__"
None*€
self–
'logging.StreamHandler[logging._StreamT]ç
logging._StreamT^
%_typeshed.SupportsWrite[builtins.str]
builtins.str"builtins.str"_typeshed.SupportsWrite"_typeshed.SupportsWrite"logging.StreamHandler*ö
streamç
logging._StreamT^
%_typeshed.SupportsWrite[builtins.str]
builtins.str"builtins.str"_typeshed.SupportsWrite"_typeshed.SupportsWrite0:overloadX"36"37"38"39"310"311Pj36j37j38j39j310j311r–
streamlogging.StreamHandler.streamç
logging._StreamT^
%_typeshed.SupportsWrite[builtins.str]
builtins.str"builtins.str"_typeshed.SupportsWrite"_typeshed.SupportsWrite*36*37*38*39*310*311rf

terminator logging.StreamHandler.terminator
builtins.str"builtins.str*36*37*38*39*310*311©
FileHandlerlogging.FileHandler"logging.StreamHandler*ú
__init__logging.FileHandler.__init__"
None*4
self*
logging.FileHandler"logging.FileHandler*¯
filenameÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*(
mode
builtins.str"builtins.str *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *+
delay
builtins.bool"builtins.bool z36z37z38*Ú
__init__logging.FileHandler.__init__"
None*4
self*
logging.FileHandler"logging.FileHandler*¯
filenameÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*(
mode
builtins.str"builtins.str *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *+
delay
builtins.bool"builtins.bool *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None z39z310z311*ò
_openlogging.FileHandler._open"$
io.TextIOWrapper"io.TextIOWrapper*4
self*
logging.FileHandler"logging.FileHandlerz36z37z38z39z310z311j36j37j38j39j310j311rh
baseFilename logging.FileHandler.baseFilename
builtins.str"builtins.str*36*37*38*39*310*311rX
modelogging.FileHandler.mode
builtins.str"builtins.str*36*37*38*39*310*311rà
encodinglogging.FileHandler.encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310*311r\
delaylogging.FileHandler.delay
builtins.bool"builtins.bool*36*37*38*39*310*311rx
errorslogging.FileHandler.errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None*39*310*311M
NullHandlerlogging.NullHandler"logging.Handlerj36j37j38j39j310j311Ÿ
PlaceHolderlogging.PlaceHolder"builtins.object*±
__init__logging.PlaceHolder.__init__"
None*4
self*
logging.PlaceHolder"logging.PlaceHolder*-
alogger 
logging.Logger"logging.Loggerz36z37z38z39z310z311*≠
appendlogging.PlaceHolder.append"
None*4
self*
logging.PlaceHolder"logging.PlaceHolder*-
alogger 
logging.Logger"logging.Loggerz36z37z38z39z310z311j36j37j38j39j310j311r•
	loggerMaplogging.PlaceHolder.loggerMap_
"builtins.dict[logging.Logger,None] 
logging.Logger"logging.Logger
None"builtins.dict*36*37*38*39*310*311ı

RootLoggerlogging.RootLogger"logging.Logger*®
__init__logging.RootLogger.__init__"
None*2
self(
logging.RootLogger"logging.RootLogger*'
level
builtins.int"builtins.intz36z37z38z39z310z311j36j37j38j39j310j311∆
PercentStylelogging.PercentStyle"builtins.object*¢
__init__logging.PercentStyle.__init__"
None*6
self,
logging.PercentStyle"logging.PercentStyle*%
fmt
builtins.str"builtins.strz36z37z38z39*≈
__init__logging.PercentStyle.__init__"
None*6
self,
logging.PercentStyle"logging.PercentStyle*%
fmt
builtins.str"builtins.str*¶
defaultsï
,Union[typing.Mapping[builtins.str,Any],None]Y
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping
None z310z311*õ
usesTimelogging.PercentStyle.usesTime"
builtins.bool"builtins.bool*6
self,
logging.PercentStyle"logging.PercentStylez36z37z38z39z310z311*™
formatlogging.PercentStyle.format"
builtins.str"builtins.str*6
self,
logging.PercentStyle"logging.PercentStyle*
record
Anyz36z37z38z39z310z311*}
validatelogging.PercentStyle.validate"
None*6
self,
logging.PercentStyle"logging.PercentStylez38z39z310z311j36j37j38j39j310j311rm
default_format#logging.PercentStyle.default_format
builtins.str"builtins.str*36*37*38*39*310*311rm
asctime_format#logging.PercentStyle.asctime_format
builtins.str"builtins.str*36*37*38*39*310*311rm
asctime_search#logging.PercentStyle.asctime_search
builtins.str"builtins.str*36*37*38*39*310*311rY
_fmtlogging.PercentStyle._fmt
builtins.str"builtins.str*36*37*38*39*310*311rï
validation_pattern'logging.PercentStyle.validation_patternD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*38*39*310*311¯
StrFormatStylelogging.StrFormatStyle"logging.PercentStylej36j37j38j39j310j311rã
fmt_speclogging.StrFormatStyle.fmt_specD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*36*37*38*39*310*311rè

field_spec!logging.StrFormatStyle.field_specD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*36*37*38*39*310*311 
StringTemplateStylelogging.StringTemplateStyle"logging.PercentStylej36j37j38j39j310j311rf
_tpl logging.StringTemplateStyle._tpl"
string.Template"string.Template*36*37*38*39*310*311b
currentframelogging.currentframe""
types.FrameType"types.FrameTypez36z37z38z39z310z311¨
	getLoggerlogging.getLogger" 
logging.Logger"logging.Logger*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None z36z37z38z39z310z311Ñ
getLoggerClasslogging.getLoggerClass"@
Type[logging.Logger] 
logging.Logger"logging.Logger"typez36z37z38z39z310z311ô
getLogRecordFactorylogging.getLogRecordFactory"K
CallableType[builtins.function]&
builtins.function"builtins.functionz36z37z38z39z310z311µ
debuglogging.debug"
None*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37Ô
debuglogging.debug"
None*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310z311≥
infologging.info"
None*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37Ì
infologging.info"
None*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310z311π
warninglogging.warning"
None*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37Û
warninglogging.warning"
None*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310z311≥
warnlogging.warn"
None*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37Ì
warnlogging.warn"
None*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310z311µ
errorlogging.error"
None*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37Ô
errorlogging.error"
None*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310z311ª
criticallogging.critical"
None*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37ı
criticallogging.critical"
None*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310z311Ω
	exceptionlogging.exception"
None*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37˜
	exceptionlogging.exception"
None*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310z311⁄
loglogging.log"
None*'
level
builtins.int"builtins.int*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z36z37î
loglogging.log"
None*'
level
builtins.int"builtins.int*+
msg"
builtins.object"builtins.object*,
args"
builtins.object"builtins.object*£	
exc_infoí	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∂
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolü
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]¸
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]≈
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *◊
extra…
8Union[typing.Mapping[builtins.str,builtins.object],None]Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310z311i
disablelogging.disable"
None*)
level
builtins.int"builtins.int z36z37z38z39z310z311û
addLevelNamelogging.addLevelName"
None*'
level
builtins.int"builtins.int*+
	levelName
builtins.str"builtins.strz36z37z38z39z310z311˜
getLevelNamelogging.getLevelName"
Any*≠
level°
+TypeAlias[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"logging._Levelz36z37z38z39z310z311ˆ
makeLogRecordlogging.makeLogRecord"&
logging.LogRecord"logging.LogRecord*ã
dictÄ
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mappingz36z37z38z39z310z311ˇ
basicConfiglogging.basicConfig"
None*œ
filenameæ
DUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],None]È
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath
None *,
filemode
builtins.str"builtins.str **
format
builtins.str"builtins.str *S
datefmtD
Union[builtins.str,None]
builtins.str"builtins.str
None *ı
styleÁ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"logging._FormatStyle *˜
levelÈ
7Union[TypeAlias[Union[builtins.int,builtins.str]],None]°
+TypeAlias[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"logging._Level
None *Æ
streamü
1Union[_typeshed.SupportsWrite[builtins.str],None]^
%_typeshed.SupportsWrite[builtins.str]
builtins.str"builtins.str"_typeshed.SupportsWrite
None *§
handlersì
,Union[typing.Iterable[logging.Handler],None]W
 typing.Iterable[logging.Handler]"
logging.Handler"logging.Handler"typing.Iterable
None z36z37®
basicConfiglogging.basicConfig"
None*œ
filenameæ
DUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],None]È
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath
None *,
filemode
builtins.str"builtins.str **
format
builtins.str"builtins.str *S
datefmtD
Union[builtins.str,None]
builtins.str"builtins.str
None *ı
styleÁ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"logging._FormatStyle *˜
levelÈ
7Union[TypeAlias[Union[builtins.int,builtins.str]],None]°
+TypeAlias[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"logging._Level
None *Æ
streamü
1Union[_typeshed.SupportsWrite[builtins.str],None]^
%_typeshed.SupportsWrite[builtins.str]
builtins.str"builtins.str"_typeshed.SupportsWrite
None *§
handlersì
,Union[typing.Iterable[logging.Handler],None]W
 typing.Iterable[logging.Handler]"
logging.Handler"logging.Handler"typing.Iterable
None *+
force
builtins.bool"builtins.bool z38Ö
basicConfiglogging.basicConfig"
None*œ
filenameæ
DUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],None]È
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath
None *,
filemode
builtins.str"builtins.str **
format
builtins.str"builtins.str *S
datefmtD
Union[builtins.str,None]
builtins.str"builtins.str
None *ı
styleÁ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"logging._FormatStyle *˜
levelÈ
7Union[TypeAlias[Union[builtins.int,builtins.str]],None]°
+TypeAlias[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"logging._Level
None *Æ
streamü
1Union[_typeshed.SupportsWrite[builtins.str],None]^
%_typeshed.SupportsWrite[builtins.str]
builtins.str"builtins.str"_typeshed.SupportsWrite
None *§
handlersì
,Union[typing.Iterable[logging.Handler],None]W
 typing.Iterable[logging.Handler]"
logging.Handler"logging.Handler"typing.Iterable
None *T
forceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None z39z310z311Ö
shutdownlogging.shutdown"
None*C
handlerList0
typing.Sequence[Any]
Any"typing.Sequence z36z37z38z39z310z311ô
setLoggerClasslogging.setLoggerClass"
None*K
klass@
Type[logging.Logger] 
logging.Logger"logging.Logger"typez36z37z38z39z310z311{
captureWarningslogging.captureWarnings"
None*+
capture
builtins.bool"builtins.boolz36z37z38z39z310z311∞
setLogRecordFactorylogging.setLogRecordFactory"
None*X
factoryK
CallableType[builtins.function]&
builtins.function"builtins.functionz36z37z38z39z310z311∞
getLevelNamesMappinglogging.getLevelNamesMapping"u
(builtins.dict[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"builtins.dictz311*Ç
__path__logging.__path__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*36*37*38*39*310*311*ù
__annotations__logging.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*Ä
__all__logging.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*36*37*38*39*310*311*d
raiseExceptionslogging.raiseExceptions
builtins.bool"builtins.bool*36*37*38*39*310*311*Z

logThreadslogging.logThreads
builtins.bool"builtins.bool*36*37*38*39*310*311*j
logMultiprocessinglogging.logMultiprocessing
builtins.bool"builtins.bool*36*37*38*39*310*311*^
logProcesseslogging.logProcesses
builtins.bool"builtins.bool*36*37*38*39*310*311*|
_srcfilelogging._srcfileD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310*311*µ
_levelToNamelogging._levelToNameu
(builtins.dict[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"builtins.dict*36*37*38*39*310*311*µ
_nameToLevellogging._nameToLevelu
(builtins.dict[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"builtins.dict*36*37*38*39*310*311*T
CRITICALlogging.CRITICAL
builtins.int"builtins.int*36*37*38*39*310*311*N
FATALlogging.FATAL
builtins.int"builtins.int*36*37*38*39*310*311*N
ERRORlogging.ERROR
builtins.int"builtins.int*36*37*38*39*310*311*R
WARNINGlogging.WARNING
builtins.int"builtins.int*36*37*38*39*310*311*L
WARNlogging.WARN
builtins.int"builtins.int*36*37*38*39*310*311*L
INFOlogging.INFO
builtins.int"builtins.int*36*37*38*39*310*311*N
DEBUGlogging.DEBUG
builtins.int"builtins.int*36*37*38*39*310*311*P
NOTSETlogging.NOTSET
builtins.int"builtins.int*36*37*38*39*310*311*}
fatallogging.fatalK
CallableType[builtins.function]&
builtins.function"builtins.function*36*37*38*39*310*311*Æ

lastResortlogging.lastResortr
&Union[logging.StreamHandler[Any],None]<
logging.StreamHandler[Any]
Any"logging.StreamHandler
None*36*37*38*39*310*311*X
rootlogging.root(
logging.RootLogger"logging.RootLogger*36*37*38*39*310*311*§
_STYLESlogging._STYLESÌ
Dbuiltins.dict[builtins.str,Tuple[logging.PercentStyle,builtins.str]]
builtins.str"builtins.strx
(Tuple[logging.PercentStyle,builtins.str],
logging.PercentStyle"logging.PercentStyle
builtins.str"builtins.str"builtins.dict*36*37*38*39*310*311*\
BASIC_FORMATlogging.BASIC_FORMAT
builtins.str"builtins.str*36*37*38*39*310*311