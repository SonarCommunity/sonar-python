
torch._C._lazyÝ

_mark_steptorch._C._lazy._mark_step"
Any*(
device
builtins.str"builtins.str*W
devicesJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*(
wait
builtins.bool"builtins.bool•
_wait_device_opstorch._C._lazy._wait_device_ops"
Any*W
devicesJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list/
_reset_metricstorch._C._lazy._reset_metrics{
_counter_namestorch._C._lazy._counter_names"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listu
_counter_valuetorch._C._lazy._counter_value"
builtins.int"builtins.int*&
name
builtins.str"builtins.strO
_metrics_reporttorch._C._lazy._metrics_report"
builtins.str"builtins.strÀ
_get_graph_hashtorch._C._lazy._get_graph_hash"
builtins.str"builtins.str*o
tensorsb
#builtins.list[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"builtins.listÝ
_sync_multitorch._C._lazy._sync_multi"
Any*o
tensorsb
#builtins.list[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"builtins.list*W
devicesJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list**
wait
builtins.bool"builtins.bool *3
sync_ltc_data
builtins.bool"builtins.bool ‡
_get_tensor_idtorch._C._lazy._get_tensor_id"
builtins.int"builtins.int*8
tensor,
torch._tensor.Tensor"torch._tensor.TensorÄ
_get_tensors_text torch._C._lazy._get_tensors_text"
builtins.str"builtins.str*o
tensorsb
#builtins.list[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"builtins.listÂ
_get_tensors_dottorch._C._lazy._get_tensors_dot"
builtins.str"builtins.str*o
tensorsb
#builtins.list[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"builtins.listÊ
_get_tensors_backend#torch._C._lazy._get_tensors_backend"
builtins.str"builtins.str*o
tensorsb
#builtins.list[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"builtins.listW
_get_force_fallback"torch._C._lazy._get_force_fallback"
builtins.str"builtins.strl
_set_force_fallback"torch._C._lazy._set_force_fallback"
Any*(
newval
builtins.str"builtins.str1
_clear_ir_cachetorch._C._lazy._clear_ir_cached
_dump_ir_cachetorch._C._lazy._dump_ir_cache"
Any**
filename
builtins.str"builtins.str_
_set_reuse_irtorch._C._lazy._set_reuse_ir"
Any*'
val
builtins.bool"builtins.boolC
_get_default_device_type'torch._C._lazy._get_default_device_type*Š
__annotations__torch._C._lazy.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict