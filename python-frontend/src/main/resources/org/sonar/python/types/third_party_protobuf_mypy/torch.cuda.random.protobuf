
torch.cuda.randomÑ
get_rng_statetorch.cuda.random.get_rng_state",
torch._tensor.Tensor"torch._tensor.Tensor*£
deviceî
0Union[builtins.int,builtins.str,torch._C.device]
builtins.int"builtins.int
builtins.str"builtins.str"
torch._C.device"torch._C.device ú
get_rng_state_all#torch.cuda.random.get_rng_state_all"b
#builtins.list[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"builtins.listù
set_rng_statetorch.cuda.random.set_rng_state"
None*;
	new_state,
torch._tensor.Tensor"torch._tensor.Tensor*£
deviceî
0Union[builtins.int,builtins.str,torch._C.device]
builtins.int"builtins.int
builtins.str"builtins.str"
torch._C.device"torch._C.device ∫
set_rng_state_all#torch.cuda.random.set_rng_state_all"
None*v

new_statesf
%typing.Iterable[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"typing.Iterable^
manual_seedtorch.cuda.random.manual_seed"
None*&
seed
builtins.int"builtins.intf
manual_seed_all!torch.cuda.random.manual_seed_all"
None*&
seed
builtins.int"builtins.int(
seedtorch.cuda.random.seed"
None0
seed_alltorch.cuda.random.seed_all"
NoneL
initial_seedtorch.cuda.random.initial_seed"
builtins.int"builtins.int*ç
__annotations__!torch.cuda.random.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*p
__all__torch.cuda.random.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list