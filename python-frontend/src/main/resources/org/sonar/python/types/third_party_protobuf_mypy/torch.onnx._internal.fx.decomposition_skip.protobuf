
*torch.onnx._internal.fx.decomposition_skipø

DecompSkip5torch.onnx._internal.fx.decomposition_skip.DecompSkip"abc.ABC*¨
register>torch.onnx._internal.fx.decomposition_skip.DecompSkip.register"
Any*ø
clsµ
;Type[torch.onnx._internal.fx.decomposition_skip.DecompSkip]n
5torch.onnx._internal.fx.decomposition_skip.DecompSkip"5torch.onnx._internal.fx.decomposition_skip.DecompSkip"type*n
export_optionsZ
+torch.onnx._internal.exporter.ExportOptions"+torch.onnx._internal.exporter.ExportOptions0:classmethod:abc.abstractmethod@p*~

unregister@torch.onnx._internal.fx.decomposition_skip.DecompSkip.unregister*
cls0:classmethod:abc.abstractmethod@p*ê
abstract>torch.onnx._internal.fx.decomposition_skip.DecompSkip.abstract*
cls*
args*

kwargs0:classmethod:abc.abstractmethod@p*x
register_custom_opHtorch.onnx._internal.fx.decomposition_skip.DecompSkip.register_custom_op*
cls0:classmethodp*Ä
replacementAtorch.onnx._internal.fx.decomposition_skip.DecompSkip.replacement*
cls*
args*

kwargs0:classmethodprù
op_callableAtorch.onnx._internal.fx.decomposition_skip.DecompSkip.op_callableK
CallableType[builtins.function]&
builtins.function"builtins.functionr≠
onnxscript_functionItorch.onnx._internal.fx.decomposition_skip.DecompSkip.onnxscript_functionK
CallableType[builtins.function]&
builtins.function"builtins.functionrn
new_op_nameAtorch.onnx._internal.fx.decomposition_skip.DecompSkip.new_op_name
builtins.str"builtins.strrr
new_op_schemaCtorch.onnx._internal.fx.decomposition_skip.DecompSkip.new_op_schema
builtins.str"builtins.str´
UpsampleBilinear2DDecompSkipGtorch.onnx._internal.fx.decomposition_skip.UpsampleBilinear2DDecompSkip"5torch.onnx._internal.fx.decomposition_skip.DecompSkip*ﬂ
registerPtorch.onnx._internal.fx.decomposition_skip.UpsampleBilinear2DDecompSkip.register"
Any*ˆ
clsÏ
MType[torch.onnx._internal.fx.decomposition_skip.UpsampleBilinear2DDecompSkip]í
Gtorch.onnx._internal.fx.decomposition_skip.UpsampleBilinear2DDecompSkip"Gtorch.onnx._internal.fx.decomposition_skip.UpsampleBilinear2DDecompSkip"type*n
export_optionsZ
+torch.onnx._internal.exporter.ExportOptions"+torch.onnx._internal.exporter.ExportOptions0:classmethodp*z

unregisterRtorch.onnx._internal.fx.decomposition_skip.UpsampleBilinear2DDecompSkip.unregister*
cls0:classmethodp*∏
abstractPtorch.onnx._internal.fx.decomposition_skip.UpsampleBilinear2DDecompSkip.abstract*
cls*	
input*
output_size*
align_corners*
scale_factors0:classmethodprk
op_callableStorch.onnx._internal.fx.decomposition_skip.UpsampleBilinear2DDecompSkip.op_callable
Anyr{
onnxscript_function[torch.onnx._internal.fx.decomposition_skip.UpsampleBilinear2DDecompSkip.onnxscript_function
AnyrÄ
new_op_nameStorch.onnx._internal.fx.decomposition_skip.UpsampleBilinear2DDecompSkip.new_op_name
builtins.str"builtins.strrÑ
new_op_schemaUtorch.onnx._internal.fx.decomposition_skip.UpsampleBilinear2DDecompSkip.new_op_schema
builtins.str"builtins.strˇ
InstanceNormDecompSkipAtorch.onnx._internal.fx.decomposition_skip.InstanceNormDecompSkip"5torch.onnx._internal.fx.decomposition_skip.DecompSkip*«
registerJtorch.onnx._internal.fx.decomposition_skip.InstanceNormDecompSkip.register"
Any*‰
cls⁄
GType[torch.onnx._internal.fx.decomposition_skip.InstanceNormDecompSkip]Ü
Atorch.onnx._internal.fx.decomposition_skip.InstanceNormDecompSkip"Atorch.onnx._internal.fx.decomposition_skip.InstanceNormDecompSkip"type*n
export_optionsZ
+torch.onnx._internal.exporter.ExportOptions"+torch.onnx._internal.exporter.ExportOptions0:classmethodp*t

unregisterLtorch.onnx._internal.fx.decomposition_skip.InstanceNormDecompSkip.unregister*
cls0:classmethodp*ã
abstractJtorch.onnx._internal.fx.decomposition_skip.InstanceNormDecompSkip.abstract"
Any*‰
cls⁄
GType[torch.onnx._internal.fx.decomposition_skip.InstanceNormDecompSkip]Ü
Atorch.onnx._internal.fx.decomposition_skip.InstanceNormDecompSkip"Atorch.onnx._internal.fx.decomposition_skip.InstanceNormDecompSkip"type*
input
Any*
weight
Any*
bias
Any*
running_mean
Any*
running_var
Any*3
use_input_stats
builtins.bool"builtins.bool*.
momentum 
builtins.float"builtins.float*)
eps 
builtins.float"builtins.float*1
cudnn_enabled
builtins.bool"builtins.bool0:classmethodpr©
op_callableMtorch.onnx._internal.fx.decomposition_skip.InstanceNormDecompSkip.op_callableK
CallableType[builtins.function]&
builtins.function"builtins.functionru
onnxscript_functionUtorch.onnx._internal.fx.decomposition_skip.InstanceNormDecompSkip.onnxscript_function
Anyrz
new_op_nameMtorch.onnx._internal.fx.decomposition_skip.InstanceNormDecompSkip.new_op_name
builtins.str"builtins.strr~
new_op_schemaOtorch.onnx._internal.fx.decomposition_skip.InstanceNormDecompSkip.new_op_schema
builtins.str"builtins.str*¶
__annotations__:torch.onnx._internal.fx.decomposition_skip.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*R
torchlib_core8torch.onnx._internal.fx.decomposition_skip.torchlib_core
Any*N
torchlib_nn6torch.onnx._internal.fx.decomposition_skip.torchlib_nn
Any*o
_NEW_OP_NAMESPACE<torch.onnx._internal.fx.decomposition_skip._NEW_OP_NAMESPACE
builtins.str"builtins.str*…
_DEFAULT_SKIP_LIST=torch.onnx._internal.fx.decomposition_skip._DEFAULT_SKIP_LISTt
(builtins.list[CallableType[abc.ABCMeta]]9
CallableType[abc.ABCMeta]
abc.ABCMeta"abc.ABCMeta"builtins.list