
*torch.onnx._internal.fx.passes.readabilityÑ
RestoreParameterAndBufferNamesItorch.onnx._internal.fx.passes.readability.RestoreParameterAndBufferNames"'torch.onnx._internal.fx._pass.Transform*Æ
__init__Rtorch.onnx._internal.fx.passes.readability.RestoreParameterAndBufferNames.__init__"
None*¡
self–
Itorch.onnx._internal.fx.passes.readability.RestoreParameterAndBufferNames"Itorch.onnx._internal.fx.passes.readability.RestoreParameterAndBufferNames*†
diagnostic_contextn
5torch.onnx._internal.fx.diagnostics.DiagnosticContext"5torch.onnx._internal.fx.diagnostics.DiagnosticContext*U
	fx_moduleF
!torch.fx.graph_module.GraphModule"!torch.fx.graph_module.GraphModule*X
original_nn_module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*Í
_rename_param_and_bufferbtorch.onnx._internal.fx.passes.readability.RestoreParameterAndBufferNames._rename_param_and_buffer"
None*¡
self–
Itorch.onnx._internal.fx.passes.readability.RestoreParameterAndBufferNames"Itorch.onnx._internal.fx.passes.readability.RestoreParameterAndBufferNames*p

diagnostic`
.torch.onnx._internal.fx.diagnostics.Diagnostic".torch.onnx._internal.fx.diagnostics.Diagnostic*k
nodes`
#typing.Sequence[torch.fx.node.Node](
torch.fx.node.Node"torch.fx.node.Node"typing.Sequence**
new_name
builtins.str"builtins.str0:_beartype.beartype*ê
_runNtorch.onnx._internal.fx.passes.readability.RestoreParameterAndBufferNames._run"F
!torch.fx.graph_module.GraphModule"!torch.fx.graph_module.GraphModule*¡
self–
Itorch.onnx._internal.fx.passes.readability.RestoreParameterAndBufferNames"Itorch.onnx._internal.fx.passes.readability.RestoreParameterAndBufferNames*
args
Any*
kwargs
Anyr´
original_nn_module\torch.onnx._internal.fx.passes.readability.RestoreParameterAndBufferNames.original_nn_module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*¦
__annotations__:torch.onnx._internal.fx.passes.readability.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict