
pandas.core.constructionë
arraypandas.core.construction.array"P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray*a
dataW
 typing.Sequence[builtins.object]"
builtins.object"builtins.object"typing.Sequence*Ü
dtype¯
PUnion[builtins.str,numpy.dtype[Any],pandas.core.dtypes.base.ExtensionDtype,None]
builtins.str"builtins.str(
numpy.dtype[Any]
Any"numpy.dtypeP
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype
None **
copy
builtins.bool"builtins.bool á
extract_array&pandas.core.construction.extract_array"
Any*
obj
Any*3
extract_numpy
builtins.bool"builtins.bool Â
sanitize_array'pandas.core.construction.sanitize_array"
Any*
data
Any*
index
Any*
dtype
Any **
copy
builtins.bool"builtins.bool *8
raise_cast_failure
builtins.bool"builtins.bool j
is_empty_data&pandas.core.construction.is_empty_data"
builtins.bool"builtins.bool*
data
AnyÈ
!create_series_with_explicit_dtype:pandas.core.construction.create_series_with_explicit_dtype"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*
data
Any *≥
index•
Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],pandas.core.indexes.base.Index[Any],None]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index
None *ê
dtypeÇ
“Union[TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],None]û	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype
None *P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None **
copy
builtins.bool"builtins.bool *.
fastpath
builtins.bool"builtins.bool *µ	
dtype_if_emptyû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype *î
__annotations__(pandas.core.construction.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
npnumpy 