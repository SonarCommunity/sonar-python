
xml.parsers.expat˘

ExpatErrorpyexpat.ExpatError"builtins.Exceptionr=
codepyexpat.ExpatError.code
builtins.int"builtins.intrA
linenopyexpat.ExpatError.lineno
builtins.int"builtins.intrA
offsetpyexpat.ExpatError.offset
builtins.int"builtins.intıD
XMLParserTypepyexpat.XMLParserType"builtins.object*Ã	
Parsepyexpat.XMLParserType.Parse"
builtins.int"builtins.int*8
self.
pyexpat.XMLParserType"pyexpat.XMLParserType*©¶
™Union[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]]
builtins.str"builtins.str÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*"
builtins.bool"builtins.bool *Í
	ParseFilepyexpat.XMLParserType.ParseFile"
builtins.int"builtins.int*8
self.
pyexpat.XMLParserType"pyexpat.XMLParserType*db
&_typeshed.SupportsRead[builtins.bytes] 
builtins.bytes"builtins.bytes"_typeshed.SupportsRead*å
SetBasepyexpat.XMLParserType.SetBase"
None*8
self.
pyexpat.XMLParserType"pyexpat.XMLParserType*
builtins.str"builtins.str*®
GetBasepyexpat.XMLParserType.GetBase"D
Union[builtins.str,None]
builtins.str"builtins.str
None*8
self.
pyexpat.XMLParserType"pyexpat.XMLParserType*æ
GetInputContext%pyexpat.XMLParserType.GetInputContext"J
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None*8
self.
pyexpat.XMLParserType"pyexpat.XMLParserType*¢
ExternalEntityParserCreate0pyexpat.XMLParserType.ExternalEntityParserCreate".
pyexpat.XMLParserType"pyexpat.XMLParserType*8
self.
pyexpat.XMLParserType"pyexpat.XMLParserType*FD
Union[builtins.str,None]
builtins.str"builtins.str
None* 
builtins.str"builtins.str *º
SetParamEntityParsing+pyexpat.XMLParserType.SetParamEntityParsing"
builtins.int"builtins.int*8
self.
pyexpat.XMLParserType"pyexpat.XMLParserType*
builtins.int"builtins.int*ú
UseForeignDTD#pyexpat.XMLParserType.UseForeignDTD"
None*8
self.
pyexpat.XMLParserType"pyexpat.XMLParserType*"
builtins.bool"builtins.bool *Â
internpyexpat.XMLParserType.intern"u
(builtins.dict[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.dict*8
self.
pyexpat.XMLParserType"pyexpat.XMLParserType0:property`8rN
buffer_size!pyexpat.XMLParserType.buffer_size
builtins.int"builtins.intrP
buffer_text!pyexpat.XMLParserType.buffer_text
builtins.bool"builtins.boolrN
buffer_used!pyexpat.XMLParserType.buffer_used
builtins.int"builtins.intr^
namespace_prefixes(pyexpat.XMLParserType.namespace_prefixes
builtins.bool"builtins.boolr^
ordered_attributes(pyexpat.XMLParserType.ordered_attributes
builtins.bool"builtins.boolrb
specified_attributes*pyexpat.XMLParserType.specified_attributes
builtins.bool"builtins.boolrT
ErrorByteIndex$pyexpat.XMLParserType.ErrorByteIndex
builtins.int"builtins.intrJ
	ErrorCodepyexpat.XMLParserType.ErrorCode
builtins.int"builtins.intrZ
ErrorColumnNumber'pyexpat.XMLParserType.ErrorColumnNumber
builtins.int"builtins.intrV
ErrorLineNumber%pyexpat.XMLParserType.ErrorLineNumber
builtins.int"builtins.intrX
CurrentByteIndex&pyexpat.XMLParserType.CurrentByteIndex
builtins.int"builtins.intr^
CurrentColumnNumber)pyexpat.XMLParserType.CurrentColumnNumber
builtins.int"builtins.intrZ
CurrentLineNumber'pyexpat.XMLParserType.CurrentLineNumber
builtins.int"builtins.intrø
XmlDeclHandler$pyexpat.XMLParserType.XmlDeclHandlerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
Noner—
StartDoctypeDeclHandler-pyexpat.XMLParserType.StartDoctypeDeclHandlerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
NonerÕ
EndDoctypeDeclHandler+pyexpat.XMLParserType.EndDoctypeDeclHandlerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
Noner«
ElementDeclHandler(pyexpat.XMLParserType.ElementDeclHandlerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
Noner«
AttlistDeclHandler(pyexpat.XMLParserType.AttlistDeclHandlerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
Noner£
StartElementHandler)pyexpat.XMLParserType.StartElementHandler‡
kUnion[CallableType[builtins.function],CallableType[builtins.function],CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function
Noner≈
EndElementHandler'pyexpat.XMLParserType.EndElementHandlerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
Noner€
ProcessingInstructionHandler2pyexpat.XMLParserType.ProcessingInstructionHandlerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
NonerÀ
CharacterDataHandler*pyexpat.XMLParserType.CharacterDataHandlerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
Noner’
UnparsedEntityDeclHandler/pyexpat.XMLParserType.UnparsedEntityDeclHandlerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
Noner≈
EntityDeclHandler'pyexpat.XMLParserType.EntityDeclHandlerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
Noner…
NotationDeclHandler)pyexpat.XMLParserType.NotationDeclHandlerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
Noner’
StartNamespaceDeclHandler/pyexpat.XMLParserType.StartNamespaceDeclHandlerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
Noner—
EndNamespaceDeclHandler-pyexpat.XMLParserType.EndNamespaceDeclHandlerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
Nonerø
CommentHandler$pyexpat.XMLParserType.CommentHandlerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
Noner”
StartCdataSectionHandler.pyexpat.XMLParserType.StartCdataSectionHandlerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
Nonerœ
EndCdataSectionHandler,pyexpat.XMLParserType.EndCdataSectionHandlerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
Nonerø
DefaultHandler$pyexpat.XMLParserType.DefaultHandlerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
NonerÀ
DefaultHandlerExpand*pyexpat.XMLParserType.DefaultHandlerExpandÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
NonerÀ
NotStandaloneHandler*pyexpat.XMLParserType.NotStandaloneHandlerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
Noner”
ExternalEntityRefHandler.pyexpat.XMLParserType.ExternalEntityRefHandlerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
NonerÀ
SkippedEntityHandler*pyexpat.XMLParserType.SkippedEntityHandlerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None`
ErrorStringpyexpat.ErrorString"
builtins.str"builtins.str*
builtins.int"builtins.intØ
ParserCreatepyexpat.ParserCreate".
pyexpat.XMLParserType"pyexpat.XMLParserType*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *_
namespace_separatorD
Union[builtins.str,None]
builtins.str"builtins.str
None *°
interní
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *r
__path__xml.parsers.expat.__path__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*ç
__annotations__!xml.parsers.expat.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
errorspyexpat.errors *
modelpyexpat.model *D
EXPAT_VERSIONpyexpat.EXPAT_VERSION
builtins.str"builtins.str*≤
version_infopyexpat.version_infoã
-Tuple[builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int*H
native_encodingpyexpat.native_encoding
builtins.str"builtins.str*¡
featurespyexpat.features¢
/builtins.list[Tuple[builtins.str,builtins.int]]`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"builtins.list*f
XML_PARAM_ENTITY_PARSING_NEVER&pyexpat.XML_PARAM_ENTITY_PARSING_NEVER
builtins.int"builtins.int*~
*XML_PARAM_ENTITY_PARSING_UNLESS_STANDALONE2pyexpat.XML_PARAM_ENTITY_PARSING_UNLESS_STANDALONE
builtins.int"builtins.int*h
XML_PARAM_ENTITY_PARSING_ALWAYS'pyexpat.XML_PARAM_ENTITY_PARSING_ALWAYS
builtins.int"builtins.int