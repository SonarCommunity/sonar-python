
 torch.nn.parallel.scatter_gathers
_is_namedtuple/torch.nn.parallel.scatter_gather._is_namedtuple"
builtins.bool"builtins.bool*
obj
Any­
scatter_kwargs/torch.nn.parallel.scatter_gather.scatter_kwargs"›
JTuple[builtins.tuple[Any],builtins.tuple[builtins.dict[builtins.str,Any]]].
builtins.tuple[Any]
Any"builtins.tupleš
/builtins.tuple[builtins.dict[builtins.str,Any]]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"builtins.tuple*:
inputs.
builtins.tuple[Any]
Any"builtins.tuple*Ÿ
kwargs’
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None*Ä
target_gpus²
4typing.Sequence[Union[builtins.int,torch._C.device]]i
#Union[builtins.int,torch._C.device]
builtins.int"builtins.int"
torch._C.device"torch._C.device"typing.Sequence*'
dim
builtins.int"builtins.int ÷
gather'torch.nn.parallel.scatter_gather.gather"
Any*
outputs
Any*|
target_devicei
#Union[builtins.int,torch._C.device]
builtins.int"builtins.int"
torch._C.device"torch._C.device*'
dim
builtins.int"builtins.int "Æ
scatter(torch.nn.parallel.scatter_gather.scatterÑ
scatter(torch.nn.parallel.scatter_gather.scatter"d
$builtins.tuple[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"builtins.tuple*8
inputs,
torch._tensor.Tensor"torch._tensor.Tensor*Ä
target_gpus²
4typing.Sequence[Union[builtins.int,torch._C.device]]i
#Union[builtins.int,torch._C.device]
builtins.int"builtins.int"
torch._C.device"torch._C.device"typing.Sequence*'
dim
builtins.int"builtins.int 0:overloadX¼
scatter(torch.nn.parallel.scatter_gather.scatter"Ÿ
1builtins.list[torch.nn.parallel.scatter_gather.T][
"torch.nn.parallel.scatter_gather.T"
builtins.object"builtins.object"builtins.object"builtins.list*g
inputs[
"torch.nn.parallel.scatter_gather.T"
builtins.object"builtins.object"builtins.object*Ä
target_gpus²
4typing.Sequence[Union[builtins.int,torch._C.device]]i
#Union[builtins.int,torch._C.device]
builtins.int"builtins.int"
torch._C.device"torch._C.device"typing.Sequence*'
dim
builtins.int"builtins.int 0:overloadX*œ
__annotations__0torch.nn.parallel.scatter_gather.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
__all__(torch.nn.parallel.scatter_gather.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list