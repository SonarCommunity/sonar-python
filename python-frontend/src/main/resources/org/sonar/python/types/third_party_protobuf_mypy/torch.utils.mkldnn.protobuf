
torch.utils.mkldnnœ
MkldnnLineartorch.utils.mkldnn.MkldnnLinear"torch.jit._script.ScriptModule*[
__init__(torch.utils.mkldnn.MkldnnLinear.__init__*
self*
dense_module*	
dtype*a
__getstate__,torch.utils.mkldnn.MkldnnLinear.__getstate__*
self0:torch.jit.script_method*l
__setstate__,torch.utils.mkldnn.MkldnnLinear.__setstate__*
self*	
state0:torch.jit.script_method*^
forward'torch.utils.mkldnn.MkldnnLinear.forward*
self*
x0:torch.jit.script_methodr9
weight&torch.utils.mkldnn.MkldnnLinear.weight
Anyr5
bias$torch.utils.mkldnn.MkldnnLinear.bias
AnyÌ
_MkldnnConvNd torch.utils.mkldnn._MkldnnConvNd"torch.jit._script.ScriptModule*Q
__init__)torch.utils.mkldnn._MkldnnConvNd.__init__*
self*
dense_module*b
__getstate__-torch.utils.mkldnn._MkldnnConvNd.__getstate__*
self0:torch.jit.script_method*_
forward(torch.utils.mkldnn._MkldnnConvNd.forward*
self*
x0:torch.jit.script_methodrã
__constants__.torch.utils.mkldnn._MkldnnConvNd.__constants__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listr:
stride'torch.utils.mkldnn._MkldnnConvNd.stride
Anyr<
padding(torch.utils.mkldnn._MkldnnConvNd.padding
Anyr>
dilation)torch.utils.mkldnn._MkldnnConvNd.dilation
Anyr:
groups'torch.utils.mkldnn._MkldnnConvNd.groups
Anyé
MkldnnConv1dtorch.utils.mkldnn.MkldnnConv1d" torch.utils.mkldnn._MkldnnConvNd*[
__init__(torch.utils.mkldnn.MkldnnConv1d.__init__*
self*
dense_module*	
dtype*l
__setstate__,torch.utils.mkldnn.MkldnnConv1d.__setstate__*
self*	
state0:torch.jit.script_methodr9
weight&torch.utils.mkldnn.MkldnnConv1d.weight
Anyr5
bias$torch.utils.mkldnn.MkldnnConv1d.bias
Anyé
MkldnnConv2dtorch.utils.mkldnn.MkldnnConv2d" torch.utils.mkldnn._MkldnnConvNd*[
__init__(torch.utils.mkldnn.MkldnnConv2d.__init__*
self*
dense_module*	
dtype*l
__setstate__,torch.utils.mkldnn.MkldnnConv2d.__setstate__*
self*	
state0:torch.jit.script_methodr9
weight&torch.utils.mkldnn.MkldnnConv2d.weight
Anyr5
bias$torch.utils.mkldnn.MkldnnConv2d.bias
Anyé
MkldnnConv3dtorch.utils.mkldnn.MkldnnConv3d" torch.utils.mkldnn._MkldnnConvNd*[
__init__(torch.utils.mkldnn.MkldnnConv3d.__init__*
self*
dense_module*	
dtype*l
__setstate__,torch.utils.mkldnn.MkldnnConv3d.__setstate__*
self*	
state0:torch.jit.script_methodr9
weight&torch.utils.mkldnn.MkldnnConv3d.weight
Anyr5
bias$torch.utils.mkldnn.MkldnnConv3d.bias
Anyú
MkldnnBatchNorm"torch.utils.mkldnn.MkldnnBatchNorm"torch.jit._script.ScriptModule*S
__init__+torch.utils.mkldnn.MkldnnBatchNorm.__init__*
self*
dense_module*d
__getstate__/torch.utils.mkldnn.MkldnnBatchNorm.__getstate__*
self0:torch.jit.script_method*o
__setstate__/torch.utils.mkldnn.MkldnnBatchNorm.__setstate__*
self*	
state0:torch.jit.script_method*a
forward*torch.utils.mkldnn.MkldnnBatchNorm.forward*
self*
x0:torch.jit.script_methodrç
__constants__0torch.utils.mkldnn.MkldnnBatchNorm.__constants__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listrd
exponential_average_factor=torch.utils.mkldnn.MkldnnBatchNorm.exponential_average_factor
Anyr6
eps&torch.utils.mkldnn.MkldnnBatchNorm.eps
Anyr<
weight)torch.utils.mkldnn.MkldnnBatchNorm.weight
Anyr8
bias'torch.utils.mkldnn.MkldnnBatchNorm.bias
AnyrH
running_mean/torch.utils.mkldnn.MkldnnBatchNorm.running_mean
AnyrF
running_var.torch.utils.mkldnn.MkldnnBatchNorm.running_var
Anyë
MkldnnPrelutorch.utils.mkldnn.MkldnnPrelu"torch.jit._script.ScriptModule*Z
__init__'torch.utils.mkldnn.MkldnnPrelu.__init__*
self*
dense_module*	
dtype*`
__getstate__+torch.utils.mkldnn.MkldnnPrelu.__getstate__*
self0:torch.jit.script_method*k
__setstate__+torch.utils.mkldnn.MkldnnPrelu.__setstate__*
self*	
state0:torch.jit.script_method*]
forward&torch.utils.mkldnn.MkldnnPrelu.forward*
self*
x0:torch.jit.script_methodr8
weight%torch.utils.mkldnn.MkldnnPrelu.weight
AnyB
	to_mkldnntorch.utils.mkldnn.to_mkldnn*

module*
dtype *é
__annotations__"torch.utils.mkldnn.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict