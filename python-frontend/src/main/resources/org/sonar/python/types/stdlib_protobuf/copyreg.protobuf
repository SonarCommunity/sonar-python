
copyreg¶
picklecopyreg.pickle"
None*f
ob_typeY
Type[copyreg._T]C

copyreg._T"
builtins.object"builtins.object"builtins.object*`
pickle_functionK
CallableType[builtins.function]&
builtins.function"builtins.function*ù
constructor_obÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None z36z37z38z39z310z311ü
constructorcopyreg.constructor"
None*W
objectK
CallableType[builtins.function]&
builtins.function"builtins.functionz36z37z38z39z310z311‹
add_extensioncopyreg.add_extension"
None*.
module"
typing.Hashable"typing.Hashable*,
name"
typing.Hashable"typing.Hashable*2
code(
typing.SupportsInt"typing.SupportsIntz36z37z38z39z310z311÷
remove_extensioncopyreg.remove_extension"
None*.
module"
typing.Hashable"typing.Hashable*,
name"
typing.Hashable"typing.Hashable*&
code
builtins.int"builtins.intz36z37z38z39z310z311Z
clear_extension_cachecopyreg.clear_extension_cache"
Nonez36z37z38z39z310z311*ù
__annotations__copyreg.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*Ä
__all__copyreg.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*36*37*38*39*310*311*È
dispatch_tablecopyreg.dispatch_table§
GTypeAlias[builtins.dict[builtins.type,CallableType[builtins.function]]]∫
<builtins.dict[builtins.type,CallableType[builtins.function]]
builtins.type"builtins.typeK
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.dict"copyreg._DispatchTableType*36*37*38*39*310*311