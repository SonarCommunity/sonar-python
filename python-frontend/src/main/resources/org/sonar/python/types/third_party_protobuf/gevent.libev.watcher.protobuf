
gevent.libev.watcherß)
	cffi_loopgevent.libev.corecffi.loop"gevent._ffi.loop.AbstractLoop*ø
MAXPRI!gevent.libev.corecffi.loop.MAXPRI"
builtins.int"builtins.int*B
self8
gevent.libev.corecffi.loop"gevent.libev.corecffi.loop0:property`z36z37z38z39z310z311z312z313*ø
MINPRI!gevent.libev.corecffi.loop.MINPRI"
builtins.int"builtins.int*B
self8
gevent.libev.corecffi.loop"gevent.libev.corecffi.loop0:property`z36z37z38z39z310z311z312z313*Á
__init__#gevent.libev.corecffi.loop.__init__"
None*B
self8
gevent.libev.corecffi.loop"gevent.libev.corecffi.loop*Î
flags›
CUnion[typing.Sequence[builtins.str],builtins.str,builtins.int,None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
builtins.str"builtins.str
builtins.int"builtins.int
None *V
defaultG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None z36z37z38z39z310z311z312z313*ê
iogevent.libev.corecffi.loop.io"2
gevent.libev.watcher.io"gevent.libev.watcher.io*B
self8
gevent.libev.corecffi.loop"gevent.libev.corecffi.loop*$
fd
builtins.int"builtins.int*(
events
builtins.int"builtins.int*)
ref
builtins.bool"builtins.bool *T
priorityD
Union[builtins.int,None]
builtins.int"builtins.int
None z36z37z38z39z310z311z312z313*·

closing_fd%gevent.libev.corecffi.loop.closing_fd"
builtins.bool"builtins.bool*B
self8
gevent.libev.corecffi.loop"gevent.libev.corecffi.loop*$
fd
builtins.int"builtins.intz36z37z38z39z310z311z312z313*©
timer gevent.libev.corecffi.loop.timer"8
gevent.libev.watcher.timer"gevent.libev.watcher.timer*B
self8
gevent.libev.corecffi.loop"gevent.libev.corecffi.loop*+
after 
builtins.float"builtins.float*.
repeat 
builtins.float"builtins.float *)
ref
builtins.bool"builtins.bool *T
priorityD
Union[builtins.int,None]
builtins.int"builtins.int
None z36z37z38z39z310z311z312z313*˙
signal!gevent.libev.corecffi.loop.signal":
gevent.libev.watcher.signal"gevent.libev.watcher.signal*B
self8
gevent.libev.corecffi.loop"gevent.libev.corecffi.loop*(
signum
builtins.int"builtins.int*)
ref
builtins.bool"builtins.bool *T
priorityD
Union[builtins.int,None]
builtins.int"builtins.int
None z36z37z38z39z310z311z312z313*»
idlegevent.libev.corecffi.loop.idle"6
gevent.libev.watcher.idle"gevent.libev.watcher.idle*B
self8
gevent.libev.corecffi.loop"gevent.libev.corecffi.loop*)
ref
builtins.bool"builtins.bool *T
priorityD
Union[builtins.int,None]
builtins.int"builtins.int
None z36z37z38z39z310z311z312z313*‘
prepare"gevent.libev.corecffi.loop.prepare"<
gevent.libev.watcher.prepare"gevent.libev.watcher.prepare*B
self8
gevent.libev.corecffi.loop"gevent.libev.corecffi.loop*)
ref
builtins.bool"builtins.bool *T
priorityD
Union[builtins.int,None]
builtins.int"builtins.int
None z36z37z38z39z310z311z312z313*Ã
check gevent.libev.corecffi.loop.check"8
gevent.libev.watcher.check"gevent.libev.watcher.check*B
self8
gevent.libev.corecffi.loop"gevent.libev.corecffi.loop*)
ref
builtins.bool"builtins.bool *T
priorityD
Union[builtins.int,None]
builtins.int"builtins.int
None z36z37z38z39z310z311z312z313*–
async_!gevent.libev.corecffi.loop.async_":
gevent.libev.watcher.async_"gevent.libev.watcher.async_*B
self8
gevent.libev.corecffi.loop"gevent.libev.corecffi.loop*)
ref
builtins.bool"builtins.bool *T
priorityD
Union[builtins.int,None]
builtins.int"builtins.int
None z36z37z38z39z310z311z312z313*»
forkgevent.libev.corecffi.loop.fork"6
gevent.libev.watcher.fork"gevent.libev.watcher.fork*B
self8
gevent.libev.corecffi.loop"gevent.libev.corecffi.loop*)
ref
builtins.bool"builtins.bool *T
priorityD
Union[builtins.int,None]
builtins.int"builtins.int
None z36z37z38z39z310z311z312z313*»
child gevent.libev.corecffi.loop.child"8
gevent.libev.watcher.child"gevent.libev.watcher.child*B
self8
gevent.libev.corecffi.loop"gevent.libev.corecffi.loop*%
pid
builtins.int"builtins.int*)
trace
builtins.int"builtins.int *)
ref
builtins.bool"builtins.bool z36z37z38z39z310z311z312z313*´
reset_sigchld(gevent.libev.corecffi.loop.reset_sigchld"
None*B
self8
gevent.libev.corecffi.loop"gevent.libev.corecffi.loopz36z37z38z39z310z311z312z313*•
statgevent.libev.corecffi.loop.stat"6
gevent.libev.watcher.stat"gevent.libev.watcher.stat*B
self8
gevent.libev.corecffi.loop"gevent.libev.corecffi.loop*&
path
builtins.str"builtins.str*0
interval 
builtins.float"builtins.float *)
ref
builtins.bool"builtins.bool *W
priorityG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rì
approx_timer_resolution2gevent.libev.corecffi.loop.approx_timer_resolution 
builtins.float"builtins.float*36*37*38*39*310*311*312*313rg
error_handler(gevent.libev.corecffi.loop.error_handler
None*36*37*38*39*310*311*312*313µ`
	cext_loopgevent.libev.corecext.loop"builtins.object*Â
approx_timer_resolution2gevent.libev.corecext.loop.approx_timer_resolution" 
builtins.float"builtins.float*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop0:property`z36z37z38z39z310z311z312z313*ê
__init__#gevent.libev.corecext.loop.__init__"
None*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop*Î
flags›
CUnion[typing.Sequence[builtins.str],builtins.str,builtins.int,None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
builtins.str"builtins.str
builtins.int"builtins.int
None *V
defaultG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *'
ptr
builtins.int"builtins.int z36z37z38z39z310z311z312z313*ü
destroy"gevent.libev.corecext.loop.destroy"
None*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loopz36z37z38z39z310z311z312z313*π
ptrgevent.libev.corecext.loop.ptr"
builtins.int"builtins.int*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop0:property`z36z37z38z39z310z311z312z313*ó
WatcherType&gevent.libev.corecext.loop.WatcherType"j
"Type[gevent.libev.watcher.watcher]<
gevent.libev.watcher.watcher"gevent.libev.watcher.watcher"type*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop0:property`z36z37z38z39z310z311z312z313*ø
MAXPRI!gevent.libev.corecext.loop.MAXPRI"
builtins.int"builtins.int*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop0:property`z36z37z38z39z310z311z312z313*ø
MINPRI!gevent.libev.corecext.loop.MINPRI"
builtins.int"builtins.int*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop0:property`z36z37z38z39z310z311z312z313*ı
handle_error'gevent.libev.corecext.loop.handle_error"
None*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop*Z
contextM
Union[builtins.object,None]"
builtins.object"builtins.object
None*õ
typeê
(Union[Type[builtins.BaseException],None]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type
None*m
valueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*a
tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Nonez36z37z38z39z310z311z312z313*Ò
rungevent.libev.corecext.loop.run"
None*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop*,
nowait
builtins.bool"builtins.bool **
once
builtins.bool"builtins.bool z36z37z38z39z310z311z312z313*ù
reinit!gevent.libev.corecext.loop.reinit"
None*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loopz36z37z38z39z310z311z312z313*ó
refgevent.libev.corecext.loop.ref"
None*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loopz36z37z38z39z310z311z312z313*õ
unref gevent.libev.corecext.loop.unref"
None*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loopz36z37z38z39z310z311z312z313*∆
break_!gevent.libev.corecext.loop.break_"
None*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop*'
how
builtins.int"builtins.int z36z37z38z39z310z311z312z313*ù
verify!gevent.libev.corecext.loop.verify"
None*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loopz36z37z38z39z310z311z312z313*Ø
nowgevent.libev.corecext.loop.now" 
builtins.float"builtins.float*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loopz36z37z38z39z310z311z312z313*•

update_now%gevent.libev.corecext.loop.update_now"
None*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loopz36z37z38z39z310z311z312z313*√
default"gevent.libev.corecext.loop.default"
builtins.bool"builtins.bool*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop0:property`z36z37z38z39z310z311z312z313*≈
	iteration$gevent.libev.corecext.loop.iteration"
builtins.int"builtins.int*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop0:property`z36z37z38z39z310z311z312z313*Ω
depth gevent.libev.corecext.loop.depth"
builtins.int"builtins.int*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop0:property`z36z37z38z39z310z311z312z313*…
backend_int&gevent.libev.corecext.loop.backend_int"
builtins.int"builtins.int*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop0:property`z36z37z38z39z310z311z312z313*Ö
backend"gevent.libev.corecext.loop.backend"`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop0:property`z36z37z38z39z310z311z312z313*«

pendingcnt%gevent.libev.corecext.loop.pendingcnt"
builtins.int"builtins.int*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop0:property`z36z37z38z39z310z311z312z313*ê
iogevent.libev.corecext.loop.io"2
gevent.libev.watcher.io"gevent.libev.watcher.io*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop*$
fd
builtins.int"builtins.int*(
events
builtins.int"builtins.int*)
ref
builtins.bool"builtins.bool *T
priorityD
Union[builtins.int,None]
builtins.int"builtins.int
None z36z37z38z39z310z311z312z313*·

closing_fd%gevent.libev.corecext.loop.closing_fd"
builtins.bool"builtins.bool*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop*$
fd
builtins.int"builtins.intz36z37z38z39z310z311z312z313*©
timer gevent.libev.corecext.loop.timer"8
gevent.libev.watcher.timer"gevent.libev.watcher.timer*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop*+
after 
builtins.float"builtins.float*.
repeat 
builtins.float"builtins.float *)
ref
builtins.bool"builtins.bool *T
priorityD
Union[builtins.int,None]
builtins.int"builtins.int
None z36z37z38z39z310z311z312z313*˙
signal!gevent.libev.corecext.loop.signal":
gevent.libev.watcher.signal"gevent.libev.watcher.signal*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop*(
signum
builtins.int"builtins.int*)
ref
builtins.bool"builtins.bool *T
priorityD
Union[builtins.int,None]
builtins.int"builtins.int
None z36z37z38z39z310z311z312z313*»
idlegevent.libev.corecext.loop.idle"6
gevent.libev.watcher.idle"gevent.libev.watcher.idle*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop*)
ref
builtins.bool"builtins.bool *T
priorityD
Union[builtins.int,None]
builtins.int"builtins.int
None z36z37z38z39z310z311z312z313*‘
prepare"gevent.libev.corecext.loop.prepare"<
gevent.libev.watcher.prepare"gevent.libev.watcher.prepare*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop*)
ref
builtins.bool"builtins.bool *T
priorityD
Union[builtins.int,None]
builtins.int"builtins.int
None z36z37z38z39z310z311z312z313*Ã
check gevent.libev.corecext.loop.check"8
gevent.libev.watcher.check"gevent.libev.watcher.check*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop*)
ref
builtins.bool"builtins.bool *T
priorityD
Union[builtins.int,None]
builtins.int"builtins.int
None z36z37z38z39z310z311z312z313*»
forkgevent.libev.corecext.loop.fork"6
gevent.libev.watcher.fork"gevent.libev.watcher.fork*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop*)
ref
builtins.bool"builtins.bool *T
priorityD
Union[builtins.int,None]
builtins.int"builtins.int
None z36z37z38z39z310z311z312z313*–
async_!gevent.libev.corecext.loop.async_":
gevent.libev.watcher.async_"gevent.libev.watcher.async_*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop*)
ref
builtins.bool"builtins.bool *T
priorityD
Union[builtins.int,None]
builtins.int"builtins.int
None z36z37z38z39z310z311z312z313*»
child gevent.libev.corecext.loop.child"8
gevent.libev.watcher.child"gevent.libev.watcher.child*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop*%
pid
builtins.int"builtins.int*)
trace
builtins.int"builtins.int *)
ref
builtins.bool"builtins.bool z36z37z38z39z310z311z312z313*Ø
install_sigchld*gevent.libev.corecext.loop.install_sigchld"
None*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loopz36z37z38z39z310z311z312z313*´
reset_sigchld(gevent.libev.corecext.loop.reset_sigchld"
None*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loopz36z37z38z39z310z311z312z313*•
statgevent.libev.corecext.loop.stat"6
gevent.libev.watcher.stat"gevent.libev.watcher.stat*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop*&
path
builtins.str"builtins.str*0
interval 
builtins.float"builtins.float *)
ref
builtins.bool"builtins.bool *W
priorityG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None z36z37z38z39z310z311z312z313*ø
run_callback'gevent.libev.corecext.loop.run_callback"2
gevent._types._Callback"gevent._types._Callback*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop*U
funcK
CallableType[builtins.function]&
builtins.function"builtins.function*

args *
_ z36z37z38z39z310z311z312z313*’
run_callback_threadsafe2gevent.libev.corecext.loop.run_callback_threadsafe"2
gevent._types._Callback"gevent._types._Callback*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop*U
funcK
CallableType[builtins.function]&
builtins.function"builtins.function*

args *
_ z36z37z38z39z310z311z312z313*Ÿ
fileno!gevent.libev.corecext.loop.fileno"D
Union[builtins.int,None]
builtins.int"builtins.int
None*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loopz36z37z38z39z310z311z312z313*≈
	activecnt$gevent.libev.corecext.loop.activecnt"
builtins.int"builtins.int*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop0:property`z36z37z38z39z310z311z312z313*…
sig_pending&gevent.libev.corecext.loop.sig_pending"
builtins.int"builtins.int*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop0:property`z36z37z38z39z310z311z312z313*Ã
	origflags$gevent.libev.corecext.loop.origflags"¢
/builtins.list[Union[builtins.str,builtins.int]]`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"builtins.list*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop0:property`z36z37z38z39z310z311z312z313*Õ
origflags_int(gevent.libev.corecext.loop.origflags_int"
builtins.int"builtins.int*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop0:property`z36z37z38z39z310z311z312z313*Ω
sigfd gevent.libev.corecext.loop.sigfd"
builtins.int"builtins.int*B
self8
gevent.libev.corecext.loop"gevent.libev.corecext.loop0:property`z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313r©
#starting_timer_may_update_loop_time>gevent.libev.corecext.loop.starting_timer_may_update_loop_time
builtins.bool"builtins.bool*36*37*38*39*310*311*312*313r∂
error_handler(gevent.libev.corecext.loop.error_handler÷
bTypeAlias[Union[TypeAlias[CallableType[builtins.function]],gevent._ffi.loop._SupportsHandleError]]Õ
WUnion[TypeAlias[CallableType[builtins.function]],gevent._ffi.loop._SupportsHandleError]ü
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function""gevent._ffi.loop._ErrorHandlerFuncN
%gevent._ffi.loop._SupportsHandleError"%gevent._ffi.loop._SupportsHandleError"gevent._ffi.loop._ErrorHandler*36*37*38*39*310*311*312*313rú
update!gevent.libev.corecext.loop.updateK
CallableType[builtins.function]&
builtins.function"builtins.function*36*37*38*39*310*311*312*313¢
watchergevent.libev.watcher.watcher"gevent._ffi.watcher.watcher*’
__init__%gevent.libev.watcher.watcher.__init__"
None*F
self<
gevent.libev.watcher.watcher"gevent.libev.watcher.watcher*™
_loopû
GTypeAlias[Union[gevent.libev.corecffi.loop,gevent.libev.corecext.loop]]¥
<Union[gevent.libev.corecffi.loop,gevent.libev.corecext.loop]8
gevent.libev.corecffi.loop"gevent.libev.corecffi.loop8
gevent.libev.corecext.loop"gevent.libev.corecext.loop"gevent.libev.watcher._Loop*)
ref
builtins.bool"builtins.bool *T
priorityD
Union[builtins.int,None]
builtins.int"builtins.int
None z36z37z38z39z310z311z312z313*∫
feed!gevent.libev.watcher.watcher.feed"
None*F
self<
gevent.libev.watcher.watcher"gevent.libev.watcher.watcher*)
revents
builtins.int"builtins.int*Y
callbackK
CallableType[builtins.function]&
builtins.function"builtins.function*

args *
_ z36z37z38z39z310z311z312z3132¢
ref gevent.libev.watcher.watcher.refü
ref gevent.libev.watcher.watcher.ref"
builtins.bool"builtins.bool*F
self<
gevent.libev.watcher.watcher"gevent.libev.watcher.watcher0:propertyX`≤
ref gevent.libev.watcher.watcher.ref"
None*F
self<
gevent.libev.watcher.watcher"gevent.libev.watcher.watcher*)
value
builtins.bool"builtins.bool0:
ref.setter"36"37"38"39"310"311"312"313j36j37j38j39j310j311j312j313º	
iogevent.libev.watcher.io"gevent._ffi.watcher.IoMixin"gevent.libev.watcher.watcher*æ

events_str"gevent.libev.watcher.io.events_str"
builtins.str"builtins.str*<
self2
gevent.libev.watcher.io"gevent.libev.watcher.io0:property`z36z37z38z39z310z311z312z3132Ù
fdgevent.libev.watcher.io.fdå
fdgevent.libev.watcher.io.fd"
builtins.int"builtins.int*<
self2
gevent.libev.watcher.io"gevent.libev.watcher.io0:propertyX`û
fdgevent.libev.watcher.io.fd"
None*<
self2
gevent.libev.watcher.io"gevent.libev.watcher.io*'
value
builtins.int"builtins.int0:	fd.setter"36"37"38"39"310"311"312"3132ë
eventsgevent.libev.watcher.io.eventsî
eventsgevent.libev.watcher.io.events"
builtins.int"builtins.int*<
self2
gevent.libev.watcher.io"gevent.libev.watcher.io0:propertyX`´
eventsgevent.libev.watcher.io.events"
None*<
self2
gevent.libev.watcher.io"gevent.libev.watcher.io*(
events
builtins.int"builtins.int0:events.setter"36"37"38"39"310"311"312"313j36j37j38j39j310j311j312j313rr

EVENT_MASK"gevent.libev.watcher.io.EVENT_MASK
builtins.int"builtins.int*36*37*38*39*310*311*312*313√
timergevent.libev.watcher.timer"gevent._ffi.watcher.TimerMixin"gevent.libev.watcher.watcher*ª
atgevent.libev.watcher.timer.at" 
builtins.float"builtins.float*B
self8
gevent.libev.watcher.timer"gevent.libev.watcher.timer0:property`z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313à
signalgevent.libev.watcher.signal"gevent._ffi.watcher.SignalMixin"gevent.libev.watcher.watcherj36j37j38j39j310j311j312j313Ç
idlegevent.libev.watcher.idle"gevent._ffi.watcher.IdleMixin"gevent.libev.watcher.watcherj36j37j38j39j310j311j312j313ã
preparegevent.libev.watcher.prepare" gevent._ffi.watcher.PrepareMixin"gevent.libev.watcher.watcherj36j37j38j39j310j311j312j313Ö
checkgevent.libev.watcher.check"gevent._ffi.watcher.CheckMixin"gevent.libev.watcher.watcherj36j37j38j39j310j311j312j313Ç
forkgevent.libev.watcher.fork"gevent._ffi.watcher.ForkMixin"gevent.libev.watcher.watcherj36j37j38j39j310j311j312j313á
async_gevent.libev.watcher.async_"gevent._ffi.watcher.AsyncMixin"gevent.libev.watcher.watcherj36j37j38j39j310j311j312j313Œ
childgevent.libev.watcher.child"gevent._ffi.watcher.ChildMixin"gevent.libev.watcher.watcher2ó
rpidgevent.libev.watcher.child.rpidô
rpidgevent.libev.watcher.child.rpid"
builtins.int"builtins.int*B
self8
gevent.libev.watcher.child"gevent.libev.watcher.child0:propertyX`≠
rpidgevent.libev.watcher.child.rpid"
None*B
self8
gevent.libev.watcher.child"gevent.libev.watcher.child*'
value
builtins.int"builtins.int0:rpid.setter"36"37"38"39"310"311"312"3132¨
rstatus"gevent.libev.watcher.child.rstatusü
rstatus"gevent.libev.watcher.child.rstatus"
builtins.int"builtins.int*B
self8
gevent.libev.watcher.child"gevent.libev.watcher.child0:propertyX`∂
rstatus"gevent.libev.watcher.child.rstatus"
None*B
self8
gevent.libev.watcher.child"gevent.libev.watcher.child*'
value
builtins.int"builtins.int0:rstatus.setter"36"37"38"39"310"311"312"313j36j37j38j39j310j311j312j313…
statgevent.libev.watcher.stat"gevent._ffi.watcher.StatMixin"gevent.libev.watcher.watcher*ƒ
interval"gevent.libev.watcher.stat.interval" 
builtins.float"builtins.float*@
self6
gevent.libev.watcher.stat"gevent.libev.watcher.stat0:property`z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313*¥
__annotations__$gevent.libev.watcher.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313*B
_basegevent._ffi.watcher *36*37*38*39*310*311*312*313*ó
__all__gevent.libev.watcher.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*36*37*38*39*310*311*312*313