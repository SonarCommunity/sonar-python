
geoip2.databaseú

TracebackTypetypes.TracebackType"builtins.object*Õ
tb_nexttypes.TracebackType.tb_next"Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None*4
self*
types.TracebackType"types.TracebackType0:property`z35z36*©
tb_frametypes.TracebackType.tb_frame""
types.FrameType"types.FrameType*4
self*
types.TracebackType"types.TracebackType0:property`z35z36z37z38z39z310*£
tb_lastitypes.TracebackType.tb_lasti"
builtins.int"builtins.int*4
self*
types.TracebackType"types.TracebackType0:property`z35z36z37z38z39z310*•
	tb_linenotypes.TracebackType.tb_lineno"
builtins.int"builtins.int*4
self*
types.TracebackType"types.TracebackType0:property`z35z36z37z38z39z310*Ï
__init__types.TracebackType.__init__"
None*4
self*
types.TracebackType"types.TracebackType*f
tb_nextY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None*0
tb_frame"
types.FrameType"types.FrameType**
tb_lasti
builtins.int"builtins.int*+
	tb_lineno
builtins.int"builtins.intz37z38z39z310j35j36j37j38j39j310rí
tb_nexttypes.TracebackType.tb_nextY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None*37*38*39*310¬
Sequencetyping.Sequence"typing.Collection"typing.Reversible*å
indextyping.Sequence.index"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
value
Any*)
start
builtins.int"builtins.int *(
stop
builtins.int"builtins.int z35z36z37z38z39z310*∑
counttyping.Sequence.count"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
value
Anyz35z36z37z38z39z310*⁄
__contains__typing.Sequence.__contains__"
builtins.bool"builtins.bool*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*'
x"
builtins.object"builtins.objectz35z36z37z38z39z310*Õ
__iter__typing.Sequence.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez35z36z37z38z39z310*’
__reversed__typing.Sequence.__reversed__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez35z36z37z38z39z3102ï
__getitem__typing.Sequence.__getitem__À
__getitem__typing.Sequence.__getitem__"
typing._T_co*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*!
i
builtins.int"builtins.int0:overload:abstractmethod@XÅ
__getitem__typing.Sequence.__getitem__"B
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*%
s 
builtins.slice"builtins.slice0:overload:abstractmethod@X"35"36"37"38"39"310Pj35j36j37j38j39j310‡

ASNgeoip2.models.ASN"geoip2.models.SimpleModel*ª
__init__geoip2.models.ASN.__init__"
None*0
self&
geoip2.models.ASN"geoip2.models.ASN*Ω
raw≥
HTypeAlias[typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]]»
=typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]
builtins.str"builtins.strY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"typing.Mapping"geoip2.models._RawResponsez35z36z37z38z39z310j35j36j37j38j39j310r•
autonomous_system_number*geoip2.models.ASN.autonomous_system_numberD
Union[builtins.int,None]
builtins.int"builtins.int
None*35*36*37*38*39*310r±
autonomous_system_organization0geoip2.models.ASN.autonomous_system_organizationD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310râ

ip_addressgeoip2.models.ASN.ip_addressD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310rÎ
rawgeoip2.models.ASN.raw≥
HTypeAlias[typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]]»
=typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]
builtins.str"builtins.strY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"typing.Mapping"geoip2.models._RawResponse*35*36*37*38*39*310è
ISPgeoip2.models.ISP"geoip2.models.ASN*ª
__init__geoip2.models.ISP.__init__"
None*0
self&
geoip2.models.ISP"geoip2.models.ISP*Ω
raw≥
HTypeAlias[typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]]»
=typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]
builtins.str"builtins.strY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"typing.Mapping"geoip2.models._RawResponsez35z36z37z38z39z310j35j36j37j38j39j310r{
ispgeoip2.models.ISP.ispD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310rç
organizationgeoip2.models.ISP.organizationD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310ï
AnonymousIPgeoip2.models.AnonymousIP"geoip2.models.SimpleModel*”
__init__"geoip2.models.AnonymousIP.__init__"
None*@
self6
geoip2.models.AnonymousIP"geoip2.models.AnonymousIP*Ω
raw≥
HTypeAlias[typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]]»
=typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]
builtins.str"builtins.strY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"typing.Mapping"geoip2.models._RawResponsez35z36z37z38z39z310j35j36j37j38j39j310ro
is_anonymous&geoip2.models.AnonymousIP.is_anonymous
builtins.bool"builtins.bool*35*36*37*38*39*310rw
is_anonymous_vpn*geoip2.models.AnonymousIP.is_anonymous_vpn
builtins.bool"builtins.bool*35*36*37*38*39*310r}
is_hosting_provider-geoip2.models.AnonymousIP.is_hosting_provider
builtins.bool"builtins.bool*35*36*37*38*39*310ru
is_public_proxy)geoip2.models.AnonymousIP.is_public_proxy
builtins.bool"builtins.bool*35*36*37*38*39*310rw
is_tor_exit_node*geoip2.models.AnonymousIP.is_tor_exit_node
builtins.bool"builtins.bool*35*36*37*38*39*310rë

ip_address$geoip2.models.AnonymousIP.ip_addressD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310rÛ
rawgeoip2.models.AnonymousIP.raw≥
HTypeAlias[typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]]»
=typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]
builtins.str"builtins.strY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"typing.Mapping"geoip2.models._RawResponse*35*36*37*38*39*310©
Citygeoip2.models.City"geoip2.models.Country*¥
__init__geoip2.models.City.__init__"
None*2
self(
geoip2.models.City"geoip2.models.City*∆
raw_response≥
HTypeAlias[typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]]»
=typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]
builtins.str"builtins.strY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"typing.Mapping"geoip2.models._RawResponse*Í
locales⁄
4TypeAlias[Union[typing.Sequence[builtins.str],None]]á
)Union[typing.Sequence[builtins.str],None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
None"geoip2.models._Locales z35z36z37z38z39z310j35j36j37j38j39j310rA
citygeoip2.models.City.city
Any*35*36*37*38*39*310rI
locationgeoip2.models.City.location
Any*35*36*37*38*39*310rE
postalgeoip2.models.City.postal
Any*35*36*37*38*39*310rQ
subdivisionsgeoip2.models.City.subdivisions
Any*35*36*37*38*39*310Ú	
ConnectionTypegeoip2.models.ConnectionType"geoip2.models.SimpleModel*‹
__init__%geoip2.models.ConnectionType.__init__"
None*F
self<
geoip2.models.ConnectionType"geoip2.models.ConnectionType*Ω
raw≥
HTypeAlias[typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]]»
=typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]
builtins.str"builtins.strY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"typing.Mapping"geoip2.models._RawResponsez35z36z37z38z39z310j35j36j37j38j39j310rû
connection_type,geoip2.models.ConnectionType.connection_typeD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310rî

ip_address'geoip2.models.ConnectionType.ip_addressD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310rˆ
raw geoip2.models.ConnectionType.raw≥
HTypeAlias[typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]]»
=typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]
builtins.str"builtins.strY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"typing.Mapping"geoip2.models._RawResponse*35*36*37*38*39*310Å
Countrygeoip2.models.Country"geoip2.mixins.SimpleEquality*Ω
__init__geoip2.models.Country.__init__"
None*8
self.
geoip2.models.Country"geoip2.models.Country*∆
raw_response≥
HTypeAlias[typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]]»
=typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]
builtins.str"builtins.strY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"typing.Mapping"geoip2.models._RawResponse*Í
locales⁄
4TypeAlias[Union[typing.Sequence[builtins.str],None]]á
)Union[typing.Sequence[builtins.str],None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
None"geoip2.models._Locales z35z36z37z38z39z310j35j36j37j38j39j310rN
	continentgeoip2.models.Country.continent
Any*35*36*37*38*39*310rJ
countrygeoip2.models.Country.country
Any*35*36*37*38*39*310r`
registered_country(geoip2.models.Country.registered_country
Any*35*36*37*38*39*310rb
represented_country)geoip2.models.Country.represented_country
Any*35*36*37*38*39*310rJ
maxmindgeoip2.models.Country.maxmind
Any*35*36*37*38*39*310rH
traitsgeoip2.models.Country.traits
Any*35*36*37*38*39*310rÔ
rawgeoip2.models.Country.raw≥
HTypeAlias[typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]]»
=typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]
builtins.str"builtins.strY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"typing.Mapping"geoip2.models._RawResponse*35*36*37*38*39*310Ø
Domaingeoip2.models.Domain"geoip2.models.SimpleModel*ƒ
__init__geoip2.models.Domain.__init__"
None*6
self,
geoip2.models.Domain"geoip2.models.Domain*Ω
raw≥
HTypeAlias[typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]]»
=typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]
builtins.str"builtins.strY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"typing.Mapping"geoip2.models._RawResponsez35z36z37z38z39z310j35j36j37j38j39j310rÑ
domaingeoip2.models.Domain.domainD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310rå

ip_addressgeoip2.models.Domain.ip_addressD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310r~
rawgeoip2.models.Domain.rawD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310S

Enterprisegeoip2.models.Enterprise"geoip2.models.Cityj35j36j37j38j39j310®
Metadatamaxminddb.reader.Metadata"builtins.object*®
__init__"maxminddb.reader.Metadata.__init__"
None*@
self6
maxminddb.reader.Metadata"maxminddb.reader.Metadata*
kwargs
Anyz35z36z37z38z39z310*¡
node_byte_size(maxminddb.reader.Metadata.node_byte_size"
builtins.int"builtins.int*@
self6
maxminddb.reader.Metadata"maxminddb.reader.Metadata0:property`z35z36z37z38z39z310*≈
search_tree_size*maxminddb.reader.Metadata.search_tree_size"
builtins.int"builtins.int*@
self6
maxminddb.reader.Metadata"maxminddb.reader.Metadata0:property`z35z36z37z38z39z310j35j36j37j38j39j310ri

node_count$maxminddb.reader.Metadata.node_count
builtins.int"builtins.int*35*36*37*38*39*310rk
record_size%maxminddb.reader.Metadata.record_size
builtins.int"builtins.int*35*36*37*38*39*310ri

ip_version$maxminddb.reader.Metadata.ip_version
builtins.int"builtins.int*35*36*37*38*39*310ro
database_type'maxminddb.reader.Metadata.database_type
builtins.str"builtins.str*35*36*37*38*39*310rô
	languages#maxminddb.reader.Metadata.languagesN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*35*36*37*38*39*310rã
binary_format_major_version5maxminddb.reader.Metadata.binary_format_major_version
builtins.int"builtins.int*35*36*37*38*39*310rã
binary_format_minor_version5maxminddb.reader.Metadata.binary_format_minor_version
builtins.int"builtins.int*35*36*37*38*39*310rk
build_epoch%maxminddb.reader.Metadata.build_epoch
builtins.int"builtins.int*35*36*37*38*39*310r∆
description%maxminddb.reader.Metadata.descriptionw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping*35*36*37*38*39*310ñ
Readergeoip2.database.Reader"builtins.object*œ
__init__geoip2.database.Reader.__init__"
None*:
self0
geoip2.database.Reader"geoip2.database.Reader**
filename
builtins.str"builtins.str*Ï
locales‹
4TypeAlias[Union[typing.Sequence[builtins.str],None]]á
)Union[typing.Sequence[builtins.str],None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
None"geoip2.database._Locales *(
mode
builtins.int"builtins.int z35z36z37z38z39z310*≤
	__enter__ geoip2.database.Reader.__enter__"0
geoip2.database.Reader"geoip2.database.Reader*8
self0
geoip2.database.Reader"geoip2.database.Readerz35z36z37z38z39z310*¸
__exit__geoip2.database.Reader.__exit__"
None*8
self0
geoip2.database.Reader"geoip2.database.Reader*ô
exc_typeä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None *o
exc_valb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None *e
exc_tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None z35z36z37z38z39z310*‹
countrygeoip2.database.Reader.country".
geoip2.models.Country"geoip2.models.Country*:
self0
geoip2.database.Reader"geoip2.database.Reader*,

ip_address
builtins.str"builtins.strz35z36z37z38z39z310*–
citygeoip2.database.Reader.city"(
geoip2.models.City"geoip2.models.City*:
self0
geoip2.database.Reader"geoip2.database.Reader*,

ip_address
builtins.str"builtins.strz35z36z37z38z39z310*Ó
anonymous_ip#geoip2.database.Reader.anonymous_ip"6
geoip2.models.AnonymousIP"geoip2.models.AnonymousIP*:
self0
geoip2.database.Reader"geoip2.database.Reader*,

ip_address
builtins.str"builtins.strz35z36z37z38z39z310*Ã
asngeoip2.database.Reader.asn"&
geoip2.models.ASN"geoip2.models.ASN*:
self0
geoip2.database.Reader"geoip2.database.Reader*,

ip_address
builtins.str"builtins.strz35z36z37z38z39z310*˙
connection_type&geoip2.database.Reader.connection_type"<
geoip2.models.ConnectionType"geoip2.models.ConnectionType*:
self0
geoip2.database.Reader"geoip2.database.Reader*,

ip_address
builtins.str"builtins.strz35z36z37z38z39z310*ÿ
domaingeoip2.database.Reader.domain",
geoip2.models.Domain"geoip2.models.Domain*:
self0
geoip2.database.Reader"geoip2.database.Reader*,

ip_address
builtins.str"builtins.strz35z36z37z38z39z310*Ë

enterprise!geoip2.database.Reader.enterprise"4
geoip2.models.Enterprise"geoip2.models.Enterprise*:
self0
geoip2.database.Reader"geoip2.database.Reader*,

ip_address
builtins.str"builtins.strz35z36z37z38z39z310*Ã
ispgeoip2.database.Reader.isp"&
geoip2.models.ISP"geoip2.models.ISP*:
self0
geoip2.database.Reader"geoip2.database.Reader*,

ip_address
builtins.str"builtins.strz35z36z37z38z39z310*∏
metadatageoip2.database.Reader.metadata"6
maxminddb.reader.Metadata"maxminddb.reader.Metadata*:
self0
geoip2.database.Reader"geoip2.database.Readerz35z36z37z38z39z310*Ñ
closegeoip2.database.Reader.close"
None*:
self0
geoip2.database.Reader"geoip2.database.Readerz35z36z37z38z39z310j35j36j37j38j39j310*`
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*X
Typetyping.Type*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310