
*torch.ao.quantization.backend_config.utils¬
get_pattern_to_dtype_configsGtorch.ao.quantization.backend_config.utils.get_pattern_to_dtype_configs"¤
Èbuiltins.dict[TypeAlias[Union[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]],Tuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]],Any]],builtins.list[torch.ao.quantization.backend_config.backend_config.DTypeConfig]]à	
êTypeAlias[Union[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]],Tuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]],Any]]É
ßUnion[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]],Tuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]],Any]K
CallableType[builtins.function]&
builtins.function"builtins.functionä
FTuple[CallableType[builtins.function],CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function¥
mTuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]]K
CallableType[builtins.function]&
builtins.function"builtins.functionä
FTuple[CallableType[builtins.function],CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function
Any"#torch.ao.quantization.utils.Patternä
Nbuiltins.list[torch.ao.quantization.backend_config.backend_config.DTypeConfig]‚
?torch.ao.quantization.backend_config.backend_config.DTypeConfig"?torch.ao.quantization.backend_config.backend_config.DTypeConfig"builtins.list"builtins.dict*›
backend_config†
Atorch.ao.quantization.backend_config.backend_config.BackendConfig"Atorch.ao.quantization.backend_config.backend_config.BackendConfigÊ
get_qat_module_classesAtorch.ao.quantization.backend_config.utils.get_qat_module_classes"O
builtins.tuple[builtins.type]
builtins.type"builtins.type"builtins.tuple*›
backend_config†
Atorch.ao.quantization.backend_config.backend_config.BackendConfig"Atorch.ao.quantization.backend_config.backend_config.BackendConfigÎ
get_fused_module_classesCtorch.ao.quantization.backend_config.utils.get_fused_module_classes"O
builtins.tuple[builtins.type]
builtins.type"builtins.type"builtins.tuple*›
backend_config†
Atorch.ao.quantization.backend_config.backend_config.BackendConfig"Atorch.ao.quantization.backend_config.backend_config.BackendConfig¢
"get_pattern_to_input_type_to_indexMtorch.ao.quantization.backend_config.utils.get_pattern_to_input_type_to_index"Ž
¢builtins.dict[TypeAlias[Union[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]],Tuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]],Any]],builtins.dict[builtins.str,builtins.int]]à	
êTypeAlias[Union[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]],Tuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]],Any]]É
ßUnion[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]],Tuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]],Any]K
CallableType[builtins.function]&
builtins.function"builtins.functionä
FTuple[CallableType[builtins.function],CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function¥
mTuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]]K
CallableType[builtins.function]&
builtins.function"builtins.functionä
FTuple[CallableType[builtins.function],CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function
Any"#torch.ao.quantization.utils.Patternu
(builtins.dict[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"builtins.dict"builtins.dict*›
backend_config†
Atorch.ao.quantization.backend_config.backend_config.BackendConfig"Atorch.ao.quantization.backend_config.backend_config.BackendConfig÷
-get_root_module_to_quantized_reference_moduleXtorch.ao.quantization.backend_config.utils.get_root_module_to_quantized_reference_module"Í
Xbuiltins.dict[Type[torch.nn.modules.module.Module],Type[torch.nn.modules.module.Module]]p
$Type[torch.nn.modules.module.Module]@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"typep
$Type[torch.nn.modules.module.Module]@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"type"builtins.dict*›
backend_config†
Atorch.ao.quantization.backend_config.backend_config.BackendConfig"Atorch.ao.quantization.backend_config.backend_config.BackendConfig«
get_fuser_method_mappingCtorch.ao.quantization.backend_config.utils.get_fuser_method_mapping"«
Æbuiltins.dict[TypeAlias[Union[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]],Tuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]],Any]],Union[torch.nn.modules.container.Sequential,CallableType[builtins.function]]]à	
êTypeAlias[Union[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]],Tuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]],Any]]É
ßUnion[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]],Tuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]],Any]K
CallableType[builtins.function]&
builtins.function"builtins.functionä
FTuple[CallableType[builtins.function],CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function¥
mTuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]]K
CallableType[builtins.function]&
builtins.function"builtins.functionä
FTuple[CallableType[builtins.function],CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function
Any"#torch.ao.quantization.utils.Patterní
LUnion[torch.nn.modules.container.Sequential,CallableType[builtins.function]]N
%torch.nn.modules.container.Sequential"%torch.nn.modules.container.SequentialK
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.dict*›
backend_config†
Atorch.ao.quantization.backend_config.backend_config.BackendConfig"Atorch.ao.quantization.backend_config.backend_config.BackendConfig…
get_module_to_qat_moduleCtorch.ao.quantization.backend_config.utils.get_module_to_qat_module"…
žbuiltins.dict[TypeAlias[Union[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]],Tuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]],Any]],Type[torch.nn.modules.module.Module]]à	
êTypeAlias[Union[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]],Tuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]],Any]]É
ßUnion[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]],Tuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]],Any]K
CallableType[builtins.function]&
builtins.function"builtins.functionä
FTuple[CallableType[builtins.function],CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function¥
mTuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]]K
CallableType[builtins.function]&
builtins.function"builtins.functionä
FTuple[CallableType[builtins.function],CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function
Any"#torch.ao.quantization.utils.Patternp
$Type[torch.nn.modules.module.Module]@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"type"builtins.dict*›
backend_config†
Atorch.ao.quantization.backend_config.backend_config.BackendConfig"Atorch.ao.quantization.backend_config.backend_config.BackendConfig÷
&get_fusion_pattern_to_root_node_getterQtorch.ao.quantization.backend_config.utils.get_fusion_pattern_to_root_node_getter"Û
™builtins.dict[TypeAlias[Union[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]],Tuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]],Any]],CallableType[builtins.function]]à	
êTypeAlias[Union[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]],Tuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]],Any]]É
ßUnion[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]],Tuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]],Any]K
CallableType[builtins.function]&
builtins.function"builtins.functionä
FTuple[CallableType[builtins.function],CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function¥
mTuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]]K
CallableType[builtins.function]&
builtins.function"builtins.functionä
FTuple[CallableType[builtins.function],CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function
Any"#torch.ao.quantization.utils.PatternK
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.dict*›
backend_config†
Atorch.ao.quantization.backend_config.backend_config.BackendConfig"Atorch.ao.quantization.backend_config.backend_config.BackendConfigý
)get_fusion_pattern_to_extra_inputs_getterTtorch.ao.quantization.backend_config.utils.get_fusion_pattern_to_extra_inputs_getter"Û
™builtins.dict[TypeAlias[Union[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]],Tuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]],Any]],CallableType[builtins.function]]à	
êTypeAlias[Union[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]],Tuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]],Any]]É
ßUnion[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]],Tuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]],Any]K
CallableType[builtins.function]&
builtins.function"builtins.functionä
FTuple[CallableType[builtins.function],CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function¥
mTuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]]K
CallableType[builtins.function]&
builtins.function"builtins.functionä
FTuple[CallableType[builtins.function],CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function
Any"#torch.ao.quantization.utils.PatternK
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.dict*›
backend_config†
Atorch.ao.quantization.backend_config.backend_config.BackendConfig"Atorch.ao.quantization.backend_config.backend_config.BackendConfigŠ
!remove_boolean_dispatch_from_nameLtorch.ao.quantization.backend_config.utils.remove_boolean_dispatch_from_name"
Any*
p
Anyz
pattern_to_human_readableDtorch.ao.quantization.backend_config.utils.pattern_to_human_readable"
Any*
p
Any‡
entry_to_pretty_str>torch.ao.quantization.backend_config.utils.entry_to_pretty_str"
builtins.str"builtins.str*
entry
AnyŽ
,_get_pattern_in_reversed_nested_tuple_formatWtorch.ao.quantization.backend_config.utils._get_pattern_in_reversed_nested_tuple_format"à	
êTypeAlias[Union[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]],Tuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]],Any]]É
ßUnion[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]],Tuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]],Any]K
CallableType[builtins.function]&
builtins.function"builtins.functionä
FTuple[CallableType[builtins.function],CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function¥
mTuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]]K
CallableType[builtins.function]&
builtins.function"builtins.functionä
FTuple[CallableType[builtins.function],CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function
Any"#torch.ao.quantization.utils.Pattern*¡
config”
Htorch.ao.quantization.backend_config.backend_config.BackendPatternConfig"Htorch.ao.quantization.backend_config.backend_config.BackendPatternConfig‚
1_get_fuser_method_in_reversed_nested_tuple_format\torch.ao.quantization.backend_config.utils._get_fuser_method_in_reversed_nested_tuple_format"K
CallableType[builtins.function]&
builtins.function"builtins.function*¡
config”
Htorch.ao.quantization.backend_config.backend_config.BackendPatternConfig"Htorch.ao.quantization.backend_config.backend_config.BackendPatternConfig*¦
__annotations__:torch.ao.quantization.backend_config.utils.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
nntorch.nn *
Ftorch.nn.functional *‰
__all__2torch.ao.quantization.backend_config.utils.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list