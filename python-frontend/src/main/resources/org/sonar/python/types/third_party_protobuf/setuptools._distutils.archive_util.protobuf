
"setuptools._distutils.archive_utilÉ
make_tarball/setuptools._distutils.archive_util.make_tarball"
builtins.str"builtins.str*+
	base_name
builtins.str"builtins.str*ø
base_diré
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]—
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*6
compress&
Union[Any,None]
Any
None *-
verbose
builtins.bool"builtins.bool *-
dry_run
builtins.bool"builtins.bool *Q
ownerD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
groupD
Union[builtins.str,None]
builtins.str"builtins.str
None z36z37¿
make_tarball/setuptools._distutils.archive_util.make_tarball"
builtins.str"builtins.str*+
	base_name
builtins.str"builtins.str*ø
base_diré
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]—
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*—
compress†
MUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None *-
verbose
builtins.bool"builtins.bool *-
dry_run
builtins.bool"builtins.bool *Q
ownerD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
groupD
Union[builtins.str,None]
builtins.str"builtins.str
None z38z39z310z311z312z313¸
make_zipfile/setuptools._distutils.archive_util.make_zipfile"
builtins.str"builtins.str*+
	base_name
builtins.str"builtins.str**
base_dir
builtins.str"builtins.str*-
verbose
builtins.bool"builtins.bool *-
dry_run
builtins.bool"builtins.bool z36z37z38z39z310z311z312z313"‚
make_archive/setuptools._distutils.archive_util.make_archiveæ
make_archive/setuptools._distutils.archive_util.make_archive"
builtins.str"builtins.str*+
	base_name
builtins.str"builtins.str*(
format
builtins.str"builtins.str*Ç
root_dir¶
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]¶
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]²
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *T
base_dirD
Union[builtins.str,None]
builtins.str"builtins.str
None *-
verbose
builtins.bool"builtins.bool *-
dry_run
builtins.bool"builtins.bool *Q
ownerD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
groupD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX³	
make_archive/setuptools._distutils.archive_util.make_archive"
builtins.str"builtins.str*ù
	base_nameé
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]—
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*(
format
builtins.str"builtins.str*Å
root_dir¶
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]²
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*T
base_dirD
Union[builtins.str,None]
builtins.str"builtins.str
None *-
verbose
builtins.bool"builtins.bool *-
dry_run
builtins.bool"builtins.bool *Q
ownerD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
groupD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX"36"37"38"39"310"311"312"313*Â
__annotations__2setuptools._distutils.archive_util.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313*F
Literal*setuptools._distutils.archive_util.Literal
Any*36*37