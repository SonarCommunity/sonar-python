
_pytest.debugging†
	pytestPDB_pytest.debugging.pytestPDB"builtins.object*´
_is_capturing)_pytest.debugging.pytestPDB._is_capturing"c
!Union[builtins.str,builtins.bool]
builtins.str"builtins.str
builtins.bool"builtins.bool*p
clsg
!Type[_pytest.debugging.pytestPDB]:
_pytest.debugging.pytestPDB"_pytest.debugging.pytestPDB"type*Ü
capmanz
*Union[_pytest.capture.CaptureManager,None]@
_pytest.capture.CaptureManager"_pytest.capture.CaptureManager
None0:classmethodp*”
_import_pdb_cls+_pytest.debugging.pytestPDB._import_pdb_cls"
Any*p
clsg
!Type[_pytest.debugging.pytestPDB]:
_pytest.debugging.pytestPDB"_pytest.debugging.pytestPDB"type*Ü
capmanz
*Union[_pytest.capture.CaptureManager,None]@
_pytest.capture.CaptureManager"_pytest.capture.CaptureManager
None0:classmethodp*˜
_get_pdb_wrapper_class2_pytest.debugging.pytestPDB._get_pdb_wrapper_class"
Any*p
clsg
!Type[_pytest.debugging.pytestPDB]:
_pytest.debugging.pytestPDB"_pytest.debugging.pytestPDB"type*
pdb_cls
Any*Ü
capmanz
*Union[_pytest.capture.CaptureManager,None]@
_pytest.capture.CaptureManager"_pytest.capture.CaptureManager
None0:classmethodp*n
	_init_pdb%_pytest.debugging.pytestPDB._init_pdb*
cls*

method*
args*

kwargs0:classmethodp*Á
	set_trace%_pytest.debugging.pytestPDB.set_trace"
None*p
clsg
!Type[_pytest.debugging.pytestPDB]:
_pytest.debugging.pytestPDB"_pytest.debugging.pytestPDB"type*
args
Any*
kwargs
Any0:classmethodpr≈
_pluginmanager*_pytest.debugging.pytestPDB._pluginmanagerÜ
.Union[_pytest.config.PytestPluginManager,None]H
"_pytest.config.PytestPluginManager""_pytest.config.PytestPluginManager
Nonerè
_config#_pytest.debugging.pytestPDB._config_
!Union[_pytest.config.Config,None].
_pytest.config.Config"_pytest.config.Config
Noner¸
_saved"_pytest.debugging.pytestPDB._savedÕ
Übuiltins.list[Tuple[CallableType[builtins.function],Union[_pytest.config.PytestPluginManager,None],Union[_pytest.config.Config,None]]]≤
wTuple[CallableType[builtins.function],Union[_pytest.config.PytestPluginManager,None],Union[_pytest.config.Config,None]]K
CallableType[builtins.function]&
builtins.function"builtins.functionÜ
.Union[_pytest.config.PytestPluginManager,None]H
"_pytest.config.PytestPluginManager""_pytest.config.PytestPluginManager
None_
!Union[_pytest.config.Config,None].
_pytest.config.Config"_pytest.config.Config
None"builtins.listr^
_recursive_debug,_pytest.debugging.pytestPDB._recursive_debug
builtins.int"builtins.intr”
_wrapped_pdb_cls,_pytest.debugging.pytestPDB._wrapped_pdb_clsê
&Union[Tuple[Type[Any],Type[Any]],None]Z
Tuple[Type[Any],Type[Any]]
	Type[Any]
Any"type
	Type[Any]
Any"type
Noneﬁ
	PdbInvoke_pytest.debugging.PdbInvoke"builtins.object*Ë
pytest_exception_interact5_pytest.debugging.PdbInvoke.pytest_exception_interact"
None*D
self:
_pytest.debugging.PdbInvoke"_pytest.debugging.PdbInvoke*2
node(
_pytest.nodes.Node"_pytest.nodes.Node*J
call@
_pytest.runner.CallInfo[Any]
Any"_pytest.runner.CallInfo*D
report8
_pytest.reports.BaseReport"_pytest.reports.BaseReport*∑
pytest_internalerror0_pytest.debugging.PdbInvoke.pytest_internalerror"
None*D
self:
_pytest.debugging.PdbInvoke"_pytest.debugging.PdbInvoke*ú
excinfoé
8_pytest._code.code.ExceptionInfo[builtins.BaseException]0
builtins.BaseException"builtins.BaseException" _pytest._code.code.ExceptionInfo∞
PdbTrace_pytest.debugging.PdbTrace"builtins.object*ˆ
pytest_pyfunc_call-_pytest.debugging.PdbTrace.pytest_pyfunc_call"R
 typing.Generator[None,None,None]
None
None
None"typing.Generator*B
self8
_pytest.debugging.PdbTrace"_pytest.debugging.PdbTrace*

pyfuncitem
Any0©

PytestPdbWrapper@157&_pytest.debugging.PytestPdbWrapper@157"builtins.object*N
do_debug/_pytest.debugging.PytestPdbWrapper@157.do_debug*
self*
arg*T
do_continue2_pytest.debugging.PytestPdbWrapper@157.do_continue*
self*
arg*L
do_quit._pytest.debugging.PytestPdbWrapper@157.do_quit*
self*
arg*N
setup,_pytest.debugging.PytestPdbWrapper@157.setup*
self*
f*
tb*U
	get_stack0_pytest.debugging.PytestPdbWrapper@157.get_stack*
self*
f*
tr√
_pytest_capman5_pytest.debugging.PytestPdbWrapper@157._pytest_capmanz
*Union[_pytest.capture.CaptureManager,None]@
_pytest.capture.CaptureManager"_pytest.capture.CaptureManager
Noner_

_continued1_pytest.debugging.PytestPdbWrapper@157._continued
builtins.bool"builtins.boolrÄ
do_c+_pytest.debugging.PytestPdbWrapper@157.do_cK
CallableType[builtins.function]&
builtins.function"builtins.functionrÜ
do_cont._pytest.debugging.PytestPdbWrapper@157.do_contK
CallableType[builtins.function]&
builtins.function"builtins.functionrÄ
do_q+_pytest.debugging.PytestPdbWrapper@157.do_qK
CallableType[builtins.function]&
builtins.function"builtins.functionrÜ
do_exit._pytest.debugging.PytestPdbWrapper@157.do_exitK
CallableType[builtins.function]&
builtins.function"builtins.function…
_validate_usepdb_cls&_pytest.debugging._validate_usepdb_cls"`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*'
value
builtins.str"builtins.strí
pytest_addoption"_pytest.debugging.pytest_addoption"
None*P
parserD
 _pytest.config.argparsing.Parser" _pytest.config.argparsing.Parser|
pytest_configure"_pytest.debugging.pytest_configure"
None*:
config.
_pytest.config.Config"_pytest.config.Configf
 wrap_pytest_function_for_tracing2_pytest.debugging.wrap_pytest_function_for_tracing*

pyfuncitemr
&maybe_wrap_pytest_function_for_tracing8_pytest.debugging.maybe_wrap_pytest_function_for_tracing*

pyfuncitem˙

_enter_pdb_pytest.debugging._enter_pdb"8
_pytest.reports.BaseReport"_pytest.reports.BaseReport*2
node(
_pytest.nodes.Node"_pytest.nodes.Node*ú
excinfoé
8_pytest._code.code.ExceptionInfo[builtins.BaseException]0
builtins.BaseException"builtins.BaseException" _pytest._code.code.ExceptionInfo*A
rep8
_pytest.reports.BaseReport"_pytest.reports.BaseReportã
_postmortem_traceback'_pytest.debugging._postmortem_traceback"*
types.TracebackType"types.TracebackType*ú
excinfoé
8_pytest._code.code.ExceptionInfo[builtins.BaseException]0
builtins.BaseException"builtins.BaseException" _pytest._code.code.ExceptionInfoi
post_mortem_pytest.debugging.post_mortem"
None*1
t*
types.TracebackType"types.TracebackType*ç
__annotations__!_pytest.debugging.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict