
lib2to3.fixes.fix_import™	
	FixImport"lib2to3.fixes.fix_import.FixImport"lib2to3.fixer_base.BaseFix*Û

start_tree-lib2to3.fixes.fix_import.FixImport.start_tree"
None*R
selfH
"lib2to3.fixes.fix_import.FixImport""lib2to3.fixes.fix_import.FixImport*4
tree*
lib2to3.pytree.Node"lib2to3.pytree.Node*ô
nameé
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]—
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz36z37z38z39z310*o
	transform,lib2to3.fixes.fix_import.FixImport.transform*
self*
node*
resultsz36z37z38z39z310*‚
probably_a_local_import:lib2to3.fixes.fix_import.FixImport.probably_a_local_import*
self*
imp_namez36z37z38z39z310j36j37j38j39j310r’
BM_compatible0lib2to3.fixes.fix_import.FixImport.BM_compatible:
Literal[builtins.bool]	
builtins.bool"builtins.bool*36*37*38*39*310rh
PATTERN*lib2to3.fixes.fix_import.FixImport.PATTERN
builtins.str"builtins.str*36*37*38*39*310rd
skip'lib2to3.fixes.fix_import.FixImport.skip
builtins.bool"builtins.bool*36*37*38*39*310Ö
traverse_imports)lib2to3.fixes.fix_import.traverse_imports"n
(typing.Generator[builtins.str,None,None]
builtins.str"builtins.str
None
None"typing.Generator*
names
Anyz36z37z38z39z310*©
__annotations__(lib2to3.fixes.fix_import.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310