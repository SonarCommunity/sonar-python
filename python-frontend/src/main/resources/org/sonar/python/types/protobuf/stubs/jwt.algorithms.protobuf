
jwt.algorithmsé
_Hashhashlib._Hash"builtins.object*ó
__init__hashlib._Hash.__init__"
None*(
self
hashlib._Hash"hashlib._Hash*•
dataò
bTypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]ï
WUnion[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap] 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap"_typeshed.ReadableBuffer z35z36z37z38z39z310*}
copyhashlib._Hash.copy"
hashlib._Hash"hashlib._Hash*(
self
hashlib._Hash"hashlib._Hashz35z36z37z38z39z310*É
digesthashlib._Hash.digest" 
builtins.bytes"builtins.bytes*(
self
hashlib._Hash"hashlib._Hashz35z36z37z38z39z310*Ö
	hexdigesthashlib._Hash.hexdigest"
builtins.str"builtins.str*(
self
hashlib._Hash"hashlib._Hashz35z36z37z38z39z310*ë
updatehashlib._Hash.update"
None*(
self
hashlib._Hash"hashlib._Hash*£
__dataò
bTypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]ï
WUnion[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap] 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap"_typeshed.ReadableBufferz35z36z37z38z39z310j35j36j37j38j39j310r_
digest_sizehashlib._Hash.digest_size
builtins.int"builtins.int*35*36*37*38*39*310r]

block_sizehashlib._Hash.block_size
builtins.int"builtins.int*35*36*37*38*39*310rQ
namehashlib._Hash.name
builtins.str"builtins.str*35*36*37*38*39*310À
TypeVartyping.TypeVar"builtins.object*û
__init__typing.TypeVar.__init__"
None**
self 
typing.TypeVar"typing.TypeVar*&
name
builtins.str"builtins.str*'
constraints
	Type[Any]
Any*s
boundf
"Union[None,Type[Any],builtins.str]
None
	Type[Any]
Any
builtins.str"builtins.str */
	covariant
builtins.bool"builtins.bool *3
contravariant
builtins.bool"builtins.bool z35z36z37z38z39z310j35j36j37j38j39j310r{
	__bound__typing.TypeVar.__bound__;
Union[Type[Any],None]
	Type[Any]
Any
None*35*36*37*38*39*310rè
__constraints__typing.TypeVar.__constraints__C
builtins.tuple[Type[Any]]
	Type[Any]
Any"builtins.tuple*35*36*37*38*39*310rf
__covariant__typing.TypeVar.__covariant__
builtins.bool"builtins.bool*35*36*37*38*39*310rn
__contravariant__ typing.TypeVar.__contravariant__
builtins.bool"builtins.bool*35*36*37*38*39*310Ω
EllipticCurvePrivateKeyDcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey"builtins.object*†
curveJcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey.curve"x
:cryptography.hazmat.primitives.asymmetric.ec.EllipticCurve":cryptography.hazmat.primitives.asymmetric.ec.EllipticCurve*ó
selfå
Dcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey"Dcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey0:property:abstractmethod@`z35z36z37z38z39z310* 
key_sizeMcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey.key_size"
builtins.int"builtins.int*ó
selfå
Dcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey"Dcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey0:property:abstractmethod@`z35z36z37z38z39z310*‹
exchangeMcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey.exchange" 
builtins.bytes"builtins.bytes*ó
selfå
Dcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey"Dcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey*u
	algorithmf
1cryptography.hazmat.primitives.asymmetric.ec.ECDH"1cryptography.hazmat.primitives.asymmetric.ec.ECDH*†
peer_public_keyä
Ccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"Ccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey0:abstractmethod@z35z36z37z38z39z310*±

public_keyOcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey.public_key"ä
Ccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"Ccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey*ó
selfå
Dcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey"Dcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey0:abstractmethod@z35z36z37z38z39z310*ü
signIcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey.sign" 
builtins.bytes"builtins.bytes*ó
selfå
Dcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey"Dcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey**
data 
builtins.bytes"builtins.bytes*∂
signature_algorithmú
Lcryptography.hazmat.primitives.asymmetric.ec.EllipticCurveSignatureAlgorithm"Lcryptography.hazmat.primitives.asymmetric.ec.EllipticCurveSignatureAlgorithm0:abstractmethod@z35z36z37z38z39z310@babc.ABCMetaj35j36j37j38j39j310í
(EllipticCurvePrivateKeyWithSerializationUcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKeyWithSerialization"Dcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey*¥
private_bytesccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKeyWithSerialization.private_bytes" 
builtins.bytes"builtins.bytes*π
selfÆ
Ucryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKeyWithSerialization"Ucryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKeyWithSerialization*|
encodingn
5cryptography.hazmat.primitives.serialization.Encoding"5cryptography.hazmat.primitives.serialization.Encoding*Ñ
formatx
:cryptography.hazmat.primitives.serialization.PrivateFormat":cryptography.hazmat.primitives.serialization.PrivateFormat*≠
encryption_algorithmí
Gcryptography.hazmat.primitives.serialization.KeySerializationEncryption"Gcryptography.hazmat.primitives.serialization.KeySerializationEncryption0:abstractmethod@z35z36z37z38z39z310*¯
private_numbersecryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKeyWithSerialization.private_numbers"î
Hcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateNumbers"Hcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateNumbers*π
selfÆ
Ucryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKeyWithSerialization"Ucryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKeyWithSerialization0:abstractmethod@z35z36z37z38z39z310j35j36j37j38j39j310ú
EllipticCurvePublicKeyCcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"builtins.object*ù
curveIcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey.curve"x
:cryptography.hazmat.primitives.asymmetric.ec.EllipticCurve":cryptography.hazmat.primitives.asymmetric.ec.EllipticCurve*ï
selfä
Ccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"Ccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey0:property:abstractmethod@`z35z36z37z38z39z310*«
key_sizeLcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey.key_size"
builtins.int"builtins.int*ï
selfä
Ccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"Ccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey0:property:abstractmethod@`z35z36z37z38z39z310*º
from_encoded_pointVcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey.from_encoded_point"ä
Ccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"Ccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey*‰
cls⁄
IType[cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey]ä
Ccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"Ccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey*É
curvex
:cryptography.hazmat.primitives.asymmetric.ec.EllipticCurve":cryptography.hazmat.primitives.asymmetric.ec.EllipticCurve**
data 
builtins.bytes"builtins.bytes0:classmethodpz35z36z37z38z39z310* 
public_bytesPcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey.public_bytes" 
builtins.bytes"builtins.bytes*ï
selfä
Ccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"Ccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey*|
encodingn
5cryptography.hazmat.primitives.serialization.Encoding"5cryptography.hazmat.primitives.serialization.Encoding*Ç
formatv
9cryptography.hazmat.primitives.serialization.PublicFormat"9cryptography.hazmat.primitives.serialization.PublicFormat0:abstractmethod@z35z36z37z38z39z310*æ
public_numbersRcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey.public_numbers"í
Gcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicNumbers"Gcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicNumbers*ï
selfä
Ccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"Ccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey0:abstractmethod@z35z36z37z38z39z310*ê
verifierLcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey.verifier"
Any*ï
selfä
Ccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"Ccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey*/
	signature 
builtins.bytes"builtins.bytes*∂
signature_algorithmú
Lcryptography.hazmat.primitives.asymmetric.ec.EllipticCurveSignatureAlgorithm"Lcryptography.hazmat.primitives.asymmetric.ec.EllipticCurveSignatureAlgorithm0:abstractmethod@z35z36z37z38z39z310*π
verifyJcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey.verify"
None*ï
selfä
Ccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"Ccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey*/
	signature 
builtins.bytes"builtins.bytes**
data 
builtins.bytes"builtins.bytes*∂
signature_algorithmú
Lcryptography.hazmat.primitives.asymmetric.ec.EllipticCurveSignatureAlgorithm"Lcryptography.hazmat.primitives.asymmetric.ec.EllipticCurveSignatureAlgorithm0:abstractmethod@z35z36z37z38z39z310@babc.ABCMetaj35j36j37j38j39j310Ÿ
Ed25519PrivateKeyCcryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey"builtins.object*ˆ
generateLcryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey.generate"ä
Ccryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey"Ccryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey*‰
cls⁄
IType[cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey]ä
Ccryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey"Ccryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey0:classmethodpz35z36z37z38z39z310*∂
from_private_bytesVcryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey.from_private_bytes"ä
Ccryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey"Ccryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey*‰
cls⁄
IType[cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey]ä
Ccryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey"Ccryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey**
data 
builtins.bytes"builtins.bytes0:classmethodpz35z36z37z38z39z310*˛
private_bytesQcryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey.private_bytes" 
builtins.bytes"builtins.bytes*ï
selfä
Ccryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey"Ccryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey*|
encodingn
5cryptography.hazmat.primitives.serialization.Encoding"5cryptography.hazmat.primitives.serialization.Encoding*Ñ
formatx
:cryptography.hazmat.primitives.serialization.PrivateFormat":cryptography.hazmat.primitives.serialization.PrivateFormat*≠
encryption_algorithmí
Gcryptography.hazmat.primitives.serialization.KeySerializationEncryption"Gcryptography.hazmat.primitives.serialization.KeySerializationEncryption0:abstractmethod@z35z36z37z38z39z310*¨

public_keyNcryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey.public_key"à
Bcryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey"Bcryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey*ï
selfä
Ccryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey"Ccryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey0:abstractmethod@z35z36z37z38z39z310*„
signHcryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey.sign" 
builtins.bytes"builtins.bytes*ï
selfä
Ccryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey"Ccryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey**
data 
builtins.bytes"builtins.bytes0:abstractmethod@z35z36z37z38z39z310@babc.ABCMetaj35j36j37j38j39j310ä
Ed25519PublicKeyBcryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey"builtins.object*Æ
from_public_bytesTcryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey.from_public_bytes"à
Bcryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey"Bcryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey*·
cls◊
HType[cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey]à
Bcryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey"Bcryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey**
data 
builtins.bytes"builtins.bytes0:classmethodpz35z36z37z38z39z310*«
public_bytesOcryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey.public_bytes" 
builtins.bytes"builtins.bytes*ì
selfà
Bcryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey"Bcryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey*|
encodingn
5cryptography.hazmat.primitives.serialization.Encoding"5cryptography.hazmat.primitives.serialization.Encoding*Ç
formatv
9cryptography.hazmat.primitives.serialization.PublicFormat"9cryptography.hazmat.primitives.serialization.PublicFormat0:abstractmethod@z35z36z37z38z39z310*˝
verifyIcryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey.verify"
None*ì
selfà
Bcryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey"Bcryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey*/
	signature 
builtins.bytes"builtins.bytes**
data 
builtins.bytes"builtins.bytes0:abstractmethod@z35z36z37z38z39z310@babc.ABCMetaj35j36j37j38j39j310Ü
RSAPrivateKey;cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey"builtins.object*Æ
key_sizeDcryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey.key_size"
builtins.int"builtins.int*Ñ
selfz
;cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey";cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey0:property:abstractmethod@`z35z36z37z38z39z310*Ò
decryptCcryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey.decrypt" 
builtins.bytes"builtins.bytes*Ñ
selfz
;cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey";cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey*0

ciphertext 
builtins.bytes"builtins.bytes*ò
paddingä
Ccryptography.hazmat.primitives.asymmetric.padding.AsymmetricPadding"Ccryptography.hazmat.primitives.asymmetric.padding.AsymmetricPadding0:abstractmethod@z35z36z37z38z39z310*Ç

public_keyFcryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey.public_key"x
:cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey":cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey*Ñ
selfz
;cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey";cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey0:abstractmethod@z35z36z37z38z39z310*‘
sign@cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey.sign" 
builtins.bytes"builtins.bytes*Ñ
selfz
;cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey";cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey**
data 
builtins.bytes"builtins.bytes*ò
paddingä
Ccryptography.hazmat.primitives.asymmetric.padding.AsymmetricPadding"Ccryptography.hazmat.primitives.asymmetric.padding.AsymmetricPadding*Ï
	algorithm‹
tUnion[cryptography.hazmat.primitives.hashes.HashAlgorithm,cryptography.hazmat.primitives.asymmetric.utils.Prehashed]j
3cryptography.hazmat.primitives.hashes.HashAlgorithm"3cryptography.hazmat.primitives.hashes.HashAlgorithmv
9cryptography.hazmat.primitives.asymmetric.utils.Prehashed"9cryptography.hazmat.primitives.asymmetric.utils.Prehashed0:abstractmethod@z35z36z37z38z39z310@babc.ABCMetaj35j36j37j38j39j310û
RSAPublicKey:cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey"builtins.object*´
key_sizeCcryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey.key_size"
builtins.int"builtins.int*Ç
selfx
:cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey":cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey0:property:abstractmethod@`z35z36z37z38z39z310*Ì
encryptBcryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey.encrypt" 
builtins.bytes"builtins.bytes*Ç
selfx
:cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey":cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey*/
	plaintext 
builtins.bytes"builtins.bytes*ò
paddingä
Ccryptography.hazmat.primitives.asymmetric.padding.AsymmetricPadding"Ccryptography.hazmat.primitives.asymmetric.padding.AsymmetricPadding0:abstractmethod@z35z36z37z38z39z310*Æ
public_bytesGcryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey.public_bytes" 
builtins.bytes"builtins.bytes*Ç
selfx
:cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey":cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey*|
encodingn
5cryptography.hazmat.primitives.serialization.Encoding"5cryptography.hazmat.primitives.serialization.Encoding*Ç
formatv
9cryptography.hazmat.primitives.serialization.PublicFormat"9cryptography.hazmat.primitives.serialization.PublicFormat0:abstractmethod@z35z36z37z38z39z310*ê
public_numbersIcryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey.public_numbers"Ä
>cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicNumbers">cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicNumbers*Ç
selfx
:cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey":cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey0:abstractmethod@z35z36z37z38z39z310*≈
verifierCcryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey.verifier"
Any*Ç
selfx
:cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey":cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey*/
	signature 
builtins.bytes"builtins.bytes*ò
paddingä
Ccryptography.hazmat.primitives.asymmetric.padding.AsymmetricPadding"Ccryptography.hazmat.primitives.asymmetric.padding.AsymmetricPadding*Ï
	algorithm‹
tUnion[cryptography.hazmat.primitives.hashes.HashAlgorithm,cryptography.hazmat.primitives.asymmetric.utils.Prehashed]j
3cryptography.hazmat.primitives.hashes.HashAlgorithm"3cryptography.hazmat.primitives.hashes.HashAlgorithmv
9cryptography.hazmat.primitives.asymmetric.utils.Prehashed"9cryptography.hazmat.primitives.asymmetric.utils.Prehashed0:abstractmethod@z35z36z37z38z39z310*Ó
verifyAcryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey.verify"
None*Ç
selfx
:cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey":cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey*/
	signature 
builtins.bytes"builtins.bytes**
data 
builtins.bytes"builtins.bytes*ò
paddingä
Ccryptography.hazmat.primitives.asymmetric.padding.AsymmetricPadding"Ccryptography.hazmat.primitives.asymmetric.padding.AsymmetricPadding*Ï
	algorithm‹
tUnion[cryptography.hazmat.primitives.hashes.HashAlgorithm,cryptography.hazmat.primitives.asymmetric.utils.Prehashed]j
3cryptography.hazmat.primitives.hashes.HashAlgorithm"3cryptography.hazmat.primitives.hashes.HashAlgorithmv
9cryptography.hazmat.primitives.asymmetric.utils.Prehashed"9cryptography.hazmat.primitives.asymmetric.utils.Prehashed0:abstractmethod@z35z36z37z38z39z310@babc.ABCMetaj35j36j37j38j39j310⁄
	Prehashed9cryptography.hazmat.primitives.asymmetric.utils.Prehashed"builtins.object*Ô
__init__Bcryptography.hazmat.primitives.asymmetric.utils.Prehashed.__init__"
None*Ä
selfv
9cryptography.hazmat.primitives.asymmetric.utils.Prehashed"9cryptography.hazmat.primitives.asymmetric.utils.Prehashed*y
	algorithmj
3cryptography.hazmat.primitives.hashes.HashAlgorithm"3cryptography.hazmat.primitives.hashes.HashAlgorithmz35z36z37z38z39z310j35j36j37j38j39j310r◊

_algorithmDcryptography.hazmat.primitives.asymmetric.utils.Prehashed._algorithmj
3cryptography.hazmat.primitives.hashes.HashAlgorithm"3cryptography.hazmat.primitives.hashes.HashAlgorithm*35*36*37*38*39*310rç
_digest_sizeFcryptography.hazmat.primitives.asymmetric.utils.Prehashed._digest_size
builtins.int"builtins.int*35*36*37*38*39*310rã
digest_sizeEcryptography.hazmat.primitives.asymmetric.utils.Prehashed.digest_size
builtins.int"builtins.int*35*36*37*38*39*310˛
HashAlgorithm3cryptography.hazmat.primitives.hashes.HashAlgorithm"builtins.object@babc.ABCMetaj35j36j37j38j39j310rÖ
digest_size?cryptography.hazmat.primitives.hashes.HashAlgorithm.digest_size
builtins.int"builtins.int*35*36*37*38*39*310rw
name8cryptography.hazmat.primitives.hashes.HashAlgorithm.name
builtins.str"builtins.str*35*36*37*38*39*310–	
	Algorithmjwt.algorithms.Algorithm"builtins.object*Ì
prepare_key$jwt.algorithms.Algorithm.prepare_key"
jwt.algorithms._K*h
self^
+jwt.algorithms.Algorithm[jwt.algorithms._K]
jwt.algorithms._K"jwt.algorithms.Algorithm*
key
jwt.algorithms._Kz35z36z37z38z39z310*ï
signjwt.algorithms.Algorithm.sign" 
builtins.bytes"builtins.bytes*h
self^
+jwt.algorithms.Algorithm[jwt.algorithms._K]
jwt.algorithms._K"jwt.algorithms.Algorithm*)
msg 
builtins.bytes"builtins.bytes*
key
jwt.algorithms._Kz35z36z37z38z39z310*¬
verifyjwt.algorithms.Algorithm.verify"
builtins.bool"builtins.bool*h
self^
+jwt.algorithms.Algorithm[jwt.algorithms._K]
jwt.algorithms._K"jwt.algorithms.Algorithm*)
msg 
builtins.bytes"builtins.bytes*
key
jwt.algorithms._K*)
sig 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*ñ
to_jwkjwt.algorithms.Algorithm.to_jwk"
builtins.str"builtins.str*"
key_obj
jwt.algorithms._K0:staticmethodhz35z36z37z38z39z310*ñ
from_jwk!jwt.algorithms.Algorithm.from_jwk"
jwt.algorithms._K*%
jwk
builtins.str"builtins.str0:staticmethodhz35z36z37z38z39z310Pj35j36j37j38j39j310‘
NoneAlgorithmjwt.algorithms.NoneAlgorithm"jwt.algorithms.Algorithm*Ò
prepare_key(jwt.algorithms.NoneAlgorithm.prepare_key"
None*F
self<
jwt.algorithms.NoneAlgorithm"jwt.algorithms.NoneAlgorithm*M
keyD
Union[builtins.str,None]
builtins.str"builtins.str
Nonez35z36z37z38z39z310j35j36j37j38j39j310∫
_HashAlgjwt.algorithms._HashAlg"builtins.object*Í
__call__ jwt.algorithms._HashAlg.__call__"
hashlib._Hash"hashlib._Hash*<
self2
jwt.algorithms._HashAlg"jwt.algorithms._HashAlg*ƒ
arg∏
<Union[builtins.bytes,builtins.bytearray,builtins.memoryview] 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview z35z36z37z38z39z310j35j36j37j38j39j310√
HMACAlgorithmjwt.algorithms.HMACAlgorithm"jwt.algorithms.Algorithm*ﬁ
__init__%jwt.algorithms.HMACAlgorithm.__init__"
None*F
self<
jwt.algorithms.HMACAlgorithm"jwt.algorithms.HMACAlgorithm*@
hash_alg2
jwt.algorithms._HashAlg"jwt.algorithms._HashAlgz35z36z37z38z39z310*´
prepare_key(jwt.algorithms.HMACAlgorithm.prepare_key" 
builtins.bytes"builtins.bytes*F
self<
jwt.algorithms.HMACAlgorithm"jwt.algorithms.HMACAlgorithm*o
keyf
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*Î
to_jwk#jwt.algorithms.HMACAlgorithm.to_jwk"
builtins.str"builtins.str*s
key_objf
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes0:staticmethodhz35z36z37z38z39z310*Ô
from_jwk%jwt.algorithms.HMACAlgorithm.from_jwk" 
builtins.bytes"builtins.bytes*o
jwkf
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes0:staticmethodhz35z36z37z38z39z310j35j36j37j38j39j310rz
SHA256#jwt.algorithms.HMACAlgorithm.SHA2562
jwt.algorithms._HashAlg"jwt.algorithms._HashAlg*35*36*37*38*39*310rz
SHA384#jwt.algorithms.HMACAlgorithm.SHA3842
jwt.algorithms._HashAlg"jwt.algorithms._HashAlg*35*36*37*38*39*310rz
SHA512#jwt.algorithms.HMACAlgorithm.SHA5122
jwt.algorithms._HashAlg"jwt.algorithms._HashAlg*35*36*37*38*39*310r~
hash_alg%jwt.algorithms.HMACAlgorithm.hash_alg2
jwt.algorithms._HashAlg"jwt.algorithms._HashAlg*35*36*37*38*39*310Ø 
RSAAlgorithmjwt.algorithms.RSAAlgorithm"jwt.algorithms.Algorithm*á
__init__$jwt.algorithms.RSAAlgorithm.__init__"
None*D
self:
jwt.algorithms.RSAAlgorithm"jwt.algorithms.RSAAlgorithm*Î
hash_alg‹
tUnion[cryptography.hazmat.primitives.hashes.HashAlgorithm,cryptography.hazmat.primitives.asymmetric.utils.Prehashed]j
3cryptography.hazmat.primitives.hashes.HashAlgorithm"3cryptography.hazmat.primitives.hashes.HashAlgorithmv
9cryptography.hazmat.primitives.asymmetric.utils.Prehashed"9cryptography.hazmat.primitives.asymmetric.utils.Prehashedz35z36z37z38z39z310*
prepare_key'jwt.algorithms.RSAAlgorithm.prepare_key"˜
}Union[cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey,cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey]z
;cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey";cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKeyx
:cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey":cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey*D
self:
jwt.algorithms.RSAAlgorithm"jwt.algorithms.RSAAlgorithm*ﬁ
key‘
ôUnion[builtins.bytes,builtins.str,cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey,cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey] 
builtins.bytes"builtins.bytes
builtins.str"builtins.strz
;cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey";cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKeyx
:cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey":cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKeyz35z36z37z38z39z310*ã
to_jwk"jwt.algorithms.RSAAlgorithm.to_jwk"
builtins.str"builtins.str*
key_obj
Any0:staticmethodhz35z36z37z38z39z310*¡
from_jwk$jwt.algorithms.RSAAlgorithm.from_jwk"˜
}Union[cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey,cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey]z
;cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey";cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKeyx
:cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey":cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey*È
jwkﬂ
BUnion[builtins.str,builtins.bytes,builtins.dict[builtins.str,Any]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict0:staticmethodhz35z36z37z38z39z310*⁄
sign jwt.algorithms.RSAAlgorithm.sign" 
builtins.bytes"builtins.bytes*D
self:
jwt.algorithms.RSAAlgorithm"jwt.algorithms.RSAAlgorithm*)
msg 
builtins.bytes"builtins.bytes*É
keyz
;cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey";cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKeyz35z36z37z38z39z310*Ö
verify"jwt.algorithms.RSAAlgorithm.verify"
builtins.bool"builtins.bool*D
self:
jwt.algorithms.RSAAlgorithm"jwt.algorithms.RSAAlgorithm*)
msg 
builtins.bytes"builtins.bytes*Å
keyx
:cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey":cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey*)
sig 
builtins.bytes"builtins.bytesz35z36z37z38z39z310j35j36j37j38j39j310r£
SHA256"jwt.algorithms.RSAAlgorithm.SHA256\
,cryptography.hazmat.primitives.hashes.SHA256",cryptography.hazmat.primitives.hashes.SHA256*35*36*37*38*39*310r£
SHA384"jwt.algorithms.RSAAlgorithm.SHA384\
,cryptography.hazmat.primitives.hashes.SHA384",cryptography.hazmat.primitives.hashes.SHA384*35*36*37*38*39*310r£
SHA512"jwt.algorithms.RSAAlgorithm.SHA512\
,cryptography.hazmat.primitives.hashes.SHA512",cryptography.hazmat.primitives.hashes.SHA512*35*36*37*38*39*310r®
hash_alg$jwt.algorithms.RSAAlgorithm.hash_alg‹
tUnion[cryptography.hazmat.primitives.hashes.HashAlgorithm,cryptography.hazmat.primitives.asymmetric.utils.Prehashed]j
3cryptography.hazmat.primitives.hashes.HashAlgorithm"3cryptography.hazmat.primitives.hashes.HashAlgorithmv
9cryptography.hazmat.primitives.asymmetric.utils.Prehashed"9cryptography.hazmat.primitives.asymmetric.utils.Prehashed*35*36*37*38*39*310Œ$
ECAlgorithmjwt.algorithms.ECAlgorithm"jwt.algorithms.Algorithm*Ñ
__init__#jwt.algorithms.ECAlgorithm.__init__"
None*B
self8
jwt.algorithms.ECAlgorithm"jwt.algorithms.ECAlgorithm*Î
hash_alg‹
tUnion[cryptography.hazmat.primitives.hashes.HashAlgorithm,cryptography.hazmat.primitives.asymmetric.utils.Prehashed]j
3cryptography.hazmat.primitives.hashes.HashAlgorithm"3cryptography.hazmat.primitives.hashes.HashAlgorithmv
9cryptography.hazmat.primitives.asymmetric.utils.Prehashed"9cryptography.hazmat.primitives.asymmetric.utils.Prehashedz35z36z37z38z39z310*ﬁ
prepare_key&jwt.algorithms.ECAlgorithm.prepare_key"∞
èUnion[cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey,cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey]å
Dcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey"Dcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKeyä
Ccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"Ccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey*B
self8
jwt.algorithms.ECAlgorithm"jwt.algorithms.ECAlgorithm*ñ
keyå
´Union[builtins.bytes,builtins.str,cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey,cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey] 
builtins.bytes"builtins.bytes
builtins.str"builtins.strå
Dcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey"Dcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKeyä
Ccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"Ccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKeyz35z36z37z38z39z310*Ë
to_jwk!jwt.algorithms.ECAlgorithm.to_jwk"
builtins.str"builtins.str*Ò
key_obj„
†Union[cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKeyWithSerialization,cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey]Æ
Ucryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKeyWithSerialization"Ucryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKeyWithSerializationä
Ccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"Ccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey0:staticmethodhz35z36z37z38z39z310*˛
from_jwk#jwt.algorithms.ECAlgorithm.from_jwk"∞
èUnion[cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey,cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey]å
Dcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey"Dcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKeyä
Ccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"Ccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey*o
jwkf
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes0:staticmethodhz35z36z37z38z39z310*Í
signjwt.algorithms.ECAlgorithm.sign" 
builtins.bytes"builtins.bytes*B
self8
jwt.algorithms.ECAlgorithm"jwt.algorithms.ECAlgorithm*)
msg 
builtins.bytes"builtins.bytes*ñ
keyå
Dcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey"Dcryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKeyz35z36z37z38z39z310*ï
verify!jwt.algorithms.ECAlgorithm.verify"
builtins.bool"builtins.bool*B
self8
jwt.algorithms.ECAlgorithm"jwt.algorithms.ECAlgorithm*)
msg 
builtins.bytes"builtins.bytes*î
keyä
Ccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"Ccryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey*)
sig 
builtins.bytes"builtins.bytesz35z36z37z38z39z310j35j36j37j38j39j310r¢
SHA256!jwt.algorithms.ECAlgorithm.SHA256\
,cryptography.hazmat.primitives.hashes.SHA256",cryptography.hazmat.primitives.hashes.SHA256*35*36*37*38*39*310r¢
SHA384!jwt.algorithms.ECAlgorithm.SHA384\
,cryptography.hazmat.primitives.hashes.SHA384",cryptography.hazmat.primitives.hashes.SHA384*35*36*37*38*39*310r¢
SHA512!jwt.algorithms.ECAlgorithm.SHA512\
,cryptography.hazmat.primitives.hashes.SHA512",cryptography.hazmat.primitives.hashes.SHA512*35*36*37*38*39*310rß
hash_alg#jwt.algorithms.ECAlgorithm.hash_alg‹
tUnion[cryptography.hazmat.primitives.hashes.HashAlgorithm,cryptography.hazmat.primitives.asymmetric.utils.Prehashed]j
3cryptography.hazmat.primitives.hashes.HashAlgorithm"3cryptography.hazmat.primitives.hashes.HashAlgorithmv
9cryptography.hazmat.primitives.asymmetric.utils.Prehashed"9cryptography.hazmat.primitives.asymmetric.utils.Prehashed*35*36*37*38*39*310¯
RSAPSSAlgorithmjwt.algorithms.RSAPSSAlgorithm"jwt.algorithms.RSAAlgorithm*Ô
sign#jwt.algorithms.RSAPSSAlgorithm.sign" 
builtins.bytes"builtins.bytes*J
self@
jwt.algorithms.RSAPSSAlgorithm"jwt.algorithms.RSAPSSAlgorithm*)
msg 
builtins.bytes"builtins.bytes*
key
Anyz35z36z37z38z39z310*ú
verify%jwt.algorithms.RSAPSSAlgorithm.verify"
builtins.bool"builtins.bool*J
self@
jwt.algorithms.RSAPSSAlgorithm"jwt.algorithms.RSAPSSAlgorithm*)
msg 
builtins.bytes"builtins.bytes*
key
Any*)
sig 
builtins.bytes"builtins.bytesz35z36z37z38z39z310j35j36j37j38j39j310‘
Ed25519Algorithmjwt.algorithms.Ed25519Algorithm"jwt.algorithms.Algorithm*∫
__init__(jwt.algorithms.Ed25519Algorithm.__init__"
None*L
selfB
jwt.algorithms.Ed25519Algorithm"jwt.algorithms.Ed25519Algorithm*
kwargs
Anyz35z36z37z38z39z310*Ω
prepare_key+jwt.algorithms.Ed25519Algorithm.prepare_key"
Any*L
selfB
jwt.algorithms.Ed25519Algorithm"jwt.algorithms.Ed25519Algorithm*ê
keyÜ
©Union[builtins.str,builtins.bytes,cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey,cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesä
Ccryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey"Ccryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKeyà
Bcryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey"Bcryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKeyz35z36z37z38z39z310*Ω
sign$jwt.algorithms.Ed25519Algorithm.sign" 
builtins.bytes"builtins.bytes*L
selfB
jwt.algorithms.Ed25519Algorithm"jwt.algorithms.Ed25519Algorithm*o
msgf
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes*î
keyä
Ccryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey"Ccryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKeyz35z36z37z38z39z310*Æ
verify&jwt.algorithms.Ed25519Algorithm.verify"
builtins.bool"builtins.bool*L
selfB
jwt.algorithms.Ed25519Algorithm"jwt.algorithms.Ed25519Algorithm*o
msgf
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes*í
keyà
Bcryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey"Bcryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey*o
sigf
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesz35z36z37z38z39z310j35j36j37j38j39j310á
get_default_algorithms%jwt.algorithms.get_default_algorithms"¨
9builtins.dict[builtins.str,jwt.algorithms.Algorithm[Any]]
builtins.str"builtins.strB
jwt.algorithms.Algorithm[Any]
Any"jwt.algorithms.Algorithm"builtins.dictz35z36z37z38z39z310*N
Any
typing.Any"
builtins.object"builtins.object*35*36*37*38*39*310*`
ClassVartyping.ClassVar*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*^
Generictyping.Generic*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*`
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*Z
Uniontyping.Union*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*J
hashes%cryptography.hazmat.primitives.hashes *35*36*37*38*39*310