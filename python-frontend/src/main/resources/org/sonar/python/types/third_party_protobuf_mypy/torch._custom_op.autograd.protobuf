
torch._custom_op.autogradÛ
tuple_cls@166'torch._custom_op.autograd.tuple_cls@166"builtins.tuple*√
_replace0torch._custom_op.autograd.tuple_cls@166._replace"<
+torch._custom_op.autograd.tuple_cls@166._NT
Tuple[]*G
_self<
+torch._custom_op.autograd.tuple_cls@166._NT
Tuple[]*˛
__new__/torch._custom_op.autograd.tuple_cls@166.__new__"<
+torch._custom_op.autograd.tuple_cls@166._NT
Tuple[]*É
_clsy
1Type[torch._custom_op.autograd.tuple_cls@166._NT]<
+torch._custom_op.autograd.tuple_cls@166._NT
Tuple[]"type*‹
_asdict/torch._custom_op.autograd.tuple_cls@166._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*G
_self<
+torch._custom_op.autograd.tuple_cls@166._NT
Tuple[]*Û
_make-torch._custom_op.autograd.tuple_cls@166._make"<
+torch._custom_op.autograd.tuple_cls@166._NT
Tuple[]*É
_clsy
1Type[torch._custom_op.autograd.tuple_cls@166._NT]<
+torch._custom_op.autograd.tuple_cls@166._NT
Tuple[]"type*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodprG
_fields/torch._custom_op.autograd.tuple_cls@166._fields
Tuple[]rù
_field_types4torch._custom_op.autograd.tuple_cls@166._field_typesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictr£
_field_defaults7torch._custom_op.autograd.tuple_cls@166._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictrX
_source/torch._custom_op.autograd.tuple_cls@166._source
builtins.str"builtins.strr£
__annotations__7torch._custom_op.autograd.tuple_cls@166.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictc
autograd_kernel_indirection5torch._custom_op.autograd.autograd_kernel_indirection*
	custom_op]
autograd_not_implemented2torch._custom_op.autograd.autograd_not_implemented*
	custom_op
mark_non_differentiable1torch._custom_op.autograd.mark_non_differentiable*
ctx*

output*
output_differentiability≈
construct_autograd_kernel3torch._custom_op.autograd.construct_autograd_kernel*

schema*
output_differentiability*
	custom_op*
op_overload*
save_for_backward_fn*
backward_fnm
gen_autograd_function/torch._custom_op.autograd.gen_autograd_function*
name*
forward*
backwardR
namedtuple_args)torch._custom_op.autograd.namedtuple_args*

schema*
argsÖ
validate_grad_inputs_dict3torch._custom_op.autograd.validate_grad_inputs_dict*
grad_inputs_dict*

forward_op*
	args_info
grad_inputs_dict_to_flat_tuple8torch._custom_op.autograd.grad_inputs_dict_to_flat_tuple*
grad_inputs_dict*
	args_infob
save_pytree_for_backward2torch._custom_op.autograd.save_pytree_for_backward*
ctx*	
stuff?
unpack_saved&torch._custom_op.autograd.unpack_saved*
ctx*ï
__annotations__)torch._custom_op.autograd.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
pytreetorch.utils._pytree 