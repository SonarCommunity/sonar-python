
multiprocessingh
AuthenticationError+multiprocessing.context.AuthenticationError"$multiprocessing.context.ProcessErrorªã
BaseContext#multiprocessing.context.BaseContext"builtins.object*§
current_process3multiprocessing.context.BaseContext.current_process"J
#multiprocessing.process.BaseProcess"#multiprocessing.process.BaseProcess0:staticmethodh*‚
parent_process2multiprocessing.context.BaseContext.parent_process"â
/Union[multiprocessing.process.BaseProcess,None]J
#multiprocessing.process.BaseProcess"#multiprocessing.process.BaseProcess
None0:staticmethodh*Í
active_children3multiprocessing.context.BaseContext.active_children"è
2builtins.list[multiprocessing.process.BaseProcess]J
#multiprocessing.process.BaseProcess"#multiprocessing.process.BaseProcess"builtins.list0:staticmethodh*Æ
	cpu_count-multiprocessing.context.BaseContext.cpu_count"
builtins.int"builtins.int*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*ï
Manager+multiprocessing.context.BaseContext.Manager"
Any*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*Ω
Pipe(multiprocessing.context.BaseContext.Pipe"
Any*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*,
duplex
builtins.bool"builtins.bool *ˆ
Barrier+multiprocessing.context.BaseContext.Barrier"J
#multiprocessing.synchronize.Barrier"#multiprocessing.synchronize.Barrier*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*)
parties
builtins.int"builtins.int*ï
actionÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ß
BoundedSemaphore4multiprocessing.context.BaseContext.BoundedSemaphore"\
,multiprocessing.synchronize.BoundedSemaphore",multiprocessing.synchronize.BoundedSemaphore*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*)
value
builtins.int"builtins.int *⁄
	Condition-multiprocessing.context.BaseContext.Condition"N
%multiprocessing.synchronize.Condition"%multiprocessing.synchronize.Condition*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*˜
lockÍ
NUnion[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock,None]D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.LockF
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock
None *–
Event)multiprocessing.context.BaseContext.Event"F
!multiprocessing.synchronize.Event"!multiprocessing.synchronize.Event*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*Ã
Lock(multiprocessing.context.BaseContext.Lock"D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.Lock*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*–
RLock)multiprocessing.context.BaseContext.RLock"F
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*ã
	Semaphore-multiprocessing.context.BaseContext.Semaphore"N
%multiprocessing.synchronize.Semaphore"%multiprocessing.synchronize.Semaphore*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*)
value
builtins.int"builtins.int *Å
Queue)multiprocessing.context.BaseContext.Queue"J
!multiprocessing.queues.Queue[Any]
Any"multiprocessing.queues.Queue*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*+
maxsize
builtins.int"builtins.int *°
JoinableQueue1multiprocessing.context.BaseContext.JoinableQueue"Z
)multiprocessing.queues.JoinableQueue[Any]
Any"$multiprocessing.queues.JoinableQueue*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*+
maxsize
builtins.int"builtins.int *Ï
SimpleQueue/multiprocessing.context.BaseContext.SimpleQueue"V
'multiprocessing.queues.SimpleQueue[Any]
Any""multiprocessing.queues.SimpleQueue*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*“
Pool(multiprocessing.context.BaseContext.Pool"6
multiprocessing.pool.Pool"multiprocessing.pool.Pool*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*U
	processesD
Union[builtins.int,None]
builtins.int"builtins.int
None *ö
initializerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *@
initargs0
typing.Iterable[Any]
Any"typing.Iterable *\
maxtasksperchildD
Union[builtins.int,None]
builtins.int"builtins.int
None *§
freeze_support2multiprocessing.context.BaseContext.freeze_support"
None*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*¥

get_logger.multiprocessing.context.BaseContext.get_logger" 
logging.Logger"logging.Logger*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*ç
log_to_stderr1multiprocessing.context.BaseContext.log_to_stderr" 
logging.Logger"logging.Logger*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*Q
levelD
Union[builtins.str,None]
builtins.str"builtins.str
None *∫
allow_connection_pickling=multiprocessing.context.BaseContext.allow_connection_pickling"
None*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*“
set_executable2multiprocessing.context.BaseContext.set_executable"
None*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*,

executable
builtins.str"builtins.str*í
set_forkserver_preload:multiprocessing.context.BaseContext.set_forkserver_preload"
None*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*\
module_namesJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*Ó
get_start_method4multiprocessing.context.BaseContext.get_start_method"
builtins.str"builtins.str*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*0

allow_none
builtins.bool"builtins.bool *ß
set_start_method4multiprocessing.context.BaseContext.set_start_method"
None*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*P
methodD
Union[builtins.str,None]
builtins.str"builtins.str
None*+
force
builtins.bool"builtins.bool *®
_check_available4multiprocessing.context.BaseContext._check_available"
None*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext2ÿ
RawValue,multiprocessing.context.BaseContext.RawValueÆ
RawValue,multiprocessing.context.BaseContext.RawValue"
multiprocessing.context._CT*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*\
typecode_or_typeF
!Type[multiprocessing.context._CT]
multiprocessing.context._CT*
args
Any0:overloadXÏ
RawValue,multiprocessing.context.BaseContext.RawValue"
Any*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*2
typecode_or_type
builtins.str"builtins.str*
args
Any0:overloadX2ù
RawArray,multiprocessing.context.BaseContext.RawArrayÓ
RawArray,multiprocessing.context.BaseContext.RawArray"Z
)ctypes.Array[multiprocessing.context._CT]
multiprocessing.context._CT"ctypes.Array*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*\
typecode_or_typeF
!Type[multiprocessing.context._CT]
multiprocessing.context._CT*ï
size_or_initializer|
(Union[builtins.int,typing.Sequence[Any]]
builtins.int"builtins.int0
typing.Sequence[Any]
Any"typing.Sequence0:overloadXÒ
RawArray,multiprocessing.context.BaseContext.RawArray"
Any*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*2
typecode_or_type
builtins.str"builtins.str*ï
size_or_initializer|
(Union[builtins.int,typing.Sequence[Any]]
builtins.int"builtins.int0
typing.Sequence[Any]
Any"typing.Sequence0:overloadX2ú
Value)multiprocessing.context.BaseContext.ValueÓ
Value)multiprocessing.context.BaseContext.Value"
multiprocessing.context._CT*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*\
typecode_or_typeF
!Type[multiprocessing.context._CT]
multiprocessing.context._CT*
args
Any*D
lock:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadX¬
Value)multiprocessing.context.BaseContext.Value"ú
Jmultiprocessing.sharedctypes.SynchronizedBase[multiprocessing.context._CT]
multiprocessing.context._CT"-multiprocessing.sharedctypes.SynchronizedBase*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*\
typecode_or_typeF
!Type[multiprocessing.context._CT]
multiprocessing.context._CT*
args
Any*ô
locké
rUnion[Literal[builtins.bool],TypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]]:
Literal[builtins.bool]	
builtins.bool"builtins.boolŸ
TTypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]€
IUnion[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.LockF
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock"!multiprocessing.context._LockLike0:overloadXÁ
Value)multiprocessing.context.BaseContext.Value"l
2multiprocessing.sharedctypes.SynchronizedBase[Any]
Any"-multiprocessing.sharedctypes.SynchronizedBase*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*2
typecode_or_type
builtins.str"builtins.str*
args
Any*ô
locké
rUnion[Literal[builtins.bool],TypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]]:
Literal[builtins.bool]	
builtins.bool"builtins.boolŸ
TTypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]€
IUnion[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.LockF
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock"!multiprocessing.context._LockLike0:overloadX«
Value)multiprocessing.context.BaseContext.Value"
Any*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*ô
typecode_or_typeÇ
'Union[builtins.str,Type[ctypes._CData]]
builtins.str"builtins.str7
Type[ctypes._CData]
ctypes._CData"ctypes._CData*
args
Any*ˆ
lockÈ
iUnion[builtins.bool,TypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]]
builtins.bool"builtins.boolŸ
TTypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]€
IUnion[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.LockF
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock"!multiprocessing.context._LockLike 0:overloadX2¥
Array)multiprocessing.context.BaseContext.ArrayÛ
Array)multiprocessing.context.BaseContext.Array"
multiprocessing.context._CT*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*\
typecode_or_typeF
!Type[multiprocessing.context._CT]
multiprocessing.context._CT*ï
size_or_initializer|
(Union[builtins.int,typing.Sequence[Any]]
builtins.int"builtins.int0
typing.Sequence[Any]
Any"typing.Sequence*D
lock:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadX…
Array)multiprocessing.context.BaseContext.Array"û
Kmultiprocessing.sharedctypes.SynchronizedArray[multiprocessing.context._CT]
multiprocessing.context._CT".multiprocessing.sharedctypes.SynchronizedArray*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*\
typecode_or_typeF
!Type[multiprocessing.context._CT]
multiprocessing.context._CT*ï
size_or_initializer|
(Union[builtins.int,typing.Sequence[Any]]
builtins.int"builtins.int0
typing.Sequence[Any]
Any"typing.Sequence*ô
locké
rUnion[Literal[builtins.bool],TypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]]:
Literal[builtins.bool]	
builtins.bool"builtins.boolŸ
TTypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]€
IUnion[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.LockF
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock"!multiprocessing.context._LockLike0:overloadXÓ
Array)multiprocessing.context.BaseContext.Array"n
3multiprocessing.sharedctypes.SynchronizedArray[Any]
Any".multiprocessing.sharedctypes.SynchronizedArray*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*2
typecode_or_type
builtins.str"builtins.str*ï
size_or_initializer|
(Union[builtins.int,typing.Sequence[Any]]
builtins.int"builtins.int0
typing.Sequence[Any]
Any"typing.Sequence*ô
locké
rUnion[Literal[builtins.bool],TypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]]:
Literal[builtins.bool]	
builtins.bool"builtins.boolŸ
TTypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]€
IUnion[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.LockF
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock"!multiprocessing.context._LockLike0:overloadXÃ
Array)multiprocessing.context.BaseContext.Array"
Any*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*ô
typecode_or_typeÇ
'Union[builtins.str,Type[ctypes._CData]]
builtins.str"builtins.str7
Type[ctypes._CData]
ctypes._CData"ctypes._CData*ï
size_or_initializer|
(Union[builtins.int,typing.Sequence[Any]]
builtins.int"builtins.int0
typing.Sequence[Any]
Any"typing.Sequence*ˆ
lockÈ
iUnion[builtins.bool,TypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]]
builtins.bool"builtins.boolŸ
TTypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]€
IUnion[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.LockF
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock"!multiprocessing.context._LockLike 0:overloadX2ò
get_context/multiprocessing.context.BaseContext.get_contextå
get_context/multiprocessing.context.BaseContext.get_context"P
&multiprocessing.context.DefaultContext"&multiprocessing.context.DefaultContext*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*
method
None 0:overloadXµ
get_context/multiprocessing.context.BaseContext.get_context"L
$multiprocessing.context.SpawnContext"$multiprocessing.context.SpawnContext*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*C
method7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadX≥
get_context/multiprocessing.context.BaseContext.get_context"J
#multiprocessing.context.ForkContext"#multiprocessing.context.ForkContext*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*C
method7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadXø
get_context/multiprocessing.context.BaseContext.get_context"V
)multiprocessing.context.ForkServerContext")multiprocessing.context.ForkServerContext*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*C
method7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadXò
get_context/multiprocessing.context.BaseContext.get_context"J
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*(
method
builtins.str"builtins.str0:overloadX2À
reducer+multiprocessing.context.BaseContext.reducer∫
reducer+multiprocessing.context.BaseContext.reducer"
builtins.str"builtins.str*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext0:propertyX`’
reducer+multiprocessing.context.BaseContext.reducer"
None*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*+
	reduction
builtins.str"builtins.str0:reducer.setterr±
Process+multiprocessing.context.BaseContext.Processy
)Type[multiprocessing.process.BaseProcess]J
#multiprocessing.process.BaseProcess"#multiprocessing.process.BaseProcessrà
ProcessError0multiprocessing.context.BaseContext.ProcessErrorF
Type[builtins.Exception](
builtins.Exception"builtins.Exceptionrå
BufferTooShort2multiprocessing.context.BaseContext.BufferTooShortF
Type[builtins.Exception](
builtins.Exception"builtins.Exceptionrà
TimeoutError0multiprocessing.context.BaseContext.TimeoutErrorF
Type[builtins.Exception](
builtins.Exception"builtins.Exceptionrñ
AuthenticationError7multiprocessing.context.BaseContext.AuthenticationErrorF
Type[builtins.Exception](
builtins.Exception"builtins.Exception^
BufferTooShort&multiprocessing.context.BufferTooShort"$multiprocessing.context.ProcessError≤

DefaultContext&multiprocessing.context.DefaultContext"#multiprocessing.context.BaseContext*˙
__init__/multiprocessing.context.DefaultContext.__init__"
None*Z
selfP
&multiprocessing.context.DefaultContext"&multiprocessing.context.DefaultContext*W
contextJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*∞
set_start_method7multiprocessing.context.DefaultContext.set_start_method"
None*Z
selfP
&multiprocessing.context.DefaultContext"&multiprocessing.context.DefaultContext*P
methodD
Union[builtins.str,None]
builtins.str"builtins.str
None*+
force
builtins.bool"builtins.bool *˜
get_start_method7multiprocessing.context.DefaultContext.get_start_method"
builtins.str"builtins.str*Z
selfP
&multiprocessing.context.DefaultContext"&multiprocessing.context.DefaultContext*0

allow_none
builtins.bool"builtins.bool *˝
get_all_start_methods<multiprocessing.context.DefaultContext.get_all_start_methods"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*Z
selfP
&multiprocessing.context.DefaultContext"&multiprocessing.context.DefaultContextr®
Process.multiprocessing.context.DefaultContext.Processm
%Type[multiprocessing.context.Process]B
multiprocessing.context.Process"multiprocessing.context.Process 
Processmultiprocessing.context.Process"#multiprocessing.process.BaseProcess*Ò
_Popen&multiprocessing.context.Process._Popen"P
&multiprocessing.context.DefaultContext"&multiprocessing.context.DefaultContext*[
process_objJ
#multiprocessing.process.BaseProcess"#multiprocessing.process.BaseProcess0:staticmethodhrÑ
_start_method-multiprocessing.context.Process._start_methodD
Union[builtins.str,None]
builtins.str"builtins.str
NoneH
ProcessError$multiprocessing.context.ProcessError"builtins.Exception‰
SpawnContext$multiprocessing.context.SpawnContext"#multiprocessing.context.BaseContextrQ
_name*multiprocessing.context.SpawnContext._name
builtins.str"builtins.strrµ
Process,multiprocessing.context.SpawnContext.Process|
*Type[multiprocessing.context.SpawnProcess]L
$multiprocessing.context.SpawnProcess"$multiprocessing.context.SpawnProcessZ
TimeoutError$multiprocessing.context.TimeoutError"$multiprocessing.context.ProcessError˙
SyncManager$multiprocessing.managers.SyncManager"$multiprocessing.managers.BaseManager"typing.ContextManager*Ò
BoundedSemaphore5multiprocessing.managers.SyncManager.BoundedSemaphore"8
threading.BoundedSemaphore"threading.BoundedSemaphore*V
selfL
$multiprocessing.managers.SyncManager"$multiprocessing.managers.SyncManager*
value
Any *‘
	Condition.multiprocessing.managers.SyncManager.Condition"*
threading.Condition"threading.Condition*V
selfL
$multiprocessing.managers.SyncManager"$multiprocessing.managers.SyncManager*
lock
Any *Ø
Event*multiprocessing.managers.SyncManager.Event""
threading.Event"threading.Event*V
selfL
$multiprocessing.managers.SyncManager"$multiprocessing.managers.SyncManager*´
Lock)multiprocessing.managers.SyncManager.Lock" 
threading.Lock"threading.Lock*V
selfL
$multiprocessing.managers.SyncManager"$multiprocessing.managers.SyncManager*›
	Namespace.multiprocessing.managers.SyncManager.Namespace"H
"multiprocessing.managers.Namespace""multiprocessing.managers.Namespace*V
selfL
$multiprocessing.managers.SyncManager"$multiprocessing.managers.SyncManager*‚
Queue*multiprocessing.managers.SyncManager.Queue"(
queue.Queue[Any]
Any"queue.Queue*V
selfL
$multiprocessing.managers.SyncManager"$multiprocessing.managers.SyncManager*+
maxsize
builtins.int"builtins.int *±
RLock*multiprocessing.managers.SyncManager.RLock"$
threading._RLock"threading._RLock*V
selfL
$multiprocessing.managers.SyncManager"$multiprocessing.managers.SyncManager*’
	Semaphore.multiprocessing.managers.SyncManager.Semaphore"*
threading.Semaphore"threading.Semaphore*V
selfL
$multiprocessing.managers.SyncManager"$multiprocessing.managers.SyncManager*
value
Any *Ù
Array*multiprocessing.managers.SyncManager.Array"`
,typing.Sequence[multiprocessing.managers._T]
multiprocessing.managers._T"typing.Sequence*V
selfL
$multiprocessing.managers.SyncManager"$multiprocessing.managers.SyncManager*
typecode
Any*n
sequence`
,typing.Sequence[multiprocessing.managers._T]
multiprocessing.managers._T"typing.Sequence*Ÿ
Value*multiprocessing.managers.SyncManager.Value"à
@multiprocessing.managers.ValueProxy[multiprocessing.managers._T]
multiprocessing.managers._T"#multiprocessing.managers.ValueProxy*V
selfL
$multiprocessing.managers.SyncManager"$multiprocessing.managers.SyncManager*
typecode
Any**
value
multiprocessing.managers._T*‹
dict)multiprocessing.managers.SyncManager.dict"ù
Hbuiltins.dict[multiprocessing.managers._KT,multiprocessing.managers._VT] 
multiprocessing.managers._KT 
multiprocessing.managers._VT"builtins.dict*V
selfL
$multiprocessing.managers.SyncManager"$multiprocessing.managers.SyncManager*∞
sequenceü
Ityping.Mapping[multiprocessing.managers._KT,multiprocessing.managers._VT] 
multiprocessing.managers._KT 
multiprocessing.managers._VT"typing.Mapping *Ÿ
list)multiprocessing.managers.SyncManager.list"\
*builtins.list[multiprocessing.managers._T]
multiprocessing.managers._T"builtins.list*V
selfL
$multiprocessing.managers.SyncManager"$multiprocessing.managers.SyncManager*p
sequence`
,typing.Sequence[multiprocessing.managers._T]
multiprocessing.managers._T"typing.Sequence É
JoinableQueue$multiprocessing.queues.JoinableQueue"multiprocessing.queues.Queue*Ÿ
	task_done.multiprocessing.queues.JoinableQueue.task_done"
None*ë
selfÜ
?multiprocessing.queues.JoinableQueue[multiprocessing.queues._T]
multiprocessing.queues._T"$multiprocessing.queues.JoinableQueue*œ
join)multiprocessing.queues.JoinableQueue.join"
None*ë
selfÜ
?multiprocessing.queues.JoinableQueue[multiprocessing.queues._T]
multiprocessing.queues._T"$multiprocessing.queues.JoinableQueuePˇ
Queuemultiprocessing.queues.Queue"queue.Queue*ˇ
__init__%multiprocessing.queues.Queue.__init__"
None*Ä
selfv
7multiprocessing.queues.Queue[multiprocessing.queues._T]
multiprocessing.queues._T"multiprocessing.queues.Queue*+
maxsize
builtins.int"builtins.int *
ctx
Any *—
get multiprocessing.queues.Queue.get"
multiprocessing.queues._T*Ä
selfv
7multiprocessing.queues.Queue[multiprocessing.queues._T]
multiprocessing.queues._T"multiprocessing.queues.Queue*+
block
builtins.bool"builtins.bool *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *‰
put multiprocessing.queues.Queue.put"
None*Ä
selfv
7multiprocessing.queues.Queue[multiprocessing.queues._T]
multiprocessing.queues._T"multiprocessing.queues.Queue*&
obj
multiprocessing.queues._T*+
block
builtins.bool"builtins.bool *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Ã
qsize"multiprocessing.queues.Queue.qsize"
builtins.int"builtins.int*Ä
selfv
7multiprocessing.queues.Queue[multiprocessing.queues._T]
multiprocessing.queues._T"multiprocessing.queues.Queue*Œ
empty"multiprocessing.queues.Queue.empty"
builtins.bool"builtins.bool*Ä
selfv
7multiprocessing.queues.Queue[multiprocessing.queues._T]
multiprocessing.queues._T"multiprocessing.queues.Queue*Ã
full!multiprocessing.queues.Queue.full"
builtins.bool"builtins.bool*Ä
selfv
7multiprocessing.queues.Queue[multiprocessing.queues._T]
multiprocessing.queues._T"multiprocessing.queues.Queue*Î

put_nowait'multiprocessing.queues.Queue.put_nowait"
None*Ä
selfv
7multiprocessing.queues.Queue[multiprocessing.queues._T]
multiprocessing.queues._T"multiprocessing.queues.Queue*'
item
multiprocessing.queues._T*◊

get_nowait'multiprocessing.queues.Queue.get_nowait"
multiprocessing.queues._T*Ä
selfv
7multiprocessing.queues.Queue[multiprocessing.queues._T]
multiprocessing.queues._T"multiprocessing.queues.Queue*∏
close"multiprocessing.queues.Queue.close"
None*Ä
selfv
7multiprocessing.queues.Queue[multiprocessing.queues._T]
multiprocessing.queues._T"multiprocessing.queues.Queue*ƒ
join_thread(multiprocessing.queues.Queue.join_thread"
None*Ä
selfv
7multiprocessing.queues.Queue[multiprocessing.queues._T]
multiprocessing.queues._T"multiprocessing.queues.Queue*“
cancel_join_thread/multiprocessing.queues.Queue.cancel_join_thread"
None*Ä
selfv
7multiprocessing.queues.Queue[multiprocessing.queues._T]
multiprocessing.queues._T"multiprocessing.queues.QueueP‚
SimpleQueue"multiprocessing.queues.SimpleQueue"builtins.object*Â
__init__+multiprocessing.queues.SimpleQueue.__init__"
None*ç
selfÇ
=multiprocessing.queues.SimpleQueue[multiprocessing.queues._T]
multiprocessing.queues._T""multiprocessing.queues.SimpleQueue*
ctx
Any *·
empty(multiprocessing.queues.SimpleQueue.empty"
builtins.bool"builtins.bool*ç
selfÇ
=multiprocessing.queues.SimpleQueue[multiprocessing.queues._T]
multiprocessing.queues._T""multiprocessing.queues.SimpleQueue*‹
get&multiprocessing.queues.SimpleQueue.get"
multiprocessing.queues._T*ç
selfÇ
=multiprocessing.queues.SimpleQueue[multiprocessing.queues._T]
multiprocessing.queues._T""multiprocessing.queues.SimpleQueue*
put&multiprocessing.queues.SimpleQueue.put"
None*ç
selfÇ
=multiprocessing.queues.SimpleQueue[multiprocessing.queues._T]
multiprocessing.queues._T""multiprocessing.queues.SimpleQueue*'
item
multiprocessing.queues._TP›
ForkContext#multiprocessing.context.ForkContext"#multiprocessing.context.BaseContextrP
_name)multiprocessing.context.ForkContext._name
builtins.str"builtins.strr±
Process+multiprocessing.context.ForkContext.Processy
)Type[multiprocessing.context.ForkProcess]J
#multiprocessing.context.ForkProcess"#multiprocessing.context.ForkProcessà
ForkServerContext)multiprocessing.context.ForkServerContext"#multiprocessing.context.BaseContextrV
_name/multiprocessing.context.ForkServerContext._name
builtins.str"builtins.strr 
Process1multiprocessing.context.ForkServerContext.Processã
/Type[multiprocessing.context.ForkServerProcess]V
)multiprocessing.context.ForkServerProcess")multiprocessing.context.ForkServerProcessÃ
active_children'multiprocessing.process.active_children"è
2builtins.list[multiprocessing.process.BaseProcess]J
#multiprocessing.process.BaseProcess"#multiprocessing.process.BaseProcess"builtins.listÜ
current_process'multiprocessing.process.current_process"J
#multiprocessing.process.BaseProcess"#multiprocessing.process.BaseProcess@
freeze_support$multiprocessing.spawn.freeze_support"
Noneƒ
parent_process&multiprocessing.process.parent_process"â
/Union[multiprocessing.process.BaseProcess,None]J
#multiprocessing.process.BaseProcess"#multiprocessing.process.BaseProcess
Noneå
Barriermultiprocessing.Barrier"J
#multiprocessing.synchronize.Barrier"#multiprocessing.synchronize.Barrier*)
parties
builtins.int"builtins.int*ï
actionÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None Ω
BoundedSemaphore multiprocessing.BoundedSemaphore"\
,multiprocessing.synchronize.BoundedSemaphore",multiprocessing.synchronize.BoundedSemaphore*)
value
builtins.int"builtins.int 
	Conditionmultiprocessing.Condition"N
%multiprocessing.synchronize.Condition"%multiprocessing.synchronize.Condition*˜
lockÍ
NUnion[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock,None]D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.LockF
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock
None f
Eventmultiprocessing.Event"F
!multiprocessing.synchronize.Event"!multiprocessing.synchronize.Eventb
Lockmultiprocessing.Lock"D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.Lockf
RLockmultiprocessing.RLock"F
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock°
	Semaphoremultiprocessing.Semaphore"N
%multiprocessing.synchronize.Semaphore"%multiprocessing.synchronize.Semaphore*)
value
builtins.int"builtins.int √
Pipemultiprocessing.Pipe"ˆ
RTuple[multiprocessing.connection.Connection,multiprocessing.connection.Connection]N
%multiprocessing.connection.Connection"%multiprocessing.connection.ConnectionN
%multiprocessing.connection.Connection"%multiprocessing.connection.Connection*,
duplex
builtins.bool"builtins.bool Ë
Poolmultiprocessing.Pool"6
multiprocessing.pool.Pool"multiprocessing.pool.Pool*U
	processesD
Union[builtins.int,None]
builtins.int"builtins.int
None *ö
initializerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *@
initargs0
typing.Iterable[Any]
Any"typing.Iterable *\
maxtasksperchildD
Union[builtins.int,None]
builtins.int"builtins.int
None P
allow_connection_pickling)multiprocessing.allow_connection_pickling"
NoneD
	cpu_countmultiprocessing.cpu_count"
builtins.int"builtins.intJ

get_loggermultiprocessing.get_logger" 
logging.Logger"logging.LoggerŒ
log_to_stderrmultiprocessing.log_to_stderr" 
logging.Logger"logging.Logger*|
levelo
%Union[builtins.str,builtins.int,None]
builtins.str"builtins.str
builtins.int"builtins.int
None p
Managermultiprocessing.Manager"L
$multiprocessing.managers.SyncManager"$multiprocessing.managers.SyncManagerh
set_executablemultiprocessing.set_executable"
None*,

executable
builtins.str"builtins.str®
set_forkserver_preload&multiprocessing.set_forkserver_preload"
None*\
module_namesJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listä
get_all_start_methods%multiprocessing.get_all_start_methods"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list¨
get_start_method multiprocessing.get_start_method"D
Union[builtins.str,None]
builtins.str"builtins.str
None*0

allow_none
builtins.bool"builtins.bool æ
set_start_method multiprocessing.set_start_method"
None*(
method
builtins.str"builtins.str*T
forceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None "Ú
get_contextmultiprocessing.get_context¢
get_contextmultiprocessing.get_context"P
&multiprocessing.context.DefaultContext"&multiprocessing.context.DefaultContext*
method
None 0:overloadXÀ
get_contextmultiprocessing.get_context"L
$multiprocessing.context.SpawnContext"$multiprocessing.context.SpawnContext*C
method7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadX…
get_contextmultiprocessing.get_context"J
#multiprocessing.context.ForkContext"#multiprocessing.context.ForkContext*C
method7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadX’
get_contextmultiprocessing.get_context"V
)multiprocessing.context.ForkServerContext")multiprocessing.context.ForkServerContext*C
method7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadXÆ
get_contextmultiprocessing.get_context"J
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*(
method
builtins.str"builtins.str0:overloadX**

connectionmultiprocessing.connection *$
contextmultiprocessing.context *
poolmultiprocessing.pool *,
synchronizemultiprocessing.synchronize *Ñ
RawValuemultiprocessing.RawValue^
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.function*Ñ
RawArraymultiprocessing.RawArray^
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.function*~
Valuemultiprocessing.Value^
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.function*~
Arraymultiprocessing.Array^
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.function