
waitress.taskπÜ
Loggerlogging.Logger"logging.Filterer*Ã
__init__logging.Logger.__init__"
None**
self 
logging.Logger"logging.Logger*&
name
builtins.str"builtins.str*Ø
level°
+TypeAlias[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"logging._Level z35z36z37z38z39z310*¢
setLevellogging.Logger.setLevel"
None**
self 
logging.Logger"logging.Logger*≠
level°
+TypeAlias[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"logging._Levelz35z36z37z38z39z310*π
isEnabledForlogging.Logger.isEnabledFor"
builtins.bool"builtins.bool**
self 
logging.Logger"logging.Logger*'
level
builtins.int"builtins.intz35z36z37z38z39z310*ò
getEffectiveLevel logging.Logger.getEffectiveLevel"
builtins.int"builtins.int**
self 
logging.Logger"logging.Loggerz35z36z37z38z39z310*¥
getChildlogging.Logger.getChild" 
logging.Logger"logging.Logger**
self 
logging.Logger"logging.Logger*(
suffix
builtins.str"builtins.strz35z36z37z38z39z310*é
debuglogging.Logger.debug"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*ø
debuglogging.Logger.debug"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*å
infologging.Logger.info"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*Ω
infologging.Logger.info"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*í
warninglogging.Logger.warning"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*√
warninglogging.Logger.warning"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*å
warnlogging.Logger.warn"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*Ω
warnlogging.Logger.warn"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*é
errorlogging.Logger.error"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*ø
errorlogging.Logger.error"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*î
criticallogging.Logger.critical"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*≈
criticallogging.Logger.critical"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*≥
loglogging.Logger.log"
None**
self 
logging.Logger"logging.Logger*'
level
builtins.int"builtins.int*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*‰
loglogging.Logger.log"
None**
self 
logging.Logger"logging.Logger*'
level
builtins.int"builtins.int*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*ñ
	exceptionlogging.Logger.exception"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*«
	exceptionlogging.Logger.exception"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*∂

_loglogging.Logger._log"
None**
self 
logging.Logger"logging.Logger*'
level
builtins.int"builtins.int*
msg
Any*µ
args™
FTypeAlias[Union[builtins.tuple[Any],typing.Mapping[builtins.str,Any]]] 
;Union[builtins.tuple[Any],typing.Mapping[builtins.str,Any]].
builtins.tuple[Any]
Any"builtins.tupleY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"logging._ArgsType*é
exc_info˝
°Union[builtins.bool,Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None],builtins.BaseException,None]
builtins.bool"builtins.boolø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None0
builtins.BaseException"builtins.BaseException
None *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *0

stack_info
builtins.bool"builtins.bool z35z36z37*Á

_loglogging.Logger._log"
None**
self 
logging.Logger"logging.Logger*'
level
builtins.int"builtins.int*
msg
Any*µ
args™
FTypeAlias[Union[builtins.tuple[Any],typing.Mapping[builtins.str,Any]]] 
;Union[builtins.tuple[Any],typing.Mapping[builtins.str,Any]].
builtins.tuple[Any]
Any"builtins.tupleY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"logging._ArgsType*é
exc_info˝
°Union[builtins.bool,Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None],builtins.BaseException,None]
builtins.bool"builtins.boolø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None0
builtins.BaseException"builtins.BaseException
None *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int z38z39z310*∏
filterlogging.Logger.filter"
builtins.bool"builtins.bool**
self 
logging.Logger"logging.Logger*2
record&
logging.LogRecord"logging.LogRecordz35z36z37z38z39z310*§

addHandlerlogging.Logger.addHandler"
None**
self 
logging.Logger"logging.Logger*,
hdlr"
logging.Handler"logging.Handlerz35z36z37z38z39z310*™
removeHandlerlogging.Logger.removeHandler"
None**
self 
logging.Logger"logging.Logger*,
hdlr"
logging.Handler"logging.Handlerz35z36z37z38z39z310*˛

findCallerlogging.Logger.findCaller"Í
FTuple[builtins.str,builtins.int,builtins.str,Union[builtins.str,None]]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
None**
self 
logging.Logger"logging.Logger*0

stack_info
builtins.bool"builtins.bool z35z36z37*Ø

findCallerlogging.Logger.findCaller"Í
FTuple[builtins.str,builtins.int,builtins.str,Union[builtins.str,None]]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
None**
self 
logging.Logger"logging.Logger*0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int z38z39z310*¢
handlelogging.Logger.handle"
None**
self 
logging.Logger"logging.Logger*2
record&
logging.LogRecord"logging.LogRecordz35z36z37z38z39z310*ﬁ

makeRecordlogging.Logger.makeRecord"&
logging.LogRecord"logging.LogRecord**
self 
logging.Logger"logging.Logger*&
name
builtins.str"builtins.str*'
level
builtins.int"builtins.int*$
fn
builtins.str"builtins.str*%
lno
builtins.int"builtins.int*
msg
Any*µ
args™
FTypeAlias[Union[builtins.tuple[Any],typing.Mapping[builtins.str,Any]]] 
;Union[builtins.tuple[Any],typing.Mapping[builtins.str,Any]].
builtins.tuple[Any]
Any"builtins.tupleY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"logging._ArgsType*î
exc_infoÖ
|Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None],None]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None
None*P
funcD
Union[builtins.str,None]
builtins.str"builtins.str
None *£
extraï
,Union[typing.Mapping[builtins.str,Any],None]Y
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping
None *Q
sinfoD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39z310*é
hasHandlerslogging.Logger.hasHandlers"
builtins.bool"builtins.bool**
self 
logging.Logger"logging.Loggerz35z36z37z38z39z310*Æ
callHandlerslogging.Logger.callHandlers"
None**
self 
logging.Logger"logging.Logger*2
record&
logging.LogRecord"logging.LogRecordz35z36z37z38z39z310j35j36j37j38j39j310rR
namelogging.Logger.name
builtins.str"builtins.str*35*36*37*38*39*310rT
levellogging.Logger.level
builtins.int"builtins.int*35*36*37*38*39*310rÑ
parentlogging.Logger.parentJ
Union[logging.Logger,None] 
logging.Logger"logging.Logger
None*35*36*37*38*39*310r^
	propagatelogging.Logger.propagate
builtins.bool"builtins.bool*35*36*37*38*39*310rë
handlerslogging.Logger.handlersS
builtins.list[logging.Handler]"
logging.Handler"logging.Handler"builtins.list*35*36*37*38*39*310r\
disabledlogging.Logger.disabled
builtins.bool"builtins.bool*35*36*37*38*39*310r^
rootlogging.Logger.root(
logging.RootLogger"logging.RootLogger*35*36*37*38*39*310r^
managerlogging.Logger.manager"
logging.Manager"logging.Manager*35*36*37*38*39*310rÉ
fatallogging.Logger.fatalK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310á
	Conditionthreading.Condition"builtins.object*í
__init__threading.Condition.__init__"
None*4
self*
threading.Condition"threading.Condition*é
lockÅ
+Union[threading.Lock,threading._RLock,None] 
threading.Lock"threading.Lock$
threading._RLock"threading._RLock
None z35z36z37z38z39z310*ó
	__enter__threading.Condition.__enter__"
builtins.bool"builtins.bool*2
self*
threading.Condition"threading.Conditionz35z36z37z38z39z310*¨
__exit__threading.Condition.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*2
self*
threading.Condition"threading.Condition*ó
exc_typeä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*m
exc_valb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*c
exc_tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Nonez35z36z37z38z39z310*ˆ
acquirethreading.Condition.acquire"
builtins.bool"builtins.bool*4
self*
threading.Condition"threading.Condition*.
blocking
builtins.bool"builtins.bool */
timeout 
builtins.float"builtins.float z35z36z37z38z39z310*
releasethreading.Condition.release"
None*4
self*
threading.Condition"threading.Conditionz35z36z37z38z39z310*Í
waitthreading.Condition.wait"
builtins.bool"builtins.bool*4
self*
threading.Condition"threading.Condition*Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None z35z36z37z38z39z310*¿
wait_forthreading.Condition.wait_for"
threading._T*4
self*
threading.Condition"threading.Condition*Z
	predicateK
CallableType[builtins.function]&
builtins.function"builtins.function*Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None z35z36z37z38z39z310*§
notifythreading.Condition.notify"
None*4
self*
threading.Condition"threading.Condition*%
n
builtins.int"builtins.int z35z36z37z38z39z310*Ö

notify_allthreading.Condition.notify_all"
None*4
self*
threading.Condition"threading.Conditionz35z36z37z38z39z310*É
	notifyAllthreading.Condition.notifyAll"
None*4
self*
threading.Condition"threading.Conditionz35z36z37z38z39z310j35j36j37j38j39j310¬

Lockthreading.Lock"builtins.object*r
__init__threading.Lock.__init__"
None**
self 
threading.Lock"threading.Lockz35z36z37z38z39z310*à
	__enter__threading.Lock.__enter__"
builtins.bool"builtins.bool*(
self 
threading.Lock"threading.Lockz35z36z37z38z39z310*ù
__exit__threading.Lock.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*(
self 
threading.Lock"threading.Lock*ó
exc_typeä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*m
exc_valb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*c
exc_tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Nonez35z36z37z38z39z310*Á
acquirethreading.Lock.acquire"
builtins.bool"builtins.bool**
self 
threading.Lock"threading.Lock*.
blocking
builtins.bool"builtins.bool */
timeout 
builtins.float"builtins.float z35z36z37z38z39z310*p
releasethreading.Lock.release"
None**
self 
threading.Lock"threading.Lockz35z36z37z38z39z310*Ñ
lockedthreading.Lock.locked"
builtins.bool"builtins.bool**
self 
threading.Lock"threading.Lockz35z36z37z38z39z310j35j36j37j38j39j310í
Mappingtyping.Mapping"typing.Collection*Â
__getitem__typing.Mapping.__getitem__"
typing._VT_co*e
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*
k

typing._KT0:abstractmethod@z35z36z37z38z39z310*≥
itemstyping.Mapping.items"ë
3typing.AbstractSet[Tuple[typing._KT,typing._VT_co]]F
Tuple[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.AbstractSet*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz35z36z37z38z39z310*„
keystyping.Mapping.keys"D
typing.AbstractSet[typing._KT]

typing._KT"typing.AbstractSet*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz35z36z37z38z39z310*Î
valuestyping.Mapping.values"H
 typing.ValuesView[typing._VT_co]
typing._VT_co"typing.ValuesView*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz35z36z37z38z39z310*Ù
__contains__typing.Mapping.__contains__"
builtins.bool"builtins.bool*e
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*'
o"
builtins.object"builtins.objectz35z36z37z38z39z3102ﬂ
gettyping.Mapping.getÂ
gettyping.Mapping.get":
Union[typing._VT_co,None]
typing._VT_co
None*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*
key

typing._KT0:overloadX¬
gettyping.Mapping.get"D
Union[typing._VT_co,typing._T]
typing._VT_co
	typing._T*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*
key

typing._KT*Q
defaultD
Union[typing._VT_co,typing._T]
typing._VT_co
	typing._T0:overloadX"35"36"37"38"39"310Pj35j36j37j38j39j310¬
Sequencetyping.Sequence"typing.Collection"typing.Reversible*å
indextyping.Sequence.index"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
value
Any*)
start
builtins.int"builtins.int *(
stop
builtins.int"builtins.int z35z36z37z38z39z310*∑
counttyping.Sequence.count"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
value
Anyz35z36z37z38z39z310*⁄
__contains__typing.Sequence.__contains__"
builtins.bool"builtins.bool*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*'
x"
builtins.object"builtins.objectz35z36z37z38z39z310*Õ
__iter__typing.Sequence.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez35z36z37z38z39z310*’
__reversed__typing.Sequence.__reversed__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez35z36z37z38z39z3102ï
__getitem__typing.Sequence.__getitem__À
__getitem__typing.Sequence.__getitem__"
typing._T_co*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*!
i
builtins.int"builtins.int0:overload:abstractmethod@XÅ
__getitem__typing.Sequence.__getitem__"B
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*%
s 
builtins.slice"builtins.slice0:overload:abstractmethod@X"35"36"37"38"39"310Pj35j36j37j38j39j310—-
HTTPChannelwaitress.channel.HTTPChannel"builtins.object*⁄
__init__%waitress.channel.HTTPChannel.__init__"
None*F
self<
waitress.channel.HTTPChannel"waitress.channel.HTTPChannel*L
server@
waitress.server.BaseWSGIServer"waitress.server.BaseWSGIServer*(
sock
socket.socket"socket.socket*&
addr
builtins.str"builtins.str*M
adjD
 waitress.adjustments.Adjustments" waitress.adjustments.Adjustments*Ã
map¿
6Union[typing.Mapping[builtins.int,socket.socket],None]z
*typing.Mapping[builtins.int,socket.socket]
builtins.int"builtins.int
socket.socket"socket.socket"typing.Mapping
None z35z36z37z38z39z310*≤
writable%waitress.channel.HTTPChannel.writable"
builtins.bool"builtins.bool*F
self<
waitress.channel.HTTPChannel"waitress.channel.HTTPChannelz35z36z37z38z39z310*§
handle_write)waitress.channel.HTTPChannel.handle_write"
None*F
self<
waitress.channel.HTTPChannel"waitress.channel.HTTPChannelz35z36z37z38z39z310*≤
readable%waitress.channel.HTTPChannel.readable"
builtins.bool"builtins.bool*F
self<
waitress.channel.HTTPChannel"waitress.channel.HTTPChannelz35z36z37z38z39z310*¢
handle_read(waitress.channel.HTTPChannel.handle_read"
None*F
self<
waitress.channel.HTTPChannel"waitress.channel.HTTPChannelz35z36z37z38z39z310*ﬁ
received%waitress.channel.HTTPChannel.received"
builtins.bool"builtins.bool*F
self<
waitress.channel.HTTPChannel"waitress.channel.HTTPChannel**
data 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*§
handle_close)waitress.channel.HTTPChannel.handle_close"
None*F
self<
waitress.channel.HTTPChannel"waitress.channel.HTTPChannelz35z36z37z38z39z310*Ò
add_channel(waitress.channel.HTTPChannel.add_channel"
None*F
self<
waitress.channel.HTTPChannel"waitress.channel.HTTPChannel*Ã
map¿
6Union[typing.Mapping[builtins.int,socket.socket],None]z
*typing.Mapping[builtins.int,socket.socket]
builtins.int"builtins.int
socket.socket"socket.socket"typing.Mapping
None z35z36z37z38z39z310*Ò
del_channel(waitress.channel.HTTPChannel.del_channel"
None*F
self<
waitress.channel.HTTPChannel"waitress.channel.HTTPChannel*Ã
map¿
6Union[typing.Mapping[builtins.int,socket.socket],None]z
*typing.Mapping[builtins.int,socket.socket]
builtins.int"builtins.int
socket.socket"socket.socket"typing.Mapping
None z35z36z37z38z39z310*‡

write_soon'waitress.channel.HTTPChannel.write_soon"
builtins.int"builtins.int*F
self<
waitress.channel.HTTPChannel"waitress.channel.HTTPChannel**
data 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*ö
service$waitress.channel.HTTPChannel.service"
None*F
self<
waitress.channel.HTTPChannel"waitress.channel.HTTPChannelz35z36z37z38z39z310*ò
cancel#waitress.channel.HTTPChannel.cancel"
None*F
self<
waitress.channel.HTTPChannel"waitress.channel.HTTPChannelz35z36z37z38z39z310j35j36j37j38j39j310rÄ

task_class'waitress.channel.HTTPChannel.task_class0
waitress.task.WSGITask"waitress.task.WSGITask*35*36*37*38*39*310ré
error_task_class-waitress.channel.HTTPChannel.error_task_class2
waitress.task.ErrorTask"waitress.task.ErrorTask*35*36*37*38*39*310rö
parser_class)waitress.channel.HTTPChannel.parser_classF
!waitress.parser.HTTPRequestParser"!waitress.parser.HTTPRequestParser*35*36*37*38*39*310rê
request$waitress.channel.HTTPChannel.requestF
!waitress.parser.HTTPRequestParser"!waitress.parser.HTTPRequestParser*35*36*37*38*39*310rv
last_activity*waitress.channel.HTTPChannel.last_activity 
builtins.float"builtins.float*35*36*37*38*39*310rn

will_close'waitress.channel.HTTPChannel.will_close
builtins.bool"builtins.bool*35*36*37*38*39*310r~
close_when_flushed/waitress.channel.HTTPChannel.close_when_flushed
builtins.bool"builtins.bool*35*36*37*38*39*310r⁄
requests%waitress.channel.HTTPChannel.requestsç
2typing.Sequence[waitress.parser.HTTPRequestParser]F
!waitress.parser.HTTPRequestParser"!waitress.parser.HTTPRequestParser"typing.Sequence*35*36*37*38*39*310rt
sent_continue*waitress.channel.HTTPChannel.sent_continue
builtins.bool"builtins.bool*35*36*37*38*39*310rz
total_outbufs_len.waitress.channel.HTTPChannel.total_outbufs_len
builtins.int"builtins.int*35*36*37*38*39*310rÄ
current_outbuf_count1waitress.channel.HTTPChannel.current_outbuf_count
builtins.int"builtins.int*35*36*37*38*39*310rà
server#waitress.channel.HTTPChannel.server@
waitress.server.BaseWSGIServer"waitress.server.BaseWSGIServer*35*36*37*38*39*310rÜ
adj waitress.channel.HTTPChannel.adjD
 waitress.adjustments.Adjustments" waitress.adjustments.Adjustments*35*36*37*38*39*310rﬁ
outbufs$waitress.channel.HTTPChannel.outbufsì
4typing.Sequence[waitress.buffers.OverflowableBuffer]J
#waitress.buffers.OverflowableBuffer"#waitress.buffers.OverflowableBuffer"typing.Sequence*35*36*37*38*39*310rv
creation_time*waitress.channel.HTTPChannel.creation_time 
builtins.float"builtins.float*35*36*37*38*39*310rn
sendbuf_len(waitress.channel.HTTPChannel.sendbuf_len
builtins.int"builtins.int*35*36*37*38*39*310rn
	task_lock&waitress.channel.HTTPChannel.task_lock 
threading.Lock"threading.Lock*35*36*37*38*39*310r|
outbuf_lock(waitress.channel.HTTPChannel.outbuf_lock*
threading.Condition"threading.Condition*35*36*37*38*39*310r§
addr!waitress.channel.HTTPChannel.addr`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*35*36*37*38*39*310rl
	connected&waitress.channel.HTTPChannel.connected
builtins.bool"builtins.bool*35*36*37*38*39*310ô

Errorwaitress.utilities.Error"builtins.object*∏
__init__!waitress.utilities.Error.__init__"
None*>
self4
waitress.utilities.Error"waitress.utilities.Error*&
body
builtins.str"builtins.strz35z36z37z38z39z310* 
to_response$waitress.utilities.Error.to_response"ª
RTuple[builtins.str,typing.Sequence[Tuple[builtins.str,builtins.str]],builtins.str]
builtins.str"builtins.str¶
1typing.Sequence[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Sequence
builtins.str"builtins.str*>
self4
waitress.utilities.Error"waitress.utilities.Errorz35z36z37z38z39z310*•
wsgi_response&waitress.utilities.Error.wsgi_response"
builtins.str"builtins.str*>
self4
waitress.utilities.Error"waitress.utilities.Error*
environ
Any*_
start_responseK
CallableType[builtins.function]&
builtins.function"builtins.functionz35z36z37z38z39z310j35j36j37j38j39j310r\
codewaitress.utilities.Error.code
builtins.int"builtins.int*35*36*37*38*39*310r`
reasonwaitress.utilities.Error.reason
builtins.str"builtins.str*35*36*37*38*39*310r\
bodywaitress.utilities.Error.body
builtins.str"builtins.str*35*36*37*38*39*310ó
ThreadedTaskDispatcher$waitress.task.ThreadedTaskDispatcher"builtins.object*¥
__init__-waitress.task.ThreadedTaskDispatcher.__init__"
None*V
selfL
$waitress.task.ThreadedTaskDispatcher"$waitress.task.ThreadedTaskDispatcherz35z36z37z38z39z310*Ï
start_new_thread5waitress.task.ThreadedTaskDispatcher.start_new_thread"
None*V
selfL
$waitress.task.ThreadedTaskDispatcher"$waitress.task.ThreadedTaskDispatcher*
target
Any*
args
Anyz35z36z37z38z39z310*Ì
handler_thread3waitress.task.ThreadedTaskDispatcher.handler_thread"
None*V
selfL
$waitress.task.ThreadedTaskDispatcher"$waitress.task.ThreadedTaskDispatcher*+
	thread_no
builtins.int"builtins.intz35z36z37z38z39z310*Ì
set_thread_count5waitress.task.ThreadedTaskDispatcher.set_thread_count"
None*V
selfL
$waitress.task.ThreadedTaskDispatcher"$waitress.task.ThreadedTaskDispatcher*'
count
builtins.int"builtins.intz35z36z37z38z39z310*Ë
add_task-waitress.task.ThreadedTaskDispatcher.add_task"
None*V
selfL
$waitress.task.ThreadedTaskDispatcher"$waitress.task.ThreadedTaskDispatcher*2
task(
waitress.task.Task"waitress.task.Taskz35z36z37z38z39z310*≠
shutdown-waitress.task.ThreadedTaskDispatcher.shutdown"
builtins.bool"builtins.bool*V
selfL
$waitress.task.ThreadedTaskDispatcher"$waitress.task.ThreadedTaskDispatcher*4
cancel_pending
builtins.bool"builtins.bool *+
timeout
builtins.int"builtins.int z35z36z37z38z39z310j35j36j37j38j39j310rt

stop_count/waitress.task.ThreadedTaskDispatcher.stop_count
builtins.int"builtins.int*35*36*37*38*39*310rx
active_count1waitress.task.ThreadedTaskDispatcher.active_count
builtins.int"builtins.int*35*36*37*38*39*310rp
logger+waitress.task.ThreadedTaskDispatcher.logger 
logging.Logger"logging.Logger*35*36*37*38*39*310r|
queue_logger1waitress.task.ThreadedTaskDispatcher.queue_logger 
logging.Logger"logging.Logger*35*36*37*38*39*310r|
threads,waitress.task.ThreadedTaskDispatcher.threads*
builtins.set[Any]
Any"builtins.set*35*36*37*38*39*310r≤
queue*waitress.task.ThreadedTaskDispatcher.queued
%collections.deque[waitress.task.Task](
waitress.task.Task"waitress.task.Task"collections.deque*35*36*37*38*39*310rl
lock)waitress.task.ThreadedTaskDispatcher.lock 
threading.Lock"threading.Lock*35*36*37*38*39*310r~
queue_cv-waitress.task.ThreadedTaskDispatcher.queue_cv*
threading.Condition"threading.Condition*35*36*37*38*39*310rä
thread_exit_cv3waitress.task.ThreadedTaskDispatcher.thread_exit_cv*
threading.Condition"threading.Condition*35*36*37*38*39*310å
Taskwaitress.task.Task"builtins.object*å
__init__waitress.task.Task.__init__"
None*2
self(
waitress.task.Task"waitress.task.Task*I
channel<
waitress.channel.HTTPChannel"waitress.channel.HTTPChannel*A
request4
waitress.utilities.Error"waitress.utilities.Errorz35z36z37z38z39z310*|
servicewaitress.task.Task.service"
None*2
self(
waitress.task.Task"waitress.task.Taskz35z36z37z38z39z310*¢
has_bodywaitress.task.Task.has_body"
builtins.bool"builtins.bool*2
self(
waitress.task.Task"waitress.task.Task0:property`z35z36z37z38z39z310*∞
build_response_header(waitress.task.Task.build_response_header" 
builtins.bytes"builtins.bytes*2
self(
waitress.task.Task"waitress.task.Taskz35z36z37z38z39z310*¶
remove_content_length_header/waitress.task.Task.remove_content_length_header"
None*2
self(
waitress.task.Task"waitress.task.Taskz35z36z37z38z39z310*x
startwaitress.task.Task.start"
None*2
self(
waitress.task.Task"waitress.task.Taskz35z36z37z38z39z310*z
finishwaitress.task.Task.finish"
None*2
self(
waitress.task.Task"waitress.task.Taskz35z36z37z38z39z310*§
writewaitress.task.Task.write"
None*2
self(
waitress.task.Task"waitress.task.Task**
data 
builtins.bytes"builtins.bytesz35z36z37z38z39z310j35j36j37j38j39j310rn
close_on_finish"waitress.task.Task.close_on_finish
builtins.bool"builtins.bool*35*36*37*38*39*310rZ
statuswaitress.task.Task.status
builtins.str"builtins.str*35*36*37*38*39*310rh
wrote_headerwaitress.task.Task.wrote_header
builtins.bool"builtins.bool*35*36*37*38*39*310rb

start_timewaitress.task.Task.start_time
builtins.int"builtins.int*35*36*37*38*39*310rí
content_length!waitress.task.Task.content_lengthD
Union[builtins.int,None]
builtins.int"builtins.int
None*35*36*37*38*39*310rx
content_bytes_written(waitress.task.Task.content_bytes_written
builtins.int"builtins.int*35*36*37*38*39*310rv
logged_write_excess&waitress.task.Task.logged_write_excess
builtins.bool"builtins.bool*35*36*37*38*39*310rx
logged_write_no_body'waitress.task.Task.logged_write_no_body
builtins.bool"builtins.bool*35*36*37*38*39*310r`
completewaitress.task.Task.complete
builtins.bool"builtins.bool*35*36*37*38*39*310rp
chunked_response#waitress.task.Task.chunked_response
builtins.bool"builtins.bool*35*36*37*38*39*310r^
loggerwaitress.task.Task.logger 
logging.Logger"logging.Logger*35*36*37*38*39*310r|
channelwaitress.task.Task.channel<
waitress.channel.HTTPChannel"waitress.channel.HTTPChannel*35*36*37*38*39*310rt
requestwaitress.task.Task.request4
waitress.utilities.Error"waitress.utilities.Error*35*36*37*38*39*310r˘
response_headers#waitress.task.Task.response_headers¶
1typing.Sequence[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Sequence*35*36*37*38*39*310r\
versionwaitress.task.Task.version
builtins.str"builtins.str*35*36*37*38*39*310ç
	ErrorTaskwaitress.task.ErrorTask"waitress.task.Task*ã
executewaitress.task.ErrorTask.execute"
None*<
self2
waitress.task.ErrorTask"waitress.task.ErrorTaskz35z36z37z38z39z310j35j36j37j38j39j310re
complete waitress.task.ErrorTask.complete
builtins.bool"builtins.bool*35*36*37*38*39*310r_
statuswaitress.task.ErrorTask.status
builtins.str"builtins.str*35*36*37*38*39*310rs
close_on_finish'waitress.task.ErrorTask.close_on_finish
builtins.bool"builtins.bool*35*36*37*38*39*310ro
content_length&waitress.task.ErrorTask.content_length
builtins.int"builtins.int*35*36*37*38*39*310ä	
WSGITaskwaitress.task.WSGITask"waitress.task.Task*à
executewaitress.task.WSGITask.execute"
None*:
self0
waitress.task.WSGITask"waitress.task.WSGITaskz35z36z37z38z39z310*ó
get_environment&waitress.task.WSGITask.get_environment"
Any*:
self0
waitress.task.WSGITask"waitress.task.WSGITaskz35z36z37z38z39z310j35j36j37j38j39j310rj
environwaitress.task.WSGITask.environ&
Union[Any,None]
Any
None*35*36*37*38*39*310r˝
response_headers'waitress.task.WSGITask.response_headers¶
1typing.Sequence[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Sequence*35*36*37*38*39*310rd
completewaitress.task.WSGITask.complete
builtins.bool"builtins.bool*35*36*37*38*39*310r^
statuswaitress.task.WSGITask.status
builtins.str"builtins.str*35*36*37*38*39*310rn
content_length%waitress.task.WSGITask.content_length
builtins.int"builtins.int*35*36*37*38*39*310rr
close_on_finish&waitress.task.WSGITask.close_on_finish
builtins.bool"builtins.bool*35*36*37*38*39*310*N
Any
typing.Any"
builtins.object"builtins.object*35*36*37*38*39*310*`
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*Z
Tupletyping.Tuple*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*¿
rename_headerswaitress.task.rename_headersw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping*35*36*37*38*39*310*w

hop_by_hopwaitress.task.hop_by_hop6
builtins.frozenset[Any]
Any"builtins.frozenset*35*36*37*38*39*310