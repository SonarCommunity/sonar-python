
openpyxl.chartsheet.protectionõ
ChartsheetProtection3openpyxl.chartsheet.protection.ChartsheetProtection".openpyxl.descriptors.serialisable.Serialisable"(openpyxl.worksheet.protection._Protected*≈
__init__<openpyxl.chartsheet.protection.ChartsheetProtection.__init__"
None*t
selfj
3openpyxl.chartsheet.protection.ChartsheetProtection"3openpyxl.chartsheet.protection.ChartsheetProtection*˚
contentÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *˚
objectsÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *l
	hashValue[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *7
	spinCount&
Union[Any,None]
Any
None *l
	saltValue[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *Y
algorithmNameD
Union[builtins.str,None]
builtins.str"builtins.str
None *k
password[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rà
tagname;openpyxl.chartsheet.protection.ChartsheetProtection.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313rº
algorithmNameAopenpyxl.chartsheet.protection.ChartsheetProtection.algorithmNameD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313r°
	hashValue=openpyxl.chartsheet.protection.ChartsheetProtection.hashValue1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313r°
	saltValue=openpyxl.chartsheet.protection.ChartsheetProtection.saltValue1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313r∂
	spinCount=openpyxl.chartsheet.protection.ChartsheetProtection.spinCountF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313r¨
content;openpyxl.chartsheet.protection.ChartsheetProtection.content@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313r¨
objects;openpyxl.chartsheet.protection.ChartsheetProtection.objects@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313rº
	__attrs__=openpyxl.chartsheet.protection.ChartsheetProtection.__attrs__L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*36*37*38*39*310*311*312*313rü
password<openpyxl.chartsheet.protection.ChartsheetProtection.password1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313*æ
__annotations__.openpyxl.chartsheet.protection.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313*p
ConvertibleToInt/openpyxl.chartsheet.protection.ConvertibleToInt
Any*36*37*38*39*310*311*312*313*B
Literal&openpyxl.chartsheet.protection.Literal
Any*36*37