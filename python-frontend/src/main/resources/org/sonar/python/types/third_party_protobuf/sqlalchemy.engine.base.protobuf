
sqlalchemy.engine.baseÉ
Connectable(sqlalchemy.engine.interfaces.Connectable"builtins.object*°
connect0sqlalchemy.engine.interfaces.Connectable.connect"F
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connection*^
selfT
(sqlalchemy.engine.interfaces.Connectable"(sqlalchemy.engine.interfaces.Connectable*
kwargs
Any0:abstractmethod@z36z37z38z39z310*µ
engine/sqlalchemy.engine.interfaces.Connectable.engine"w
)Union[sqlalchemy.engine.base.Engine,None]>
sqlalchemy.engine.base.Engine"sqlalchemy.engine.base.Engine
None*^
selfT
(sqlalchemy.engine.interfaces.Connectable"(sqlalchemy.engine.interfaces.Connectable0:property`z36z37z38z39z3102Ë
execute0sqlalchemy.engine.interfaces.Connectable.execute€
execute0sqlalchemy.engine.interfaces.Connectable.execute"N
%sqlalchemy.engine.cursor.CursorResult"%sqlalchemy.engine.cursor.CursorResult*^
selfT
(sqlalchemy.engine.interfaces.Connectable"(sqlalchemy.engine.interfaces.Connectable*Ã
object_æ
ªUnion[sqlalchemy.sql.elements.ClauseElement,sqlalchemy.sql.functions.FunctionElement,sqlalchemy.sql.ddl.DDLElement,sqlalchemy.sql.schema.DefaultGenerator,sqlalchemy.sql.compiler.Compiled]N
%sqlalchemy.sql.elements.ClauseElement"%sqlalchemy.sql.elements.ClauseElementT
(sqlalchemy.sql.functions.FunctionElement"(sqlalchemy.sql.functions.FunctionElement>
sqlalchemy.sql.ddl.DDLElement"sqlalchemy.sql.ddl.DDLElementP
&sqlalchemy.sql.schema.DefaultGenerator"&sqlalchemy.sql.schema.DefaultGeneratorD
 sqlalchemy.sql.compiler.Compiled" sqlalchemy.sql.compiler.Compiled*j
multiparamsY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping*
params
Any0:abstractmethod:overload@X∑
execute0sqlalchemy.engine.interfaces.Connectable.execute"N
%sqlalchemy.engine.cursor.CursorResult"%sqlalchemy.engine.cursor.CursorResult*^
selfT
(sqlalchemy.engine.interfaces.Connectable"(sqlalchemy.engine.interfaces.Connectable*)
object_
builtins.str"builtins.str*È
multiparams◊
?Union[Any,builtins.tuple[Any],typing.Mapping[builtins.str,Any]]
Any.
builtins.tuple[Any]
Any"builtins.tupleY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping*
params
Any0:abstractmethod:overload@X"36"37"38"39"3102‘
scalar/sqlalchemy.engine.interfaces.Connectable.scalarí
scalar/sqlalchemy.engine.interfaces.Connectable.scalar"
Any*^
selfT
(sqlalchemy.engine.interfaces.Connectable"(sqlalchemy.engine.interfaces.Connectable*Ã
object_æ
ªUnion[sqlalchemy.sql.elements.ClauseElement,sqlalchemy.sql.functions.FunctionElement,sqlalchemy.sql.ddl.DDLElement,sqlalchemy.sql.schema.DefaultGenerator,sqlalchemy.sql.compiler.Compiled]N
%sqlalchemy.sql.elements.ClauseElement"%sqlalchemy.sql.elements.ClauseElementT
(sqlalchemy.sql.functions.FunctionElement"(sqlalchemy.sql.functions.FunctionElement>
sqlalchemy.sql.ddl.DDLElement"sqlalchemy.sql.ddl.DDLElementP
&sqlalchemy.sql.schema.DefaultGenerator"&sqlalchemy.sql.schema.DefaultGeneratorD
 sqlalchemy.sql.compiler.Compiled" sqlalchemy.sql.compiler.Compiled*j
multiparamsY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping*
params
Any0:abstractmethod:overload@XÓ
scalar/sqlalchemy.engine.interfaces.Connectable.scalar"
Any*^
selfT
(sqlalchemy.engine.interfaces.Connectable"(sqlalchemy.engine.interfaces.Connectable*)
object_
builtins.str"builtins.str*È
multiparams◊
?Union[Any,builtins.tuple[Any],typing.Mapping[builtins.str,Any]]
Any.
builtins.tuple[Any]
Any"builtins.tupleY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping*
params
Any0:abstractmethod:overload@X"36"37"38"39"310j36j37j38j39j310rÖ
dispatch1sqlalchemy.engine.interfaces.Connectable.dispatch1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310ß\

Connection!sqlalchemy.engine.base.Connection"(sqlalchemy.engine.interfaces.Connectable*Ω
__init__*sqlalchemy.engine.base.Connection.__init__"
None*P
selfF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connection*J
engine>
sqlalchemy.engine.base.Engine"sqlalchemy.engine.base.Engine*è

connection}
+Union[_typeshed.dbapi.DBAPIConnection,None]B
_typeshed.dbapi.DBAPIConnection"_typeshed.dbapi.DBAPIConnection
None *7
close_with_result
builtins.bool"builtins.bool *o
_branch_from[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *u
_execution_options[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	_dispatch[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *n
_has_events[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *7
_allow_revalidate
builtins.bool"builtins.bool z36z37z38z39z310*á
schema_for_object3sqlalchemy.engine.base.Connection.schema_for_object"D
Union[builtins.str,None]
builtins.str"builtins.str
None*P
selfF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connection*
obj
Anyz36z37z38z39z310*ß
	__enter__+sqlalchemy.engine.base.Connection.__enter__"*
&sqlalchemy.engine.base.Connection.Self*,*
&sqlalchemy.engine.base.Connection.Selfz36z37z38z39z310*Ú
__exit__*sqlalchemy.engine.base.Connection.__exit__"
None*HF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connection*çä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*db
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*[Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Nonez36z37z38z39z310*p
execution_options3sqlalchemy.engine.base.Connection.execution_options*
self*
optz36z37z38z39z310*o
get_execution_options7sqlalchemy.engine.base.Connection.get_execution_options*
selfz36z37z38z39z310*«
closed(sqlalchemy.engine.base.Connection.closed"
builtins.bool"builtins.bool*P
selfF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connection0:property`z36z37z38z39z310*—
invalidated-sqlalchemy.engine.base.Connection.invalidated"
builtins.bool"builtins.bool*P
selfF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connection0:property`z36z37z38z39z310*Û

connection,sqlalchemy.engine.base.Connection.connection"B
_typeshed.dbapi.DBAPIConnection"_typeshed.dbapi.DBAPIConnection*P
selfF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connection0:property`z36z37z38z39z310*k
get_isolation_level5sqlalchemy.engine.base.Connection.get_isolation_level*
selfz36z37z38z39z310*Å
default_isolation_level9sqlalchemy.engine.base.Connection.default_isolation_level*
self0:property`z36z37z38z39z310*[
info&sqlalchemy.engine.base.Connection.info*
self0:property`z36z37z38z39z310*›
connect)sqlalchemy.engine.base.Connection.connect"
Any*P
selfF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connection*7
close_with_result
builtins.bool"builtins.bool z36z37z38z39z310*î

invalidate,sqlalchemy.engine.base.Connection.invalidate"
None*P
selfF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connection*g
	exceptionV
Union[builtins.Exception,None](
builtins.Exception"builtins.Exception
None z36z37z38z39z310*£
detach(sqlalchemy.engine.base.Connection.detach"
None*P
selfF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connectionz36z37z38z39z310*·
begin'sqlalchemy.engine.base.Connection.begin"H
"sqlalchemy.engine.base.Transaction""sqlalchemy.engine.base.Transaction*P
selfF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connectionz36z37z38z39z310*Æ
begin_nested.sqlalchemy.engine.base.Connection.begin_nested"Ü
.Union[sqlalchemy.engine.base.Transaction,None]H
"sqlalchemy.engine.base.Transaction""sqlalchemy.engine.base.Transaction
None*P
selfF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connectionz36z37z38z39z310*Î
begin_twophase0sqlalchemy.engine.base.Connection.begin_twophase"X
*sqlalchemy.engine.base.TwoPhaseTransaction"*sqlalchemy.engine.base.TwoPhaseTransaction*P
selfF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connection*f
xid[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z36z37z38z39z310*e
recover_twophase2sqlalchemy.engine.base.Connection.recover_twophase*
selfz36z37z38z39z310*˙
rollback_prepared3sqlalchemy.engine.base.Connection.rollback_prepared"
None*P
selfF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connection*
xid
Any*-
recover
builtins.bool"builtins.bool z36z37z38z39z310*ˆ
commit_prepared1sqlalchemy.engine.base.Connection.commit_prepared"
None*P
selfF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connection*
xid
Any*-
recover
builtins.bool"builtins.bool z36z37z38z39z310*…
in_transaction0sqlalchemy.engine.base.Connection.in_transaction"
builtins.bool"builtins.bool*P
selfF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connectionz36z37z38z39z310*◊
in_nested_transaction7sqlalchemy.engine.base.Connection.in_nested_transaction"
builtins.bool"builtins.bool*P
selfF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connectionz36z37z38z39z310*¥
get_transaction1sqlalchemy.engine.base.Connection.get_transaction"Ü
.Union[sqlalchemy.engine.base.Transaction,None]H
"sqlalchemy.engine.base.Transaction""sqlalchemy.engine.base.Transaction
None*P
selfF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connectionz36z37z38z39z310*¬
get_nested_transaction8sqlalchemy.engine.base.Connection.get_nested_transaction"Ü
.Union[sqlalchemy.engine.base.Transaction,None]H
"sqlalchemy.engine.base.Transaction""sqlalchemy.engine.base.Transaction
None*P
selfF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connectionz36z37z38z39z310*°
close'sqlalchemy.engine.base.Connection.close"
None*P
selfF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connectionz36z37z38z39z310*}
scalars)sqlalchemy.engine.base.Connection.scalars*
self*
object_*
multiparams*

paramsz36z37z38z39z310*∆
exec_driver_sql1sqlalchemy.engine.base.Connection.exec_driver_sql"
Any*P
selfF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connection*+
	statement
builtins.str"builtins.str*m

parameters[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *t
execution_options[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z36z37z38z39z310*∏
transaction-sqlalchemy.engine.base.Connection.transaction"
sqlalchemy.engine.base._T*P
selfF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connection*Z
	callable_K
CallableType[builtins.function]&
builtins.function"builtins.function*

args *
kwargs z36z37z38z39z310*∫
run_callable.sqlalchemy.engine.base.Connection.run_callable"
sqlalchemy.engine.base._T*P
selfF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connection*Z
	callable_K
CallableType[builtins.function]&
builtins.function"builtins.function*

args *
kwargs z36z37z38z39z3102Ò
scalar(sqlalchemy.engine.base.Connection.scalar›
scalar(sqlalchemy.engine.base.Connection.scalar"
Any*P
selfF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connection*æ
object_∞
∆TypeAlias[Union[sqlalchemy.sql.elements.ClauseElement,sqlalchemy.sql.functions.FunctionElement,sqlalchemy.sql.ddl.DDLElement,sqlalchemy.sql.schema.DefaultGenerator,sqlalchemy.sql.compiler.Compiled]]æ
ªUnion[sqlalchemy.sql.elements.ClauseElement,sqlalchemy.sql.functions.FunctionElement,sqlalchemy.sql.ddl.DDLElement,sqlalchemy.sql.schema.DefaultGenerator,sqlalchemy.sql.compiler.Compiled]N
%sqlalchemy.sql.elements.ClauseElement"%sqlalchemy.sql.elements.ClauseElementT
(sqlalchemy.sql.functions.FunctionElement"(sqlalchemy.sql.functions.FunctionElement>
sqlalchemy.sql.ddl.DDLElement"sqlalchemy.sql.ddl.DDLElementP
&sqlalchemy.sql.schema.DefaultGenerator"&sqlalchemy.sql.schema.DefaultGeneratorD
 sqlalchemy.sql.compiler.Compiled" sqlalchemy.sql.compiler.Compiled""sqlalchemy.engine.base._Executable*j
multiparamsY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping*
params
Any0:overloadX«
scalar(sqlalchemy.engine.base.Connection.scalar"
Any*P
selfF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connection*)
object_
builtins.str"builtins.str*È
multiparams◊
?Union[Any,builtins.tuple[Any],typing.Mapping[builtins.str,Any]]
Any.
builtins.tuple[Any]
Any"builtins.tupleY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping*
params
Any0:overloadX"36"37"38"39"3102â
execute)sqlalchemy.engine.base.Connection.execute®	
execute)sqlalchemy.engine.base.Connection.execute"N
%sqlalchemy.engine.cursor.CursorResult"%sqlalchemy.engine.cursor.CursorResult*P
selfF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connection*¿
	statement∞
∆TypeAlias[Union[sqlalchemy.sql.elements.ClauseElement,sqlalchemy.sql.functions.FunctionElement,sqlalchemy.sql.ddl.DDLElement,sqlalchemy.sql.schema.DefaultGenerator,sqlalchemy.sql.compiler.Compiled]]æ
ªUnion[sqlalchemy.sql.elements.ClauseElement,sqlalchemy.sql.functions.FunctionElement,sqlalchemy.sql.ddl.DDLElement,sqlalchemy.sql.schema.DefaultGenerator,sqlalchemy.sql.compiler.Compiled]N
%sqlalchemy.sql.elements.ClauseElement"%sqlalchemy.sql.elements.ClauseElementT
(sqlalchemy.sql.functions.FunctionElement"(sqlalchemy.sql.functions.FunctionElement>
sqlalchemy.sql.ddl.DDLElement"sqlalchemy.sql.ddl.DDLElementP
&sqlalchemy.sql.schema.DefaultGenerator"&sqlalchemy.sql.schema.DefaultGeneratorD
 sqlalchemy.sql.compiler.Compiled" sqlalchemy.sql.compiler.Compiled""sqlalchemy.engine.base._Executable*j
multiparamsY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping*
params
Any0:overloadXí
execute)sqlalchemy.engine.base.Connection.execute"N
%sqlalchemy.engine.cursor.CursorResult"%sqlalchemy.engine.cursor.CursorResult*P
selfF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connection*+
	statement
builtins.str"builtins.str*È
multiparams◊
?Union[Any,builtins.tuple[Any],typing.Mapping[builtins.str,Any]]
Any.
builtins.tuple[Any]
Any"builtins.tupleY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping*
params
Any0:overloadX"36"37"38"39"310j36j37j38j39j310rá
engine(sqlalchemy.engine.base.Connection.engine>
sqlalchemy.engine.base.Engine"sqlalchemy.engine.base.Engine*36*37*38*39*310ró
dialect)sqlalchemy.engine.base.Connection.dialectL
$sqlalchemy.engine.interfaces.Dialect"$sqlalchemy.engine.interfaces.Dialect*36*37*38*39*310rã
should_close_with_result:sqlalchemy.engine.base.Connection.should_close_with_result
builtins.bool"builtins.bool*36*37*38*39*310rT
dispatch*sqlalchemy.engine.base.Connection.dispatch
Any*36*37*38*39*310µ
ExceptionContextImpl+sqlalchemy.engine.base.ExceptionContextImpl"-sqlalchemy.engine.interfaces.ExceptionContext*“
__init__4sqlalchemy.engine.base.ExceptionContextImpl.__init__"
None*d
selfZ
+sqlalchemy.engine.base.ExceptionContextImpl"+sqlalchemy.engine.base.ExceptionContextImpl*
	exception
Any*!
sqlalchemy_exception
Any*
engine
Any*

connection
Any*
cursor
Any*
	statement
Any*

parameters
Any*
context
Any*
is_disconnect
Any**
invalidate_pool_on_disconnect
Anyz36z37z38z39z310j36j37j38j39j310rZ
engine2sqlalchemy.engine.base.ExceptionContextImpl.engine
Any*36*37*38*39*310rb

connection6sqlalchemy.engine.base.ExceptionContextImpl.connection
Any*36*37*38*39*310rv
sqlalchemy_exception@sqlalchemy.engine.base.ExceptionContextImpl.sqlalchemy_exception
Any*36*37*38*39*310rr
original_exception>sqlalchemy.engine.base.ExceptionContextImpl.original_exception
Any*36*37*38*39*310rp
execution_context=sqlalchemy.engine.base.ExceptionContextImpl.execution_context
Any*36*37*38*39*310r`
	statement5sqlalchemy.engine.base.ExceptionContextImpl.statement
Any*36*37*38*39*310rb

parameters6sqlalchemy.engine.base.ExceptionContextImpl.parameters
Any*36*37*38*39*310rh
is_disconnect9sqlalchemy.engine.base.ExceptionContextImpl.is_disconnect
Any*36*37*38*39*310rà
invalidate_pool_on_disconnectIsqlalchemy.engine.base.ExceptionContextImpl.invalidate_pool_on_disconnect
Any*36*37*38*39*310∫
Transaction"sqlalchemy.engine.base.Transaction"+sqlalchemy.engine.util.TransactionalContext*Ç
__init__+sqlalchemy.engine.base.Transaction.__init__"
None*R
selfH
"sqlalchemy.engine.base.Transaction""sqlalchemy.engine.base.Transaction*V

connectionF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connectionz36z37z38z39z310*Œ
is_valid+sqlalchemy.engine.base.Transaction.is_valid"
builtins.bool"builtins.bool*R
selfH
"sqlalchemy.engine.base.Transaction""sqlalchemy.engine.base.Transaction0:property`z36z37z38z39z310*§
close(sqlalchemy.engine.base.Transaction.close"
None*R
selfH
"sqlalchemy.engine.base.Transaction""sqlalchemy.engine.base.Transactionz36z37z38z39z310*™
rollback+sqlalchemy.engine.base.Transaction.rollback"
None*R
selfH
"sqlalchemy.engine.base.Transaction""sqlalchemy.engine.base.Transactionz36z37z38z39z310*¶
commit)sqlalchemy.engine.base.Transaction.commit"
None*R
selfH
"sqlalchemy.engine.base.Transaction""sqlalchemy.engine.base.Transactionz36z37z38z39z310*å

connection-sqlalchemy.engine.base.Transaction.connection"F
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connection*R
selfH
"sqlalchemy.engine.base.Transaction""sqlalchemy.engine.base.Transaction0:property:abstractmethod@`z36z37z38z39z310*‚
	is_active,sqlalchemy.engine.base.Transaction.is_active"
builtins.bool"builtins.bool*R
selfH
"sqlalchemy.engine.base.Transaction""sqlalchemy.engine.base.Transaction0:property:abstractmethod@`z36z37z38z39z310j36j37j38j39j310¸
MarkerTransaction(sqlalchemy.engine.base.MarkerTransaction""sqlalchemy.engine.base.Transaction*‚
	is_active2sqlalchemy.engine.base.MarkerTransaction.is_active"
builtins.bool"builtins.bool*^
selfT
(sqlalchemy.engine.base.MarkerTransaction"(sqlalchemy.engine.base.MarkerTransaction0:property`z36z37z38z39z310j36j37j38j39j310rû

connection3sqlalchemy.engine.base.MarkerTransaction.connectionF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connection*36*37*38*39*310Ö
RootTransaction&sqlalchemy.engine.base.RootTransaction""sqlalchemy.engine.base.Transactionj36j37j38j39j310rú

connection1sqlalchemy.engine.base.RootTransaction.connectionF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connection*36*37*38*39*310rr
	is_active0sqlalchemy.engine.base.RootTransaction.is_active
builtins.bool"builtins.bool*36*37*38*39*310ç
NestedTransaction(sqlalchemy.engine.base.NestedTransaction""sqlalchemy.engine.base.Transactionj36j37j38j39j310rû

connection3sqlalchemy.engine.base.NestedTransaction.connectionF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connection*36*37*38*39*310rt
	is_active2sqlalchemy.engine.base.NestedTransaction.is_active
builtins.bool"builtins.bool*36*37*38*39*310≈
TwoPhaseTransaction*sqlalchemy.engine.base.TwoPhaseTransaction"&sqlalchemy.engine.base.RootTransaction*¨
__init__3sqlalchemy.engine.base.TwoPhaseTransaction.__init__"
None*b
selfX
*sqlalchemy.engine.base.TwoPhaseTransaction"*sqlalchemy.engine.base.TwoPhaseTransaction*V

connectionF
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connection*
xid
Anyz36z37z38z39z310*¿
prepare2sqlalchemy.engine.base.TwoPhaseTransaction.prepare"
None*b
selfX
*sqlalchemy.engine.base.TwoPhaseTransaction"*sqlalchemy.engine.base.TwoPhaseTransactionz36z37z38z39z310j36j37j38j39j310rS
xid.sqlalchemy.engine.base.TwoPhaseTransaction.xid
Any*36*37*38*39*310Ù\
Enginesqlalchemy.engine.base.Engine"(sqlalchemy.engine.interfaces.Connectable"sqlalchemy.log.Identified*—
__init__&sqlalchemy.engine.base.Engine.__init__"
None*H
self>
sqlalchemy.engine.base.Engine"sqlalchemy.engine.base.Engine*@
pool6
sqlalchemy.pool.base.Pool"sqlalchemy.pool.base.Pool*Y
dialectL
$sqlalchemy.engine.interfaces.Dialect"$sqlalchemy.engine.interfaces.Dialect*ú
urlí
¶Union[builtins.str,TypeAlias[Tuple[builtins.str,Union[builtins.str,None],Union[builtins.str,builtins.object,None],Union[builtins.str,None],Union[builtins.int,None],Union[builtins.str,None],sqlalchemy.cimmutabledict.immutabledict[builtins.str,Union[builtins.str,builtins.tuple[builtins.str]]]]]]
builtins.str"builtins.str∆

íTypeAlias[Tuple[builtins.str,Union[builtins.str,None],Union[builtins.str,builtins.object,None],Union[builtins.str,None],Union[builtins.int,None],Union[builtins.str,None],sqlalchemy.cimmutabledict.immutabledict[builtins.str,Union[builtins.str,builtins.tuple[builtins.str]]]]]ë
áTuple[builtins.str,Union[builtins.str,None],Union[builtins.str,builtins.object,None],Union[builtins.str,None],Union[builtins.int,None],Union[builtins.str,None],sqlalchemy.cimmutabledict.immutabledict[builtins.str,Union[builtins.str,builtins.tuple[builtins.str]]]]
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
Nonex
(Union[builtins.str,builtins.object,None]
builtins.str"builtins.str"
builtins.object"builtins.object
NoneD
Union[builtins.str,None]
builtins.str"builtins.str
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.str,None]
builtins.str"builtins.str
None“
fsqlalchemy.cimmutabledict.immutabledict[builtins.str,Union[builtins.str,builtins.tuple[builtins.str]]]
builtins.str"builtins.str†
0Union[builtins.str,builtins.tuple[builtins.str]]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple"'sqlalchemy.cimmutabledict.immutabledict"sqlalchemy.engine.url.URL*X
logging_nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *˛
echoÒ
:TypeAlias[Union[builtins.bool,Literal[builtins.str],None]]ñ
/Union[builtins.bool,Literal[builtins.str],None]
builtins.bool"builtins.bool7
Literal[builtins.str]	
builtins.str"builtins.str
None"sqlalchemy.log._EchoFlag *4
query_cache_size
builtins.int"builtins.int *Ø
execution_optionsï
,Union[typing.Mapping[builtins.str,Any],None]Y
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping
None *5
hide_parameters
builtins.bool"builtins.bool z36z37z38z39z310*€
engine$sqlalchemy.engine.base.Engine.engine">
sqlalchemy.engine.base.Engine"sqlalchemy.engine.base.Engine*H
self>
sqlalchemy.engine.base.Engine"sqlalchemy.engine.base.Engine0:property`z36z37z38z39z310*≥
clear_compiled_cache2sqlalchemy.engine.base.Engine.clear_compiled_cache"
None*H
self>
sqlalchemy.engine.base.Engine"sqlalchemy.engine.base.Enginez36z37z38z39z310*Õ
update_execution_options6sqlalchemy.engine.base.Engine.update_execution_options"
None*H
self>
sqlalchemy.engine.base.Engine"sqlalchemy.engine.base.Engine*
opt
Anyz36z37z38z39z310*l
execution_options/sqlalchemy.engine.base.Engine.execution_options*
self*
optz36z37z38z39z310*k
get_execution_options3sqlalchemy.engine.base.Engine.get_execution_options*
selfz36z37z38z39z310*µ
name"sqlalchemy.engine.base.Engine.name"
builtins.str"builtins.str*H
self>
sqlalchemy.engine.base.Engine"sqlalchemy.engine.base.Engine0:property`z36z37z38z39z310*[
driver$sqlalchemy.engine.base.Engine.driver*
self0:property`z36z37z38z39z310*∆
dispose%sqlalchemy.engine.base.Engine.dispose"
None*H
self>
sqlalchemy.engine.base.Engine"sqlalchemy.engine.base.Engine*+
close
builtins.bool"builtins.bool z36z37z38z39z310*ö
begin#sqlalchemy.engine.base.Engine.begin"T
(sqlalchemy.engine.base.Engine._trans_ctx"(sqlalchemy.engine.base.Engine._trans_ctx*H
self>
sqlalchemy.engine.base.Engine"sqlalchemy.engine.base.Engine*7
close_with_result
builtins.bool"builtins.bool z36z37z38z39z310*·
transaction)sqlalchemy.engine.base.Engine.transaction"R
%Union[sqlalchemy.engine.base._T,None]
sqlalchemy.engine.base._T
None*H
self>
sqlalchemy.engine.base.Engine"sqlalchemy.engine.base.Engine*Z
	callable_K
CallableType[builtins.function]&
builtins.function"builtins.function*

args *
kwargs z36z37z38z39z310*Æ
run_callable*sqlalchemy.engine.base.Engine.run_callable"
sqlalchemy.engine.base._T*H
self>
sqlalchemy.engine.base.Engine"sqlalchemy.engine.base.Engine*Z
	callable_K
CallableType[builtins.function]&
builtins.function"builtins.function*

args *
kwargs z36z37z38z39z310*ê
connect%sqlalchemy.engine.base.Engine.connect"F
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connection*H
self>
sqlalchemy.engine.base.Engine"sqlalchemy.engine.base.Engine*7
close_with_result
builtins.bool"builtins.bool z36z37z38z39z310*§
table_names)sqlalchemy.engine.base.Engine.table_names"
Any*H
self>
sqlalchemy.engine.base.Engine"sqlalchemy.engine.base.Engine*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *ñ

connectionÉ
-Union[sqlalchemy.engine.base.Connection,None]F
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connection
None z36z37z38z39z310*Ã
	has_table'sqlalchemy.engine.base.Engine.has_table"
builtins.bool"builtins.bool*H
self>
sqlalchemy.engine.base.Engine"sqlalchemy.engine.base.Engine*,

table_name
builtins.str"builtins.str*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z36z37z38z39z310*˚
raw_connection,sqlalchemy.engine.base.Engine.raw_connection"B
_typeshed.dbapi.DBAPIConnection"_typeshed.dbapi.DBAPIConnection*H
self>
sqlalchemy.engine.base.Engine"sqlalchemy.engine.base.Engine*ó
_connectionÉ
-Union[sqlalchemy.engine.base.Connection,None]F
!sqlalchemy.engine.base.Connection"!sqlalchemy.engine.base.Connection
None z36z37z38z39z3102Ì
execute%sqlalchemy.engine.base.Engine.executeú	
execute%sqlalchemy.engine.base.Engine.execute"N
%sqlalchemy.engine.cursor.CursorResult"%sqlalchemy.engine.cursor.CursorResult*H
self>
sqlalchemy.engine.base.Engine"sqlalchemy.engine.base.Engine*¿
	statement∞
∆TypeAlias[Union[sqlalchemy.sql.elements.ClauseElement,sqlalchemy.sql.functions.FunctionElement,sqlalchemy.sql.ddl.DDLElement,sqlalchemy.sql.schema.DefaultGenerator,sqlalchemy.sql.compiler.Compiled]]æ
ªUnion[sqlalchemy.sql.elements.ClauseElement,sqlalchemy.sql.functions.FunctionElement,sqlalchemy.sql.ddl.DDLElement,sqlalchemy.sql.schema.DefaultGenerator,sqlalchemy.sql.compiler.Compiled]N
%sqlalchemy.sql.elements.ClauseElement"%sqlalchemy.sql.elements.ClauseElementT
(sqlalchemy.sql.functions.FunctionElement"(sqlalchemy.sql.functions.FunctionElement>
sqlalchemy.sql.ddl.DDLElement"sqlalchemy.sql.ddl.DDLElementP
&sqlalchemy.sql.schema.DefaultGenerator"&sqlalchemy.sql.schema.DefaultGeneratorD
 sqlalchemy.sql.compiler.Compiled" sqlalchemy.sql.compiler.Compiled""sqlalchemy.engine.base._Executable*j
multiparamsY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping*
params
Any0:overloadXÜ
execute%sqlalchemy.engine.base.Engine.execute"N
%sqlalchemy.engine.cursor.CursorResult"%sqlalchemy.engine.cursor.CursorResult*H
self>
sqlalchemy.engine.base.Engine"sqlalchemy.engine.base.Engine*+
	statement
builtins.str"builtins.str*È
multiparams◊
?Union[Any,builtins.tuple[Any],typing.Mapping[builtins.str,Any]]
Any.
builtins.tuple[Any]
Any"builtins.tupleY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping*
params
Any0:overloadX"36"37"38"39"3102Ÿ
scalar$sqlalchemy.engine.base.Engine.scalar”
scalar$sqlalchemy.engine.base.Engine.scalar"
Any*H
self>
sqlalchemy.engine.base.Engine"sqlalchemy.engine.base.Engine*¿
	statement∞
∆TypeAlias[Union[sqlalchemy.sql.elements.ClauseElement,sqlalchemy.sql.functions.FunctionElement,sqlalchemy.sql.ddl.DDLElement,sqlalchemy.sql.schema.DefaultGenerator,sqlalchemy.sql.compiler.Compiled]]æ
ªUnion[sqlalchemy.sql.elements.ClauseElement,sqlalchemy.sql.functions.FunctionElement,sqlalchemy.sql.ddl.DDLElement,sqlalchemy.sql.schema.DefaultGenerator,sqlalchemy.sql.compiler.Compiled]N
%sqlalchemy.sql.elements.ClauseElement"%sqlalchemy.sql.elements.ClauseElementT
(sqlalchemy.sql.functions.FunctionElement"(sqlalchemy.sql.functions.FunctionElement>
sqlalchemy.sql.ddl.DDLElement"sqlalchemy.sql.ddl.DDLElementP
&sqlalchemy.sql.schema.DefaultGenerator"&sqlalchemy.sql.schema.DefaultGeneratorD
 sqlalchemy.sql.compiler.Compiled" sqlalchemy.sql.compiler.Compiled""sqlalchemy.engine.base._Executable*j
multiparamsY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping*
params
Any0:overloadXΩ
scalar$sqlalchemy.engine.base.Engine.scalar"
Any*H
self>
sqlalchemy.engine.base.Engine"sqlalchemy.engine.base.Engine*+
	statement
builtins.str"builtins.str*È
multiparams◊
?Union[Any,builtins.tuple[Any],typing.Mapping[builtins.str,Any]]
Any.
builtins.tuple[Any]
Any"builtins.tupleY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping*
params
Any0:overloadX"36"37"38"39"310j36j37j38j39j310rw
pool"sqlalchemy.engine.base.Engine.pool6
sqlalchemy.pool.base.Pool"sqlalchemy.pool.base.Pool*36*37*38*39*310rÜ
url!sqlalchemy.engine.base.Engine.url∆

íTypeAlias[Tuple[builtins.str,Union[builtins.str,None],Union[builtins.str,builtins.object,None],Union[builtins.str,None],Union[builtins.int,None],Union[builtins.str,None],sqlalchemy.cimmutabledict.immutabledict[builtins.str,Union[builtins.str,builtins.tuple[builtins.str]]]]]ë
áTuple[builtins.str,Union[builtins.str,None],Union[builtins.str,builtins.object,None],Union[builtins.str,None],Union[builtins.int,None],Union[builtins.str,None],sqlalchemy.cimmutabledict.immutabledict[builtins.str,Union[builtins.str,builtins.tuple[builtins.str]]]]
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
Nonex
(Union[builtins.str,builtins.object,None]
builtins.str"builtins.str"
builtins.object"builtins.object
NoneD
Union[builtins.str,None]
builtins.str"builtins.str
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.str,None]
builtins.str"builtins.str
None“
fsqlalchemy.cimmutabledict.immutabledict[builtins.str,Union[builtins.str,builtins.tuple[builtins.str]]]
builtins.str"builtins.str†
0Union[builtins.str,builtins.tuple[builtins.str]]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple"'sqlalchemy.cimmutabledict.immutabledict"sqlalchemy.engine.url.URL*36*37*38*39*310rì
dialect%sqlalchemy.engine.base.Engine.dialectL
$sqlalchemy.engine.interfaces.Dialect"$sqlalchemy.engine.interfaces.Dialect*36*37*38*39*310rm
logging_name*sqlalchemy.engine.base.Engine.logging_name
builtins.str"builtins.str*36*37*38*39*310r}
echo"sqlalchemy.engine.base.Engine.echo<
sqlalchemy.log.echo_property"sqlalchemy.log.echo_property*36*37*38*39*310ru
hide_parameters-sqlalchemy.engine.base.Engine.hide_parameters
builtins.bool"builtins.bool*36*37*38*39*310ÿ
OptionEngineMixin(sqlalchemy.engine.base.OptionEngineMixin"builtins.object*Ú
__init__1sqlalchemy.engine.base.OptionEngineMixin.__init__"
None*^
selfT
(sqlalchemy.engine.base.OptionEngineMixin"(sqlalchemy.engine.base.OptionEngineMixin*
proxied
Any*
execution_options
Anyz36z37z38z39z310j36j37j38j39j310rë
url,sqlalchemy.engine.base.OptionEngineMixin.url∆

íTypeAlias[Tuple[builtins.str,Union[builtins.str,None],Union[builtins.str,builtins.object,None],Union[builtins.str,None],Union[builtins.int,None],Union[builtins.str,None],sqlalchemy.cimmutabledict.immutabledict[builtins.str,Union[builtins.str,builtins.tuple[builtins.str]]]]]ë
áTuple[builtins.str,Union[builtins.str,None],Union[builtins.str,builtins.object,None],Union[builtins.str,None],Union[builtins.int,None],Union[builtins.str,None],sqlalchemy.cimmutabledict.immutabledict[builtins.str,Union[builtins.str,builtins.tuple[builtins.str]]]]
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
Nonex
(Union[builtins.str,builtins.object,None]
builtins.str"builtins.str"
builtins.object"builtins.object
NoneD
Union[builtins.str,None]
builtins.str"builtins.str
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.str,None]
builtins.str"builtins.str
None“
fsqlalchemy.cimmutabledict.immutabledict[builtins.str,Union[builtins.str,builtins.tuple[builtins.str]]]
builtins.str"builtins.str†
0Union[builtins.str,builtins.tuple[builtins.str]]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple"'sqlalchemy.cimmutabledict.immutabledict"sqlalchemy.engine.url.URL*36*37*38*39*310rû
dialect0sqlalchemy.engine.base.OptionEngineMixin.dialectL
$sqlalchemy.engine.interfaces.Dialect"$sqlalchemy.engine.interfaces.Dialect*36*37*38*39*310rx
logging_name5sqlalchemy.engine.base.OptionEngineMixin.logging_name
builtins.str"builtins.str*36*37*38*39*310rj
echo-sqlalchemy.engine.base.OptionEngineMixin.echo
builtins.bool"builtins.bool*36*37*38*39*310rÄ
hide_parameters8sqlalchemy.engine.base.OptionEngineMixin.hide_parameters
builtins.bool"builtins.bool*36*37*38*39*310r[
dispatch1sqlalchemy.engine.base.OptionEngineMixin.dispatch
Any*36*37*38*39*310rÇ
pool-sqlalchemy.engine.base.OptionEngineMixin.pool6
sqlalchemy.pool.base.Pool"sqlalchemy.pool.base.Pool*36*37*38*39*310ë
OptionEngine#sqlalchemy.engine.base.OptionEngine"(sqlalchemy.engine.base.OptionEngineMixin"sqlalchemy.engine.base.Enginej36j37j38j39j310*ß
__annotations__&sqlalchemy.engine.base.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310