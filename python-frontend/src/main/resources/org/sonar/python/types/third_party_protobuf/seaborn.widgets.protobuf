
seaborn.widgets"ﬂ
choose_colorbrewer_palette*seaborn.widgets.choose_colorbrewer_paletteç
choose_colorbrewer_palette*seaborn.widgets.choose_colorbrewer_palette"
Any*
	data_type
Any*
as_cmap
Any0:overloadX¸
choose_colorbrewer_palette*seaborn.widgets.choose_colorbrewer_palette"Û
Bbuiltins.list[Tuple[builtins.float,builtins.float,builtins.float]]ù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"builtins.list*
	data_type
Any*
as_cmap
Any 0:overloadX"36"37"Ω	
choose_colorbrewer_palette*seaborn.widgets.choose_colorbrewer_palette≤
choose_colorbrewer_palette*seaborn.widgets.choose_colorbrewer_palette"
Any*á
	data_type˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*G
as_cmap:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadX°
choose_colorbrewer_palette*seaborn.widgets.choose_colorbrewer_palette"Û
Bbuiltins.list[Tuple[builtins.float,builtins.float,builtins.float]]ù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"builtins.list*á
	data_type˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*I
as_cmap:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadX"38"39"310"311"312"313"€
choose_dark_palette#seaborn.widgets.choose_dark_paletteí
choose_dark_palette#seaborn.widgets.choose_dark_palette"
Any*)
input
builtins.str"builtins.str *
as_cmap
Any0:overloadXÅ
choose_dark_palette#seaborn.widgets.choose_dark_palette"Û
Bbuiltins.list[Tuple[builtins.float,builtins.float,builtins.float]]ù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"builtins.list*)
input
builtins.str"builtins.str *
as_cmap
Any 0:overloadX"36"37"’
choose_dark_palette#seaborn.widgets.choose_dark_palette≈
choose_dark_palette#seaborn.widgets.choose_dark_palette"
Any*)
input
builtins.str"builtins.str *G
as_cmap:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadX¥
choose_dark_palette#seaborn.widgets.choose_dark_palette"Û
Bbuiltins.list[Tuple[builtins.float,builtins.float,builtins.float]]ù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"builtins.list*)
input
builtins.str"builtins.str *I
as_cmap:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadX"38"39"310"311"312"313"·
choose_light_palette$seaborn.widgets.choose_light_paletteî
choose_light_palette$seaborn.widgets.choose_light_palette"
Any*)
input
builtins.str"builtins.str *
as_cmap
Any0:overloadXÉ
choose_light_palette$seaborn.widgets.choose_light_palette"Û
Bbuiltins.list[Tuple[builtins.float,builtins.float,builtins.float]]ù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"builtins.list*)
input
builtins.str"builtins.str *
as_cmap
Any 0:overloadX"36"37"€
choose_light_palette$seaborn.widgets.choose_light_palette«
choose_light_palette$seaborn.widgets.choose_light_palette"
Any*)
input
builtins.str"builtins.str *G
as_cmap:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadX∂
choose_light_palette$seaborn.widgets.choose_light_palette"Û
Bbuiltins.list[Tuple[builtins.float,builtins.float,builtins.float]]ù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"builtins.list*)
input
builtins.str"builtins.str *I
as_cmap:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadX"38"39"310"311"312"313"¢
choose_diverging_palette(seaborn.widgets.choose_diverging_paletteq
choose_diverging_palette(seaborn.widgets.choose_diverging_palette"
Any*
as_cmap
Any0:overloadX‡
choose_diverging_palette(seaborn.widgets.choose_diverging_palette"Û
Bbuiltins.list[Tuple[builtins.float,builtins.float,builtins.float]]ù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"builtins.list*
as_cmap
Any 0:overloadX"36"37"ù
choose_diverging_palette(seaborn.widgets.choose_diverging_palette§
choose_diverging_palette(seaborn.widgets.choose_diverging_palette"
Any*G
as_cmap:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadXì
choose_diverging_palette(seaborn.widgets.choose_diverging_palette"Û
Bbuiltins.list[Tuple[builtins.float,builtins.float,builtins.float]]ù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"builtins.list*I
as_cmap:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadX"38"39"310"311"312"313"¢
choose_cubehelix_palette(seaborn.widgets.choose_cubehelix_paletteq
choose_cubehelix_palette(seaborn.widgets.choose_cubehelix_palette"
Any*
as_cmap
Any0:overloadX‡
choose_cubehelix_palette(seaborn.widgets.choose_cubehelix_palette"Û
Bbuiltins.list[Tuple[builtins.float,builtins.float,builtins.float]]ù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"builtins.list*
as_cmap
Any 0:overloadX"36"37"ù
choose_cubehelix_palette(seaborn.widgets.choose_cubehelix_palette§
choose_cubehelix_palette(seaborn.widgets.choose_cubehelix_palette"
Any*G
as_cmap:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadXì
choose_cubehelix_palette(seaborn.widgets.choose_cubehelix_palette"Û
Bbuiltins.list[Tuple[builtins.float,builtins.float,builtins.float]]ù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"builtins.list*I
as_cmap:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadX"38"39"310"311"312"313*Ø
__annotations__seaborn.widgets.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313*3
Literalseaborn.widgets.Literal
Any*36*37*o
LinearSegmentedColormap'seaborn.widgets.LinearSegmentedColormap
Any*36*37*38*39*310*311*312*313*í
__all__seaborn.widgets.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*36*37*38*39*310*311*312*313