
multiprocessing.contextH
ProcessError$multiprocessing.context.ProcessError"builtins.Exception^
BufferTooShort&multiprocessing.context.BufferTooShort"$multiprocessing.context.ProcessErrorZ
TimeoutError$multiprocessing.context.TimeoutError"$multiprocessing.context.ProcessErrorh
AuthenticationError+multiprocessing.context.AuthenticationError"$multiprocessing.context.ProcessErrorªã
BaseContext#multiprocessing.context.BaseContext"builtins.object*§
current_process3multiprocessing.context.BaseContext.current_process"J
#multiprocessing.process.BaseProcess"#multiprocessing.process.BaseProcess0:staticmethodh*‚
parent_process2multiprocessing.context.BaseContext.parent_process"â
/Union[multiprocessing.process.BaseProcess,None]J
#multiprocessing.process.BaseProcess"#multiprocessing.process.BaseProcess
None0:staticmethodh*Í
active_children3multiprocessing.context.BaseContext.active_children"è
2builtins.list[multiprocessing.process.BaseProcess]J
#multiprocessing.process.BaseProcess"#multiprocessing.process.BaseProcess"builtins.list0:staticmethodh*Æ
	cpu_count-multiprocessing.context.BaseContext.cpu_count"
builtins.int"builtins.int*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*ï
Manager+multiprocessing.context.BaseContext.Manager"
Any*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*Ω
Pipe(multiprocessing.context.BaseContext.Pipe"
Any*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*,
duplex
builtins.bool"builtins.bool *ˆ
Barrier+multiprocessing.context.BaseContext.Barrier"J
#multiprocessing.synchronize.Barrier"#multiprocessing.synchronize.Barrier*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*)
parties
builtins.int"builtins.int*ï
actionÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ß
BoundedSemaphore4multiprocessing.context.BaseContext.BoundedSemaphore"\
,multiprocessing.synchronize.BoundedSemaphore",multiprocessing.synchronize.BoundedSemaphore*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*)
value
builtins.int"builtins.int *⁄
	Condition-multiprocessing.context.BaseContext.Condition"N
%multiprocessing.synchronize.Condition"%multiprocessing.synchronize.Condition*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*˜
lockÍ
NUnion[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock,None]D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.LockF
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock
None *–
Event)multiprocessing.context.BaseContext.Event"F
!multiprocessing.synchronize.Event"!multiprocessing.synchronize.Event*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*Ã
Lock(multiprocessing.context.BaseContext.Lock"D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.Lock*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*–
RLock)multiprocessing.context.BaseContext.RLock"F
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*ã
	Semaphore-multiprocessing.context.BaseContext.Semaphore"N
%multiprocessing.synchronize.Semaphore"%multiprocessing.synchronize.Semaphore*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*)
value
builtins.int"builtins.int *Å
Queue)multiprocessing.context.BaseContext.Queue"J
!multiprocessing.queues.Queue[Any]
Any"multiprocessing.queues.Queue*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*+
maxsize
builtins.int"builtins.int *°
JoinableQueue1multiprocessing.context.BaseContext.JoinableQueue"Z
)multiprocessing.queues.JoinableQueue[Any]
Any"$multiprocessing.queues.JoinableQueue*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*+
maxsize
builtins.int"builtins.int *Ï
SimpleQueue/multiprocessing.context.BaseContext.SimpleQueue"V
'multiprocessing.queues.SimpleQueue[Any]
Any""multiprocessing.queues.SimpleQueue*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*“
Pool(multiprocessing.context.BaseContext.Pool"6
multiprocessing.pool.Pool"multiprocessing.pool.Pool*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*U
	processesD
Union[builtins.int,None]
builtins.int"builtins.int
None *ö
initializerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *@
initargs0
typing.Iterable[Any]
Any"typing.Iterable *\
maxtasksperchildD
Union[builtins.int,None]
builtins.int"builtins.int
None *§
freeze_support2multiprocessing.context.BaseContext.freeze_support"
None*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*¥

get_logger.multiprocessing.context.BaseContext.get_logger" 
logging.Logger"logging.Logger*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*ç
log_to_stderr1multiprocessing.context.BaseContext.log_to_stderr" 
logging.Logger"logging.Logger*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*Q
levelD
Union[builtins.str,None]
builtins.str"builtins.str
None *∫
allow_connection_pickling=multiprocessing.context.BaseContext.allow_connection_pickling"
None*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*“
set_executable2multiprocessing.context.BaseContext.set_executable"
None*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*,

executable
builtins.str"builtins.str*í
set_forkserver_preload:multiprocessing.context.BaseContext.set_forkserver_preload"
None*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*\
module_namesJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*Ó
get_start_method4multiprocessing.context.BaseContext.get_start_method"
builtins.str"builtins.str*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*0

allow_none
builtins.bool"builtins.bool *ß
set_start_method4multiprocessing.context.BaseContext.set_start_method"
None*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*P
methodD
Union[builtins.str,None]
builtins.str"builtins.str
None*+
force
builtins.bool"builtins.bool *®
_check_available4multiprocessing.context.BaseContext._check_available"
None*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext2ÿ
RawValue,multiprocessing.context.BaseContext.RawValueÆ
RawValue,multiprocessing.context.BaseContext.RawValue"
multiprocessing.context._CT*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*\
typecode_or_typeF
!Type[multiprocessing.context._CT]
multiprocessing.context._CT*
args
Any0:overloadXÏ
RawValue,multiprocessing.context.BaseContext.RawValue"
Any*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*2
typecode_or_type
builtins.str"builtins.str*
args
Any0:overloadX2ù
RawArray,multiprocessing.context.BaseContext.RawArrayÓ
RawArray,multiprocessing.context.BaseContext.RawArray"Z
)ctypes.Array[multiprocessing.context._CT]
multiprocessing.context._CT"ctypes.Array*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*\
typecode_or_typeF
!Type[multiprocessing.context._CT]
multiprocessing.context._CT*ï
size_or_initializer|
(Union[builtins.int,typing.Sequence[Any]]
builtins.int"builtins.int0
typing.Sequence[Any]
Any"typing.Sequence0:overloadXÒ
RawArray,multiprocessing.context.BaseContext.RawArray"
Any*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*2
typecode_or_type
builtins.str"builtins.str*ï
size_or_initializer|
(Union[builtins.int,typing.Sequence[Any]]
builtins.int"builtins.int0
typing.Sequence[Any]
Any"typing.Sequence0:overloadX2ú
Value)multiprocessing.context.BaseContext.ValueÓ
Value)multiprocessing.context.BaseContext.Value"
multiprocessing.context._CT*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*\
typecode_or_typeF
!Type[multiprocessing.context._CT]
multiprocessing.context._CT*
args
Any*D
lock:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadX¬
Value)multiprocessing.context.BaseContext.Value"ú
Jmultiprocessing.sharedctypes.SynchronizedBase[multiprocessing.context._CT]
multiprocessing.context._CT"-multiprocessing.sharedctypes.SynchronizedBase*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*\
typecode_or_typeF
!Type[multiprocessing.context._CT]
multiprocessing.context._CT*
args
Any*ô
locké
rUnion[Literal[builtins.bool],TypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]]:
Literal[builtins.bool]	
builtins.bool"builtins.boolŸ
TTypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]€
IUnion[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.LockF
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock"!multiprocessing.context._LockLike0:overloadXÁ
Value)multiprocessing.context.BaseContext.Value"l
2multiprocessing.sharedctypes.SynchronizedBase[Any]
Any"-multiprocessing.sharedctypes.SynchronizedBase*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*2
typecode_or_type
builtins.str"builtins.str*
args
Any*ô
locké
rUnion[Literal[builtins.bool],TypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]]:
Literal[builtins.bool]	
builtins.bool"builtins.boolŸ
TTypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]€
IUnion[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.LockF
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock"!multiprocessing.context._LockLike0:overloadX«
Value)multiprocessing.context.BaseContext.Value"
Any*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*ô
typecode_or_typeÇ
'Union[builtins.str,Type[ctypes._CData]]
builtins.str"builtins.str7
Type[ctypes._CData]
ctypes._CData"ctypes._CData*
args
Any*ˆ
lockÈ
iUnion[builtins.bool,TypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]]
builtins.bool"builtins.boolŸ
TTypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]€
IUnion[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.LockF
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock"!multiprocessing.context._LockLike 0:overloadX2¥
Array)multiprocessing.context.BaseContext.ArrayÛ
Array)multiprocessing.context.BaseContext.Array"
multiprocessing.context._CT*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*\
typecode_or_typeF
!Type[multiprocessing.context._CT]
multiprocessing.context._CT*ï
size_or_initializer|
(Union[builtins.int,typing.Sequence[Any]]
builtins.int"builtins.int0
typing.Sequence[Any]
Any"typing.Sequence*D
lock:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadX…
Array)multiprocessing.context.BaseContext.Array"û
Kmultiprocessing.sharedctypes.SynchronizedArray[multiprocessing.context._CT]
multiprocessing.context._CT".multiprocessing.sharedctypes.SynchronizedArray*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*\
typecode_or_typeF
!Type[multiprocessing.context._CT]
multiprocessing.context._CT*ï
size_or_initializer|
(Union[builtins.int,typing.Sequence[Any]]
builtins.int"builtins.int0
typing.Sequence[Any]
Any"typing.Sequence*ô
locké
rUnion[Literal[builtins.bool],TypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]]:
Literal[builtins.bool]	
builtins.bool"builtins.boolŸ
TTypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]€
IUnion[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.LockF
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock"!multiprocessing.context._LockLike0:overloadXÓ
Array)multiprocessing.context.BaseContext.Array"n
3multiprocessing.sharedctypes.SynchronizedArray[Any]
Any".multiprocessing.sharedctypes.SynchronizedArray*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*2
typecode_or_type
builtins.str"builtins.str*ï
size_or_initializer|
(Union[builtins.int,typing.Sequence[Any]]
builtins.int"builtins.int0
typing.Sequence[Any]
Any"typing.Sequence*ô
locké
rUnion[Literal[builtins.bool],TypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]]:
Literal[builtins.bool]	
builtins.bool"builtins.boolŸ
TTypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]€
IUnion[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.LockF
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock"!multiprocessing.context._LockLike0:overloadXÃ
Array)multiprocessing.context.BaseContext.Array"
Any*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*ô
typecode_or_typeÇ
'Union[builtins.str,Type[ctypes._CData]]
builtins.str"builtins.str7
Type[ctypes._CData]
ctypes._CData"ctypes._CData*ï
size_or_initializer|
(Union[builtins.int,typing.Sequence[Any]]
builtins.int"builtins.int0
typing.Sequence[Any]
Any"typing.Sequence*ˆ
lockÈ
iUnion[builtins.bool,TypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]]
builtins.bool"builtins.boolŸ
TTypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]€
IUnion[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.LockF
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock"!multiprocessing.context._LockLike 0:overloadX2ò
get_context/multiprocessing.context.BaseContext.get_contextå
get_context/multiprocessing.context.BaseContext.get_context"P
&multiprocessing.context.DefaultContext"&multiprocessing.context.DefaultContext*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*
method
None 0:overloadXµ
get_context/multiprocessing.context.BaseContext.get_context"L
$multiprocessing.context.SpawnContext"$multiprocessing.context.SpawnContext*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*C
method7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadX≥
get_context/multiprocessing.context.BaseContext.get_context"J
#multiprocessing.context.ForkContext"#multiprocessing.context.ForkContext*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*C
method7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadXø
get_context/multiprocessing.context.BaseContext.get_context"V
)multiprocessing.context.ForkServerContext")multiprocessing.context.ForkServerContext*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*C
method7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadXò
get_context/multiprocessing.context.BaseContext.get_context"J
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*(
method
builtins.str"builtins.str0:overloadX2À
reducer+multiprocessing.context.BaseContext.reducer∫
reducer+multiprocessing.context.BaseContext.reducer"
builtins.str"builtins.str*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext0:propertyX`’
reducer+multiprocessing.context.BaseContext.reducer"
None*T
selfJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*+
	reduction
builtins.str"builtins.str0:reducer.setterr±
Process+multiprocessing.context.BaseContext.Processy
)Type[multiprocessing.process.BaseProcess]J
#multiprocessing.process.BaseProcess"#multiprocessing.process.BaseProcessrà
ProcessError0multiprocessing.context.BaseContext.ProcessErrorF
Type[builtins.Exception](
builtins.Exception"builtins.Exceptionrå
BufferTooShort2multiprocessing.context.BaseContext.BufferTooShortF
Type[builtins.Exception](
builtins.Exception"builtins.Exceptionrà
TimeoutError0multiprocessing.context.BaseContext.TimeoutErrorF
Type[builtins.Exception](
builtins.Exception"builtins.Exceptionrñ
AuthenticationError7multiprocessing.context.BaseContext.AuthenticationErrorF
Type[builtins.Exception](
builtins.Exception"builtins.Exception 
Processmultiprocessing.context.Process"#multiprocessing.process.BaseProcess*Ò
_Popen&multiprocessing.context.Process._Popen"P
&multiprocessing.context.DefaultContext"&multiprocessing.context.DefaultContext*[
process_objJ
#multiprocessing.process.BaseProcess"#multiprocessing.process.BaseProcess0:staticmethodhrÑ
_start_method-multiprocessing.context.Process._start_methodD
Union[builtins.str,None]
builtins.str"builtins.str
None≤

DefaultContext&multiprocessing.context.DefaultContext"#multiprocessing.context.BaseContext*˙
__init__/multiprocessing.context.DefaultContext.__init__"
None*Z
selfP
&multiprocessing.context.DefaultContext"&multiprocessing.context.DefaultContext*W
contextJ
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext*∞
set_start_method7multiprocessing.context.DefaultContext.set_start_method"
None*Z
selfP
&multiprocessing.context.DefaultContext"&multiprocessing.context.DefaultContext*P
methodD
Union[builtins.str,None]
builtins.str"builtins.str
None*+
force
builtins.bool"builtins.bool *˜
get_start_method7multiprocessing.context.DefaultContext.get_start_method"
builtins.str"builtins.str*Z
selfP
&multiprocessing.context.DefaultContext"&multiprocessing.context.DefaultContext*0

allow_none
builtins.bool"builtins.bool *˝
get_all_start_methods<multiprocessing.context.DefaultContext.get_all_start_methods"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*Z
selfP
&multiprocessing.context.DefaultContext"&multiprocessing.context.DefaultContextr®
Process.multiprocessing.context.DefaultContext.Processm
%Type[multiprocessing.context.Process]B
multiprocessing.context.Process"multiprocessing.context.ProcessË
ForkProcess#multiprocessing.context.ForkProcess"#multiprocessing.process.BaseProcess*¨
_Popen*multiprocessing.context.ForkProcess._Popen"
Any*[
process_objJ
#multiprocessing.process.BaseProcess"#multiprocessing.process.BaseProcess0:staticmethodhr`
_start_method1multiprocessing.context.ForkProcess._start_method
builtins.str"builtins.str±
SpawnProcess$multiprocessing.context.SpawnProcess"#multiprocessing.process.BaseProcess*Ú
_Popen+multiprocessing.context.SpawnProcess._Popen"L
$multiprocessing.context.SpawnProcess"$multiprocessing.context.SpawnProcess*[
process_objJ
#multiprocessing.process.BaseProcess"#multiprocessing.process.BaseProcess0:staticmethodhra
_start_method2multiprocessing.context.SpawnProcess._start_method
builtins.str"builtins.strÄ
ForkServerProcess)multiprocessing.context.ForkServerProcess"#multiprocessing.process.BaseProcess*≤
_Popen0multiprocessing.context.ForkServerProcess._Popen"
Any*[
process_objJ
#multiprocessing.process.BaseProcess"#multiprocessing.process.BaseProcess0:staticmethodhrf
_start_method7multiprocessing.context.ForkServerProcess._start_method
builtins.str"builtins.str›
ForkContext#multiprocessing.context.ForkContext"#multiprocessing.context.BaseContextrP
_name)multiprocessing.context.ForkContext._name
builtins.str"builtins.strr±
Process+multiprocessing.context.ForkContext.Processy
)Type[multiprocessing.context.ForkProcess]J
#multiprocessing.context.ForkProcess"#multiprocessing.context.ForkProcess‰
SpawnContext$multiprocessing.context.SpawnContext"#multiprocessing.context.BaseContextrQ
_name*multiprocessing.context.SpawnContext._name
builtins.str"builtins.strrµ
Process,multiprocessing.context.SpawnContext.Process|
*Type[multiprocessing.context.SpawnProcess]L
$multiprocessing.context.SpawnProcess"$multiprocessing.context.SpawnProcessà
ForkServerContext)multiprocessing.context.ForkServerContext"#multiprocessing.context.BaseContextrV
_name/multiprocessing.context.ForkServerContext._name
builtins.str"builtins.strr 
Process1multiprocessing.context.ForkServerContext.Processã
/Type[multiprocessing.context.ForkServerProcess]V
)multiprocessing.context.ForkServerProcess")multiprocessing.context.ForkServerProcessv
_force_start_method+multiprocessing.context._force_start_method"
None*(
method
builtins.str"builtins.strh
get_spawning_popen*multiprocessing.context.get_spawning_popen"&
Union[Any,None]
Any
None^
set_spawning_popen*multiprocessing.context.set_spawning_popen"
None*
popen
AnyV
assert_spawning'multiprocessing.context.assert_spawning"
None*
obj
Any*é
_default_context(multiprocessing.context._default_contextP
&multiprocessing.context.DefaultContext"&multiprocessing.context.DefaultContext