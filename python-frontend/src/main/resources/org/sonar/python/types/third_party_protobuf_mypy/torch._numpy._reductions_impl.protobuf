
torch._numpy._reductions_implN
_deco_axis_expand/torch._numpy._reductions_impl._deco_axis_expand*
funcZ
_atleast_float,torch._numpy._reductions_impl._atleast_float*	
dtype*
other_dtypeë
cumsum$torch._numpy._reductions_impl.cumsum"
Any*f
a_
&torch._numpy._normalizations.ArrayLike"
builtins.object"builtins.object"builtins.object*j
axis^
%torch._numpy._normalizations.AxisLike"
builtins.object"builtins.object"builtins.object *¯
dtype¡
2Union[torch._numpy._normalizations.DTypeLike,None]_
&torch._numpy._normalizations.DTypeLike"
builtins.object"builtins.object"builtins.object
None *«
outŸ
1Union[torch._numpy._normalizations.OutArray,None]^
%torch._numpy._normalizations.OutArray"
builtins.object"builtins.object"builtins.object
None í
cumprod%torch._numpy._reductions_impl.cumprod"
Any*f
a_
&torch._numpy._normalizations.ArrayLike"
builtins.object"builtins.object"builtins.object*j
axis^
%torch._numpy._normalizations.AxisLike"
builtins.object"builtins.object"builtins.object *¯
dtype¡
2Union[torch._numpy._normalizations.DTypeLike,None]_
&torch._numpy._normalizations.DTypeLike"
builtins.object"builtins.object"builtins.object
None *«
outŸ
1Union[torch._numpy._normalizations.OutArray,None]^
%torch._numpy._normalizations.OutArray"
builtins.object"builtins.object"builtins.object
None Ø
average%torch._numpy._reductions_impl.average"
Any*f
a_
&torch._numpy._normalizations.ArrayLike"
builtins.object"builtins.object"builtins.object*
axis
Any *n
weights_
&torch._numpy._normalizations.ArrayLike"
builtins.object"builtins.object"builtins.object *
returned
Any *
keepdims
Any ê
quantile&torch._numpy._reductions_impl.quantile"
Any*f
a_
&torch._numpy._normalizations.ArrayLike"
builtins.object"builtins.object"builtins.object*f
q_
&torch._numpy._normalizations.ArrayLike"
builtins.object"builtins.object"builtins.object*j
axis^
%torch._numpy._normalizations.AxisLike"
builtins.object"builtins.object"builtins.object *«
outŸ
1Union[torch._numpy._normalizations.OutArray,None]^
%torch._numpy._normalizations.OutArray"
builtins.object"builtins.object"builtins.object
None *
overwrite_input
Any *
method
Any *n
keepdims^
%torch._numpy._normalizations.KeepDims"
builtins.object"builtins.object"builtins.object *
interpolation
Any î

percentile(torch._numpy._reductions_impl.percentile"
Any*f
a_
&torch._numpy._normalizations.ArrayLike"
builtins.object"builtins.object"builtins.object*f
q_
&torch._numpy._normalizations.ArrayLike"
builtins.object"builtins.object"builtins.object*j
axis^
%torch._numpy._normalizations.AxisLike"
builtins.object"builtins.object"builtins.object *«
outŸ
1Union[torch._numpy._normalizations.OutArray,None]^
%torch._numpy._normalizations.OutArray"
builtins.object"builtins.object"builtins.object
None *
overwrite_input
Any *
method
Any *n
keepdims^
%torch._numpy._normalizations.KeepDims"
builtins.object"builtins.object"builtins.object *
interpolation
Any ò
median$torch._numpy._reductions_impl.median"
Any*f
a_
&torch._numpy._normalizations.ArrayLike"
builtins.object"builtins.object"builtins.object*
axis
Any *«
outŸ
1Union[torch._numpy._normalizations.OutArray,None]^
%torch._numpy._normalizations.OutArray"
builtins.object"builtins.object"builtins.object
None *
overwrite_input
Any *n
keepdims^
%torch._numpy._normalizations.KeepDims"
builtins.object"builtins.object"builtins.object *™
__annotations__-torch._numpy._reductions_impl.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*1
max!torch._numpy._reductions_impl.max
Any*1
min!torch._numpy._reductions_impl.min
Any*9
product%torch._numpy._reductions_impl.product
Any*ƒ

cumproduct(torch._numpy._reductions_impl.cumproductK
CallableType[builtins.function]&
builtins.function"builtins.function