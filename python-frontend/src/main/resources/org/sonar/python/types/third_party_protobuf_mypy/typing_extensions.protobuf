
typing_extensionsž
ContextManagertyping.ContextManager"builtins.object*–
	__enter__typing.ContextManager.__enter__"
typing._T_co*V
selfN
#typing.ContextManager[typing._T_co]
typing._T_co"typing.ContextManager*Ä
__exit__typing.ContextManager.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*V
selfN
#typing.ContextManager[typing._T_co]
typing._T_co"typing.ContextManager*™

__exc_typeŠ
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*q
__exc_valueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*h
__tracebackY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None8PXã
_SpecialFormtyping_extensions._SpecialForm"builtins.object*¡
__getitem__*typing_extensions._SpecialForm.__getitem__"
Any*H
self@
typing_extensions._SpecialForm"typing_extensions._SpecialForm*
typeargs
Any”

_TypedDicttyping_extensions._TypedDict"typing.Mapping*g
copy!typing_extensions._TypedDict.copy"
typing_extensions._T*"
self
typing_extensions._T*ç

setdefault'typing_extensions._TypedDict.setdefault""
builtins.object"builtins.object*F
self<
typing_extensions._TypedDict"typing_extensions._TypedDict*
k
NoReturn
*/
default"
builtins.object"builtins.object*Ñ
pop typing_extensions._TypedDict.pop""
builtins.object"builtins.object*F
self<
typing_extensions._TypedDict"typing_extensions._TypedDict*
k
NoReturn
*'
default
typing_extensions._T *|
update#typing_extensions._TypedDict.update"
None*"
self
typing_extensions._T*
__m
typing_extensions._T*ú
items"typing_extensions._TypedDict.items"„
.typing.ItemsView[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.ItemsView*F
self<
typing_extensions._TypedDict"typing_extensions._TypedDict*Á
keys!typing_extensions._TypedDict.keys"N
typing.KeysView[builtins.str]
builtins.str"builtins.str"typing.KeysView*F
self<
typing_extensions._TypedDict"typing_extensions._TypedDict*Ò
values#typing_extensions._TypedDict.values"[
"typing.ValuesView[builtins.object]"
builtins.object"builtins.object"typing.ValuesView*F
self<
typing_extensions._TypedDict"typing_extensions._TypedDict*š
__delitem__(typing_extensions._TypedDict.__delitem__"
None*D
self<
typing_extensions._TypedDict"typing_extensions._TypedDict*
k
NoReturn
@Ä
AsyncContextManagertyping.AsyncContextManager"builtins.object*Ý

__aenter__%typing.AsyncContextManager.__aenter__"D
typing.Awaitable[typing._T_co]
typing._T_co"typing.Awaitable*b
selfX
(typing.AsyncContextManager[typing._T_co]
typing._T_co"typing.AsyncContextManager*™
	__aexit__$typing.AsyncContextManager.__aexit__"ˆ
+typing.Awaitable[Union[builtins.bool,None]]G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None"typing.Awaitable*b
selfX
(typing.AsyncContextManager[typing._T_co]
typing._T_co"typing.AsyncContextManager*™
exc_typeŠ
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*q
	exc_valueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*h
	tracebackY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None8PX¤
AsyncIterabletyping.AsyncIterable"builtins.object*å
	__aiter__typing.AsyncIterable.__aiter__"L
"typing.AsyncIterator[typing._T_co]
typing._T_co"typing.AsyncIterator*V
selfL
"typing.AsyncIterable[typing._T_co]
typing._T_co"typing.AsyncIterable0:abstractmethod@8PXõ
AsyncIteratortyping.AsyncIterator"typing.AsyncIterable*Ý
	__anext__typing.AsyncIterator.__anext__"D
typing.Awaitable[typing._T_co]
typing._T_co"typing.Awaitable*V
selfL
"typing.AsyncIterator[typing._T_co]
typing._T_co"typing.AsyncIterator0:abstractmethod@*Ñ
	__aiter__typing.AsyncIterator.__aiter__"L
"typing.AsyncIterator[typing._T_co]
typing._T_co"typing.AsyncIterator*V
selfL
"typing.AsyncIterator[typing._T_co]
typing._T_co"typing.AsyncIterator8PX¤
	Awaitabletyping.Awaitable"builtins.object*í
	__await__typing.Awaitable.__await__"`
'typing.Generator[Any,None,typing._T_co]
Any
None
typing._T_co"typing.Generator*N
selfD
typing.Awaitable[typing._T_co]
typing._T_co"typing.Awaitable0:abstractmethod@8PX¤
	Coroutinetyping.Coroutine"typing.Awaitable*ó
cr_awaittyping.Coroutine.cr_await"&
Union[Any,None]
Any
None*•
selfŠ
<typing.Coroutine[typing._T_co,typing._T_contra,typing._V_co]
typing._T_co
typing._T_contra
typing._V_co"typing.Coroutine0:property`*ë
cr_codetyping.Coroutine.cr_code" 
types.CodeType"types.CodeType*•
selfŠ
<typing.Coroutine[typing._T_co,typing._T_contra,typing._V_co]
typing._T_co
typing._T_contra
typing._V_co"typing.Coroutine0:property`*ï
cr_frametyping.Coroutine.cr_frame""
types.FrameType"types.FrameType*•
selfŠ
<typing.Coroutine[typing._T_co,typing._T_contra,typing._V_co]
typing._T_co
typing._T_contra
typing._V_co"typing.Coroutine0:property`*ï

cr_runningtyping.Coroutine.cr_running"
builtins.bool"builtins.bool*•
selfŠ
<typing.Coroutine[typing._T_co,typing._T_contra,typing._V_co]
typing._T_co
typing._T_contra
typing._V_co"typing.Coroutine0:property`*ü
sendtyping.Coroutine.send"
typing._T_co*•
selfŠ
<typing.Coroutine[typing._T_co,typing._T_contra,typing._V_co]
typing._T_co
typing._T_contra
typing._V_co"typing.Coroutine*
__value
typing._T_contra0:abstractmethod@*Õ
closetyping.Coroutine.close"
None*•
selfŠ
<typing.Coroutine[typing._T_co,typing._T_contra,typing._V_co]
typing._T_co
typing._T_contra
typing._V_co"typing.Coroutine0:abstractmethod@2„
throwtyping.Coroutine.throwÁ
throwtyping.Coroutine.throw"
typing._T_co*•
selfŠ
<typing.Coroutine[typing._T_co,typing._T_contra,typing._V_co]
typing._T_co
typing._T_contra
typing._V_co"typing.Coroutine*[
__typR
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException*“
__val‡
-Union[builtins.BaseException,builtins.object]0
builtins.BaseException"builtins.BaseException"
builtins.object"builtins.object *c
__tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None 0:overload:abstractmethod@Xž
throwtyping.Coroutine.throw"
typing._T_co*•
selfŠ
<typing.Coroutine[typing._T_co,typing._T_contra,typing._V_co]
typing._T_co
typing._T_contra
typing._V_co"typing.Coroutine*9
__typ0
builtins.BaseException"builtins.BaseException*
__val
None *c
__tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None 0:overload:abstractmethod@XPrK
__qualname__typing.Coroutine.__qualname__
builtins.str"builtins.strÒ
AsyncGeneratortyping.AsyncGenerator"typing.AsyncIterator*‡
	__anext__typing.AsyncGenerator.__anext__"D
typing.Awaitable[typing._T_co]
typing._T_co"typing.Awaitable*
selfu
4typing.AsyncGenerator[typing._T_co,typing._T_contra]
typing._T_co
typing._T_contra"typing.AsyncGenerator0:abstractmethod@* 
asendtyping.AsyncGenerator.asend"D
typing.Awaitable[typing._T_co]
typing._T_co"typing.Awaitable*
selfu
4typing.AsyncGenerator[typing._T_co,typing._T_contra]
typing._T_co
typing._T_contra"typing.AsyncGenerator*
__value
typing._T_contra0:abstractmethod@*ñ
aclosetyping.AsyncGenerator.aclose"4
typing.Awaitable[None]
None"typing.Awaitable*
selfu
4typing.AsyncGenerator[typing._T_co,typing._T_contra]
typing._T_co
typing._T_contra"typing.AsyncGenerator0:abstractmethod@*¸
	__aiter__typing.AsyncGenerator.__aiter__"u
4typing.AsyncGenerator[typing._T_co,typing._T_contra]
typing._T_co
typing._T_contra"typing.AsyncGenerator*
selfu
4typing.AsyncGenerator[typing._T_co,typing._T_contra]
typing._T_co
typing._T_contra"typing.AsyncGenerator0:abstractmethod@*Â
ag_awaittyping.AsyncGenerator.ag_await"
Any*
selfu
4typing.AsyncGenerator[typing._T_co,typing._T_contra]
typing._T_co
typing._T_contra"typing.AsyncGenerator0:property`*Ù
ag_codetyping.AsyncGenerator.ag_code" 
types.CodeType"types.CodeType*
selfu
4typing.AsyncGenerator[typing._T_co,typing._T_contra]
typing._T_co
typing._T_contra"typing.AsyncGenerator0:property`*Ý
ag_frametyping.AsyncGenerator.ag_frame""
types.FrameType"types.FrameType*
selfu
4typing.AsyncGenerator[typing._T_co,typing._T_contra]
typing._T_co
typing._T_contra"typing.AsyncGenerator0:property`*Ý

ag_running typing.AsyncGenerator.ag_running"
builtins.bool"builtins.bool*
selfu
4typing.AsyncGenerator[typing._T_co,typing._T_contra]
typing._T_co
typing._T_contra"typing.AsyncGenerator0:property`2Ó
athrowtyping.AsyncGenerator.athrowå
athrowtyping.AsyncGenerator.athrow"D
typing.Awaitable[typing._T_co]
typing._T_co"typing.Awaitable*
selfu
4typing.AsyncGenerator[typing._T_co,typing._T_contra]
typing._T_co
typing._T_contra"typing.AsyncGenerator*[
__typR
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException*“
__val‡
-Union[builtins.BaseException,builtins.object]0
builtins.BaseException"builtins.BaseException"
builtins.object"builtins.object *c
__tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None 0:overload:abstractmethod@XÂ
athrowtyping.AsyncGenerator.athrow"D
typing.Awaitable[typing._T_co]
typing._T_co"typing.Awaitable*
selfu
4typing.AsyncGenerator[typing._T_co,typing._T_contra]
typing._T_co
typing._T_contra"typing.AsyncGenerator*9
__typ0
builtins.BaseException"builtins.BaseException*
__val
None *c
__tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None 0:overload:abstractmethod@XP„
SupportsIndextyping_extensions.SupportsIndex"builtins.object*º
	__index__)typing_extensions.SupportsIndex.__index__"
builtins.int"builtins.int*L
selfB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex0:abc.abstractmethod@8@XŽ
ParamSpecArgstyping_extensions.ParamSpecArgs"builtins.object*Ô
__init__(typing_extensions.ParamSpecArgs.__init__"
None*L
selfB
typing_extensions.ParamSpecArgs"typing_extensions.ParamSpecArgs*F
origin:
typing_extensions.ParamSpec"typing_extensions.ParamSpecrt

__origin__*typing_extensions.ParamSpecArgs.__origin__:
typing_extensions.ParamSpec"typing_extensions.ParamSpecš
ParamSpecKwargs!typing_extensions.ParamSpecKwargs"builtins.object*Ú
__init__*typing_extensions.ParamSpecKwargs.__init__"
None*P
selfF
!typing_extensions.ParamSpecKwargs"!typing_extensions.ParamSpecKwargs*F
origin:
typing_extensions.ParamSpec"typing_extensions.ParamSpecrv

__origin__,typing_extensions.ParamSpecKwargs.__origin__:
typing_extensions.ParamSpec"typing_extensions.ParamSpecþ
	ParamSpectyping_extensions.ParamSpec"builtins.object*ƒ
__init__$typing_extensions.ParamSpec.__init__"
None*D
self:
typing_extensions.ParamSpec"typing_extensions.ParamSpec*&
name
builtins.str"builtins.str*s
boundf
"Union[None,Type[Any],builtins.str]
None
	Type[Any]
Any
builtins.str"builtins.str *3
contravariant
builtins.bool"builtins.bool */
	covariant
builtins.bool"builtins.bool *À
args typing_extensions.ParamSpec.args"B
typing_extensions.ParamSpecArgs"typing_extensions.ParamSpecArgs*D
self:
typing_extensions.ParamSpec"typing_extensions.ParamSpec0:property`*È
kwargs"typing_extensions.ParamSpec.kwargs"F
!typing_extensions.ParamSpecKwargs"!typing_extensions.ParamSpecKwargs*D
self:
typing_extensions.ParamSpec"typing_extensions.ParamSpec0:property`ro
	__bound__%typing_extensions.ParamSpec.__bound__;
Union[Type[Any],None]
	Type[Any]
Any
NonerZ
__covariant__)typing_extensions.ParamSpec.__covariant__
builtins.bool"builtins.boolrb
__contravariant__-typing_extensions.ParamSpec.__contravariant__
builtins.bool"builtins.bool‘
NewTypetyping.NewType""
Type[typing._T]
	typing._T*&
name
builtins.str"builtins.str**
tp"
Type[typing._T]
	typing._TC
overloadtyping.overload"
	typing._F*
func
	typing._Fw
runtime_checkable#typing_extensions.runtime_checkable"
typing_extensions._TC*"
cls
typing_extensions._TC[
finaltyping_extensions.final"
typing_extensions._F*
f
typing_extensions._FS
IntVartyping_extensions.IntVar"
Any*&
name
builtins.str"builtins.strâ
get_type_hints typing_extensions.get_type_hints"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*T
objK
CallableType[builtins.function]&
builtins.function"builtins.function*£
globalns’
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *¢
localns’
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *4
include_extras
builtins.bool"builtins.bool g
get_argstyping_extensions.get_args".
builtins.tuple[Any]
Any"builtins.tuple*
tp
Anyc

get_origintyping_extensions.get_origin"&
Union[Any,None]
Any
None*
tp
Any*E
TYPE_CHECKINGtyping.TYPE_CHECKING
builtins.bool"builtins.bool*G
ClassVartyping.ClassVar*
typing._SpecialForm"typing._SpecialForm*?
Typetyping.Type*
typing._SpecialForm"typing._SpecialForm*q
runtimetyping_extensions.runtimeK
CallableType[builtins.function]&
builtins.function"builtins.function*h
Protocoltyping_extensions.Protocol@
typing_extensions._SpecialForm"typing_extensions._SpecialForm*b
Finaltyping_extensions.Final@
typing_extensions._SpecialForm"typing_extensions._SpecialForm*f
Literaltyping_extensions.Literal@
typing_extensions._SpecialForm"typing_extensions._SpecialForm*L
	TypedDicttyping_extensions.TypedDict"
builtins.object"builtins.object*L
OrderedDicttyping_extensions.OrderedDict
typing._Alias"typing._Alias*j
	Annotatedtyping_extensions.Annotated@
typing_extensions._SpecialForm"typing_extensions._SpecialForm*=
_AnnotatedAlias!typing_extensions._AnnotatedAlias
Any*n
Concatenatetyping_extensions.Concatenate@
typing_extensions._SpecialForm"typing_extensions._SpecialForm*j
	TypeAliastyping_extensions.TypeAlias@
typing_extensions._SpecialForm"typing_extensions._SpecialForm*j
	TypeGuardtyping_extensions.TypeGuard@
typing_extensions._SpecialForm"typing_extensions._SpecialForm