
html5lib._trie._baseé
ABCMetaabc.ABCMeta"builtins.type*¨
registerabc.ABCMeta.register"
Type[abc._T]

abc._T*#
cls
abc.ABCMeta"abc.ABCMeta**
subclass
Type[abc._T]

abc._Tz35z36z37z38z39z310j35j36j37j38j39j310’
Mappingtyping.Mapping"typing.Collection*å
__getitem__typing.Mapping.__getitem__"
typing._VT_co*e
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*
k

typing._KT0:abstractmethod@z35z36z37z38z39z310*³
itemstyping.Mapping.items"‘
3typing.AbstractSet[Tuple[typing._KT,typing._VT_co]]F
Tuple[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.AbstractSet*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz35z36z37z38z39z310*ã
keystyping.Mapping.keys"D
typing.AbstractSet[typing._KT]

typing._KT"typing.AbstractSet*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz35z36z37z38z39z310*ë
valuestyping.Mapping.values"H
 typing.ValuesView[typing._VT_co]
typing._VT_co"typing.ValuesView*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz35z36z37z38z39z310*ô
__contains__typing.Mapping.__contains__"
builtins.bool"builtins.bool*e
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*'
o"
builtins.object"builtins.objectz35z36z37z38z39z3102ß
gettyping.Mapping.getå
gettyping.Mapping.get":
Union[typing._VT_co,None]
typing._VT_co
None*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*
key

typing._KT0:overloadXÂ
gettyping.Mapping.get"D
Union[typing._VT_co,typing._T]
typing._VT_co
	typing._T*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*
key

typing._KT*Q
defaultD
Union[typing._VT_co,typing._T]
typing._VT_co
	typing._T0:overloadX"35"36"37"38"39"310Pj35j36j37j38j39j310ó
Triehtml5lib._trie._base.Trie"typing.Mapping*À
keyshtml5lib._trie._base.Trie.keys"
Any*@
self6
html5lib._trie._base.Trie"html5lib._trie._base.Trie*4
prefix&
Union[Any,None]
Any
None z35z36z37z38z39z310*u
has_keys_with_prefix.html5lib._trie._base.Trie.has_keys_with_prefix*
self*

prefixz35z36z37z38z39z310*i
longest_prefix(html5lib._trie._base.Trie.longest_prefix*
self*

prefixz35z36z37z38z39z310*s
longest_prefix_item-html5lib._trie._base.Trie.longest_prefix_item*
self*

prefixz35z36z37z38z39z310@babc.ABCMetaj35j36j37j38j39j310*N
Any
typing.Any"
builtins.object"builtins.object*35*36*37*38*39*310