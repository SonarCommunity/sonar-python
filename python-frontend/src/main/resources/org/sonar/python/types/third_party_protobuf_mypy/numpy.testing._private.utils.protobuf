
numpy.testing._private.utils‘
SkipTestunittest.case.SkipTest"builtins.Exception*õ
__init__unittest.case.SkipTest.__init__"
None*:
self0
unittest.case.SkipTest"unittest.case.SkipTest*(
reason
builtins.str"builtins.str_
KnownFailureException2numpy.testing._private.utils.KnownFailureException"builtins.ExceptionS
IgnoreException,numpy.testing._private.utils.IgnoreException"builtins.ExceptionË
clear_and_catch_warnings5numpy.testing._private.utils.clear_and_catch_warnings"warnings.catch_warnings*Ó
	__enter__?numpy.testing._private.utils.clear_and_catch_warnings.__enter__"≠
2Union[None,builtins.list[warnings.WarningMessage]]
Nonek
&builtins.list[warnings.WarningMessage]2
warnings.WarningMessage"warnings.WarningMessage"builtins.list*pn
5numpy.testing._private.utils.clear_and_catch_warnings"5numpy.testing._private.utils.clear_and_catch_warnings*ü
__exit__>numpy.testing._private.utils.clear_and_catch_warnings.__exit__"
None*pn
5numpy.testing._private.utils.clear_and_catch_warnings"5numpy.testing._private.utils.clear_and_catch_warnings*èä
(Union[None,Type[builtins.BaseException]]
NoneR
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException *fb
"Union[None,builtins.BaseException]
None0
builtins.BaseException"builtins.BaseException *]Y
Union[None,types.TracebackType]
None*
types.TracebackType"types.TracebackType 2ñ
__new__=numpy.testing._private.utils.clear_and_catch_warnings.__new__⁄
__new__=numpy.testing._private.utils.clear_and_catch_warnings.__new__"ê
Fnumpy.testing._private.utils._clear_and_catch_warnings_without_records"Fnumpy.testing._private.utils._clear_and_catch_warnings_without_records*π
clsØ
;Type[numpy.testing._private.utils.clear_and_catch_warnings]n
5numpy.testing._private.utils.clear_and_catch_warnings"5numpy.testing._private.utils.clear_and_catch_warnings*H
record:
Literal[builtins.bool]	
builtins.bool"builtins.bool *i
modulesZ
!typing.Iterable[types.ModuleType]$
types.ModuleType"types.ModuleType"typing.Iterable 0:overloadX“
__new__=numpy.testing._private.utils.clear_and_catch_warnings.__new__"ä
Cnumpy.testing._private.utils._clear_and_catch_warnings_with_records"Cnumpy.testing._private.utils._clear_and_catch_warnings_with_records*π
clsØ
;Type[numpy.testing._private.utils.clear_and_catch_warnings]n
5numpy.testing._private.utils.clear_and_catch_warnings"5numpy.testing._private.utils.clear_and_catch_warnings*F
record:
Literal[builtins.bool]	
builtins.bool"builtins.bool*i
modulesZ
!typing.Iterable[types.ModuleType]$
types.ModuleType"types.ModuleType"typing.Iterable 0:overloadXô
__new__=numpy.testing._private.utils.clear_and_catch_warnings.__new__"n
5numpy.testing._private.utils.clear_and_catch_warnings"5numpy.testing._private.utils.clear_and_catch_warnings*π
clsØ
;Type[numpy.testing._private.utils.clear_and_catch_warnings]n
5numpy.testing._private.utils.clear_and_catch_warnings"5numpy.testing._private.utils.clear_and_catch_warnings**
record
builtins.bool"builtins.bool*i
modulesZ
!typing.Iterable[types.ModuleType]$
types.ModuleType"types.ModuleType"typing.Iterable 0:overloadXrÆ
class_modulesCnumpy.testing._private.utils.clear_and_catch_warnings.class_modulesX
 builtins.tuple[types.ModuleType]$
types.ModuleType"types.ModuleType"builtins.tuplerû
modules=numpy.testing._private.utils.clear_and_catch_warnings.modulesT
builtins.set[types.ModuleType]$
types.ModuleType"types.ModuleType"builtins.setÄ
&_clear_and_catch_warnings_with_recordsCnumpy.testing._private.utils._clear_and_catch_warnings_with_records"5numpy.testing._private.utils.clear_and_catch_warnings*◊
	__enter__Mnumpy.testing._private.utils._clear_and_catch_warnings_with_records.__enter__"k
&builtins.list[warnings.WarningMessage]2
warnings.WarningMessage"warnings.WarningMessage"builtins.list*çä
Cnumpy.testing._private.utils._clear_and_catch_warnings_with_records"Cnumpy.testing._private.utils._clear_and_catch_warnings_with_records8¨
)_clear_and_catch_warnings_without_recordsFnumpy.testing._private.utils._clear_and_catch_warnings_without_records"5numpy.testing._private.utils.clear_and_catch_warnings*˝
	__enter__Pnumpy.testing._private.utils._clear_and_catch_warnings_without_records.__enter__"
None*ìê
Fnumpy.testing._private.utils._clear_and_catch_warnings_without_records"Fnumpy.testing._private.utils._clear_and_catch_warnings_without_records8ÿ
suppress_warnings.numpy.testing._private.utils.suppress_warnings"builtins.object*ö
__init__7numpy.testing._private.utils.suppress_warnings.__init__"
None*j
self`
.numpy.testing._private.utils.suppress_warnings".numpy.testing._private.utils.suppress_warnings*ﬁ
forwarding_rule∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *î
filter5numpy.testing._private.utils.suppress_warnings.filter"
None*j
self`
.numpy.testing._private.utils.suppress_warnings".numpy.testing._private.utils.suppress_warnings*P
category@
Type[builtins.Warning]$
builtins.Warning"builtins.Warning *+
message
builtins.str"builtins.str *^
moduleP
Union[None,types.ModuleType]
None$
types.ModuleType"types.ModuleType *˜
record5numpy.testing._private.utils.suppress_warnings.record"k
&builtins.list[warnings.WarningMessage]2
warnings.WarningMessage"warnings.WarningMessage"builtins.list*j
self`
.numpy.testing._private.utils.suppress_warnings".numpy.testing._private.utils.suppress_warnings*P
category@
Type[builtins.Warning]$
builtins.Warning"builtins.Warning *+
message
builtins.str"builtins.str *^
moduleP
Union[None,types.ModuleType]
None$
types.ModuleType"types.ModuleType *˚
	__enter__8numpy.testing._private.utils.suppress_warnings.__enter__"X
numpy.testing._private.utils._T"
builtins.object"builtins.object"builtins.object*ZX
numpy.testing._private.utils._T"
builtins.object"builtins.object"builtins.object*ä
__exit__7numpy.testing._private.utils.suppress_warnings.__exit__"
None*b`
.numpy.testing._private.utils.suppress_warnings".numpy.testing._private.utils.suppress_warnings*èä
(Union[None,Type[builtins.BaseException]]
NoneR
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException *fb
"Union[None,builtins.BaseException]
None0
builtins.BaseException"builtins.BaseException *]Y
Union[None,types.TracebackType]
None*
types.TracebackType"types.TracebackType *ü
__call__7numpy.testing._private.utils.suppress_warnings.__call__"q
 numpy.testing._private.utils._FTK
CallableType[builtins.function]&
builtins.function"builtins.function*j
self`
.numpy.testing._private.utils.suppress_warnings".numpy.testing._private.utils.suppress_warnings*{
funcq
 numpy.testing._private.utils._FTK
CallableType[builtins.function]&
builtins.function"builtins.functionr¶
log2numpy.testing._private.utils.suppress_warnings.logk
&builtins.list[warnings.WarningMessage]2
warnings.WarningMessage"warnings.WarningMessage"builtins.listó
assert_$numpy.testing._private.utils.assert_"
None*+
val"
builtins.object"builtins.object*Æ
msg¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function ≤
memusage%numpy.testing._private.utils.memusage"D
Union[None,builtins.int]
None
builtins.int"builtins.int*∏
_proc_pid_stat°
3Union[builtins.str,builtins.bytes,os.PathLike[Any]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes(
os.PathLike[Any]
Any"os.PathLike Ï
jiffies$numpy.testing._private.utils.jiffies"
builtins.int"builtins.int*∏
_proc_pid_stat°
3Union[builtins.str,builtins.bytes,os.PathLike[Any]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes(
os.PathLike[Any]
Any"os.PathLike *b

_load_timeP
builtins.list[builtins.float] 
builtins.float"builtins.float"builtins.list ê
build_err_msg*numpy.testing._private.utils.build_err_msg"
builtins.str"builtins.str*c
arraysW
 typing.Iterable[builtins.object]"
builtins.object"builtins.object"typing.Iterable*)
err_msg
builtins.str"builtins.str**
header
builtins.str"builtins.str *-
verbose
builtins.bool"builtins.bool *[
namesN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence *m
	precision\
 Union[None,typing.SupportsIndex]
None,
typing.SupportsIndex"typing.SupportsIndex Ä
assert_equal)numpy.testing._private.utils.assert_equal"
None*.
actual"
builtins.object"builtins.object*/
desired"
builtins.object"builtins.object*+
err_msg
builtins.str"builtins.str *-
verbose
builtins.bool"builtins.bool ﬂ
print_assert_equal/numpy.testing._private.utils.print_assert_equal"
None*-
test_string
builtins.str"builtins.str*.
actual"
builtins.object"builtins.object*/
desired"
builtins.object"builtins.objectù9
assert_almost_equal0numpy.testing._private.utils.assert_almost_equal"
None*ﬁ
actual—
üUnion[TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]],TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]]]ª
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"-numpy._typing._array_like._ArrayLikeNumber_coÏ
ÀTypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]]Í
¿Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]ª
Dnumpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]I
numpy.dtype[numpy.object_]
numpy.object_"numpy.object_"numpy.dtype"(numpy._typing._array_like._SupportsArray‰
tnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]ª
Dnumpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]I
numpy.dtype[numpy.object_]
numpy.object_"numpy.object_"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequence"-numpy._typing._array_like._ArrayLikeObject_co*ﬂ
desired—
üUnion[TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]],TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]]]ª
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"-numpy._typing._array_like._ArrayLikeNumber_coÏ
ÀTypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]]Í
¿Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]ª
Dnumpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]I
numpy.dtype[numpy.object_]
numpy.object_"numpy.object_"numpy.dtype"(numpy._typing._array_like._SupportsArray‰
tnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]ª
Dnumpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]I
numpy.dtype[numpy.object_]
numpy.object_"numpy.object_"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequence"-numpy._typing._array_like._ArrayLikeObject_co*+
decimal
builtins.int"builtins.int *+
err_msg
builtins.str"builtins.str *-
verbose
builtins.bool"builtins.bool ´

assert_approx_equal0numpy.testing._private.utils.assert_approx_equal"
None*£
actualñ
nTypeAlias[Union[None,TypeAlias[Union[builtins.str,builtins.bytes]],typing.SupportsFloat,typing.SupportsIndex]]é
cUnion[None,TypeAlias[Union[builtins.str,builtins.bytes]],typing.SupportsFloat,typing.SupportsIndex]
Noneæ
-TypeAlias[Union[builtins.str,builtins.bytes]]f
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes"#numpy._typing._scalars._CharLike_co,
typing.SupportsFloat"typing.SupportsFloat,
typing.SupportsIndex"typing.SupportsIndex"numpy._FloatValue*§
desiredñ
nTypeAlias[Union[None,TypeAlias[Union[builtins.str,builtins.bytes]],typing.SupportsFloat,typing.SupportsIndex]]é
cUnion[None,TypeAlias[Union[builtins.str,builtins.bytes]],typing.SupportsFloat,typing.SupportsIndex]
Noneæ
-TypeAlias[Union[builtins.str,builtins.bytes]]f
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes"#numpy._typing._scalars._CharLike_co,
typing.SupportsFloat"typing.SupportsFloat,
typing.SupportsIndex"typing.SupportsIndex"numpy._FloatValue*/
significant
builtins.int"builtins.int *+
err_msg
builtins.str"builtins.str *-
verbose
builtins.bool"builtins.bool ﬂ#
assert_array_compare1numpy.testing._private.utils.assert_array_compare"
None*∫

comparison©
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function",numpy.testing._private.utils._ComparisonFunc*π
x±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike*π
y±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike*+
err_msg
builtins.str"builtins.str *-
verbose
builtins.bool"builtins.bool **
header
builtins.str"builtins.str *=
	precision,
typing.SupportsIndex"typing.SupportsIndex */
	equal_nan
builtins.bool"builtins.bool */
	equal_inf
builtins.bool"builtins.bool *,
strict
builtins.bool"builtins.bool — 
assert_array_equal/numpy.testing._private.utils.assert_array_equal"
None*π
x±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike*π
y±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike*+
err_msg
builtins.str"builtins.str *-
verbose
builtins.bool"builtins.bool *,
strict
builtins.bool"builtins.bool ¢9
assert_array_almost_equal6numpy.testing._private.utils.assert_array_almost_equal"
None*Ÿ
x—
üUnion[TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]],TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]]]ª
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"-numpy._typing._array_like._ArrayLikeNumber_coÏ
ÀTypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]]Í
¿Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]ª
Dnumpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]I
numpy.dtype[numpy.object_]
numpy.object_"numpy.object_"numpy.dtype"(numpy._typing._array_like._SupportsArray‰
tnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]ª
Dnumpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]I
numpy.dtype[numpy.object_]
numpy.object_"numpy.object_"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequence"-numpy._typing._array_like._ArrayLikeObject_co*Ÿ
y—
üUnion[TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]],TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]]]ª
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"-numpy._typing._array_like._ArrayLikeNumber_coÏ
ÀTypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]]Í
¿Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]ª
Dnumpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]I
numpy.dtype[numpy.object_]
numpy.object_"numpy.object_"numpy.dtype"(numpy._typing._array_like._SupportsArray‰
tnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]ª
Dnumpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]I
numpy.dtype[numpy.object_]
numpy.object_"numpy.object_"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequence"-numpy._typing._array_like._ArrayLikeObject_co*/
decimal 
builtins.float"builtins.float *+
err_msg
builtins.str"builtins.str *-
verbose
builtins.bool"builtins.bool Å
	runstring&numpy.testing._private.utils.runstring"
Any*¢
astró
1Union[builtins.str,builtins.bytes,types.CodeType]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes 
types.CodeType"types.CodeType*ù
dictí
+Union[None,builtins.dict[builtins.str,Any]]
NoneW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict¶
assert_string_equal0numpy.testing._private.utils.assert_string_equal"
None*(
actual
builtins.str"builtins.str*)
desired
builtins.str"builtins.str©
rundocs$numpy.testing._private.utils.rundocs"
None*∑
filename¶
2Union[None,builtins.str,os.PathLike[builtins.str]]
None
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike *4
raise_on_error
builtins.bool"builtins.bool ÿ
raises#numpy.testing._private.utils.raises"K
CallableType[builtins.function]&
builtins.function"builtins.function*\
argsR
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseExceptionä
decorate_methods-numpy.testing._private.utils.decorate_methods"
None*
cls
	Type[Any]
Any*Z
	decoratorK
CallableType[builtins.function]&
builtins.function"builtins.function*ø
	testmatch≠
7Union[None,builtins.str,builtins.bytes,re.Pattern[Any]]
None
builtins.str"builtins.str 
builtins.bytes"builtins.bytes&
re.Pattern[Any]
Any"
re.Pattern Ö
measure$numpy.testing._private.utils.measure" 
builtins.float"builtins.float*≥
code_str§
4Union[builtins.str,builtins.bytes,_ast.mod,_ast.AST]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
_ast.mod"_ast.mod
_ast.AST"_ast.AST*)
times
builtins.int"builtins.int *Q
labelD
Union[None,builtins.str]
None
builtins.str"builtins.str ° 
assert_array_almost_equal_nulp;numpy.testing._private.utils.assert_array_almost_equal_nulp"
None*√
xª
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"-numpy._typing._array_like._ArrayLikeNumber_co*√
yª
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"-numpy._typing._array_like._ArrayLikeNumber_co*,
nulp 
builtins.float"builtins.float ≤-
assert_array_max_ulp1numpy.testing._private.utils.assert_array_max_ulp"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*√
aª
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"-numpy._typing._array_like._ArrayLikeNumber_co*√
bª
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"-numpy._typing._array_like._ArrayLikeNumber_co*.
maxulp 
builtins.float"builtins.float *§

dtypeñ

ÍTypeAlias[Union[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]]]ˇ
ﬂUnion[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]](
numpy.dtype[Any]
Any"numpy.dtype
None
builtins.type"builtins.typeê
:numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]](
numpy.dtype[Any]
Any"numpy.dtype"(numpy._typing._dtype_like._SupportsDType
builtins.str"builtins.strì
lTypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]ˆ
aUnion[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]ç
"Tuple[TypeAlias[Any],builtins.int]G
TypeAlias[Any]
Any"*numpy._typing._dtype_like._DTypeLikeNested
builtins.int"builtins.int ,
builtins.list[Any]
Any"builtins.listM
TypeAlias[TypedDict]
	TypedDict"$numpy._typing._dtype_like._DTypeDict "(numpy._typing._dtype_like._VoidDTypeLike"#numpy._typing._dtype_like.DTypeLike C
break_cycles)numpy.testing._private.utils.break_cycles"
None"Èk
assert_array_less.numpy.testing._private.utils.assert_array_lessÔ8
assert_array_less.numpy.testing._private.utils.assert_array_less"
None*Ÿ
x—
üUnion[TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]],TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]]]ª
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"-numpy._typing._array_like._ArrayLikeNumber_coÏ
ÀTypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]]Í
¿Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]ª
Dnumpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]I
numpy.dtype[numpy.object_]
numpy.object_"numpy.object_"numpy.dtype"(numpy._typing._array_like._SupportsArray‰
tnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]ª
Dnumpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]I
numpy.dtype[numpy.object_]
numpy.object_"numpy.object_"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequence"-numpy._typing._array_like._ArrayLikeObject_co*Ÿ
y—
üUnion[TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]],TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]]]ª
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"-numpy._typing._array_like._ArrayLikeNumber_coÏ
ÀTypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]]Í
¿Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]ª
Dnumpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]I
numpy.dtype[numpy.object_]
numpy.object_"numpy.object_"numpy.dtype"(numpy._typing._array_like._SupportsArray‰
tnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]ª
Dnumpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]I
numpy.dtype[numpy.object_]
numpy.object_"numpy.object_"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequence"-numpy._typing._array_like._ArrayLikeObject_co*+
err_msg
builtins.str"builtins.str *-
verbose
builtins.bool"builtins.bool 0:overloadXø 
assert_array_less.numpy.testing._private.utils.assert_array_less"
None*¡
xπ
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"+numpy._typing._array_like._ArrayLikeTD64_co*¡
yπ
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"+numpy._typing._array_like._ArrayLikeTD64_co*+
err_msg
builtins.str"builtins.str *-
verbose
builtins.bool"builtins.bool 0:overloadXÔ
assert_array_less.numpy.testing._private.utils.assert_array_less"
None*ô
xë
—TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.datetime64]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.datetime64]]]]]ã
∆Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.datetime64]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.datetime64]]]]«
Gnumpy._typing._array_like._SupportsArray[numpy.dtype[numpy.datetime64]]R
numpy.dtype[numpy.datetime64]$
numpy.datetime64"numpy.datetime64"numpy.dtype"(numpy._typing._array_like._SupportsArrayÛ
wnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.datetime64]]]«
Gnumpy._typing._array_like._SupportsArray[numpy.dtype[numpy.datetime64]]R
numpy.dtype[numpy.datetime64]$
numpy.datetime64"numpy.datetime64"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequence"+numpy._typing._array_like._ArrayLikeDT64_co*ô
yë
—TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.datetime64]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.datetime64]]]]]ã
∆Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.datetime64]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.datetime64]]]]«
Gnumpy._typing._array_like._SupportsArray[numpy.dtype[numpy.datetime64]]R
numpy.dtype[numpy.datetime64]$
numpy.datetime64"numpy.datetime64"numpy.dtype"(numpy._typing._array_like._SupportsArrayÛ
wnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.datetime64]]]«
Gnumpy._typing._array_like._SupportsArray[numpy.dtype[numpy.datetime64]]R
numpy.dtype[numpy.datetime64]$
numpy.datetime64"numpy.datetime64"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequence"+numpy._typing._array_like._ArrayLikeDT64_co*+
err_msg
builtins.str"builtins.str *-
verbose
builtins.bool"builtins.bool 0:overloadX"¿
assert_raises*numpy.testing._private.utils.assert_raisesˇ
assert_raises*numpy.testing._private.utils.assert_raises"
None*¿Ω
PUnion[Type[builtins.BaseException],builtins.tuple[Type[builtins.BaseException]]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseExceptioní
,builtins.tuple[Type[builtins.BaseException]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"builtins.tuple*MK
CallableType[builtins.function]&
builtins.function"builtins.function*

args *
kwargs 0:overloadXÄ
assert_raises*numpy.testing._private.utils.assert_raises"⁄
Dunittest.case._AssertRaisesContext[numpy.testing._private.utils._ET]n
 numpy.testing._private.utils._ET0
builtins.BaseException"builtins.BaseException"builtins.BaseException""unittest.case._AssertRaisesContext*Ü
expected_exceptionÌ
dUnion[Type[numpy.testing._private.utils._ET],builtins.tuple[Type[numpy.testing._private.utils._ET]]]ö
&Type[numpy.testing._private.utils._ET]n
 numpy.testing._private.utils._ET0
builtins.BaseException"builtins.BaseException"builtins.BaseExceptionÂ
6builtins.tuple[Type[numpy.testing._private.utils._ET]]ö
&Type[numpy.testing._private.utils._ET]n
 numpy.testing._private.utils._ET0
builtins.BaseException"builtins.BaseException"builtins.BaseException"builtins.tuple*O
msgD
Union[None,builtins.str]
None
builtins.str"builtins.str 0:overloadX"æ
assert_raises_regex0numpy.testing._private.utils.assert_raises_regexØ
assert_raises_regex0numpy.testing._private.utils.assert_raises_regex"
None*¿Ω
PUnion[Type[builtins.BaseException],builtins.tuple[Type[builtins.BaseException]]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseExceptioní
,builtins.tuple[Type[builtins.BaseException]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"builtins.tuple*°û
2Union[builtins.str,builtins.bytes,re.Pattern[Any]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes&
re.Pattern[Any]
Any"
re.Pattern*MK
CallableType[builtins.function]&
builtins.function"builtins.function*

args *
kwargs 0:overloadX¬
assert_raises_regex0numpy.testing._private.utils.assert_raises_regex"⁄
Dunittest.case._AssertRaisesContext[numpy.testing._private.utils._ET]n
 numpy.testing._private.utils._ET0
builtins.BaseException"builtins.BaseException"builtins.BaseException""unittest.case._AssertRaisesContext*Ü
expected_exceptionÌ
dUnion[Type[numpy.testing._private.utils._ET],builtins.tuple[Type[numpy.testing._private.utils._ET]]]ö
&Type[numpy.testing._private.utils._ET]n
 numpy.testing._private.utils._ET0
builtins.BaseException"builtins.BaseException"builtins.BaseExceptionÂ
6builtins.tuple[Type[numpy.testing._private.utils._ET]]ö
&Type[numpy.testing._private.utils._ET]n
 numpy.testing._private.utils._ET0
builtins.BaseException"builtins.BaseException"builtins.BaseException"builtins.tuple*≥
expected_regexû
2Union[builtins.str,builtins.bytes,re.Pattern[Any]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes&
re.Pattern[Any]
Any"
re.Pattern*O
msgD
Union[None,builtins.str]
None
builtins.str"builtins.str 0:overloadX"õ\
assert_allclose,numpy.testing._private.utils.assert_allcloseÉ:
assert_allclose,numpy.testing._private.utils.assert_allclose"
None*ﬁ
actual—
üUnion[TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]],TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]]]ª
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"-numpy._typing._array_like._ArrayLikeNumber_coÏ
ÀTypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]]Í
¿Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]ª
Dnumpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]I
numpy.dtype[numpy.object_]
numpy.object_"numpy.object_"numpy.dtype"(numpy._typing._array_like._SupportsArray‰
tnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]ª
Dnumpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]I
numpy.dtype[numpy.object_]
numpy.object_"numpy.object_"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequence"-numpy._typing._array_like._ArrayLikeObject_co*ﬂ
desired—
üUnion[TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]],TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]]]ª
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"-numpy._typing._array_like._ArrayLikeNumber_coÏ
ÀTypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]]Í
¿Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]ª
Dnumpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]I
numpy.dtype[numpy.object_]
numpy.object_"numpy.object_"numpy.dtype"(numpy._typing._array_like._SupportsArray‰
tnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]ª
Dnumpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]I
numpy.dtype[numpy.object_]
numpy.object_"numpy.object_"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequence"-numpy._typing._array_like._ArrayLikeObject_co*,
rtol 
builtins.float"builtins.float *,
atol 
builtins.float"builtins.float */
	equal_nan
builtins.bool"builtins.bool *+
err_msg
builtins.str"builtins.str *-
verbose
builtins.bool"builtins.bool 0:overloadX”!
assert_allclose,numpy.testing._private.utils.assert_allclose"
None*∆
actualπ
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"+numpy._typing._array_like._ArrayLikeTD64_co*«
desiredπ
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"+numpy._typing._array_like._ArrayLikeTD64_co*,
rtol 
builtins.float"builtins.float *,
atol 
builtins.float"builtins.float */
	equal_nan
builtins.bool"builtins.bool *+
err_msg
builtins.str"builtins.str *-
verbose
builtins.bool"builtins.bool 0:overloadX"Ö
assert_warns)numpy.testing._private.utils.assert_warns¯
assert_warns)numpy.testing._private.utils.assert_warns"Z
)contextlib._GeneratorContextManager[None]
None"#contextlib._GeneratorContextManager*S
warning_class@
Type[builtins.Warning]$
builtins.Warning"builtins.Warning0:overloadXŒ
assert_warns)numpy.testing._private.utils.assert_warns"X
numpy.testing._private.utils._T"
builtins.object"builtins.object"builtins.object*B@
Type[builtins.Warning]$
builtins.Warning"builtins.Warning*MK
CallableType[builtins.function]&
builtins.function"builtins.function*

args *
kwargs 0:overloadX"ê
assert_no_warnings/numpy.testing._private.utils.assert_no_warningsØ
assert_no_warnings/numpy.testing._private.utils.assert_no_warnings"Z
)contextlib._GeneratorContextManager[None]
None"#contextlib._GeneratorContextManager0:overloadXñ
assert_no_warnings/numpy.testing._private.utils.assert_no_warnings"X
numpy.testing._private.utils._T"
builtins.object"builtins.object"builtins.object*MK
CallableType[builtins.function]&
builtins.function"builtins.function*

args *
kwargs 0:overloadX"ö
tempdir$numpy.testing._private.utils.tempdir˙
tempdir$numpy.testing._private.utils.tempdir"v
1contextlib._GeneratorContextManager[builtins.str]
builtins.str"builtins.str"#contextlib._GeneratorContextManager*
suffix
None *
prefix
None *
dir
None 0:overloadXÎ
tempdir$numpy.testing._private.utils.tempdir"°
2contextlib._GeneratorContextManager[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"#contextlib._GeneratorContextManager*}
suffixo
Union[None,typing.AnyStr]
NoneF
typing.AnyStr"
builtins.object"builtins.object"builtins.object *}
prefixo
Union[None,typing.AnyStr]
NoneF
typing.AnyStr"
builtins.object"builtins.object"builtins.object *â
dir˝
4Union[None,typing.AnyStr,os.PathLike[typing.AnyStr]]
NoneF
typing.AnyStr"
builtins.object"builtins.object"builtins.objectq
os.PathLike[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"os.PathLike 0:overloadX"¯
temppath%numpy.testing._private.utils.temppath®
temppath%numpy.testing._private.utils.temppath"v
1contextlib._GeneratorContextManager[builtins.str]
builtins.str"builtins.str"#contextlib._GeneratorContextManager*
suffix
None *
prefix
None *
dir
None **
text
builtins.bool"builtins.bool 0:overloadXô
temppath%numpy.testing._private.utils.temppath"°
2contextlib._GeneratorContextManager[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"#contextlib._GeneratorContextManager*}
suffixo
Union[None,typing.AnyStr]
NoneF
typing.AnyStr"
builtins.object"builtins.object"builtins.object *}
prefixo
Union[None,typing.AnyStr]
NoneF
typing.AnyStr"
builtins.object"builtins.object"builtins.object *â
dir˝
4Union[None,typing.AnyStr,os.PathLike[typing.AnyStr]]
NoneF
typing.AnyStr"
builtins.object"builtins.object"builtins.objectq
os.PathLike[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"os.PathLike **
text
builtins.bool"builtins.bool 0:overloadX"∆
assert_no_gc_cycles0numpy.testing._private.utils.assert_no_gc_cycles±
assert_no_gc_cycles0numpy.testing._private.utils.assert_no_gc_cycles"Z
)contextlib._GeneratorContextManager[None]
None"#contextlib._GeneratorContextManager0:overloadX»
assert_no_gc_cycles0numpy.testing._private.utils.assert_no_gc_cycles"
None*MK
CallableType[builtins.function]&
builtins.function"builtins.function*

args *
kwargs 0:overloadX*ò
__annotations__,numpy.testing._private.utils.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*?
Ltyping.Literal*
typing._SpecialForm"typing._SpecialForm*{
__all__$numpy.testing._private.utils.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*M
verbose$numpy.testing._private.utils.verbose
builtins.int"builtins.int*O
IS_PYPY$numpy.testing._private.utils.IS_PYPY
builtins.bool"builtins.bool*S
	IS_PYSTON&numpy.testing._private.utils.IS_PYSTON
builtins.bool"builtins.bool*Y
HAS_REFCOUNT)numpy.testing._private.utils.HAS_REFCOUNT
builtins.bool"builtins.bool*Y
HAS_LAPACK64)numpy.testing._private.utils.HAS_LAPACK64
builtins.bool"builtins.bool