
@torch._export.passes.add_runtime_assertions_for_constraints_passÄ
InputDimItorch._export.passes.add_runtime_assertions_for_constraints_pass.InputDim"builtins.tuple*¯
_replaceRtorch._export.passes.add_runtime_assertions_for_constraints_pass.InputDim._replace"³
Mtorch._export.passes.add_runtime_assertions_for_constraints_pass.InputDim._NT`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*¿
_self³
Mtorch._export.passes.add_runtime_assertions_for_constraints_pass.InputDim._NT`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*.

input_name
builtins.str"builtins.str *'
dim
builtins.int"builtins.int *ˆ
__new__Qtorch._export.passes.add_runtime_assertions_for_constraints_pass.InputDim.__new__"³
Mtorch._export.passes.add_runtime_assertions_for_constraints_pass.InputDim._NT`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*ž
_cls“
SType[torch._export.passes.add_runtime_assertions_for_constraints_pass.InputDim._NT]³
Mtorch._export.passes.add_runtime_assertions_for_constraints_pass.InputDim._NT`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"type*,

input_name
builtins.str"builtins.str*%
dim
builtins.int"builtins.int*÷
_asdictQtorch._export.passes.add_runtime_assertions_for_constraints_pass.InputDim._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*¿
_self³
Mtorch._export.passes.add_runtime_assertions_for_constraints_pass.InputDim._NT`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*¨
_makeOtorch._export.passes.add_runtime_assertions_for_constraints_pass.InputDim._make"³
Mtorch._export.passes.add_runtime_assertions_for_constraints_pass.InputDim._NT`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*ž
_cls“
SType[torch._export.passes.add_runtime_assertions_for_constraints_pass.InputDim._NT]³
Mtorch._export.passes.add_runtime_assertions_for_constraints_pass.InputDim._NT`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"type*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpr€

input_nameTtorch._export.passes.add_runtime_assertions_for_constraints_pass.InputDim.input_name
builtins.str"builtins.strrr
dimMtorch._export.passes.add_runtime_assertions_for_constraints_pass.InputDim.dim
builtins.int"builtins.intr€

input_nameTtorch._export.passes.add_runtime_assertions_for_constraints_pass.InputDim.input_name
builtins.str"builtins.strrr
dimMtorch._export.passes.add_runtime_assertions_for_constraints_pass.InputDim.dim
builtins.int"builtins.intr¾
_fieldsQtorch._export.passes.add_runtime_assertions_for_constraints_pass.InputDim._fields`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.strr¿
_field_typesVtorch._export.passes.add_runtime_assertions_for_constraints_pass.InputDim._field_typesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictrÅ
_field_defaultsYtorch._export.passes.add_runtime_assertions_for_constraints_pass.InputDim._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictrz
_sourceQtorch._export.passes.add_runtime_assertions_for_constraints_pass.InputDim._source
builtins.str"builtins.strrÅ
__annotations__Ytorch._export.passes.add_runtime_assertions_for_constraints_pass.InputDim.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictË
-_AddRuntimeAssertionsForInlineConstraintsPassntorch._export.passes.add_runtime_assertions_for_constraints_pass._AddRuntimeAssertionsForInlineConstraintsPass"(torch.fx.passes.infra.pass_base.PassBase*Ý
__init__wtorch._export.passes.add_runtime_assertions_for_constraints_pass._AddRuntimeAssertionsForInlineConstraintsPass.__init__"
None*ë
selfà
ntorch._export.passes.add_runtime_assertions_for_constraints_pass._AddRuntimeAssertionsForInlineConstraintsPass"ntorch._export.passes.add_runtime_assertions_for_constraints_pass._AddRuntimeAssertionsForInlineConstraintsPass*ß
range_constraintsÇ
Cbuiltins.dict[Any,torch.utils._sympy.value_ranges.ValueRanges[Any]]
Anyh
0torch.utils._sympy.value_ranges.ValueRanges[Any]
Any"+torch.utils._sympy.value_ranges.ValueRanges"builtins.dict*Þ
_assert_range_constraint‡torch._export.passes.add_runtime_assertions_for_constraints_pass._AddRuntimeAssertionsForInlineConstraintsPass._assert_range_constraint*
self*
node*	
lower*	
upper*

assert_msg*ã
_insert_assert_asyncƒtorch._export.passes.add_runtime_assertions_for_constraints_pass._AddRuntimeAssertionsForInlineConstraintsPass._insert_assert_async*
self*
	last_node*
op*	
lower*	
upper*

assert_msg*õ
callstorch._export.passes.add_runtime_assertions_for_constraints_pass._AddRuntimeAssertionsForInlineConstraintsPass.call"o
TypeAlias[Tuple[Any,Any]]$
Tuple[Any,Any]
Any
Any"*torch.fx.passes.infra.pass_base.PassResult*ë
selfà
ntorch._export.passes.add_runtime_assertions_for_constraints_pass._AddRuntimeAssertionsForInlineConstraintsPass"ntorch._export.passes.add_runtime_assertions_for_constraints_pass._AddRuntimeAssertionsForInlineConstraintsPass*
graph_module
Anyrà
range_constraints€torch._export.passes.add_runtime_assertions_for_constraints_pass._AddRuntimeAssertionsForInlineConstraintsPass.range_constraintsÇ
Cbuiltins.dict[Any,torch.utils._sympy.value_ranges.ValueRanges[Any]]
Anyh
0torch.utils._sympy.value_ranges.ValueRanges[Any]
Any"+torch.utils._sympy.value_ranges.ValueRanges"builtins.dictræ
#_asserts_generated_unbacked_symbols’torch._export.passes.add_runtime_assertions_for_constraints_pass._AddRuntimeAssertionsForInlineConstraintsPass._asserts_generated_unbacked_symbols*
builtins.set[Any]
Any"builtins.setrŸ
countervtorch._export.passes.add_runtime_assertions_for_constraints_pass._AddRuntimeAssertionsForInlineConstraintsPass.counter
builtins.int"builtins.intrò
existing_inline_assertions‰torch._export.passes.add_runtime_assertions_for_constraints_pass._AddRuntimeAssertionsForInlineConstraintsPass.existing_inline_assertionsÇ
Cbuiltins.dict[Any,torch.utils._sympy.value_ranges.ValueRanges[Any]]
Anyh
0torch.utils._sympy.value_ranges.ValueRanges[Any]
Any"+torch.utils._sympy.value_ranges.ValueRanges"builtins.dictl
_convert_to_intPtorch._export.passes.add_runtime_assertions_for_constraints_pass._convert_to_int*
valí
_convert_range_to_intVtorch._export.passes.add_runtime_assertions_for_constraints_pass._convert_range_to_int"
Any*s
rangeh
0torch.utils._sympy.value_ranges.ValueRanges[Any]
Any"+torch.utils._sympy.value_ranges.ValueRanges‰
_get_existing_inline_assertions`torch._export.passes.add_runtime_assertions_for_constraints_pass._get_existing_inline_assertions"Ç
Cbuiltins.dict[Any,torch.utils._sympy.value_ranges.ValueRanges[Any]]
Anyh
0torch.utils._sympy.value_ranges.ValueRanges[Any]
Any"+torch.utils._sympy.value_ranges.ValueRanges"builtins.dict*X
graph_moduleF
!torch.fx.graph_module.GraphModule"!torch.fx.graph_module.GraphModule*ß
range_constraintsÇ
Cbuiltins.dict[Any,torch.utils._sympy.value_ranges.ValueRanges[Any]]
Anyh
0torch.utils._sympy.value_ranges.ValueRanges[Any]
Any"+torch.utils._sympy.value_ranges.ValueRanges"builtins.dict*¼
__annotations__Ptorch._export.passes.add_runtime_assertions_for_constraints_pass.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*X
sympyFtorch._export.passes.add_runtime_assertions_for_constraints_pass.sympy
Any*Ÿ
__all__Htorch._export.passes.add_runtime_assertions_for_constraints_pass.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list