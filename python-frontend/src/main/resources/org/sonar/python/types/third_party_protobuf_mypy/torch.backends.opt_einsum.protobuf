
torch.backends.opt_einsumÛ
OptEinsumModule)torch.backends.opt_einsum.OptEinsumModule"torch.backends.PropModule*Y
__init__2torch.backends.opt_einsum.OptEinsumModule.__init__*
self*
m*
namerv
enabled1torch.backends.opt_einsum.OptEinsumModule.enabled8
torch.backends.ContextProp"torch.backends.ContextPropr®
strategy2torch.backends.opt_einsum.OptEinsumModule.strategyn
&Union[torch.backends.ContextProp,None]8
torch.backends.ContextProp"torch.backends.ContextProp
NoneC
get_opt_einsum(torch.backends.opt_einsum.get_opt_einsum"
Anyn
_set_enabled&torch.backends.opt_einsum._set_enabled"
None*,
_enabled
builtins.bool"builtins.boolV
_get_enabled&torch.backends.opt_einsum._get_enabled"
builtins.bool"builtins.boolo
_set_strategy'torch.backends.opt_einsum._set_strategy"
None*+
	_strategy
builtins.str"builtins.strV
_get_strategy'torch.backends.opt_einsum._get_strategy"
builtins.str"builtins.strQ
	set_flags#torch.backends.opt_einsum.set_flags*
_enabled *
	_strategy "í

_lru_cachefunctools.lru_cacheý
	lru_cachefunctools.lru_cache"K
CallableType[builtins.function]&
builtins.function"builtins.function*S
maxsizeD
Union[builtins.int,None]
builtins.int"builtins.int
None *+
typed
builtins.bool"builtins.bool 0:overloadXÉ
	lru_cachefunctools.lru_cache"‘
*functools._lru_cache_wrapper[functools._T]E
functools._T"
builtins.object"builtins.object"builtins.object"functools._lru_cache_wrapper*X
maxsizeK
CallableType[builtins.function]&
builtins.function"builtins.function*+
typed
builtins.bool"builtins.bool 0:overloadX*z
__path__"torch.backends.opt_einsum.__path__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*•
__annotations__)torch.backends.opt_einsum.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*=
_opt_einsum%torch.backends.opt_einsum._opt_einsum
Any*L
enabled!torch.backends.opt_einsum.enabled
builtins.bool"builtins.bool*t
strategy"torch.backends.opt_einsum.strategyD
Union[builtins.str,None]
builtins.str"builtins.str
None