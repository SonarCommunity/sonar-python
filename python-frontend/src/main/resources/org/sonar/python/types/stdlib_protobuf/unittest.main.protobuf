
unittest.main∆
_TestRunnerunittest.main._TestRunner"builtins.object*‰
rununittest.main._TestRunner.run"8
unittest.result.TestResult"unittest.result.TestResult*86
unittest.main._TestRunner"unittest.main._TestRunner*•¢
6Union[unittest.suite.TestSuite,unittest.case.TestCase]4
unittest.suite.TestSuite"unittest.suite.TestSuite0
unittest.case.TestCase"unittest.case.TestCasez36z37z38z39z310z311z312z313Xj36j37j38j39j310j311j312j313—0
TestProgramunittest.main.TestProgram"builtins.object*∑
__init__"unittest.main.TestProgram.__init__"
None*@
self6
unittest.main.TestProgram"unittest.main.TestProgram*â
module{
)Union[None,builtins.str,types.ModuleType]
None
builtins.str"builtins.str$
types.ModuleType"types.ModuleType *∆
defaultTest≤
6Union[builtins.str,typing.Iterable[builtins.str],None]
builtins.str"builtins.strN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable
None *é
argvÅ
'Union[builtins.list[builtins.str],None]J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
None *Å

testRunnerÓ
EUnion[Type[unittest.main._TestRunner],unittest.main._TestRunner,None]a
Type[unittest.main._TestRunner]6
unittest.main._TestRunner"unittest.main._TestRunner"type6
unittest.main._TestRunner"unittest.main._TestRunner
None *J

testLoader8
unittest.loader.TestLoader"unittest.loader.TestLoader **
exit
builtins.bool"builtins.bool *-
	verbosity
builtins.int"builtins.int *W
failfastG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y

catchbreakG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *U
bufferG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
warningsD
Union[builtins.str,None]
builtins.str"builtins.str
None */
	tb_locals
builtins.bool"builtins.bool z36z37z38z39z310z311*¢
__init__"unittest.main.TestProgram.__init__"
None*@
self6
unittest.main.TestProgram"unittest.main.TestProgram*â
module{
)Union[None,builtins.str,types.ModuleType]
None
builtins.str"builtins.str$
types.ModuleType"types.ModuleType *∆
defaultTest≤
6Union[builtins.str,typing.Iterable[builtins.str],None]
builtins.str"builtins.strN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable
None *é
argvÅ
'Union[builtins.list[builtins.str],None]J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
None *Å

testRunnerÓ
EUnion[Type[unittest.main._TestRunner],unittest.main._TestRunner,None]a
Type[unittest.main._TestRunner]6
unittest.main._TestRunner"unittest.main._TestRunner"type6
unittest.main._TestRunner"unittest.main._TestRunner
None *J

testLoader8
unittest.loader.TestLoader"unittest.loader.TestLoader **
exit
builtins.bool"builtins.bool *-
	verbosity
builtins.int"builtins.int *W
failfastG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y

catchbreakG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *U
bufferG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
warningsD
Union[builtins.str,None]
builtins.str"builtins.str
None */
	tb_locals
builtins.bool"builtins.bool *¯
	durationsÊ
HUnion[TypeAlias[builtins.list[Tuple[builtins.str,builtins.float]]],None]ç
<TypeAlias[builtins.list[Tuple[builtins.str,builtins.float]]]™
1builtins.list[Tuple[builtins.str,builtins.float]]f
"Tuple[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"builtins.list"unittest.result._DurationsType
None z312z313*±
	usageExit#unittest.main.TestProgram.usageExit"
None*@
self6
unittest.main.TestProgram"unittest.main.TestProgram*
msg
Any 0z36z37z38z39z310z311z312*ˆ
	parseArgs#unittest.main.TestProgram.parseArgs"
None*@
self6
unittest.main.TestProgram"unittest.main.TestProgram*T
argvJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listz36z37z38z39z310z311z312z313*ÿ
createTests%unittest.main.TestProgram.createTests"
None*@
self6
unittest.main.TestProgram"unittest.main.TestProgram*4
from_discovery
builtins.bool"builtins.bool *|
Loadern
&Union[unittest.loader.TestLoader,None]8
unittest.loader.TestLoader"unittest.loader.TestLoader
None z36z37z38z39z310z311z312z313*û
runTests"unittest.main.TestProgram.runTests"
None*@
self6
unittest.main.TestProgram"unittest.main.TestProgramz36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rà
result unittest.main.TestProgram.result8
unittest.result.TestResult"unittest.result.TestResult*36*37*38*39*310*311*312*313rÀ
module unittest.main.TestProgram.module{
)Union[None,builtins.str,types.ModuleType]
None
builtins.str"builtins.str$
types.ModuleType"types.ModuleType*36*37*38*39*310*311*312*313rr
	verbosity#unittest.main.TestProgram.verbosity
builtins.int"builtins.int*36*37*38*39*310*311*312*313rõ
failfast"unittest.main.TestProgram.failfastG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*36*37*38*39*310*311*312*313rü

catchbreak$unittest.main.TestProgram.catchbreakG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*36*37*38*39*310*311*312*313ró
buffer unittest.main.TestProgram.bufferG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*36*37*38*39*310*311*312*313rò
progName"unittest.main.TestProgram.progNameD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310*311*312*313rò
warnings"unittest.main.TestProgram.warningsD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310*311*312*313rÊ
testNamePatterns*unittest.main.TestProgram.testNamePatternsÅ
'Union[builtins.list[builtins.str],None]J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
None*36*37*38*39*310*311*312*313r£
	durations#unittest.main.TestProgram.durationsÊ
HUnion[TypeAlias[builtins.list[Tuple[builtins.str,builtins.float]]],None]ç
<TypeAlias[builtins.list[Tuple[builtins.str,builtins.float]]]™
1builtins.list[Tuple[builtins.str,builtins.float]]f
"Tuple[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"builtins.list"unittest.result._DurationsType
None*312*313*≠
__annotations__unittest.main.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313*:
unittestunittest *36*37*38*39*310*311*312*313*n
MAIN_EXAMPLESunittest.main.MAIN_EXAMPLES
builtins.str"builtins.str*36*37*38*39*310*311*312*313*r
MODULE_EXAMPLESunittest.main.MODULE_EXAMPLES
builtins.str"builtins.str*36*37*38*39*310*311*312*313