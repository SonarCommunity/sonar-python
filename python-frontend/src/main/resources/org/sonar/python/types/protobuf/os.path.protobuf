
os.pathos.path"N
abspathos.path.abspath"
typing.AnyStr*
path
typing.AnyStrz27"M
basenameos.path.basename"
typing.AnyStr*
p
typing.AnyStrz27"K
dirnameos.path.dirname"
typing.AnyStr*
p
typing.AnyStrz27"T

expanduseros.path.expanduser"
typing.AnyStr*
path
typing.AnyStrz27"T

expandvarsos.path.expandvars"
typing.AnyStr*
path
typing.AnyStrz27"M
normcaseos.path.normcase"
typing.AnyStr*
s
typing.AnyStrz27"P
normpathos.path.normpath"
typing.AnyStr*
path
typing.AnyStrz27"P
realpathos.path.realpath"
typing.AnyStr*
path
typing.AnyStrz27"”
commonprefixos.path.commonprefix"
Any*a
mZ
!typing.Sequence[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Sequencez27"l
existsos.path.exists"
builtins.bool"builtins.bool*.
path$
builtins.unicode"builtins.unicodez27"n
lexistsos.path.lexists"
builtins.bool"builtins.bool*.
path$
builtins.unicode"builtins.unicodez27"v
getatimeos.path.getatime" 
builtins.float"builtins.float*2
filename$
builtins.unicode"builtins.unicodez27"v
getmtimeos.path.getmtime" 
builtins.float"builtins.float*2
filename$
builtins.unicode"builtins.unicodez27"v
getctimeos.path.getctime" 
builtins.float"builtins.float*2
filename$
builtins.unicode"builtins.unicodez27"p
getsizeos.path.getsize"
builtins.int"builtins.int*2
filename$
builtins.unicode"builtins.unicodez27"g
isabsos.path.isabs"
builtins.bool"builtins.bool*+
s$
builtins.unicode"builtins.unicodez27"l
isfileos.path.isfile"
builtins.bool"builtins.bool*.
path$
builtins.unicode"builtins.unicodez27"g
isdiros.path.isdir"
builtins.bool"builtins.bool*+
s$
builtins.unicode"builtins.unicodez27"l
islinkos.path.islink"
builtins.bool"builtins.bool*.
path$
builtins.unicode"builtins.unicodez27"n
ismountos.path.ismount"
builtins.bool"builtins.bool*.
path$
builtins.unicode"builtins.unicodez27"œ
samefileos.path.samefile"
builtins.bool"builtins.bool*,
f1$
builtins.unicode"builtins.unicode*,
f2$
builtins.unicode"builtins.unicodez27"–
sameopenfileos.path.sameopenfile"
builtins.bool"builtins.bool*%
fp1
builtins.int"builtins.int*%
fp2
builtins.int"builtins.intz27" 
samestatos.path.samestat"
builtins.bool"builtins.bool*.
s1&
posix.stat_result"posix.stat_result*.
s2&
posix.stat_result"posix.stat_resultz27"‚
splitos.path.split"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*
p
typing.AnyStrz27"Œ

splitdriveos.path.splitdrive"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*
p
typing.AnyStrz27"ˆ
splitextos.path.splitext"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*
p
typing.AnyStrz27"ˆ
splituncos.path.splitunc"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*
p
typing.AnyStrz27"°
walkos.path.walk"
None*
path
typing.AnyStr*V
visitK
CallableType[builtins.function]&
builtins.function"builtins.function*
arg

os.path._Tz27*¢
joinos.path.join‹
joinos.path.join"
builtins.str"builtins.str*$
__p1
builtins.str"builtins.str*#
p
builtins.str"builtins.str0:overloadX•
joinos.path.join"$
builtins.unicode"builtins.unicode*$
__p1
builtins.str"builtins.str*$
__p2
builtins.str"builtins.str*$
__p3
builtins.str"builtins.str*,
__p4$
builtins.unicode"builtins.unicode*+
p$
builtins.unicode"builtins.unicode0:overloadXï
joinos.path.join"$
builtins.unicode"builtins.unicode*$
__p1
builtins.str"builtins.str*$
__p2
builtins.str"builtins.str*,
__p3$
builtins.unicode"builtins.unicode*+
p$
builtins.unicode"builtins.unicode0:overloadXÉ
joinos.path.join"$
builtins.unicode"builtins.unicode*$
__p1
builtins.str"builtins.str*,
__p2$
builtins.unicode"builtins.unicode*+
p$
builtins.unicode"builtins.unicode0:overloadX£
joinos.path.join"$
builtins.unicode"builtins.unicode*,
__p1$
builtins.unicode"builtins.unicode*+
p$
builtins.unicode"builtins.unicode0:overloadX"27*Â
relpathos.path.relpathÁ
relpathos.path.relpath"
builtins.str"builtins.str*&
path
builtins.str"builtins.str*Q
startD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadXÝ
relpathos.path.relpath"$
builtins.unicode"builtins.unicode*.
path$
builtins.unicode"builtins.unicode*]
startP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None 0:overloadX"27