
zipfile._pathÓ

InitializedStatezipfile._path.InitializedState"builtins.object*Ò
__init__'zipfile._path.InitializedState.__init__"
None*J
self@
zipfile._path.InitializedState"zipfile._path.InitializedState*,
args"
builtins.object"builtins.object*.
kwargs"
builtins.object"builtins.objectz312z313*À
__getstate__+zipfile._path.InitializedState.__getstate__"∑
TTuple[builtins.list[builtins.object],builtins.dict[builtins.object,builtins.object]]S
builtins.list[builtins.object]"
builtins.object"builtins.object"builtins.listá
.builtins.dict[builtins.object,builtins.object]"
builtins.object"builtins.object"
builtins.object"builtins.object"builtins.dict*J
self@
zipfile._path.InitializedState"zipfile._path.InitializedStatez312z313*‹
__setstate__+zipfile._path.InitializedState.__setstate__"
None*J
self@
zipfile._path.InitializedState"zipfile._path.InitializedState*æ
state≤
etyping.Sequence[Tuple[builtins.list[builtins.object],builtins.dict[builtins.object,builtins.object]]]∑
TTuple[builtins.list[builtins.object],builtins.dict[builtins.object,builtins.object]]S
builtins.list[builtins.object]"
builtins.object"builtins.object"builtins.listá
.builtins.dict[builtins.object,builtins.object]"
builtins.object"builtins.object"
builtins.object"builtins.object"builtins.dict"typing.Sequencez312z313j312j313Ù
CompleteDirszipfile._path.CompleteDirs"zipfile._path.InitializedState"zipfile.ZipFile*…
resolve_dir&zipfile._path.CompleteDirs.resolve_dir"
builtins.str"builtins.str*B
self8
zipfile._path.CompleteDirs"zipfile._path.CompleteDirs*&
name
builtins.str"builtins.strz312z313*–
inject!zipfile._path.CompleteDirs.inject"J
zipfile._path._ZF"
zipfile.ZipFile"zipfile.ZipFile"zipfile.ZipFile*m
clsd
 Type[zipfile._path.CompleteDirs]8
zipfile._path.CompleteDirs"zipfile._path.CompleteDirs"type*R
zfJ
zipfile._path._ZF"
zipfile.ZipFile"zipfile.ZipFile"zipfile.ZipFile0:classmethodpz3132Ì
makezipfile._path.CompleteDirs.makeù
makezipfile._path.CompleteDirs.make"8
zipfile._path.CompleteDirs"zipfile._path.CompleteDirs*m
clsd
 Type[zipfile._path.CompleteDirs]8
zipfile._path.CompleteDirs"zipfile._path.CompleteDirs"type*.
source"
zipfile.ZipFile"zipfile.ZipFile0:overload:classmethodXpô
makezipfile._path.CompleteDirs.make"y
zipfile._path.CompleteDirs.Self8
zipfile._path.CompleteDirs"zipfile._path.CompleteDirs"zipfile._path.CompleteDirs*¥
cls™
%Type[zipfile._path.CompleteDirs.Self]y
zipfile._path.CompleteDirs.Self8
zipfile._path.CompleteDirs"zipfile._path.CompleteDirs"zipfile._path.CompleteDirs"type*†
sourceì
YUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],typing.IO[builtins.bytes]]È
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO0:overload:classmethodXp"312"313j312j313 6
Pathzipfile._path.Path"builtins.object*Ï
__init__zipfile._path.Path.__init__"
None*2
self(
zipfile._path.Path"zipfile._path.Path*“
root«
iUnion[zipfile.ZipFile,TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],typing.IO[builtins.bytes]]"
zipfile.ZipFile"zipfile.ZipFileÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*&
at
builtins.str"builtins.str z312z313*â
namezipfile._path.Path.name"
builtins.str"builtins.str*2
self(
zipfile._path.Path"zipfile._path.Path0:property`z312z313*∑
parentzipfile._path.Path.parent"F
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike*2
self(
zipfile._path.Path"zipfile._path.Path0:property`z312z313*ª
filenamezipfile._path.Path.filename"F
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike*2
self(
zipfile._path.Path"zipfile._path.Path0:property`z312z313*ç
suffixzipfile._path.Path.suffix"
builtins.str"builtins.str*2
self(
zipfile._path.Path"zipfile._path.Path0:property`z312z313*ø
suffixeszipfile._path.Path.suffixes"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*2
self(
zipfile._path.Path"zipfile._path.Path0:property`z312z313*â
stemzipfile._path.Path.stem"
builtins.str"builtins.str*2
self(
zipfile._path.Path"zipfile._path.Path0:property`z312z313*≠
iterdirzipfile._path.Path.iterdir"ñ
(typing.Iterator[zipfile._path.Path.Self]Y
zipfile._path.Path.Self(
zipfile._path.Path"zipfile._path.Path"zipfile._path.Path"typing.Iterator*c
selfY
zipfile._path.Path.Self(
zipfile._path.Path"zipfile._path.Path"zipfile._path.Pathz312z313*Å
is_dirzipfile._path.Path.is_dir"
builtins.bool"builtins.bool*2
self(
zipfile._path.Path"zipfile._path.Pathz312z313*É
is_filezipfile._path.Path.is_file"
builtins.bool"builtins.bool*2
self(
zipfile._path.Path"zipfile._path.Pathz312z313*Å
existszipfile._path.Path.exists"
builtins.bool"builtins.bool*2
self(
zipfile._path.Path"zipfile._path.Pathz312z313*Ô
	read_textzipfile._path.Path.read_text"
builtins.str"builtins.str*2
self(
zipfile._path.Path"zipfile._path.Path*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *4
line_buffering
builtins.bool"builtins.bool *3
write_through
builtins.bool"builtins.bool z312z313*ã

read_byteszipfile._path.Path.read_bytes" 
builtins.bytes"builtins.bytes*2
self(
zipfile._path.Path"zipfile._path.Pathz312z313*á
joinpathzipfile._path.Path.joinpath"(
zipfile._path.Path"zipfile._path.Path*2
self(
zipfile._path.Path"zipfile._path.Path*ı
otherÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz312z313*“
globzipfile._path.Path.glob"ñ
(typing.Iterator[zipfile._path.Path.Self]Y
zipfile._path.Path.Self(
zipfile._path.Path"zipfile._path.Path"zipfile._path.Path"typing.Iterator*c
selfY
zipfile._path.Path.Self(
zipfile._path.Path"zipfile._path.Path"zipfile._path.Path*)
pattern
builtins.str"builtins.strz312z313*‘
rglobzipfile._path.Path.rglob"ñ
(typing.Iterator[zipfile._path.Path.Self]Y
zipfile._path.Path.Self(
zipfile._path.Path"zipfile._path.Path"zipfile._path.Path"typing.Iterator*c
selfY
zipfile._path.Path.Self(
zipfile._path.Path"zipfile._path.Path"zipfile._path.Path*)
pattern
builtins.str"builtins.strz312z313*•

is_symlinkzipfile._path.Path.is_symlink":
Literal[builtins.bool]	
builtins.bool"builtins.bool*2
self(
zipfile._path.Path"zipfile._path.Pathz312z313*∂
relative_tozipfile._path.Path.relative_to"
builtins.str"builtins.str*2
self(
zipfile._path.Path"zipfile._path.Path*3
other(
zipfile._path.Path"zipfile._path.Path*ı
extraÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz312z313*Ø
matchzipfile._path.Path.match"
builtins.bool"builtins.bool*2
self(
zipfile._path.Path"zipfile._path.Path*.
path_pattern
builtins.str"builtins.strz312z313*ü
__eq__zipfile._path.Path.__eq__"
builtins.bool"builtins.bool**(
zipfile._path.Path"zipfile._path.Path*$"
builtins.object"builtins.objectz312z313*É
__hash__zipfile._path.Path.__hash__"
builtins.int"builtins.int*2
self(
zipfile._path.Path"zipfile._path.Pathz312z313*¸
__truediv__zipfile._path.Path.__truediv__"(
zipfile._path.Path"zipfile._path.Path**(
zipfile._path.Path"zipfile._path.Path*ÏÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz312z3132È	
openzipfile._path.Path.openÇ
openzipfile._path.Path.open"&
_io.TextIOWrapper"_io.TextIOWrapper*2
self(
zipfile._path.Path"zipfile._path.Path*µ
mode®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *4
line_buffering
builtins.bool"builtins.bool *3
write_through
builtins.bool"builtins.bool *U
pwdJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None 0:overloadX∏
openzipfile._path.Path.open"H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*2
self(
zipfile._path.Path"zipfile._path.Path*≥
mode®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*U
pwdJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None 0:overloadX"312"313j312j313rc
rootzipfile._path.Path.root8
zipfile._path.CompleteDirs"zipfile._path.CompleteDirs*312*313rC
atzipfile._path.Path.at
builtins.str"builtins.str*312*313*≠
__annotations__zipfile._path.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313*M
_ReadWriteBinaryMode"zipfile._path._ReadWriteBinaryMode
Any*312*313