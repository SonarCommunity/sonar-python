
_weakrefÁ
CallableProxyType_weakref.CallableProxyType"builtins.object*¸
__getattr__&_weakref.CallableProxyType.__getattr__"
Any*XV
'_weakref.CallableProxyType[_weakref._C]
_weakref._C"_weakref.CallableProxyType*
builtins.str"builtins.str8Pr@
__call__#_weakref.CallableProxyType.__call__
_weakref._C×
	ProxyType_weakref.ProxyType"builtins.object* 
__getattr___weakref.ProxyType.__getattr__"
Any*HF
_weakref.ProxyType[_weakref._T]
_weakref._T"_weakref.ProxyType*
builtins.str"builtins.str8P¼
ReferenceType_weakref.ReferenceType"builtins.object*¼
__new___weakref.ReferenceType.__new__"
_weakref.ReferenceType.Self*O
clsF
!Type[_weakref.ReferenceType.Self]
_weakref.ReferenceType.Self*
_weakref._T*‹†
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *½
__call___weakref.ReferenceType.__call__"6
Union[_weakref._T,None]
_weakref._T
None*X
selfN
#_weakref.ReferenceType[_weakref._T]
_weakref._T"_weakref.ReferenceTypePr€
__callback__#_weakref.ReferenceType.__callback__K
CallableType[builtins.function]&
builtins.function"builtins.functionT
getweakrefcount_weakref.getweakrefcount"
builtins.int"builtins.int*	
Any\
getweakrefs_weakref.getweakrefs",
builtins.list[Any]
Any"builtins.list*	
Any"Š
proxy_weakref.proxyž
proxy_weakref.proxy"V
'_weakref.CallableProxyType[_weakref._C]
_weakref._C"_weakref.CallableProxyType*
_weakref._C*‹†
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None 0:overloadXÏ
proxy_weakref.proxy"
Any*
_weakref._T*‹†
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None 0:overloadX*„
__annotations___weakref.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict