
werkzeug.urls˘
	_URLTuplewerkzeug.urls._URLTuple"builtins.tuple*Ñ
_replace werkzeug.urls._URLTuple._replace"
werkzeug.urls._URLTuple._NT**
_self
werkzeug.urls._URLTuple._NT*
scheme
Any *
netloc
Any *
path
Any *
query
Any *
fragment
Any z35z36z37z38z39z310*û
__new__werkzeug.urls._URLTuple.__new__"
werkzeug.urls._URLTuple._NT*P
_clsF
!Type[werkzeug.urls._URLTuple._NT]
werkzeug.urls._URLTuple._NT*
scheme
Any*
netloc
Any*
path
Any*
query
Any*
fragment
Anyz35z36z37z38z39z310*»
_asdictwerkzeug.urls._URLTuple._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict**
_self
werkzeug.urls._URLTuple._NTz35z36z37z38z39z310*´
_makewerkzeug.urls._URLTuple._make"
werkzeug.urls._URLTuple._NT*P
_clsF
!Type[werkzeug.urls._URLTuple._NT]
werkzeug.urls._URLTuple._NT*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpz35z36z37z38z39z310j35j36j37j38j39j310rc
schemewerkzeug.urls._URLTuple.scheme
Any*35*35*36*36*37*37*38*38*39*39*310*310rc
netlocwerkzeug.urls._URLTuple.netloc
Any*35*35*36*36*37*37*38*38*39*39*310*310r_
pathwerkzeug.urls._URLTuple.path
Any*35*35*36*36*37*37*38*38*39*39*310*310ra
querywerkzeug.urls._URLTuple.query
Any*35*35*36*36*37*37*38*38*39*39*310*310rg
fragment werkzeug.urls._URLTuple.fragment
Any*35*35*36*36*37*37*38*38*39*39*310*310rß
_fieldswerkzeug.urls._URLTuple._fields·
GTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*35*36*37*38*39*310r¶
_field_types$werkzeug.urls._URLTuple._field_typesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*35*36*37*38*39*310r¨
_field_defaults'werkzeug.urls._URLTuple._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*35*36*37*38*39*310ra
_sourcewerkzeug.urls._URLTuple._source
builtins.str"builtins.str*35*36*37*38*39*310r¨
__annotations__'werkzeug.urls._URLTuple.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*35*36*37*38*39*310ù
BaseURLwerkzeug.urls.BaseURL"werkzeug.urls._URLTuple*W
replacewerkzeug.urls.BaseURL.replace*
self*

kwargsz35z36z37z38z39z310*S
hostwerkzeug.urls.BaseURL.host*
self0:property`z35z36z37z38z39z310*_

ascii_host werkzeug.urls.BaseURL.ascii_host*
self0:property`z35z36z37z38z39z310*S
portwerkzeug.urls.BaseURL.port*
self0:property`z35z36z37z38z39z310*S
authwerkzeug.urls.BaseURL.auth*
self0:property`z35z36z37z38z39z310*[
usernamewerkzeug.urls.BaseURL.username*
self0:property`z35z36z37z38z39z310*c
raw_username"werkzeug.urls.BaseURL.raw_username*
self0:property`z35z36z37z38z39z310*[
passwordwerkzeug.urls.BaseURL.password*
self0:property`z35z36z37z38z39z310*c
raw_password"werkzeug.urls.BaseURL.raw_password*
self0:property`z35z36z37z38z39z310*k
decode_query"werkzeug.urls.BaseURL.decode_query*
self*
args*

kwargsz35z36z37z38z39z310*[
joinwerkzeug.urls.BaseURL.join*
self*
args*

kwargsz35z36z37z38z39z310*I
to_urlwerkzeug.urls.BaseURL.to_url*
selfz35z36z37z38z39z310*W
decode_netloc#werkzeug.urls.BaseURL.decode_netloc*
selfz35z36z37z38z39z310*U
to_uri_tuple"werkzeug.urls.BaseURL.to_uri_tuple*
selfz35z36z37z38z39z310*U
to_iri_tuple"werkzeug.urls.BaseURL.to_iri_tuple*
selfz35z36z37z38z39z310*Ô
get_file_location'werkzeug.urls.BaseURL.get_file_location"
Any*U
selfK
Tuple[Any,Any,Any,Any,Any]
Any
Any
Any
Any
Any*8

pathformat&
Union[Any,None]
Any
None z35z36z37z38z39z310j35j36j37j38j39j310î
URLwerkzeug.urls.URL"werkzeug.urls.BaseURL*S
encode_netlocwerkzeug.urls.URL.encode_netloc*
selfz35z36z37z38z39z310*Ù
encodewerkzeug.urls.URL.encode"
Any*U
selfK
Tuple[Any,Any,Any,Any,Any]
Any
Any
Any
Any
Any*+
charset
builtins.str"builtins.str **
errors
builtins.str"builtins.str z35z36z37z38z39z310j35j36j37j38j39j310®
BytesURLwerkzeug.urls.BytesURL"werkzeug.urls.BaseURL*X
encode_netloc$werkzeug.urls.BytesURL.encode_netloc*
selfz35z36z37z38z39z310*˘
decodewerkzeug.urls.BytesURL.decode"
Any*U
selfK
Tuple[Any,Any,Any,Any,Any]
Any
Any
Any
Any
Any*+
charset
builtins.str"builtins.str **
errors
builtins.str"builtins.str z35z36z37z38z39z310j35j36j37j38j39j310›
Hrefwerkzeug.urls.Href"builtins.object*¥
__init__werkzeug.urls.Href.__init__"
None*2
self(
werkzeug.urls.Href"werkzeug.urls.Href*(
base
builtins.str"builtins.str *+
charset
builtins.str"builtins.str **
sort
builtins.bool"builtins.bool *1
key&
Union[Any,None]
Any
None z35z36z37z38z39z310*Z
__getattr__werkzeug.urls.Href.__getattr__*
self*
namez35z36z37z38z39z310*_
__call__werkzeug.urls.Href.__call__*
self*
path*	
queryz35z36z37z38z39z310j35j36j37j38j39j310rA
basewerkzeug.urls.Href.base
Any*35*36*37*38*39*310r\
charsetwerkzeug.urls.Href.charset
builtins.str"builtins.str*35*36*37*38*39*310rA
sortwerkzeug.urls.Href.sort
Any*35*36*37*38*39*310r?
keywerkzeug.urls.Href.key
Any*35*36*37*38*39*310≈
	url_parsewerkzeug.urls.url_parse"
Any*
url
Any*4
scheme&
Union[Any,None]
Any
None *5
allow_fragments
builtins.bool"builtins.bool z35z36z37z38z39z310ä
	url_quotewerkzeug.urls.url_quote"
Any*
string
Any*+
charset
builtins.str"builtins.str **
errors
builtins.str"builtins.str *(
safe
builtins.str"builtins.str **
unsafe
builtins.str"builtins.str z35z36z37z38z39z310Ë
url_quote_pluswerkzeug.urls.url_quote_plus"
Any*
string
Any*+
charset
builtins.str"builtins.str **
errors
builtins.str"builtins.str *(
safe
builtins.str"builtins.str z35z36z37z38z39z310Q
url_unparsewerkzeug.urls.url_unparse*

componentsz35z36z37z38z39z310‰
url_unquotewerkzeug.urls.url_unquote"
Any*
string
Any*+
charset
builtins.str"builtins.str **
errors
builtins.str"builtins.str **
unsafe
builtins.str"builtins.str z35z36z37z38z39z310Ω
url_unquote_pluswerkzeug.urls.url_unquote_plus"
Any*
s
Any*+
charset
builtins.str"builtins.str **
errors
builtins.str"builtins.str z35z36z37z38z39z310
url_fixwerkzeug.urls.url_fix"
Any*
s
Any*+
charset
builtins.str"builtins.str z35z36z37z38z39z310≥

uri_to_iriwerkzeug.urls.uri_to_iri"
Any*
uri
Any*+
charset
builtins.str"builtins.str **
errors
builtins.str"builtins.str z35z36z37z38z39z310Í

iri_to_uriwerkzeug.urls.iri_to_uri"
Any*
iri
Any*+
charset
builtins.str"builtins.str **
errors
builtins.str"builtins.str *5
safe_conversion
builtins.bool"builtins.bool z35z36z37z38z39z310˚

url_decodewerkzeug.urls.url_decode"
Any*
s
Any*+
charset
builtins.str"builtins.str *1
decode_keys
builtins.bool"builtins.bool *3
include_empty
builtins.bool"builtins.bool **
errors
builtins.str"builtins.str *-
	separator
builtins.str"builtins.str *1
cls&
Union[Any,None]
Any
None z35z36z37z38z39z310˙
url_decode_streamwerkzeug.urls.url_decode_stream"
Any*
stream
Any*+
charset
builtins.str"builtins.str *1
decode_keys
builtins.bool"builtins.bool *3
include_empty
builtins.bool"builtins.bool **
errors
builtins.str"builtins.str *-
	separator
builtins.str"builtins.str *1
cls&
Union[Any,None]
Any
None *3
limit&
Union[Any,None]
Any
None *5
return_iterator
builtins.bool"builtins.bool z35z36z37z38z39z310Ã

url_encodewerkzeug.urls.url_encode"
Any*
obj
Any*+
charset
builtins.str"builtins.str *1
encode_keys
builtins.bool"builtins.bool **
sort
builtins.bool"builtins.bool *1
key&
Union[Any,None]
Any
None *1
	separator 
builtins.bytes"builtins.bytes z35z36z37z38z39z310ê
url_encode_streamwerkzeug.urls.url_encode_stream"
Any*
obj
Any*4
stream&
Union[Any,None]
Any
None *+
charset
builtins.str"builtins.str *1
encode_keys
builtins.bool"builtins.bool **
sort
builtins.bool"builtins.bool *1
key&
Union[Any,None]
Any
None *1
	separator 
builtins.bytes"builtins.bytes z35z36z37z38z39z310†
url_joinwerkzeug.urls.url_join"
Any*
base
Any*
url
Any*5
allow_fragments
builtins.bool"builtins.bool z35z36z37z38z39z310