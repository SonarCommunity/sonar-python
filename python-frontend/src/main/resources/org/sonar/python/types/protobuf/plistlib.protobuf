
plistlibplistlib˜
Dictplistlib.Dict"builtins.dict*typing.MutableMapping*typing.Mapping*typing.Iterable*typing.Container2ƒ
__getattr__plistlib.Dict.__getattr__"
Any*&
self
plistlib.Dict"plistlib.Dict*$
attr
builtins.str"builtins.strz272–
__setattr__plistlib.Dict.__setattr__"
None*&
self
plistlib.Dict"plistlib.Dict*$
attr
builtins.str"builtins.str*
value
Anyz272„
__delattr__plistlib.Dict.__delattr__"
None*&
self
plistlib.Dict"plistlib.Dict*$
attr
builtins.str"builtins.strz27r27»
Dictplistlib.Dict"builtins.dict*typing.MutableMapping*typing.Mapping*typing.Collection*typing.Iterable*typing.Container2‡
__getattr__plistlib.Dict.__getattr__"
Any*&
self
plistlib.Dict"plistlib.Dict*$
attr
builtins.str"builtins.strz35z362š
__setattr__plistlib.Dict.__setattr__"
None*&
self
plistlib.Dict"plistlib.Dict*$
attr
builtins.str"builtins.str*
value
Anyz35z362ˆ
__delattr__plistlib.Dict.__delattr__"
None*&
self
plistlib.Dict"plistlib.Dict*$
attr
builtins.str"builtins.strz35z36r35r36Ô
Dataplistlib.Data"builtins.object2‚
__init__plistlib.Data.__init__"
None*(
self
plistlib.Data"plistlib.Data*&
data
builtins.str"builtins.strz272’
__init__plistlib.Data.__init__"
None*(
self
plistlib.Data"plistlib.Data**
data 
builtins.bytes"builtins.bytesz35z36z37z38r27r35r36r37r38Ì
InvalidFileExceptionplistlib.InvalidFileException"builtins.ValueError*builtins.StandardError*builtins.Exception*builtins.BaseException2·
__init__&plistlib.InvalidFileException.__init__"
None*H
self>
plistlib.InvalidFileException"plistlib.InvalidFileException*+
message
builtins.str"builtins.str z27r27Ô
InvalidFileExceptionplistlib.InvalidFileException"builtins.ValueError*builtins.Exception*builtins.BaseException2Ç
__init__&plistlib.InvalidFileException.__init__"
None*H
self>
plistlib.InvalidFileException"plistlib.InvalidFileException*+
message
builtins.str"builtins.str z35z36z37z38z39r35r36r37r38r39D
PlistFormatplistlib.PlistFormat"	enum.EnumPr35r36r37r38r39ö
UIDplistlib.UID"builtins.object2ƒ
__init__plistlib.UID.__init__"
None*&
self
plistlib.UID"plistlib.UID*&
data
builtins.int"builtins.intz38z392q
	__index__plistlib.UID.__index__"
builtins.int"builtins.int*&
self
plistlib.UID"plistlib.UIDz38z392^

__reduce__plistlib.UID.__reduce__"
Any*&
self
plistlib.UID"plistlib.UIDz38z392o
__hash__plistlib.UID.__hash__"
builtins.int"builtins.int*&
self
plistlib.UID"plistlib.UIDz38z39r38r39"Š
	readPlistplistlib.readPlist"
Any*Û

pathOrFileÊ
NUnion[TypeAlias[Union[builtins.str,builtins.unicode]],typing.IO[builtins.str]]±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"plistlib._PathB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IOz27"å
	readPlistplistlib.readPlist"
Any*ª

pathOrFile™
-Union[builtins.str,typing.IO[builtins.bytes]]
builtins.str"builtins.strH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IOz35z36z37z38"ó

writePlistplistlib.writePlist"
None*d
valueY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping*Û

pathOrFileÊ
NUnion[TypeAlias[Union[builtins.str,builtins.unicode]],typing.IO[builtins.str]]±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"plistlib._PathB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IOz27"Î

writePlistplistlib.writePlist"
None*d
valueY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping*ª

pathOrFile™
-Union[builtins.str,typing.IO[builtins.bytes]]
builtins.str"builtins.strH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IOz35z36z37z38"f
readPlistFromBytesplistlib.readPlistFromBytes"
Any*&
data
builtins.str"builtins.strz27"v
readPlistFromBytesplistlib.readPlistFromBytes"
Any**
data 
builtins.bytes"builtins.bytesz35z36z37z38"·
writePlistToBytesplistlib.writePlistToBytes"
builtins.str"builtins.str*d
valueY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mappingz27"Ç
writePlistToBytesplistlib.writePlistToBytes" 
builtins.bytes"builtins.bytes*d
valueY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mappingz35z36z37z38"Û
readPlistFromResourceplistlib.readPlistFromResource"
Any*¼
path±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"plistlib._Path*+
restype
builtins.str"builtins.str *)
resid
builtins.int"builtins.int z27"Å
writePlistToResourceplistlib.writePlistToResource"
None*i

rootObjectY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping*¼
path±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"plistlib._Path*+
restype
builtins.str"builtins.str *)
resid
builtins.int"builtins.int z27"h
readPlistFromStringplistlib.readPlistFromString"
Any*&
data
builtins.str"builtins.strz27"¾
writePlistToStringplistlib.writePlistToString"
builtins.str"builtins.str*i

rootObjectY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mappingz27"Ñ
loadplistlib.load"
Any*P
fpH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*g
fmt\
 Union[plistlib.PlistFormat,None],
plistlib.PlistFormat"plistlib.PlistFormat
None *7
use_builtin_types
builtins.bool"builtins.bool *¬
	dict_typeš
-Type[typing.MutableMapping[builtins.str,Any]]g
'typing.MutableMapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.MutableMapping z35z36z37z38"Œ
loadplistlib.load"
Any*P
fpH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*g
fmt\
 Union[plistlib.PlistFormat,None],
plistlib.PlistFormat"plistlib.PlistFormat
None *¬
	dict_typeš
-Type[typing.MutableMapping[builtins.str,Any]]g
'typing.MutableMapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.MutableMapping z39"®
loadsplistlib.loads"
Any*+
value 
builtins.bytes"builtins.bytes*g
fmt\
 Union[plistlib.PlistFormat,None],
plistlib.PlistFormat"plistlib.PlistFormat
None *7
use_builtin_types
builtins.bool"builtins.bool *¬
	dict_typeš
-Type[typing.MutableMapping[builtins.str,Any]]g
'typing.MutableMapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.MutableMapping z35z36z37z38"é
loadsplistlib.loads"
Any*+
value 
builtins.bytes"builtins.bytes*g
fmt\
 Union[plistlib.PlistFormat,None],
plistlib.PlistFormat"plistlib.PlistFormat
None *¬
	dict_typeš
-Type[typing.MutableMapping[builtins.str,Any]]g
'typing.MutableMapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.MutableMapping z39"…
dumpplistlib.dump"
None*d
valueY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping*P
fpH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*7
fmt,
plistlib.PlistFormat"plistlib.PlistFormat */
	sort_keys
builtins.bool"builtins.bool *.
skipkeys
builtins.bool"builtins.bool z35z36z37z38z39"Í
dumpsplistlib.dumps" 
builtins.bytes"builtins.bytes*d
valueY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping*7
fmt,
plistlib.PlistFormat"plistlib.PlistFormat *.
skipkeys
builtins.bool"builtins.bool */
	sort_keys
builtins.bool"builtins.bool z35z36z37z38z39