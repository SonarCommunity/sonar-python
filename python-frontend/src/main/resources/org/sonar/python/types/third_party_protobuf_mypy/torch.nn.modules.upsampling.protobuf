
torch.nn.modules.upsampling∆
Upsample$torch.nn.modules.upsampling.Upsample"torch.nn.modules.module.Module*û
__init__-torch.nn.modules.upsampling.Upsample.__init__"
None*V
selfL
$torch.nn.modules.upsampling.Upsample"$torch.nn.modules.upsampling.Upsample*º
sizeØ
5Union[builtins.int,builtins.tuple[builtins.int],None]
builtins.int"builtins.intL
builtins.tuple[builtins.int]
builtins.int"builtins.int"builtins.tuple
None *“
scale_factorΩ
9Union[builtins.float,builtins.tuple[builtins.float],None] 
builtins.float"builtins.floatR
builtins.tuple[builtins.float] 
builtins.float"builtins.float"builtins.tuple
None *(
mode
builtins.str"builtins.str *\
align_cornersG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *e
recompute_scale_factorG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *ˆ
forward,torch.nn.modules.upsampling.Upsample.forward",
torch._tensor.Tensor"torch._tensor.Tensor*V
selfL
$torch.nn.modules.upsampling.Upsample"$torch.nn.modules.upsampling.Upsample*7
input,
torch._tensor.Tensor"torch._tensor.Tensor*V
__setstate__1torch.nn.modules.upsampling.Upsample.__setstate__*
self*	
state*≥

extra_repr/torch.nn.modules.upsampling.Upsample.extra_repr"
builtins.str"builtins.str*V
selfL
$torch.nn.modules.upsampling.Upsample"$torch.nn.modules.upsampling.Upsamplerè
__constants__2torch.nn.modules.upsampling.Upsample.__constants__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listrO
name)torch.nn.modules.upsampling.Upsample.name
builtins.str"builtins.strr„
size)torch.nn.modules.upsampling.Upsample.sizeØ
5Union[builtins.int,builtins.tuple[builtins.int],None]
builtins.int"builtins.intL
builtins.tuple[builtins.int]
builtins.int"builtins.int"builtins.tuple
NonerÅ
scale_factor1torch.nn.modules.upsampling.Upsample.scale_factorΩ
9Union[builtins.float,builtins.tuple[builtins.float],None] 
builtins.float"builtins.floatR
builtins.tuple[builtins.float] 
builtins.float"builtins.float"builtins.tuple
NonerO
mode)torch.nn.modules.upsampling.Upsample.mode
builtins.str"builtins.strrå
align_corners2torch.nn.modules.upsampling.Upsample.align_cornersG
Union[builtins.bool,None]
builtins.bool"builtins.bool
Nonerû
recompute_scale_factor;torch.nn.modules.upsampling.Upsample.recompute_scale_factorG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None˜
UpsamplingNearest2d/torch.nn.modules.upsampling.UpsamplingNearest2d"$torch.nn.modules.upsampling.Upsample*à
__init__8torch.nn.modules.upsampling.UpsamplingNearest2d.__init__"
None*l
selfb
/torch.nn.modules.upsampling.UpsamplingNearest2d"/torch.nn.modules.upsampling.UpsamplingNearest2d*‘
size«
9Union[builtins.int,Tuple[builtins.int,builtins.int],None]
builtins.int"builtins.int`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
None *Ú
scale_factor›
?Union[builtins.float,Tuple[builtins.float,builtins.float],None] 
builtins.float"builtins.floatl
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float
None ¸
UpsamplingBilinear2d0torch.nn.modules.upsampling.UpsamplingBilinear2d"$torch.nn.modules.upsampling.Upsample*ã
__init__9torch.nn.modules.upsampling.UpsamplingBilinear2d.__init__"
None*n
selfd
0torch.nn.modules.upsampling.UpsamplingBilinear2d"0torch.nn.modules.upsampling.UpsamplingBilinear2d*‘
size«
9Union[builtins.int,Tuple[builtins.int,builtins.int],None]
builtins.int"builtins.int`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
None *Ú
scale_factor›
?Union[builtins.float,Tuple[builtins.float,builtins.float],None] 
builtins.float"builtins.floatl
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float
None *ó
__annotations__+torch.nn.modules.upsampling.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
Ftorch.nn.functional *z
__all__#torch.nn.modules.upsampling.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list