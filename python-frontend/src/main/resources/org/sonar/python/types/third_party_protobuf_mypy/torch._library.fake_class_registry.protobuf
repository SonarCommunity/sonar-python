
"torch._library.fake_class_registryÅ
FakeScriptObject3torch._library.fake_class_registry.FakeScriptObject"builtins.object*—
__init__<torch._library.fake_class_registry.FakeScriptObject.__init__"
None*t
selfj
3torch._library.fake_class_registry.FakeScriptObject"3torch._library.fake_class_registry.FakeScriptObject*
wrapped_obj
Any*3
script_class_name
builtins.str"builtins.strrW
wrapped_obj?torch._library.fake_class_registry.FakeScriptObject.wrapped_obj
Anyrx
script_class_nameEtorch._library.fake_class_registry.FakeScriptObject.script_class_name
builtins.str"builtins.str‹	
FakeScriptMethod3torch._library.fake_class_registry.FakeScriptMethod"builtins.object*é
__init__<torch._library.fake_class_registry.FakeScriptMethod.__init__"
None*t
selfj
3torch._library.fake_class_registry.FakeScriptMethod"3torch._library.fake_class_registry.FakeScriptMethod*}
self_fake_objj
3torch._library.fake_class_registry.FakeScriptObject"3torch._library.fake_class_registry.FakeScriptObject*-
method_name
builtins.str"builtins.str*q
schemae
#Union[torch._C.FunctionSchema,None]2
torch._C.FunctionSchema"torch._C.FunctionSchema
None*h
__call__<torch._library.fake_class_registry.FakeScriptMethod.__call__*
self*
args*

kwargsr¾
self_fake_objAtorch._library.fake_class_registry.FakeScriptMethod.self_fake_objj
3torch._library.fake_class_registry.FakeScriptObject"3torch._library.fake_class_registry.FakeScriptObjectrl
method_name?torch._library.fake_class_registry.FakeScriptMethod.method_name
builtins.str"builtins.strr«
schema:torch._library.fake_class_registry.FakeScriptMethod.schemae
#Union[torch._C.FunctionSchema,None]2
torch._C.FunctionSchema"torch._C.FunctionSchema
Noneç
HasStaticMethodFromReal:torch._library.fake_class_registry.HasStaticMethodFromReal"builtins.object*ü
	from_realDtorch._library.fake_class_registry.HasStaticMethodFromReal.from_real"
Any*Î
clsÄ
@Type[torch._library.fake_class_registry.HasStaticMethodFromReal]x
:torch._library.fake_class_registry.HasStaticMethodFromReal":torch._library.fake_class_registry.HasStaticMethodFromReal"type*<
real_obj.
torch._C.ScriptObject"torch._C.ScriptObject0:classmethod@pXî
FakeClassRegistry4torch._library.fake_class_registry.FakeClassRegistry"builtins.object*S
__init__=torch._library.fake_class_registry.FakeClassRegistry.__init__*
self*’
has_impl=torch._library.fake_class_registry.FakeClassRegistry.has_impl"
builtins.bool"builtins.bool*v
selfl
4torch._library.fake_class_registry.FakeClassRegistry"4torch._library.fake_class_registry.FakeClassRegistry*/
full_qualname
builtins.str"builtins.str*û
get_impl=torch._library.fake_class_registry.FakeClassRegistry.get_impl"
Any*v
selfl
4torch._library.fake_class_registry.FakeClassRegistry"4torch._library.fake_class_registry.FakeClassRegistry*/
full_qualname
builtins.str"builtins.str*—
register=torch._library.fake_class_registry.FakeClassRegistry.register"
None*v
selfl
4torch._library.fake_class_registry.FakeClassRegistry"4torch._library.fake_class_registry.FakeClassRegistry*/
full_qualname
builtins.str"builtins.str*

fake_class
Any *ÿ

deregister?torch._library.fake_class_registry.FakeClassRegistry.deregister"
Any*v
selfl
4torch._library.fake_class_registry.FakeClassRegistry"4torch._library.fake_class_registry.FakeClassRegistry*/
full_qualname
builtins.str"builtins.str*Å
clear:torch._library.fake_class_registry.FakeClassRegistry.clear"
None*v
selfl
4torch._library.fake_class_registry.FakeClassRegistry"4torch._library.fake_class_registry.FakeClassRegistry*Ž
_check_registeredFtorch._library.fake_class_registry.FakeClassRegistry._check_registered"
None*v
selfl
4torch._library.fake_class_registry.FakeClassRegistry"4torch._library.fake_class_registry.FakeClassRegistry*/
full_qualname
builtins.str"builtins.strr´
_registered_classFtorch._library.fake_class_registry.FakeClassRegistry._registered_classW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictk
_check_valid_flat_script_obj?torch._library.fake_class_registry._check_valid_flat_script_obj*

flat_xø
to_fake_obj.torch._library.fake_class_registry.to_fake_obj"j
3torch._library.fake_class_registry.FakeScriptObject"3torch._library.fake_class_registry.FakeScriptObject*
	fake_mode
Any*5
x.
torch._C.ScriptObject"torch._C.ScriptObjectÑ
register_fake_class6torch._library.fake_class_registry.register_fake_class"
Any*
qualname
Any*á

fake_classÎ
FUnion[torch._library.fake_class_registry.HasStaticMethodFromReal,None]x
:torch._library.fake_class_registry.HasStaticMethodFromReal":torch._library.fake_class_registry.HasStaticMethodFromReal
None _
deregister_fake_class8torch._library.fake_class_registry.deregister_fake_class*
qualname
has_fake_class1torch._library.fake_class_registry.has_fake_class"
builtins.bool"builtins.bool*
full_qualname
Any‰
find_fake_class2torch._library.fake_class_registry.find_fake_class"&
Union[Any,None]
Any
None*
full_qualname
Any›
_full_qual_class_name8torch._library.fake_class_registry._full_qual_class_name"
builtins.str"builtins.str**
qualname
builtins.str"builtins.strÞ
_ns_and_class_name5torch._library.fake_class_registry._ns_and_class_name"`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*/
full_qualname
builtins.str"builtins.str«
"_find_fake_class_for_script_objectEtorch._library.fake_class_registry._find_fake_class_for_script_object"
Any*5
x.
torch._C.ScriptObject"torch._C.ScriptObject~
_fake_obj_from_real6torch._library.fake_class_registry._fake_obj_from_real"
Any*
	fake_mode
Any*
x
Any*ž
__annotations__2torch._library.fake_class_registry.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*O
log&torch._library.fake_class_registry.log 
logging.Logger"logging.Logger*É
global_fake_class_registry=torch._library.fake_class_registry.global_fake_class_registryl
4torch._library.fake_class_registry.FakeClassRegistry"4torch._library.fake_class_registry.FakeClassRegistry*s
_CONVERT_FROM_REAL_NAME:torch._library.fake_class_registry._CONVERT_FROM_REAL_NAME
builtins.str"builtins.str