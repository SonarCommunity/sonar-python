
astî
AST_ast.AST"builtins.object*Ñ
__init___ast.AST.__init__"
None*
self
_ast.AST"_ast.AST*
args
Any*
kwargs
Anyz36z37z38z39z310j36j37j38j39j310rÜ
_attributes_ast.AST._attributesL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*36*37*38*39*310r~
_fields_ast.AST._fieldsL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*36*37*38*39*310rL
lineno_ast.AST.lineno
builtins.int"builtins.int*36*37*38*39*310rT

col_offset_ast.AST.col_offset
builtins.int"builtins.int*36*37*38*39*310rt

end_lineno_ast.AST.end_linenoD
Union[builtins.int,None]
builtins.int"builtins.int
None*38*39*310r|
end_col_offset_ast.AST.end_col_offsetD
Union[builtins.int,None]
builtins.int"builtins.int
None*38*39*310rx
type_comment_ast.AST.type_commentD
Union[builtins.str,None]
builtins.str"builtins.str
None*38*39*310r;
__match_args___ast.AST.__match_args__
Tuple[]*310.
mod_ast.mod"_ast.ASTj36j37j38j39j310…
Module_ast.Module"_ast.modj36j37j38j39j310rp
body_ast.Module.bodyA
builtins.list[_ast.stmt]
	_ast.stmt"	_ast.stmt"builtins.list*36*37*38*39*310rä
type_ignores_ast.Module.type_ignoresS
builtins.list[_ast.TypeIgnore]"
_ast.TypeIgnore"_ast.TypeIgnore"builtins.list*38*39*310rì
__match_args___ast.Module.__match_args__`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*310§
Interactive_ast.Interactive"_ast.modj36j37j38j39j310ru
body_ast.Interactive.bodyA
builtins.list[_ast.stmt]
	_ast.stmt"	_ast.stmt"builtins.list*36*37*38*39*310rm
__match_args___ast.Interactive.__match_args__5
Tuple[builtins.str]
builtins.str"builtins.str*310ı

Expression_ast.Expression"_ast.modj36j37j38j39j310rI
body_ast.Expression.body
	_ast.expr"	_ast.expr*36*37*38*39*310rl
__match_args___ast.Expression.__match_args__5
Tuple[builtins.str]
builtins.str"builtins.str*3100
stmt	_ast.stmt"_ast.ASTj36j37j38j39j310©
FunctionDef_ast.FunctionDef"	_ast.stmtj36j37j38j39j310rP
name_ast.FunctionDef.name
builtins.str"builtins.str*36*37*38*39*310rT
args_ast.FunctionDef.args 
_ast.arguments"_ast.arguments*36*37*38*39*310ru
body_ast.FunctionDef.bodyA
builtins.list[_ast.stmt]
	_ast.stmt"	_ast.stmt"builtins.list*36*37*38*39*310râ
decorator_list_ast.FunctionDef.decorator_listA
builtins.list[_ast.expr]
	_ast.expr"	_ast.expr"builtins.list*36*37*38*39*310ru
returns_ast.FunctionDef.returns;
Union[_ast.expr,None]
	_ast.expr"	_ast.expr
None*36*37*38*39*310r≈
__match_args___ast.FunctionDef.__match_args__å
TTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*310—
AsyncFunctionDef_ast.AsyncFunctionDef"	_ast.stmtj36j37j38j39j310rU
name_ast.AsyncFunctionDef.name
builtins.str"builtins.str*36*37*38*39*310rY
args_ast.AsyncFunctionDef.args 
_ast.arguments"_ast.arguments*36*37*38*39*310rz
body_ast.AsyncFunctionDef.bodyA
builtins.list[_ast.stmt]
	_ast.stmt"	_ast.stmt"builtins.list*36*37*38*39*310ré
decorator_list$_ast.AsyncFunctionDef.decorator_listA
builtins.list[_ast.expr]
	_ast.expr"	_ast.expr"builtins.list*36*37*38*39*310rz
returns_ast.AsyncFunctionDef.returns;
Union[_ast.expr,None]
	_ast.expr"	_ast.expr
None*36*37*38*39*310r 
__match_args__$_ast.AsyncFunctionDef.__match_args__å
TTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*310õ
ClassDef_ast.ClassDef"	_ast.stmtj36j37j38j39j310rM
name_ast.ClassDef.name
builtins.str"builtins.str*36*37*38*39*310rt
bases_ast.ClassDef.basesA
builtins.list[_ast.expr]
	_ast.expr"	_ast.expr"builtins.list*36*37*38*39*310rÉ
keywords_ast.ClassDef.keywordsJ
builtins.list[_ast.keyword]
_ast.keyword"_ast.keyword"builtins.list*36*37*38*39*310rr
body_ast.ClassDef.bodyA
builtins.list[_ast.stmt]
	_ast.stmt"	_ast.stmt"builtins.list*36*37*38*39*310rÜ
decorator_list_ast.ClassDef.decorator_listA
builtins.list[_ast.expr]
	_ast.expr"	_ast.expr"builtins.list*36*37*38*39*310ró
__match_args___ast.ClassDef.__match_args__·
GTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*310ç
Return_ast.Return"	_ast.stmtj36j37j38j39j310rl
value_ast.Return.value;
Union[_ast.expr,None]
	_ast.expr"	_ast.expr
None*36*37*38*39*310rh
__match_args___ast.Return.__match_args__5
Tuple[builtins.str]
builtins.str"builtins.str*310ó
Delete_ast.Delete"	_ast.stmtj36j37j38j39j310rv
targets_ast.Delete.targetsA
builtins.list[_ast.expr]
	_ast.expr"	_ast.expr"builtins.list*36*37*38*39*310rh
__match_args___ast.Delete.__match_args__5
Tuple[builtins.str]
builtins.str"builtins.str*310∏
Assign_ast.Assign"	_ast.stmtj36j37j38j39j310rv
targets_ast.Assign.targetsA
builtins.list[_ast.expr]
	_ast.expr"	_ast.expr"builtins.list*36*37*38*39*310rG
value_ast.Assign.value
	_ast.expr"	_ast.expr*36*37*38*39*310rø
__match_args___ast.Assign.__match_args__ã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*310‚
	AugAssign_ast.AugAssign"	_ast.stmtj36j37j38j39j310r≈
target_ast.AugAssign.targeté
.Union[_ast.Name,_ast.Attribute,_ast.Subscript]
	_ast.Name"	_ast.Name 
_ast.Attribute"_ast.Attribute 
_ast.Subscript"_ast.Subscript*36*37*38*39*310rL
op_ast.AugAssign.op
_ast.operator"_ast.operator*36*37*38*39*310rJ
value_ast.AugAssign.value
	_ast.expr"	_ast.expr*36*37*38*39*310r¬
__match_args___ast.AugAssign.__match_args__ã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*310é
	AnnAssign_ast.AnnAssign"	_ast.stmtj36j37j38j39j310r≈
target_ast.AnnAssign.targeté
.Union[_ast.Name,_ast.Attribute,_ast.Subscript]
	_ast.Name"	_ast.Name 
_ast.Attribute"_ast.Attribute 
_ast.Subscript"_ast.Subscript*36*37*38*39*310rT

annotation_ast.AnnAssign.annotation
	_ast.expr"	_ast.expr*36*37*38*39*310ro
value_ast.AnnAssign.value;
Union[_ast.expr,None]
	_ast.expr"	_ast.expr
None*36*37*38*39*310rR
simple_ast.AnnAssign.simple
builtins.int"builtins.int*36*37*38*39*310rÌ
__match_args___ast.AnnAssign.__match_args__∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*310≤
For_ast.For"	_ast.stmtj36j37j38j39j310rF
target_ast.For.target
	_ast.expr"	_ast.expr*36*37*38*39*310rB
iter_ast.For.iter
	_ast.expr"	_ast.expr*36*37*38*39*310rm
body_ast.For.bodyA
builtins.list[_ast.stmt]
	_ast.stmt"	_ast.stmt"builtins.list*36*37*38*39*310rq
orelse_ast.For.orelseA
builtins.list[_ast.stmt]
	_ast.stmt"	_ast.stmt"builtins.list*36*37*38*39*310rí
__match_args___ast.For.__match_args__·
GTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*310’
AsyncFor_ast.AsyncFor"	_ast.stmtj36j37j38j39j310rK
target_ast.AsyncFor.target
	_ast.expr"	_ast.expr*36*37*38*39*310rG
iter_ast.AsyncFor.iter
	_ast.expr"	_ast.expr*36*37*38*39*310rr
body_ast.AsyncFor.bodyA
builtins.list[_ast.stmt]
	_ast.stmt"	_ast.stmt"builtins.list*36*37*38*39*310rv
orelse_ast.AsyncFor.orelseA
builtins.list[_ast.stmt]
	_ast.stmt"	_ast.stmt"builtins.list*36*37*38*39*310ró
__match_args___ast.AsyncFor.__match_args__·
GTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*310†
While
_ast.While"	_ast.stmtj36j37j38j39j310rD
test_ast.While.test
	_ast.expr"	_ast.expr*36*37*38*39*310ro
body_ast.While.bodyA
builtins.list[_ast.stmt]
	_ast.stmt"	_ast.stmt"builtins.list*36*37*38*39*310rs
orelse_ast.While.orelseA
builtins.list[_ast.stmt]
	_ast.stmt"	_ast.stmt"builtins.list*36*37*38*39*310ræ
__match_args___ast.While.__match_args__ã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*310é
If_ast.If"	_ast.stmtj36j37j38j39j310rA
test_ast.If.test
	_ast.expr"	_ast.expr*36*37*38*39*310rl
body_ast.If.bodyA
builtins.list[_ast.stmt]
	_ast.stmt"	_ast.stmt"builtins.list*36*37*38*39*310rp
orelse_ast.If.orelseA
builtins.list[_ast.stmt]
	_ast.stmt"	_ast.stmt"builtins.list*36*37*38*39*310rª
__match_args___ast.If.__match_args__ã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*310ﬂ
With	_ast.With"	_ast.stmtj36j37j38j39j310r|
items_ast.With.itemsM
builtins.list[_ast.withitem]
_ast.withitem"_ast.withitem"builtins.list*36*37*38*39*310rn
body_ast.With.bodyA
builtins.list[_ast.stmt]
	_ast.stmt"	_ast.stmt"builtins.list*36*37*38*39*310rΩ
__match_args___ast.With.__match_args__ã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*310˘
	AsyncWith_ast.AsyncWith"	_ast.stmtj36j37j38j39j310rÅ
items_ast.AsyncWith.itemsM
builtins.list[_ast.withitem]
_ast.withitem"_ast.withitem"builtins.list*36*37*38*39*310rs
body_ast.AsyncWith.bodyA
builtins.list[_ast.stmt]
	_ast.stmt"	_ast.stmt"builtins.list*36*37*38*39*310r¬
__match_args___ast.AsyncWith.__match_args__ã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*310û
Raise
_ast.Raise"	_ast.stmtj36j37j38j39j310rg
exc_ast.Raise.exc;
Union[_ast.expr,None]
	_ast.expr"	_ast.expr
None*36*37*38*39*310rk
cause_ast.Raise.cause;
Union[_ast.expr,None]
	_ast.expr"	_ast.expr
None*36*37*38*39*310rí
__match_args___ast.Raise.__match_args__`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*310á
Try_ast.Try"	_ast.stmtj36j37j38j39j310rm
body_ast.Try.bodyA
builtins.list[_ast.stmt]
	_ast.stmt"	_ast.stmt"builtins.list*36*37*38*39*310rê
handlers_ast.Try.handlers\
!builtins.list[_ast.ExceptHandler](
_ast.ExceptHandler"_ast.ExceptHandler"builtins.list*36*37*38*39*310rq
orelse_ast.Try.orelseA
builtins.list[_ast.stmt]
	_ast.stmt"	_ast.stmt"builtins.list*36*37*38*39*310rw
	finalbody_ast.Try.finalbodyA
builtins.list[_ast.stmt]
	_ast.stmt"	_ast.stmt"builtins.list*36*37*38*39*310rÁ
__match_args___ast.Try.__match_args__∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*310¸
Assert_ast.Assert"	_ast.stmtj36j37j38j39j310rE
test_ast.Assert.test
	_ast.expr"	_ast.expr*36*37*38*39*310rh
msg_ast.Assert.msg;
Union[_ast.expr,None]
	_ast.expr"	_ast.expr
None*36*37*38*39*310rì
__match_args___ast.Assert.__match_args__`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*310ñ
Import_ast.Import"	_ast.stmtj36j37j38j39j310ru
names_ast.Import.namesD
builtins.list[_ast.alias]

_ast.alias"
_ast.alias"builtins.list*36*37*38*39*310rh
__match_args___ast.Import.__match_args__5
Tuple[builtins.str]
builtins.str"builtins.str*310Œ

ImportFrom_ast.ImportFrom"	_ast.stmtj36j37j38j39j310r{
module_ast.ImportFrom.moduleD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310ry
names_ast.ImportFrom.namesD
builtins.list[_ast.alias]

_ast.alias"
_ast.alias"builtins.list*36*37*38*39*310rQ
level_ast.ImportFrom.level
builtins.int"builtins.int*36*37*38*39*310r√
__match_args___ast.ImportFrom.__match_args__ã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*310ú
Global_ast.Global"	_ast.stmtj36j37j38j39j310r{
names_ast.Global.namesJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*36*37*38*39*310rh
__match_args___ast.Global.__match_args__5
Tuple[builtins.str]
builtins.str"builtins.str*310§
Nonlocal_ast.Nonlocal"	_ast.stmtj36j37j38j39j310r}
names_ast.Nonlocal.namesJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*36*37*38*39*310rj
__match_args___ast.Nonlocal.__match_args__5
Tuple[builtins.str]
builtins.str"builtins.str*310‡
Expr	_ast.Expr"	_ast.stmtj36j37j38j39j310rE
value_ast.Expr.value
	_ast.expr"	_ast.expr*36*37*38*39*310rf
__match_args___ast.Expr.__match_args__5
Tuple[builtins.str]
builtins.str"builtins.str*3101
Pass	_ast.Pass"	_ast.stmtj36j37j38j39j3103
Break
_ast.Break"	_ast.stmtj36j37j38j39j3109
Continue_ast.Continue"	_ast.stmtj36j37j38j39j3100
expr	_ast.expr"_ast.ASTj36j37j38j39j310à
BoolOp_ast.BoolOp"	_ast.exprj36j37j38j39j310rE
op_ast.BoolOp.op
_ast.boolop"_ast.boolop*36*37*38*39*310rt
values_ast.BoolOp.valuesA
builtins.list[_ast.expr]
	_ast.expr"	_ast.expr"builtins.list*36*37*38*39*310rì
__match_args___ast.BoolOp.__match_args__`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*310Ã
BinOp
_ast.BinOp"	_ast.exprj36j37j38j39j310rD
left_ast.BinOp.left
	_ast.expr"	_ast.expr*36*37*38*39*310rH
op_ast.BinOp.op
_ast.operator"_ast.operator*36*37*38*39*310rF
right_ast.BinOp.right
	_ast.expr"	_ast.expr*36*37*38*39*310ræ
__match_args___ast.BinOp.__match_args__ã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*310Ê
UnaryOp_ast.UnaryOp"	_ast.exprj36j37j38j39j310rH
op_ast.UnaryOp.op
_ast.unaryop"_ast.unaryop*36*37*38*39*310rL
operand_ast.UnaryOp.operand
	_ast.expr"	_ast.expr*36*37*38*39*310rî
__match_args___ast.UnaryOp.__match_args__`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*310„
Lambda_ast.Lambda"	_ast.exprj36j37j38j39j310rO
args_ast.Lambda.args 
_ast.arguments"_ast.arguments*36*37*38*39*310rE
body_ast.Lambda.body
	_ast.expr"	_ast.expr*36*37*38*39*310rì
__match_args___ast.Lambda.__match_args__`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*310 
IfExp
_ast.IfExp"	_ast.exprj36j37j38j39j310rD
test_ast.IfExp.test
	_ast.expr"	_ast.expr*36*37*38*39*310rD
body_ast.IfExp.body
	_ast.expr"	_ast.expr*36*37*38*39*310rH
orelse_ast.IfExp.orelse
	_ast.expr"	_ast.expr*36*37*38*39*310ræ
__match_args___ast.IfExp.__match_args__ã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*310€
Dict	_ast.Dict"	_ast.exprj36j37j38j39j310rü
keys_ast.Dict.keysr
$builtins.list[Union[_ast.expr,None]];
Union[_ast.expr,None]
	_ast.expr"	_ast.expr
None"builtins.list*36*37*38*39*310rr
values_ast.Dict.valuesA
builtins.list[_ast.expr]
	_ast.expr"	_ast.expr"builtins.list*36*37*38*39*310rë
__match_args___ast.Dict.__match_args__`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*310Ö
Set_ast.Set"	_ast.exprj36j37j38j39j310rm
elts_ast.Set.eltsA
builtins.list[_ast.expr]
	_ast.expr"	_ast.expr"builtins.list*36*37*38*39*310re
__match_args___ast.Set.__match_args__5
Tuple[builtins.str]
builtins.str"builtins.str*310¥
ListComp_ast.ListComp"	_ast.exprj36j37j38j39j310rE
elt_ast.ListComp.elt
	_ast.expr"	_ast.expr*36*37*38*39*310rô

generators_ast.ListComp.generators\
!builtins.list[_ast.comprehension](
_ast.comprehension"_ast.comprehension"builtins.list*36*37*38*39*310rï
__match_args___ast.ListComp.__match_args__`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*310Ø
SetComp_ast.SetComp"	_ast.exprj36j37j38j39j310rD
elt_ast.SetComp.elt
	_ast.expr"	_ast.expr*36*37*38*39*310rò

generators_ast.SetComp.generators\
!builtins.list[_ast.comprehension](
_ast.comprehension"_ast.comprehension"builtins.list*36*37*38*39*310rî
__match_args___ast.SetComp.__match_args__`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*310´
DictComp_ast.DictComp"	_ast.exprj36j37j38j39j310rE
key_ast.DictComp.key
	_ast.expr"	_ast.expr*36*37*38*39*310rI
value_ast.DictComp.value
	_ast.expr"	_ast.expr*36*37*38*39*310rô

generators_ast.DictComp.generators\
!builtins.list[_ast.comprehension](
_ast.comprehension"_ast.comprehension"builtins.list*36*37*38*39*310r¡
__match_args___ast.DictComp.__match_args__ã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*310»
GeneratorExp_ast.GeneratorExp"	_ast.exprj36j37j38j39j310rI
elt_ast.GeneratorExp.elt
	_ast.expr"	_ast.expr*36*37*38*39*310rù

generators_ast.GeneratorExp.generators\
!builtins.list[_ast.comprehension](
_ast.comprehension"_ast.comprehension"builtins.list*36*37*38*39*310rô
__match_args__ _ast.GeneratorExp.__match_args__`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*310‰
Await
_ast.Await"	_ast.exprj36j37j38j39j310rF
value_ast.Await.value
	_ast.expr"	_ast.expr*36*37*38*39*310rg
__match_args___ast.Await.__match_args__5
Tuple[builtins.str]
builtins.str"builtins.str*310â
Yield
_ast.Yield"	_ast.exprj36j37j38j39j310rk
value_ast.Yield.value;
Union[_ast.expr,None]
	_ast.expr"	_ast.expr
None*36*37*38*39*310rg
__match_args___ast.Yield.__match_args__5
Tuple[builtins.str]
builtins.str"builtins.str*310Ù
	YieldFrom_ast.YieldFrom"	_ast.exprj36j37j38j39j310rJ
value_ast.YieldFrom.value
	_ast.expr"	_ast.expr*36*37*38*39*310rk
__match_args___ast.YieldFrom.__match_args__5
Tuple[builtins.str]
builtins.str"builtins.str*310∑
Compare_ast.Compare"	_ast.exprj36j37j38j39j310rF
left_ast.Compare.left
	_ast.expr"	_ast.expr*36*37*38*39*310rr
ops_ast.Compare.opsD
builtins.list[_ast.cmpop]

_ast.cmpop"
_ast.cmpop"builtins.list*36*37*38*39*310r
comparators_ast.Compare.comparatorsA
builtins.list[_ast.expr]
	_ast.expr"	_ast.expr"builtins.list*36*37*38*39*310r¿
__match_args___ast.Compare.__match_args__ã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*310ß
Call	_ast.Call"	_ast.exprj36j37j38j39j310rC
func_ast.Call.func
	_ast.expr"	_ast.expr*36*37*38*39*310rn
args_ast.Call.argsA
builtins.list[_ast.expr]
	_ast.expr"	_ast.expr"builtins.list*36*37*38*39*310r
keywords_ast.Call.keywordsJ
builtins.list[_ast.keyword]
_ast.keyword"_ast.keyword"builtins.list*36*37*38*39*310rΩ
__match_args___ast.Call.__match_args__ã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*310ƒ
FormattedValue_ast.FormattedValue"	_ast.exprj36j37j38j39j310rO
value_ast.FormattedValue.value
	_ast.expr"	_ast.expr*36*37*38*39*310r_

conversion_ast.FormattedValue.conversion
builtins.int"builtins.int*36*37*38*39*310rÄ
format_spec_ast.FormattedValue.format_spec;
Union[_ast.expr,None]
	_ast.expr"	_ast.expr
None*36*37*38*39*310r«
__match_args__"_ast.FormattedValue.__match_args__ã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*310°
	JoinedStr_ast.JoinedStr"	_ast.exprj36j37j38j39j310rw
values_ast.JoinedStr.valuesA
builtins.list[_ast.expr]
	_ast.expr"	_ast.expr"builtins.list*36*37*38*39*310rk
__match_args___ast.JoinedStr.__match_args__5
Tuple[builtins.str]
builtins.str"builtins.str*310‹
Num_ast.Num"	_ast.exprj36j37r∑
n
_ast.Num.nù
3Union[builtins.int,builtins.float,builtins.complex]
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complex*36*37Y
Str_ast.Str"	_ast.exprj36j37r5
s
_ast.Str.s
builtins.str"builtins.str*36*37c
Bytes
_ast.Bytes"	_ast.exprj36j37r;
s_ast.Bytes.s 
builtins.bytes"builtins.bytes*36*37g
NameConstant_ast.NameConstant"	_ast.exprj36j37r1
value_ast.NameConstant.value
Any*36*37,
Ellipsis_ast.Ellipsis"	_ast.exprj36j37Ñ
Constant_ast.Constant"	_ast.exprj36j37j38j39j310r:
value_ast.Constant.value
Any*36*37*38*39*310ru
kind_ast.Constant.kindD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310r2
s_ast.Constant.s
Any*36*37*38*39*310r…
n_ast.Constant.nù
3Union[builtins.int,builtins.float,builtins.complex]
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complex*36*37*38*39*310rï
__match_args___ast.Constant.__match_args__`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*310Ù
	Attribute_ast.Attribute"	_ast.exprj36j37j38j39j310rJ
value_ast.Attribute.value
	_ast.expr"	_ast.expr*36*37*38*39*310rN
attr_ast.Attribute.attr
builtins.str"builtins.str*36*37*38*39*310rV
ctx_ast.Attribute.ctx&
_ast.expr_context"_ast.expr_context*36*37*38*39*310r¬
__match_args___ast.Attribute.__match_args__ã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*310)
slice
_ast.slice"_ast.ASTj36j37j38’
Slice
_ast.Slice"
_ast.slicej36j37j38rb
lower_ast.Slice.lower;
Union[_ast.expr,None]
	_ast.expr"	_ast.expr
None*36*37*38rb
upper_ast.Slice.upper;
Union[_ast.expr,None]
	_ast.expr"	_ast.expr
None*36*37*38r`
step_ast.Slice.step;
Union[_ast.expr,None]
	_ast.expr"	_ast.expr
None*36*37*38â
Slice
_ast.Slice"	_ast.exprj39j310r_
lower_ast.Slice.lower;
Union[_ast.expr,None]
	_ast.expr"	_ast.expr
None*39*310r_
upper_ast.Slice.upper;
Union[_ast.expr,None]
	_ast.expr"	_ast.expr
None*39*310r]
step_ast.Slice.step;
Union[_ast.expr,None]
	_ast.expr"	_ast.expr
None*39*310ræ
__match_args___ast.Slice.__match_args__ã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*310ü
ExtSlice_ast.ExtSlice"
_ast.slicej36j37j38rl
dims_ast.ExtSlice.dimsD
builtins.list[_ast.slice]

_ast.slice"
_ast.slice"builtins.list*36*37*38j
Index
_ast.Index"
_ast.slicej36j37j38r=
value_ast.Index.value
	_ast.expr"	_ast.expr*36*37*38©
	Subscript_ast.Subscript"	_ast.exprj36j37j38j39j310rJ
value_ast.Subscript.value
	_ast.expr"	_ast.expr*36*37*38*39*310rC
slice_ast.Subscript.slice

_ast.slice"
_ast.slice*36*37*38r>
slice_ast.Subscript.slice
	_ast.expr"	_ast.expr*39*310rV
ctx_ast.Subscript.ctx&
_ast.expr_context"_ast.expr_context*36*37*38*39*310r¬
__match_args___ast.Subscript.__match_args__ã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*310Ó
Starred_ast.Starred"	_ast.exprj36j37j38j39j310rH
value_ast.Starred.value
	_ast.expr"	_ast.expr*36*37*38*39*310rT
ctx_ast.Starred.ctx&
_ast.expr_context"_ast.expr_context*36*37*38*39*310rî
__match_args___ast.Starred.__match_args__`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*310ﬂ
Name	_ast.Name"	_ast.exprj36j37j38j39j310rE
id_ast.Name.id
builtins.str"builtins.str*36*37*38*39*310rQ
ctx_ast.Name.ctx&
_ast.expr_context"_ast.expr_context*36*37*38*39*310rë
__match_args___ast.Name.__match_args__`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*310à
List	_ast.List"	_ast.exprj36j37j38j39j310rn
elts_ast.List.eltsA
builtins.list[_ast.expr]
	_ast.expr"	_ast.expr"builtins.list*36*37*38*39*310rQ
ctx_ast.List.ctx&
_ast.expr_context"_ast.expr_context*36*37*38*39*310rë
__match_args___ast.List.__match_args__`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*310Ú
Tuple
_ast.Tuple"	_ast.exprj36j37j38j39j310ro
elts_ast.Tuple.eltsA
builtins.list[_ast.expr]
	_ast.expr"	_ast.expr"builtins.list*36*37*38*39*310rR
ctx_ast.Tuple.ctx&
_ast.expr_context"_ast.expr_context*36*37*38*39*310rc
dims_ast.Tuple.dimsA
builtins.list[_ast.expr]
	_ast.expr"	_ast.expr"builtins.list*39*310rí
__match_args___ast.Tuple.__match_args__`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*310@
expr_context_ast.expr_context"_ast.ASTj36j37j38j39j3106
AugLoad_ast.AugLoad"_ast.expr_contextj36j37j388
AugStore_ast.AugStore"_ast.expr_contextj36j37j382
Param
_ast.Param"_ast.expr_contextj36j37j38ë
Suite
_ast.Suite"_ast.modj36j37j38rf
body_ast.Suite.bodyA
builtins.list[_ast.stmt]
	_ast.stmt"	_ast.stmt"builtins.list*36*37*387
Del_ast.Del"_ast.expr_contextj36j37j38j39j3109
Load	_ast.Load"_ast.expr_contextj36j37j38j39j310;
Store
_ast.Store"_ast.expr_contextj36j37j38j39j3104
boolop_ast.boolop"_ast.ASTj36j37j38j39j3101
And_ast.And"_ast.boolopj36j37j38j39j310/
Or_ast.Or"_ast.boolopj36j37j38j39j3108
operator_ast.operator"_ast.ASTj36j37j38j39j3103
Add_ast.Add"_ast.operatorj36j37j38j39j3109
BitAnd_ast.BitAnd"_ast.operatorj36j37j38j39j3107
BitOr
_ast.BitOr"_ast.operatorj36j37j38j39j3109
BitXor_ast.BitXor"_ast.operatorj36j37j38j39j3103
Div_ast.Div"_ast.operatorj36j37j38j39j310=
FloorDiv_ast.FloorDiv"_ast.operatorj36j37j38j39j3109
LShift_ast.LShift"_ast.operatorj36j37j38j39j3103
Mod_ast.Mod"_ast.operatorj36j37j38j39j3105
Mult	_ast.Mult"_ast.operatorj36j37j38j39j310;
MatMult_ast.MatMult"_ast.operatorj36j37j38j39j3103
Pow_ast.Pow"_ast.operatorj36j37j38j39j3109
RShift_ast.RShift"_ast.operatorj36j37j38j39j3103
Sub_ast.Sub"_ast.operatorj36j37j38j39j3106
unaryop_ast.unaryop"_ast.ASTj36j37j38j39j3108
Invert_ast.Invert"_ast.unaryopj36j37j38j39j3102
Not_ast.Not"_ast.unaryopj36j37j38j39j3104
UAdd	_ast.UAdd"_ast.unaryopj36j37j38j39j3104
USub	_ast.USub"_ast.unaryopj36j37j38j39j3102
cmpop
_ast.cmpop"_ast.ASTj36j37j38j39j310.
Eq_ast.Eq"
_ast.cmpopj36j37j38j39j310.
Gt_ast.Gt"
_ast.cmpopj36j37j38j39j3100
GtE_ast.GtE"
_ast.cmpopj36j37j38j39j310.
In_ast.In"
_ast.cmpopj36j37j38j39j310.
Is_ast.Is"
_ast.cmpopj36j37j38j39j3104
IsNot
_ast.IsNot"
_ast.cmpopj36j37j38j39j310.
Lt_ast.Lt"
_ast.cmpopj36j37j38j39j3100
LtE_ast.LtE"
_ast.cmpopj36j37j38j39j3104
NotEq
_ast.NotEq"
_ast.cmpopj36j37j38j39j3104
NotIn
_ast.NotIn"
_ast.cmpopj36j37j38j39j310©
comprehension_ast.comprehension"_ast.ASTj36j37j38j39j310rP
target_ast.comprehension.target
	_ast.expr"	_ast.expr*36*37*38*39*310rL
iter_ast.comprehension.iter
	_ast.expr"	_ast.expr*36*37*38*39*310ru
ifs_ast.comprehension.ifsA
builtins.list[_ast.expr]
	_ast.expr"	_ast.expr"builtins.list*36*37*38*39*310rZ
is_async_ast.comprehension.is_async
builtins.int"builtins.int*36*37*38*39*310rÒ
__match_args__!_ast.comprehension.__match_args__∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*310B
excepthandler_ast.excepthandler"_ast.ASTj36j37j38j39j310˝
ExceptHandler_ast.ExceptHandler"_ast.excepthandlerj36j37j38j39j310rq
type_ast.ExceptHandler.type;
Union[_ast.expr,None]
	_ast.expr"	_ast.expr
None*36*37*38*39*310rz
name_ast.ExceptHandler.nameD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310rw
body_ast.ExceptHandler.bodyA
builtins.list[_ast.stmt]
	_ast.stmt"	_ast.stmt"builtins.list*36*37*38*39*310r∆
__match_args__!_ast.ExceptHandler.__match_args__ã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*310£

	arguments_ast.arguments"_ast.ASTj36j37j38j39j310rp
args_ast.arguments.args>
builtins.list[_ast.arg]
_ast.arg"_ast.arg"builtins.list*36*37*38*39*310rn
vararg_ast.arguments.vararg8
Union[_ast.arg,None]
_ast.arg"_ast.arg
None*36*37*38*39*310r|

kwonlyargs_ast.arguments.kwonlyargs>
builtins.list[_ast.arg]
_ast.arg"_ast.arg"builtins.list*36*37*38*39*310r≤
kw_defaults_ast.arguments.kw_defaultsr
$builtins.list[Union[_ast.expr,None]];
Union[_ast.expr,None]
	_ast.expr"	_ast.expr
None"builtins.list*36*37*38*39*310rl
kwarg_ast.arguments.kwarg8
Union[_ast.arg,None]
_ast.arg"_ast.arg
None*36*37*38*39*310r{
defaults_ast.arguments.defaultsA
builtins.list[_ast.expr]
	_ast.expr"	_ast.expr"builtins.list*36*37*38*39*310rv
posonlyargs_ast.arguments.posonlyargs>
builtins.list[_ast.arg]
_ast.arg"_ast.arg"builtins.list*38*39*310rÓ
__match_args___ast.arguments.__match_args__∑
aTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*310™
arg_ast.arg"_ast.ASTj36j37j38j39j310rF
arg_ast.arg.arg
builtins.str"builtins.str*36*37*38*39*310rs

annotation_ast.arg.annotation;
Union[_ast.expr,None]
	_ast.expr"	_ast.expr
None*36*37*38*39*310rº
__match_args___ast.arg.__match_args__ã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*310ã
keyword_ast.keyword"_ast.ASTj36j37j38j39j310rr
arg_ast.keyword.argD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310rH
value_ast.keyword.value
	_ast.expr"	_ast.expr*36*37*38*39*310rî
__match_args___ast.keyword.__match_args__`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*310ã
alias
_ast.alias"_ast.ASTj36j37j38j39j310rJ
name_ast.alias.name
builtins.str"builtins.str*36*37*38*39*310rv
asname_ast.alias.asnameD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310rí
__match_args___ast.alias.__match_args__`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*310©
withitem_ast.withitem"_ast.ASTj36j37j38j39j310rW
context_expr_ast.withitem.context_expr
	_ast.expr"	_ast.expr*36*37*38*39*310r~
optional_vars_ast.withitem.optional_vars;
Union[_ast.expr,None]
	_ast.expr"	_ast.expr
None*36*37*38*39*310rï
__match_args___ast.withitem.__match_args__`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*310äû
NodeVisitorast.NodeVisitor"builtins.object*ä
visitast.NodeVisitor.visit"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.AST"_ast.ASTz36z37z38z39z310*ö
generic_visitast.NodeVisitor.generic_visit"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.AST"_ast.ASTz36z37z38z39z310*û
visit_Moduleast.NodeVisitor.visit_Module"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*$
node
_ast.Module"_ast.Modulez36z37z38z39z310*≤
visit_Interactive!ast.NodeVisitor.visit_Interactive"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*.
node$
_ast.Interactive"_ast.Interactivez36z37z38z39z310*Æ
visit_Expression ast.NodeVisitor.visit_Expression"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*,
node"
_ast.Expression"_ast.Expressionz36z37z38z39z310*≤
visit_FunctionDef!ast.NodeVisitor.visit_FunctionDef"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*.
node$
_ast.FunctionDef"_ast.FunctionDefz36z37z38z39z310*∆
visit_AsyncFunctionDef&ast.NodeVisitor.visit_AsyncFunctionDef"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*8
node.
_ast.AsyncFunctionDef"_ast.AsyncFunctionDefz36z37z38z39z310*¶
visit_ClassDefast.NodeVisitor.visit_ClassDef"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*(
node
_ast.ClassDef"_ast.ClassDefz36z37z38z39z310*û
visit_Returnast.NodeVisitor.visit_Return"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*$
node
_ast.Return"_ast.Returnz36z37z38z39z310*û
visit_Deleteast.NodeVisitor.visit_Delete"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*$
node
_ast.Delete"_ast.Deletez36z37z38z39z310*û
visit_Assignast.NodeVisitor.visit_Assign"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*$
node
_ast.Assign"_ast.Assignz36z37z38z39z310*™
visit_AugAssignast.NodeVisitor.visit_AugAssign"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor**
node 
_ast.AugAssign"_ast.AugAssignz36z37z38z39z310*™
visit_AnnAssignast.NodeVisitor.visit_AnnAssign"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor**
node 
_ast.AnnAssign"_ast.AnnAssignz36z37z38z39z310*í
	visit_Forast.NodeVisitor.visit_For"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.For"_ast.Forz36z37z38z39z310*¶
visit_AsyncForast.NodeVisitor.visit_AsyncFor"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*(
node
_ast.AsyncFor"_ast.AsyncForz36z37z38z39z310*ö
visit_Whileast.NodeVisitor.visit_While"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.While"
_ast.Whilez36z37z38z39z310*é
visit_Ifast.NodeVisitor.visit_If"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.If"_ast.Ifz36z37z38z39z310*ñ

visit_Withast.NodeVisitor.visit_With"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor* 
node
	_ast.With"	_ast.Withz36z37z38z39z310*™
visit_AsyncWithast.NodeVisitor.visit_AsyncWith"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor**
node 
_ast.AsyncWith"_ast.AsyncWithz36z37z38z39z310*ö
visit_Raiseast.NodeVisitor.visit_Raise"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.Raise"
_ast.Raisez36z37z38z39z310*í
	visit_Tryast.NodeVisitor.visit_Try"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Try"_ast.Tryz36z37z38z39z310*û
visit_Assertast.NodeVisitor.visit_Assert"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*$
node
_ast.Assert"_ast.Assertz36z37z38z39z310*û
visit_Importast.NodeVisitor.visit_Import"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*$
node
_ast.Import"_ast.Importz36z37z38z39z310*Æ
visit_ImportFrom ast.NodeVisitor.visit_ImportFrom"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*,
node"
_ast.ImportFrom"_ast.ImportFromz36z37z38z39z310*û
visit_Globalast.NodeVisitor.visit_Global"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*$
node
_ast.Global"_ast.Globalz36z37z38z39z310*¶
visit_Nonlocalast.NodeVisitor.visit_Nonlocal"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*(
node
_ast.Nonlocal"_ast.Nonlocalz36z37z38z39z310*ñ

visit_Exprast.NodeVisitor.visit_Expr"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor* 
node
	_ast.Expr"	_ast.Exprz36z37z38z39z310*ñ

visit_Passast.NodeVisitor.visit_Pass"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor* 
node
	_ast.Pass"	_ast.Passz36z37z38z39z310*ö
visit_Breakast.NodeVisitor.visit_Break"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.Break"
_ast.Breakz36z37z38z39z310*¶
visit_Continueast.NodeVisitor.visit_Continue"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*(
node
_ast.Continue"_ast.Continuez36z37z38z39z310*ö
visit_Sliceast.NodeVisitor.visit_Slice"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.Slice"
_ast.Slicez36z37z38z39z310*û
visit_BoolOpast.NodeVisitor.visit_BoolOp"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*$
node
_ast.BoolOp"_ast.BoolOpz36z37z38z39z310*ö
visit_BinOpast.NodeVisitor.visit_BinOp"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.BinOp"
_ast.BinOpz36z37z38z39z310*¢
visit_UnaryOpast.NodeVisitor.visit_UnaryOp"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*&
node
_ast.UnaryOp"_ast.UnaryOpz36z37z38z39z310*û
visit_Lambdaast.NodeVisitor.visit_Lambda"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*$
node
_ast.Lambda"_ast.Lambdaz36z37z38z39z310*ö
visit_IfExpast.NodeVisitor.visit_IfExp"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.IfExp"
_ast.IfExpz36z37z38z39z310*ñ

visit_Dictast.NodeVisitor.visit_Dict"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor* 
node
	_ast.Dict"	_ast.Dictz36z37z38z39z310*í
	visit_Setast.NodeVisitor.visit_Set"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Set"_ast.Setz36z37z38z39z310*¶
visit_ListCompast.NodeVisitor.visit_ListComp"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*(
node
_ast.ListComp"_ast.ListCompz36z37z38z39z310*¢
visit_SetCompast.NodeVisitor.visit_SetComp"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*&
node
_ast.SetComp"_ast.SetCompz36z37z38z39z310*¶
visit_DictCompast.NodeVisitor.visit_DictComp"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*(
node
_ast.DictComp"_ast.DictCompz36z37z38z39z310*∂
visit_GeneratorExp"ast.NodeVisitor.visit_GeneratorExp"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*0
node&
_ast.GeneratorExp"_ast.GeneratorExpz36z37z38z39z310*ö
visit_Awaitast.NodeVisitor.visit_Await"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.Await"
_ast.Awaitz36z37z38z39z310*ö
visit_Yieldast.NodeVisitor.visit_Yield"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.Yield"
_ast.Yieldz36z37z38z39z310*™
visit_YieldFromast.NodeVisitor.visit_YieldFrom"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor**
node 
_ast.YieldFrom"_ast.YieldFromz36z37z38z39z310*¢
visit_Compareast.NodeVisitor.visit_Compare"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*&
node
_ast.Compare"_ast.Comparez36z37z38z39z310*ñ

visit_Callast.NodeVisitor.visit_Call"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor* 
node
	_ast.Call"	_ast.Callz36z37z38z39z310*æ
visit_FormattedValue$ast.NodeVisitor.visit_FormattedValue"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*4
node*
_ast.FormattedValue"_ast.FormattedValuez36z37z38z39z310*™
visit_JoinedStrast.NodeVisitor.visit_JoinedStr"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor**
node 
_ast.JoinedStr"_ast.JoinedStrz36z37z38z39z310*¶
visit_Constantast.NodeVisitor.visit_Constant"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*(
node
_ast.Constant"_ast.Constantz36z37z38z39z310*™
visit_Attributeast.NodeVisitor.visit_Attribute"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor**
node 
_ast.Attribute"_ast.Attributez36z37z38z39z310*™
visit_Subscriptast.NodeVisitor.visit_Subscript"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor**
node 
_ast.Subscript"_ast.Subscriptz36z37z38z39z310*¢
visit_Starredast.NodeVisitor.visit_Starred"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*&
node
_ast.Starred"_ast.Starredz36z37z38z39z310*ñ

visit_Nameast.NodeVisitor.visit_Name"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor* 
node
	_ast.Name"	_ast.Namez36z37z38z39z310*ñ

visit_Listast.NodeVisitor.visit_List"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor* 
node
	_ast.List"	_ast.Listz36z37z38z39z310*ö
visit_Tupleast.NodeVisitor.visit_Tuple"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.Tuple"
_ast.Tuplez36z37z38z39z310*í
	visit_Delast.NodeVisitor.visit_Del"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Del"_ast.Delz36z37z38z39z310*ñ

visit_Loadast.NodeVisitor.visit_Load"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor* 
node
	_ast.Load"	_ast.Loadz36z37z38z39z310*ö
visit_Storeast.NodeVisitor.visit_Store"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.Store"
_ast.Storez36z37z38z39z310*í
	visit_Andast.NodeVisitor.visit_And"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.And"_ast.Andz36z37z38z39z310*é
visit_Orast.NodeVisitor.visit_Or"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Or"_ast.Orz36z37z38z39z310*í
	visit_Addast.NodeVisitor.visit_Add"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Add"_ast.Addz36z37z38z39z310*û
visit_BitAndast.NodeVisitor.visit_BitAnd"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*$
node
_ast.BitAnd"_ast.BitAndz36z37z38z39z310*ö
visit_BitOrast.NodeVisitor.visit_BitOr"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.BitOr"
_ast.BitOrz36z37z38z39z310*û
visit_BitXorast.NodeVisitor.visit_BitXor"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*$
node
_ast.BitXor"_ast.BitXorz36z37z38z39z310*í
	visit_Divast.NodeVisitor.visit_Div"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Div"_ast.Divz36z37z38z39z310*¶
visit_FloorDivast.NodeVisitor.visit_FloorDiv"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*(
node
_ast.FloorDiv"_ast.FloorDivz36z37z38z39z310*û
visit_LShiftast.NodeVisitor.visit_LShift"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*$
node
_ast.LShift"_ast.LShiftz36z37z38z39z310*í
	visit_Modast.NodeVisitor.visit_Mod"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Mod"_ast.Modz36z37z38z39z310*ñ

visit_Multast.NodeVisitor.visit_Mult"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor* 
node
	_ast.Mult"	_ast.Multz36z37z38z39z310*¢
visit_MatMultast.NodeVisitor.visit_MatMult"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*&
node
_ast.MatMult"_ast.MatMultz36z37z38z39z310*í
	visit_Powast.NodeVisitor.visit_Pow"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Pow"_ast.Powz36z37z38z39z310*û
visit_RShiftast.NodeVisitor.visit_RShift"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*$
node
_ast.RShift"_ast.RShiftz36z37z38z39z310*í
	visit_Subast.NodeVisitor.visit_Sub"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Sub"_ast.Subz36z37z38z39z310*û
visit_Invertast.NodeVisitor.visit_Invert"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*$
node
_ast.Invert"_ast.Invertz36z37z38z39z310*í
	visit_Notast.NodeVisitor.visit_Not"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Not"_ast.Notz36z37z38z39z310*ñ

visit_UAddast.NodeVisitor.visit_UAdd"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor* 
node
	_ast.UAdd"	_ast.UAddz36z37z38z39z310*ñ

visit_USubast.NodeVisitor.visit_USub"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor* 
node
	_ast.USub"	_ast.USubz36z37z38z39z310*é
visit_Eqast.NodeVisitor.visit_Eq"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Eq"_ast.Eqz36z37z38z39z310*é
visit_Gtast.NodeVisitor.visit_Gt"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Gt"_ast.Gtz36z37z38z39z310*í
	visit_GtEast.NodeVisitor.visit_GtE"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.GtE"_ast.GtEz36z37z38z39z310*é
visit_Inast.NodeVisitor.visit_In"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.In"_ast.Inz36z37z38z39z310*é
visit_Isast.NodeVisitor.visit_Is"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Is"_ast.Isz36z37z38z39z310*ö
visit_IsNotast.NodeVisitor.visit_IsNot"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.IsNot"
_ast.IsNotz36z37z38z39z310*é
visit_Ltast.NodeVisitor.visit_Lt"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Lt"_ast.Ltz36z37z38z39z310*í
	visit_LtEast.NodeVisitor.visit_LtE"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.LtE"_ast.LtEz36z37z38z39z310*ö
visit_NotEqast.NodeVisitor.visit_NotEq"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.NotEq"
_ast.NotEqz36z37z38z39z310*ö
visit_NotInast.NodeVisitor.visit_NotIn"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.NotIn"
_ast.NotInz36z37z38z39z310*∫
visit_comprehension#ast.NodeVisitor.visit_comprehension"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*2
node(
_ast.comprehension"_ast.comprehensionz36z37z38z39z310*∫
visit_ExceptHandler#ast.NodeVisitor.visit_ExceptHandler"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*2
node(
_ast.ExceptHandler"_ast.ExceptHandlerz36z37z38z39z310*™
visit_argumentsast.NodeVisitor.visit_arguments"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor**
node 
_ast.arguments"_ast.argumentsz36z37z38z39z310*í
	visit_argast.NodeVisitor.visit_arg"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.arg"_ast.argz36z37z38z39z310*¢
visit_keywordast.NodeVisitor.visit_keyword"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*&
node
_ast.keyword"_ast.keywordz36z37z38z39z310*ö
visit_aliasast.NodeVisitor.visit_alias"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.alias"
_ast.aliasz36z37z38z39z310*¶
visit_withitemast.NodeVisitor.visit_withitem"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*(
node
_ast.withitem"_ast.withitemz36z37z38z39z310*ù
visit_ExtSliceast.NodeVisitor.visit_ExtSlice"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*(
node
_ast.ExtSlice"_ast.ExtSlicez36z37z38*ò
visit_ExtSliceast.NodeVisitor.visit_ExtSlice"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*&
node
ast.ExtSlice"ast.ExtSlicez39z310*ë
visit_Indexast.NodeVisitor.visit_Index"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.Index"
_ast.Indexz36z37z38*å
visit_Indexast.NodeVisitor.visit_Index"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor* 
node
	ast.Index"	ast.Indexz39z310*ë
visit_Suiteast.NodeVisitor.visit_Suite"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.Suite"
_ast.Suitez36z37z38*å
visit_Suiteast.NodeVisitor.visit_Suite"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor* 
node
	ast.Suite"	ast.Suitez39z310*ô
visit_AugLoadast.NodeVisitor.visit_AugLoad"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*&
node
_ast.AugLoad"_ast.AugLoadz36z37z38*î
visit_AugLoadast.NodeVisitor.visit_AugLoad"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*$
node
ast.AugLoad"ast.AugLoadz39z310*ù
visit_AugStoreast.NodeVisitor.visit_AugStore"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*(
node
_ast.AugStore"_ast.AugStorez36z37z38*ò
visit_AugStoreast.NodeVisitor.visit_AugStore"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*&
node
ast.AugStore"ast.AugStorez39z310*ë
visit_Paramast.NodeVisitor.visit_Param"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.Param"
_ast.Paramz36z37z38*å
visit_Paramast.NodeVisitor.visit_Param"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor* 
node
	ast.Param"	ast.Paramz39z310*Ö
	visit_Numast.NodeVisitor.visit_Num"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Num"_ast.Numz36z37*à
	visit_Numast.NodeVisitor.visit_Num"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
ast.Num"ast.Numz38z39z310*Ö
	visit_Strast.NodeVisitor.visit_Str"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Str"_ast.Strz36z37*à
	visit_Strast.NodeVisitor.visit_Str"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
ast.Str"ast.Strz38z39z310*ç
visit_Bytesast.NodeVisitor.visit_Bytes"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.Bytes"
_ast.Bytesz36z37*ê
visit_Bytesast.NodeVisitor.visit_Bytes"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor* 
node
	ast.Bytes"	ast.Bytesz38z39z310*©
visit_NameConstant"ast.NodeVisitor.visit_NameConstant"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*0
node&
_ast.NameConstant"_ast.NameConstantz36z37*¨
visit_NameConstant"ast.NodeVisitor.visit_NameConstant"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*.
node$
ast.NameConstant"ast.NameConstantz38z39z310*ô
visit_Ellipsisast.NodeVisitor.visit_Ellipsis"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*(
node
_ast.Ellipsis"_ast.Ellipsisz36z37*ú
visit_Ellipsisast.NodeVisitor.visit_Ellipsis"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*&
node
ast.Ellipsis"ast.Ellipsisz38z39z310*¢
visit_NamedExprast.NodeVisitor.visit_NamedExpr"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor**
node 
_ast.NamedExpr"_ast.NamedExprz38z39z310*¶
visit_TypeIgnore ast.NodeVisitor.visit_TypeIgnore"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*,
node"
_ast.TypeIgnore"_ast.TypeIgnorez38z39z310*ä
visit_Matchast.NodeVisitor.visit_Match"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.Match"
_ast.Matchz310*û
visit_MatchValue ast.NodeVisitor.visit_MatchValue"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*,
node"
_ast.MatchValue"_ast.MatchValuez310*™
visit_MatchSequence#ast.NodeVisitor.visit_MatchSequence"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*2
node(
_ast.MatchSequence"_ast.MatchSequencez310*ö
visit_MatchStarast.NodeVisitor.visit_MatchStar"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor**
node 
_ast.MatchStar"_ast.MatchStarz310*¶
visit_MatchMapping"ast.NodeVisitor.visit_MatchMapping"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*0
node&
_ast.MatchMapping"_ast.MatchMappingz310*û
visit_MatchClass ast.NodeVisitor.visit_MatchClass"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*,
node"
_ast.MatchClass"_ast.MatchClassz310*í
visit_MatchAsast.NodeVisitor.visit_MatchAs"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*&
node
_ast.MatchAs"_ast.MatchAsz310*í
visit_MatchOrast.NodeVisitor.visit_MatchOr"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*&
node
_ast.MatchOr"_ast.MatchOrz310j36j37j38j39j310Ç
NodeTransformerast.NodeTransformer"ast.NodeVisitor*≥
generic_visit!ast.NodeTransformer.generic_visit"
_ast.AST"_ast.AST*4
self*
ast.NodeTransformer"ast.NodeTransformer*
node
_ast.AST"_ast.ASTz36z37z38z39z310j36j37j38j39j3106
type_ignore_ast.type_ignore"_ast.ASTj38j39j310ù

TypeIgnore_ast.TypeIgnore"_ast.type_ignorej38j39j310rE
tag_ast.TypeIgnore.tag
builtins.str"builtins.str*38*39*310ró
__match_args___ast.TypeIgnore.__match_args__`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*310ó
FunctionType_ast.FunctionType"_ast.modj38j39j310rv
argtypes_ast.FunctionType.argtypesA
builtins.list[_ast.expr]
	_ast.expr"	_ast.expr"builtins.list*38*39*310rI
returns_ast.FunctionType.returns
	_ast.expr"	_ast.expr*38*39*310rô
__match_args__ _ast.FunctionType.__match_args__`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*310÷
	NamedExpr_ast.NamedExpr"	_ast.exprj38j39j310rD
target_ast.NamedExpr.target
	_ast.Name"	_ast.Name*38*39*310rB
value_ast.NamedExpr.value
	_ast.expr"	_ast.expr*38*39*310rñ
__match_args___ast.NamedExpr.__match_args__`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*310´
_ABCast._ABC"builtins.type*}
__init__ast._ABC.__init__"
None*
cls
ast._ABC"ast._ABC*,
args"
builtins.object"builtins.objectz39z310j38j39j310¸
Numast.Num"_ast.Constant@bast._ABCj38j39j310r√
valueast.Num.valueù
3Union[builtins.int,builtins.float,builtins.complex]
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complex*38*39*310¥
Strast.Str"_ast.Constant@bast._ABCj38j39j310rA
valueast.Str.value
builtins.str"builtins.str*38*39*310r9
s	ast.Str.s
builtins.str"builtins.str*38*39*310ƒ
Bytes	ast.Bytes"_ast.Constant@bast._ABCj38j39j310rG
valueast.Bytes.value 
builtins.bytes"builtins.bytes*38*39*310r?
sast.Bytes.s 
builtins.bytes"builtins.bytes*38*39*310H
NameConstantast.NameConstant"_ast.Constant@bast._ABCj38j39j310@
Ellipsisast.Ellipsis"_ast.Constant@bast._ABCj38j39j310%
slice	ast.slice"_ast.ASTj39j310,
ExtSliceast.ExtSlice"	ast.slicej39j310&
Index	ast.Index"	ast.slicej39j310%
Suite	ast.Suite"_ast.modj39j3102
AugLoadast.AugLoad"_ast.expr_contextj39j3104
AugStoreast.AugStore"_ast.expr_contextj39j310.
Param	ast.Param"_ast.expr_contextj39j310È
Match
_ast.Match"	_ast.stmtj310rí
__match_args___ast.Match.__match_args__`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*310r:
subject_ast.Match.subject
	_ast.expr"	_ast.expr*310rs
cases_ast.Match.casesS
builtins.list[_ast.match_case]"
_ast.match_case"_ast.match_case"builtins.list*310&
pattern_ast.pattern"_ast.ASTj310Å

match_case_ast.match_case"_ast.ASTj310r√
__match_args___ast.match_case.__match_args__ã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*310rE
pattern_ast.match_case.pattern
_ast.pattern"_ast.pattern*310r`
guard_ast.match_case.guard;
Union[_ast.expr,None]
	_ast.expr"	_ast.expr
None*310rd
body_ast.match_case.bodyA
builtins.list[_ast.stmt]
	_ast.stmt"	_ast.stmt"builtins.list*310€

MatchValue_ast.MatchValue"_ast.patternj310rl
__match_args___ast.MatchValue.__match_args__5
Tuple[builtins.str]
builtins.str"builtins.str*310r;
value_ast.MatchValue.value
	_ast.expr"	_ast.expr*310ñ
MatchSingleton_ast.MatchSingleton"_ast.patternj310rp
__match_args__"_ast.MatchSingleton.__match_args__5
Tuple[builtins.str]
builtins.str"builtins.str*310rÈ
value_ast.MatchSingleton.valueø
9Union[Literal[builtins.bool],Literal[builtins.bool],None]:
Literal[builtins.bool]	
builtins.bool"builtins.bool:
Literal[builtins.bool]	
builtins.bool"builtins.bool
None*310°
MatchSequence_ast.MatchSequence"_ast.patternj310ro
__match_args__!_ast.MatchSequence.__match_args__5
Tuple[builtins.str]
builtins.str"builtins.str*310rx
patterns_ast.MatchSequence.patternsJ
builtins.list[_ast.pattern]
_ast.pattern"_ast.pattern"builtins.list*310É
	MatchStar_ast.MatchStar"_ast.patternj310rk
__match_args___ast.MatchStar.__match_args__5
Tuple[builtins.str]
builtins.str"builtins.str*310rf
name_ast.MatchStar.nameD
Union[builtins.str,None]
builtins.str"builtins.str
None*310»
MatchMapping_ast.MatchMapping"_ast.patternj310r≈
__match_args__ _ast.MatchMapping.__match_args__ã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*310rf
keys_ast.MatchMapping.keysA
builtins.list[_ast.expr]
	_ast.expr"	_ast.expr"builtins.list*310rw
patterns_ast.MatchMapping.patternsJ
builtins.list[_ast.pattern]
_ast.pattern"_ast.pattern"builtins.list*310ri
rest_ast.MatchMapping.restD
Union[builtins.str,None]
builtins.str"builtins.str
None*310…

MatchClass_ast.MatchClass"_ast.patternj310rÓ
__match_args___ast.MatchClass.__match_args__∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*310r7
cls_ast.MatchClass.cls
	_ast.expr"	_ast.expr*310ru
patterns_ast.MatchClass.patternsJ
builtins.list[_ast.pattern]
_ast.pattern"_ast.pattern"builtins.list*310rw
	kwd_attrs_ast.MatchClass.kwd_attrsJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*310r}
kwd_patterns_ast.MatchClass.kwd_patternsJ
builtins.list[_ast.pattern]
_ast.pattern"_ast.pattern"builtins.list*310ì
MatchAs_ast.MatchAs"_ast.patternj310rî
__match_args___ast.MatchAs.__match_args__`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*310rj
pattern_ast.MatchAs.patternD
Union[_ast.pattern,None]
_ast.pattern"_ast.pattern
None*310rd
name_ast.MatchAs.nameD
Union[builtins.str,None]
builtins.str"builtins.str
None*310â
MatchOr_ast.MatchOr"_ast.patternj310ri
__match_args___ast.MatchOr.__match_args__5
Tuple[builtins.str]
builtins.str"builtins.str*310rr
patterns_ast.MatchOr.patternsJ
builtins.list[_ast.pattern]
_ast.pattern"_ast.pattern"builtins.list*310Å
copy_locationast.copy_location"

ast._T*
new_node

ast._T*"
old_node
_ast.AST"_ast.ASTz36z37z38z39z310À
dumpast.dump"
builtins.str"builtins.str*
node
_ast.AST"_ast.AST*5
annotate_fields
builtins.bool"builtins.bool *8
include_attributes
builtins.bool"builtins.bool z36z37z38«
dumpast.dump"
builtins.str"builtins.str*
node
_ast.AST"_ast.AST*5
annotate_fields
builtins.bool"builtins.bool *8
include_attributes
builtins.bool"builtins.bool *}
indento
%Union[builtins.int,builtins.str,None]
builtins.int"builtins.int
builtins.str"builtins.str
None z39z310i
fix_missing_locationsast.fix_missing_locations"

ast._T*
node

ast._Tz36z37z38z39z310ï
get_docstringast.get_docstring"D
Union[builtins.str,None]
builtins.str"builtins.str
None*Ë
node›
GUnion[_ast.AsyncFunctionDef,_ast.FunctionDef,_ast.ClassDef,_ast.Module].
_ast.AsyncFunctionDef"_ast.AsyncFunctionDef$
_ast.FunctionDef"_ast.FunctionDef
_ast.ClassDef"_ast.ClassDef
_ast.Module"_ast.Module*+
clean
builtins.bool"builtins.bool z36z37z38z39z310Ü
increment_linenoast.increment_lineno"

ast._T*
node

ast._T*%
n
builtins.int"builtins.int z36z37z38z39z310°
iter_child_nodesast.iter_child_nodes"B
typing.Iterator[_ast.AST]
_ast.AST"_ast.AST"typing.Iterator*
node
_ast.AST"_ast.ASTz36z37z38z39z310‘
iter_fieldsast.iter_fields"
(typing.Iterator[Tuple[builtins.str,Any]]B
Tuple[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Iterator*
node
_ast.AST"_ast.ASTz36z37z38z39z310®
literal_evalast.literal_eval"
Any*h
node_or_stringT
Union[builtins.str,_ast.AST]
builtins.str"builtins.str
_ast.AST"_ast.ASTz36z37z38z39z310â
walkast.walk"B
typing.Iterator[_ast.AST]
_ast.AST"_ast.AST"typing.Iterator*
node
_ast.AST"_ast.ASTz36z37z38z39z310˜
get_source_segmentast.get_source_segment"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
source
builtins.str"builtins.str*
node
_ast.AST"_ast.AST*,
padded
builtins.bool"builtins.bool z38z39z310`
unparseast.unparse"
builtins.str"builtins.str*!
ast_obj
_ast.AST"_ast.ASTz39z310#
mainast.main"
Nonez39z310"›Q
parse	ast.parseò
parse	ast.parse"
_ast.Module"_ast.Module*©
sourceú
óUnion[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]]
builtins.str"builtins.strﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*Ë
filename◊
®Union[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]],os.PathLike[Any]]
builtins.str"builtins.strﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
os.PathLike[Any]
Any"os.PathLike *C
mode7
Literal[builtins.str]	
builtins.str"builtins.str 0:overloadXú
parse	ast.parse""
_ast.Expression"_ast.Expression*©
sourceú
óUnion[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]]
builtins.str"builtins.strﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*Ê
filename◊
®Union[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]],os.PathLike[Any]]
builtins.str"builtins.strﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
os.PathLike[Any]
Any"os.PathLike*A
mode7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadXû
parse	ast.parse"$
_ast.Interactive"_ast.Interactive*©
sourceú
óUnion[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]]
builtins.str"builtins.strﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*Ê
filename◊
®Union[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]],os.PathLike[Any]]
builtins.str"builtins.strﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
os.PathLike[Any]
Any"os.PathLike*A
mode7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadX≥
parse	ast.parse""
_ast.Expression"_ast.Expression*©
sourceú
óUnion[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]]
builtins.str"builtins.strﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*A
mode7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadXµ
parse	ast.parse"$
_ast.Interactive"_ast.Interactive*©
sourceú
óUnion[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]]
builtins.str"builtins.strﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*A
mode7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadX˜
parse	ast.parse"
_ast.AST"_ast.AST*©
sourceú
óUnion[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]]
builtins.str"builtins.strﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*Ë
filename◊
®Union[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]],os.PathLike[Any]]
builtins.str"builtins.strﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
os.PathLike[Any]
Any"os.PathLike *(
mode
builtins.str"builtins.str 0:overloadX"36"37"‘ä
parse	ast.parse—
parse	ast.parse"
_ast.Module"_ast.Module*∫
source≠
´Union[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]]
builtins.str"builtins.str‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*˘
filenameË
ºUnion[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]],os.PathLike[Any]]
builtins.str"builtins.str‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
os.PathLike[Any]
Any"os.PathLike *C
mode7
Literal[builtins.str]	
builtins.str"builtins.str *3
type_comments
builtins.bool"builtins.bool *ﬂ
feature_version«
9Union[None,builtins.int,Tuple[builtins.int,builtins.int]]
None
builtins.int"builtins.int`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int 0:overloadX’
parse	ast.parse""
_ast.Expression"_ast.Expression*∫
source≠
´Union[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]]
builtins.str"builtins.str‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*˜
filenameË
ºUnion[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]],os.PathLike[Any]]
builtins.str"builtins.str‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
os.PathLike[Any]
Any"os.PathLike*A
mode7
Literal[builtins.str]	
builtins.str"builtins.str*3
type_comments
builtins.bool"builtins.bool *ﬂ
feature_version«
9Union[None,builtins.int,Tuple[builtins.int,builtins.int]]
None
builtins.int"builtins.int`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int 0:overloadXŸ
parse	ast.parse"&
_ast.FunctionType"_ast.FunctionType*∫
source≠
´Union[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]]
builtins.str"builtins.str‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*˜
filenameË
ºUnion[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]],os.PathLike[Any]]
builtins.str"builtins.str‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
os.PathLike[Any]
Any"os.PathLike*A
mode7
Literal[builtins.str]	
builtins.str"builtins.str*3
type_comments
builtins.bool"builtins.bool *ﬂ
feature_version«
9Union[None,builtins.int,Tuple[builtins.int,builtins.int]]
None
builtins.int"builtins.int`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int 0:overloadX◊
parse	ast.parse"$
_ast.Interactive"_ast.Interactive*∫
source≠
´Union[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]]
builtins.str"builtins.str‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*˜
filenameË
ºUnion[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]],os.PathLike[Any]]
builtins.str"builtins.str‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
os.PathLike[Any]
Any"os.PathLike*A
mode7
Literal[builtins.str]	
builtins.str"builtins.str*3
type_comments
builtins.bool"builtins.bool *ﬂ
feature_version«
9Union[None,builtins.int,Tuple[builtins.int,builtins.int]]
None
builtins.int"builtins.int`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int 0:overloadX€
parse	ast.parse""
_ast.Expression"_ast.Expression*∫
source≠
´Union[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]]
builtins.str"builtins.str‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*A
mode7
Literal[builtins.str]	
builtins.str"builtins.str*3
type_comments
builtins.bool"builtins.bool *ﬂ
feature_version«
9Union[None,builtins.int,Tuple[builtins.int,builtins.int]]
None
builtins.int"builtins.int`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int 0:overloadXﬂ
parse	ast.parse"&
_ast.FunctionType"_ast.FunctionType*∫
source≠
´Union[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]]
builtins.str"builtins.str‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*A
mode7
Literal[builtins.str]	
builtins.str"builtins.str*3
type_comments
builtins.bool"builtins.bool *ﬂ
feature_version«
9Union[None,builtins.int,Tuple[builtins.int,builtins.int]]
None
builtins.int"builtins.int`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int 0:overloadX›
parse	ast.parse"$
_ast.Interactive"_ast.Interactive*∫
source≠
´Union[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]]
builtins.str"builtins.str‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*A
mode7
Literal[builtins.str]	
builtins.str"builtins.str*3
type_comments
builtins.bool"builtins.bool *ﬂ
feature_version«
9Union[None,builtins.int,Tuple[builtins.int,builtins.int]]
None
builtins.int"builtins.int`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int 0:overloadX∞
parse	ast.parse"
_ast.AST"_ast.AST*∫
source≠
´Union[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]]
builtins.str"builtins.str‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*˘
filenameË
ºUnion[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]],os.PathLike[Any]]
builtins.str"builtins.str‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
os.PathLike[Any]
Any"os.PathLike *(
mode
builtins.str"builtins.str *3
type_comments
builtins.bool"builtins.bool *ﬂ
feature_version«
9Union[None,builtins.int,Tuple[builtins.int,builtins.int]]
None
builtins.int"builtins.int`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int 0:overloadX"38"39"310*î
__annotations__ast.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*q
PyCF_ONLY_AST_ast.PyCF_ONLY_AST7
Literal[builtins.int]	
builtins.int"builtins.int*36*37*38*39*310*s
PyCF_TYPE_COMMENTS_ast.PyCF_TYPE_COMMENTS7
Literal[builtins.int]	
builtins.int"builtins.int*38*39*310*É
PyCF_ALLOW_TOP_LEVEL_AWAIT_ast.PyCF_ALLOW_TOP_LEVEL_AWAIT7
Literal[builtins.int]	
builtins.int"builtins.int*38*39*310