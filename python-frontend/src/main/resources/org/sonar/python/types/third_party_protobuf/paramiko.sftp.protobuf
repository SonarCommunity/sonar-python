
paramiko.sftpπÜ
Loggerlogging.Logger"logging.Filterer*Ã
__init__logging.Logger.__init__"
None**
self 
logging.Logger"logging.Logger*&
name
builtins.str"builtins.str*Ø
level°
+TypeAlias[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"logging._Level z35z36z37z38z39z310*¢
setLevellogging.Logger.setLevel"
None**
self 
logging.Logger"logging.Logger*≠
level°
+TypeAlias[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"logging._Levelz35z36z37z38z39z310*π
isEnabledForlogging.Logger.isEnabledFor"
builtins.bool"builtins.bool**
self 
logging.Logger"logging.Logger*'
level
builtins.int"builtins.intz35z36z37z38z39z310*ò
getEffectiveLevel logging.Logger.getEffectiveLevel"
builtins.int"builtins.int**
self 
logging.Logger"logging.Loggerz35z36z37z38z39z310*¥
getChildlogging.Logger.getChild" 
logging.Logger"logging.Logger**
self 
logging.Logger"logging.Logger*(
suffix
builtins.str"builtins.strz35z36z37z38z39z310*é
debuglogging.Logger.debug"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*ø
debuglogging.Logger.debug"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*å
infologging.Logger.info"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*Ω
infologging.Logger.info"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*í
warninglogging.Logger.warning"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*√
warninglogging.Logger.warning"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*å
warnlogging.Logger.warn"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*Ω
warnlogging.Logger.warn"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*é
errorlogging.Logger.error"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*ø
errorlogging.Logger.error"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*î
criticallogging.Logger.critical"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*≈
criticallogging.Logger.critical"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*≥
loglogging.Logger.log"
None**
self 
logging.Logger"logging.Logger*'
level
builtins.int"builtins.int*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*‰
loglogging.Logger.log"
None**
self 
logging.Logger"logging.Logger*'
level
builtins.int"builtins.int*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*ñ
	exceptionlogging.Logger.exception"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*«
	exceptionlogging.Logger.exception"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*∂

_loglogging.Logger._log"
None**
self 
logging.Logger"logging.Logger*'
level
builtins.int"builtins.int*
msg
Any*µ
args™
FTypeAlias[Union[builtins.tuple[Any],typing.Mapping[builtins.str,Any]]] 
;Union[builtins.tuple[Any],typing.Mapping[builtins.str,Any]].
builtins.tuple[Any]
Any"builtins.tupleY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"logging._ArgsType*é
exc_info˝
°Union[builtins.bool,Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None],builtins.BaseException,None]
builtins.bool"builtins.boolø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None0
builtins.BaseException"builtins.BaseException
None *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *0

stack_info
builtins.bool"builtins.bool z35z36z37*Á

_loglogging.Logger._log"
None**
self 
logging.Logger"logging.Logger*'
level
builtins.int"builtins.int*
msg
Any*µ
args™
FTypeAlias[Union[builtins.tuple[Any],typing.Mapping[builtins.str,Any]]] 
;Union[builtins.tuple[Any],typing.Mapping[builtins.str,Any]].
builtins.tuple[Any]
Any"builtins.tupleY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"logging._ArgsType*é
exc_info˝
°Union[builtins.bool,Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None],builtins.BaseException,None]
builtins.bool"builtins.boolø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None0
builtins.BaseException"builtins.BaseException
None *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int z38z39z310*∏
filterlogging.Logger.filter"
builtins.bool"builtins.bool**
self 
logging.Logger"logging.Logger*2
record&
logging.LogRecord"logging.LogRecordz35z36z37z38z39z310*§

addHandlerlogging.Logger.addHandler"
None**
self 
logging.Logger"logging.Logger*,
hdlr"
logging.Handler"logging.Handlerz35z36z37z38z39z310*™
removeHandlerlogging.Logger.removeHandler"
None**
self 
logging.Logger"logging.Logger*,
hdlr"
logging.Handler"logging.Handlerz35z36z37z38z39z310*˛

findCallerlogging.Logger.findCaller"Í
FTuple[builtins.str,builtins.int,builtins.str,Union[builtins.str,None]]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
None**
self 
logging.Logger"logging.Logger*0

stack_info
builtins.bool"builtins.bool z35z36z37*Ø

findCallerlogging.Logger.findCaller"Í
FTuple[builtins.str,builtins.int,builtins.str,Union[builtins.str,None]]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
None**
self 
logging.Logger"logging.Logger*0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int z38z39z310*¢
handlelogging.Logger.handle"
None**
self 
logging.Logger"logging.Logger*2
record&
logging.LogRecord"logging.LogRecordz35z36z37z38z39z310*ﬁ

makeRecordlogging.Logger.makeRecord"&
logging.LogRecord"logging.LogRecord**
self 
logging.Logger"logging.Logger*&
name
builtins.str"builtins.str*'
level
builtins.int"builtins.int*$
fn
builtins.str"builtins.str*%
lno
builtins.int"builtins.int*
msg
Any*µ
args™
FTypeAlias[Union[builtins.tuple[Any],typing.Mapping[builtins.str,Any]]] 
;Union[builtins.tuple[Any],typing.Mapping[builtins.str,Any]].
builtins.tuple[Any]
Any"builtins.tupleY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"logging._ArgsType*î
exc_infoÖ
|Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None],None]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None
None*P
funcD
Union[builtins.str,None]
builtins.str"builtins.str
None *£
extraï
,Union[typing.Mapping[builtins.str,Any],None]Y
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping
None *Q
sinfoD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39z310*é
hasHandlerslogging.Logger.hasHandlers"
builtins.bool"builtins.bool**
self 
logging.Logger"logging.Loggerz35z36z37z38z39z310*Æ
callHandlerslogging.Logger.callHandlers"
None**
self 
logging.Logger"logging.Logger*2
record&
logging.LogRecord"logging.LogRecordz35z36z37z38z39z310j35j36j37j38j39j310rR
namelogging.Logger.name
builtins.str"builtins.str*35*36*37*38*39*310rT
levellogging.Logger.level
builtins.int"builtins.int*35*36*37*38*39*310rÑ
parentlogging.Logger.parentJ
Union[logging.Logger,None] 
logging.Logger"logging.Logger
None*35*36*37*38*39*310r^
	propagatelogging.Logger.propagate
builtins.bool"builtins.bool*35*36*37*38*39*310rë
handlerslogging.Logger.handlersS
builtins.list[logging.Handler]"
logging.Handler"logging.Handler"builtins.list*35*36*37*38*39*310r\
disabledlogging.Logger.disabled
builtins.bool"builtins.bool*35*36*37*38*39*310r^
rootlogging.Logger.root(
logging.RootLogger"logging.RootLogger*35*36*37*38*39*310r^
managerlogging.Logger.manager"
logging.Manager"logging.Manager*35*36*37*38*39*310rÉ
fatallogging.Logger.fatalK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310Ç]
Channelparamiko.channel.Channel"#paramiko.util.ClosingContextManager*∫
__init__!paramiko.channel.Channel.__init__"
None*>
self4
paramiko.channel.Channel"paramiko.channel.Channel*(
chanid
builtins.int"builtins.intz35z36z37z38z39z310*å
__del__ paramiko.channel.Channel.__del__"
None*<
self4
paramiko.channel.Channel"paramiko.channel.Channelz35z36z37z38z39z310*Ù
get_pty paramiko.channel.Channel.get_pty"
None*>
self4
paramiko.channel.Channel"paramiko.channel.Channel*(
term
builtins.str"builtins.str *)
width
builtins.int"builtins.int **
height
builtins.int"builtins.int *0
width_pixels
builtins.int"builtins.int *1
height_pixels
builtins.int"builtins.int z35z36z37z38z39z310*ò
invoke_shell%paramiko.channel.Channel.invoke_shell"
None*>
self4
paramiko.channel.Channel"paramiko.channel.Channelz35z36z37z38z39z310*√
exec_command%paramiko.channel.Channel.exec_command"
None*>
self4
paramiko.channel.Channel"paramiko.channel.Channel*)
command
builtins.str"builtins.strz35z36z37z38z39z310*Õ
invoke_subsystem)paramiko.channel.Channel.invoke_subsystem"
None*>
self4
paramiko.channel.Channel"paramiko.channel.Channel*+
	subsystem
builtins.str"builtins.strz35z36z37z38z39z310*–

resize_pty#paramiko.channel.Channel.resize_pty"
None*>
self4
paramiko.channel.Channel"paramiko.channel.Channel*)
width
builtins.int"builtins.int **
height
builtins.int"builtins.int *0
width_pixels
builtins.int"builtins.int *1
height_pixels
builtins.int"builtins.int z35z36z37z38z39z310*Ø
update_environment+paramiko.channel.Channel.update_environment"
None*>
self4
paramiko.channel.Channel"paramiko.channel.Channel*à
environmentw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mappingz35z36z37z38z39z310*Å
set_environment_variable1paramiko.channel.Channel.set_environment_variable"
None*>
self4
paramiko.channel.Channel"paramiko.channel.Channel*&
name
builtins.str"builtins.str*'
value
builtins.str"builtins.strz35z36z37z38z39z310*∏
exit_status_ready*paramiko.channel.Channel.exit_status_ready"
builtins.bool"builtins.bool*>
self4
paramiko.channel.Channel"paramiko.channel.Channelz35z36z37z38z39z310*¥
recv_exit_status)paramiko.channel.Channel.recv_exit_status"
builtins.int"builtins.int*>
self4
paramiko.channel.Channel"paramiko.channel.Channelz35z36z37z38z39z310* 
send_exit_status)paramiko.channel.Channel.send_exit_status"
None*>
self4
paramiko.channel.Channel"paramiko.channel.Channel*(
status
builtins.int"builtins.intz35z36z37z38z39z310*Á
request_x11$paramiko.channel.Channel.request_x11" 
builtins.bytes"builtins.bytes*>
self4
paramiko.channel.Channel"paramiko.channel.Channel*1
screen_number
builtins.int"builtins.int *Y
auth_protocolD
Union[builtins.str,None]
builtins.str"builtins.str
None *W
auth_cookieD
Union[builtins.str,None]
builtins.str"builtins.str
None *7
single_connection
builtins.bool"builtins.bool *ñ
handlerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None z35z36z37z38z39z310*ö
request_forward_agent.paramiko.channel.Channel.request_forward_agent"
builtins.bool"builtins.bool*>
self4
paramiko.channel.Channel"paramiko.channel.Channel*X
handlerK
CallableType[builtins.function]&
builtins.function"builtins.functionz35z36z37z38z39z310*Œ
get_transport&paramiko.channel.Channel.get_transport"<
paramiko.transport.Transport"paramiko.transport.Transport*>
self4
paramiko.channel.Channel"paramiko.channel.Channelz35z36z37z38z39z310*∏
set_name!paramiko.channel.Channel.set_name"
None*>
self4
paramiko.channel.Channel"paramiko.channel.Channel*&
name
builtins.str"builtins.strz35z36z37z38z39z310*§
get_name!paramiko.channel.Channel.get_name"
builtins.str"builtins.str*>
self4
paramiko.channel.Channel"paramiko.channel.Channelz35z36z37z38z39z310*†
get_idparamiko.channel.Channel.get_id"
builtins.int"builtins.int*>
self4
paramiko.channel.Channel"paramiko.channel.Channelz35z36z37z38z39z310*Á
set_combine_stderr+paramiko.channel.Channel.set_combine_stderr"
builtins.bool"builtins.bool*>
self4
paramiko.channel.Channel"paramiko.channel.Channel*+
combine
builtins.bool"builtins.boolz35z36z37z38z39z310*Ì

settimeout#paramiko.channel.Channel.settimeout"
None*>
self4
paramiko.channel.Channel"paramiko.channel.Channel*W
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
Nonez35z36z37z38z39z310*÷

gettimeout#paramiko.channel.Channel.gettimeout"J
Union[builtins.float,None] 
builtins.float"builtins.float
None*>
self4
paramiko.channel.Channel"paramiko.channel.Channelz35z36z37z38z39z310*ƒ
setblocking$paramiko.channel.Channel.setblocking"
None*>
self4
paramiko.channel.Channel"paramiko.channel.Channel*,
blocking
builtins.bool"builtins.boolz35z36z37z38z39z310*™
getpeername$paramiko.channel.Channel.getpeername"
builtins.str"builtins.str*>
self4
paramiko.channel.Channel"paramiko.channel.Channelz35z36z37z38z39z310*ä
closeparamiko.channel.Channel.close"
None*>
self4
paramiko.channel.Channel"paramiko.channel.Channelz35z36z37z38z39z310*™

recv_ready#paramiko.channel.Channel.recv_ready"
builtins.bool"builtins.bool*>
self4
paramiko.channel.Channel"paramiko.channel.Channelz35z36z37z38z39z310* 
recvparamiko.channel.Channel.recv" 
builtins.bytes"builtins.bytes*>
self4
paramiko.channel.Channel"paramiko.channel.Channel*(
nbytes
builtins.int"builtins.intz35z36z37z38z39z310*∏
recv_stderr_ready*paramiko.channel.Channel.recv_stderr_ready"
builtins.bool"builtins.bool*>
self4
paramiko.channel.Channel"paramiko.channel.Channelz35z36z37z38z39z310*ÿ
recv_stderr$paramiko.channel.Channel.recv_stderr" 
builtins.bytes"builtins.bytes*>
self4
paramiko.channel.Channel"paramiko.channel.Channel*(
nbytes
builtins.int"builtins.intz35z36z37z38z39z310*™

send_ready#paramiko.channel.Channel.send_ready"
builtins.bool"builtins.bool*>
self4
paramiko.channel.Channel"paramiko.channel.Channelz35z36z37z38z39z310*≈
sendparamiko.channel.Channel.send"
builtins.int"builtins.int*>
self4
paramiko.channel.Channel"paramiko.channel.Channel*'
s 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*”
send_stderr$paramiko.channel.Channel.send_stderr"
builtins.int"builtins.int*>
self4
paramiko.channel.Channel"paramiko.channel.Channel*'
s 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*∑
sendall paramiko.channel.Channel.sendall"
None*>
self4
paramiko.channel.Channel"paramiko.channel.Channel*'
s 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*≈
sendall_stderr'paramiko.channel.Channel.sendall_stderr"
None*>
self4
paramiko.channel.Channel"paramiko.channel.Channel*'
s 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*Ÿ
makefile!paramiko.channel.Channel.makefile"<
paramiko.channel.ChannelFile"paramiko.channel.ChannelFile*>
self4
paramiko.channel.Channel"paramiko.channel.Channel*
params
Anyz35z36z37z38z39z310*Û
makefile_stderr(paramiko.channel.Channel.makefile_stderr"H
"paramiko.channel.ChannelStderrFile""paramiko.channel.ChannelStderrFile*>
self4
paramiko.channel.Channel"paramiko.channel.Channel*
params
Anyz35z36z37z38z39z310*Ô
makefile_stdin'paramiko.channel.Channel.makefile_stdin"F
!paramiko.channel.ChannelStdinFile"!paramiko.channel.ChannelStdinFile*>
self4
paramiko.channel.Channel"paramiko.channel.Channel*
params
Anyz35z36z37z38z39z310*†
filenoparamiko.channel.Channel.fileno"
builtins.int"builtins.int*>
self4
paramiko.channel.Channel"paramiko.channel.Channelz35z36z37z38z39z310*∑
shutdown!paramiko.channel.Channel.shutdown"
None*>
self4
paramiko.channel.Channel"paramiko.channel.Channel*%
how
builtins.int"builtins.intz35z36z37z38z39z310*ö
shutdown_read&paramiko.channel.Channel.shutdown_read"
None*>
self4
paramiko.channel.Channel"paramiko.channel.Channelz35z36z37z38z39z310*ú
shutdown_write'paramiko.channel.Channel.shutdown_write"
None*>
self4
paramiko.channel.Channel"paramiko.channel.Channelz35z36z37z38z39z310j35j36j37j38j39j310r`
chanidparamiko.channel.Channel.chanid
builtins.int"builtins.int*35*36*37*38*39*310rn
remote_chanid&paramiko.channel.Channel.remote_chanid
builtins.int"builtins.int*35*36*37*38*39*310ræ
	transport"paramiko.channel.Channel.transportt
(Union[paramiko.transport.Transport,None]<
paramiko.transport.Transport"paramiko.transport.Transport
None*35*36*37*38*39*310rb
activeparamiko.channel.Channel.active
builtins.bool"builtins.bool*35*36*37*38*39*310rl
eof_received%paramiko.channel.Channel.eof_received
builtins.int"builtins.int*35*36*37*38*39*310rd
eof_sent!paramiko.channel.Channel.eof_sent
builtins.int"builtins.int*35*36*37*38*39*310r¢
	in_buffer"paramiko.channel.Channel.in_bufferX
(paramiko.buffered_pipe.BufferedPipe[Any]
Any"#paramiko.buffered_pipe.BufferedPipe*35*36*37*38*39*310r∞
in_stderr_buffer)paramiko.channel.Channel.in_stderr_bufferX
(paramiko.buffered_pipe.BufferedPipe[Any]
Any"#paramiko.buffered_pipe.BufferedPipe*35*36*37*38*39*310rê
timeout paramiko.channel.Channel.timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None*35*36*37*38*39*310rb
closedparamiko.channel.Channel.closed
builtins.bool"builtins.bool*35*36*37*38*39*310rl
ultra_debug$paramiko.channel.Channel.ultra_debug
builtins.bool"builtins.bool*35*36*37*38*39*310r`
lockparamiko.channel.Channel.lock 
threading.Lock"threading.Lock*35*36*37*38*39*310r|
out_buffer_cv&paramiko.channel.Channel.out_buffer_cv*
threading.Condition"threading.Condition*35*36*37*38*39*310rp
in_window_size'paramiko.channel.Channel.in_window_size
builtins.int"builtins.int*35*36*37*38*39*310rr
out_window_size(paramiko.channel.Channel.out_window_size
builtins.int"builtins.int*35*36*37*38*39*310rx
in_max_packet_size+paramiko.channel.Channel.in_max_packet_size
builtins.int"builtins.int*35*36*37*38*39*310rz
out_max_packet_size,paramiko.channel.Channel.out_max_packet_size
builtins.int"builtins.int*35*36*37*38*39*310rz
in_window_threshold,paramiko.channel.Channel.in_window_threshold
builtins.int"builtins.int*35*36*37*38*39*310rr
in_window_sofar(paramiko.channel.Channel.in_window_sofar
builtins.int"builtins.int*35*36*37*38*39*310rr
status_event%paramiko.channel.Channel.status_event"
threading.Event"threading.Event*35*36*37*38*39*310rd
loggerparamiko.channel.Channel.logger 
logging.Logger"logging.Logger*35*36*37*38*39*310rd
eventparamiko.channel.Channel.event"
threading.Event"threading.Event*35*36*37*38*39*310rl
event_ready$paramiko.channel.Channel.event_ready
builtins.bool"builtins.bool*35*36*37*38*39*310rr
combine_stderr'paramiko.channel.Channel.combine_stderr
builtins.bool"builtins.bool*35*36*37*38*39*310rj
exit_status$paramiko.channel.Channel.exit_status
builtins.int"builtins.int*35*36*37*38*39*310rV
origin_addr$paramiko.channel.Channel.origin_addr
None*35*36*37*38*39*310Q
	SFTPErrorparamiko.sftp.SFTPError"builtins.Exceptionj35j36j37j38j39j310“
BaseSFTPparamiko.sftp.BaseSFTP"builtins.object*ä
__init__paramiko.sftp.BaseSFTP.__init__"
None*:
self0
paramiko.sftp.BaseSFTP"paramiko.sftp.BaseSFTPz35z36z37z38z39z310j35j36j37j38j39j310rb
loggerparamiko.sftp.BaseSFTP.logger 
logging.Logger"logging.Logger*35*36*37*38*39*310r¶
sockparamiko.sftp.BaseSFTP.sockh
$Union[paramiko.channel.Channel,None]4
paramiko.channel.Channel"paramiko.channel.Channel
None*35*36*37*38*39*310rj
ultra_debug"paramiko.sftp.BaseSFTP.ultra_debug
builtins.bool"builtins.bool*35*36*37*38*39*310*`
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*Y
CMD_INITparamiko.sftp.CMD_INIT
builtins.int"builtins.int*35*36*37*38*39*310*_
CMD_VERSIONparamiko.sftp.CMD_VERSION
builtins.int"builtins.int*35*36*37*38*39*310*Y
CMD_OPENparamiko.sftp.CMD_OPEN
builtins.int"builtins.int*35*36*37*38*39*310*[
	CMD_CLOSEparamiko.sftp.CMD_CLOSE
builtins.int"builtins.int*35*36*37*38*39*310*Y
CMD_READparamiko.sftp.CMD_READ
builtins.int"builtins.int*35*36*37*38*39*310*[
	CMD_WRITEparamiko.sftp.CMD_WRITE
builtins.int"builtins.int*35*36*37*38*39*310*[
	CMD_LSTATparamiko.sftp.CMD_LSTAT
builtins.int"builtins.int*35*36*37*38*39*310*[
	CMD_FSTATparamiko.sftp.CMD_FSTAT
builtins.int"builtins.int*35*36*37*38*39*310*_
CMD_SETSTATparamiko.sftp.CMD_SETSTAT
builtins.int"builtins.int*35*36*37*38*39*310*a
CMD_FSETSTATparamiko.sftp.CMD_FSETSTAT
builtins.int"builtins.int*35*36*37*38*39*310*_
CMD_OPENDIRparamiko.sftp.CMD_OPENDIR
builtins.int"builtins.int*35*36*37*38*39*310*_
CMD_READDIRparamiko.sftp.CMD_READDIR
builtins.int"builtins.int*35*36*37*38*39*310*]

CMD_REMOVEparamiko.sftp.CMD_REMOVE
builtins.int"builtins.int*35*36*37*38*39*310*[
	CMD_MKDIRparamiko.sftp.CMD_MKDIR
builtins.int"builtins.int*35*36*37*38*39*310*[
	CMD_RMDIRparamiko.sftp.CMD_RMDIR
builtins.int"builtins.int*35*36*37*38*39*310*a
CMD_REALPATHparamiko.sftp.CMD_REALPATH
builtins.int"builtins.int*35*36*37*38*39*310*Y
CMD_STATparamiko.sftp.CMD_STAT
builtins.int"builtins.int*35*36*37*38*39*310*]

CMD_RENAMEparamiko.sftp.CMD_RENAME
builtins.int"builtins.int*35*36*37*38*39*310*a
CMD_READLINKparamiko.sftp.CMD_READLINK
builtins.int"builtins.int*35*36*37*38*39*310*_
CMD_SYMLINKparamiko.sftp.CMD_SYMLINK
builtins.int"builtins.int*35*36*37*38*39*310*]

CMD_STATUSparamiko.sftp.CMD_STATUS
builtins.int"builtins.int*35*36*37*38*39*310*]

CMD_HANDLEparamiko.sftp.CMD_HANDLE
builtins.int"builtins.int*35*36*37*38*39*310*Y
CMD_DATAparamiko.sftp.CMD_DATA
builtins.int"builtins.int*35*36*37*38*39*310*Y
CMD_NAMEparamiko.sftp.CMD_NAME
builtins.int"builtins.int*35*36*37*38*39*310*[
	CMD_ATTRSparamiko.sftp.CMD_ATTRS
builtins.int"builtins.int*35*36*37*38*39*310*a
CMD_EXTENDEDparamiko.sftp.CMD_EXTENDED
builtins.int"builtins.int*35*36*37*38*39*310*m
CMD_EXTENDED_REPLY paramiko.sftp.CMD_EXTENDED_REPLY
builtins.int"builtins.int*35*36*37*38*39*310*W
SFTP_OKparamiko.sftp.SFTP_OK
builtins.int"builtins.int*35*36*37*38*39*310*Y
SFTP_EOFparamiko.sftp.SFTP_EOF
builtins.int"builtins.int*35*36*37*38*39*310*k
SFTP_NO_SUCH_FILEparamiko.sftp.SFTP_NO_SUCH_FILE
builtins.int"builtins.int*35*36*37*38*39*310*u
SFTP_PERMISSION_DENIED$paramiko.sftp.SFTP_PERMISSION_DENIED
builtins.int"builtins.int*35*36*37*38*39*310*a
SFTP_FAILUREparamiko.sftp.SFTP_FAILURE
builtins.int"builtins.int*35*36*37*38*39*310*i
SFTP_BAD_MESSAGEparamiko.sftp.SFTP_BAD_MESSAGE
builtins.int"builtins.int*35*36*37*38*39*310*m
SFTP_NO_CONNECTION paramiko.sftp.SFTP_NO_CONNECTION
builtins.int"builtins.int*35*36*37*38*39*310*q
SFTP_CONNECTION_LOST"paramiko.sftp.SFTP_CONNECTION_LOST
builtins.int"builtins.int*35*36*37*38*39*310*o
SFTP_OP_UNSUPPORTED!paramiko.sftp.SFTP_OP_UNSUPPORTED
builtins.int"builtins.int*35*36*37*38*39*310*â
	SFTP_DESCparamiko.sftp.SFTP_DESCJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*35*36*37*38*39*310*e
SFTP_FLAG_READparamiko.sftp.SFTP_FLAG_READ
builtins.int"builtins.int*35*36*37*38*39*310*g
SFTP_FLAG_WRITEparamiko.sftp.SFTP_FLAG_WRITE
builtins.int"builtins.int*35*36*37*38*39*310*i
SFTP_FLAG_APPENDparamiko.sftp.SFTP_FLAG_APPEND
builtins.int"builtins.int*35*36*37*38*39*310*i
SFTP_FLAG_CREATEparamiko.sftp.SFTP_FLAG_CREATE
builtins.int"builtins.int*35*36*37*38*39*310*g
SFTP_FLAG_TRUNCparamiko.sftp.SFTP_FLAG_TRUNC
builtins.int"builtins.int*35*36*37*38*39*310*e
SFTP_FLAG_EXCLparamiko.sftp.SFTP_FLAG_EXCL
builtins.int"builtins.int*35*36*37*38*39*310*¥
	CMD_NAMESparamiko.sftp.CMD_NAMESu
(builtins.dict[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"builtins.dict*35*36*37*38*39*310