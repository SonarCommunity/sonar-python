
exifread.heicP
WrongBoxexifread.heic.WrongBox"builtins.Exceptionj36j37j38j39j310j311P
NoParserexifread.heic.NoParser"builtins.Exceptionj36j37j38j39j310j311T

BoxVersionexifread.heic.BoxVersion"builtins.Exceptionj36j37j38j39j310j311N
BadSizeexifread.heic.BadSize"builtins.Exceptionj36j37j38j39j310j311„
Boxexifread.heic.Box"builtins.object*¤
__init__exifread.heic.Box.__init__"
None*0
self&
exifread.heic.Box"exifread.heic.Box*&
name
builtins.str"builtins.strz36z37z38z39z310z311*ª
	set_sizesexifread.heic.Box.set_sizes"
None*0
self&
exifread.heic.Box"exifread.heic.Box*(
offset
builtins.int"builtins.int*(
length
builtins.int"builtins.int*-
base_offset
builtins.int"builtins.int*'
index
builtins.int"builtins.intz36z37z38z39z310z311*¦
set_fullexifread.heic.Box.set_full"
None*0
self&
exifread.heic.Box"exifread.heic.Box*(
vflags
builtins.int"builtins.intz36z37z38z39z310z311j36j37j38j39j310j311r\
versionexifread.heic.Box.version
builtins.int"builtins.int*36*37*38*39*310*311rh
minor_versionexifread.heic.Box.minor_version
builtins.int"builtins.int*36*37*38*39*310*311rb

item_countexifread.heic.Box.item_count
builtins.int"builtins.int*36*37*38*39*310*311rV
sizeexifread.heic.Box.size
builtins.int"builtins.int*36*37*38*39*310*311rX
afterexifread.heic.Box.after
builtins.int"builtins.int*36*37*38*39*310*311rT
posexifread.heic.Box.pos
builtins.int"builtins.int*36*37*38*39*310*311rŽ
compatexifread.heic.Box.compatP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list*36*37*38*39*310*311rd
base_offsetexifread.heic.Box.base_offset
builtins.int"builtins.int*36*37*38*39*310*311r¿
subsexifread.heic.Box.subs„
-builtins.dict[builtins.str,exifread.heic.Box]
builtins.str"builtins.str&
exifread.heic.Box"exifread.heic.Box"builtins.dict*36*37*38*39*310*311rÚ
locsexifread.heic.Box.locsŸ
Kbuiltins.dict[builtins.int,builtins.list[Tuple[builtins.int,builtins.int]]]
builtins.int"builtins.int¢
/builtins.list[Tuple[builtins.int,builtins.int]]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"builtins.list"builtins.dict*36*37*38*39*310*311r—
	exif_infeexifread.heic.Box.exif_infeS
Union[exifread.heic.Box,None]&
exifread.heic.Box"exifread.heic.Box
None*36*37*38*39*310*311r\
item_idexifread.heic.Box.item_id
builtins.int"builtins.int*36*37*38*39*310*311rd
	item_typeexifread.heic.Box.item_type 
builtins.bytes"builtins.bytes*36*37*38*39*310*311rd
	item_nameexifread.heic.Box.item_name 
builtins.bytes"builtins.bytes*36*37*38*39*310*311rx
item_protection_index'exifread.heic.Box.item_protection_index
builtins.int"builtins.int*36*37*38*39*310*311rh
major_brandexifread.heic.Box.major_brand 
builtins.bytes"builtins.bytes*36*37*38*39*310*311rd
offset_sizeexifread.heic.Box.offset_size
builtins.int"builtins.int*36*37*38*39*310*311rd
length_sizeexifread.heic.Box.length_size
builtins.int"builtins.int*36*37*38*39*310*311rn
base_offset_size"exifread.heic.Box.base_offset_size
builtins.int"builtins.int*36*37*38*39*310*311rb

index_sizeexifread.heic.Box.index_size
builtins.int"builtins.int*36*37*38*39*310*311rX
flagsexifread.heic.Box.flags
builtins.int"builtins.int*36*37*38*39*310*311rV
nameexifread.heic.Box.name
builtins.str"builtins.str*36*37*38*39*310*311…
HEICExifFinderexifread.heic.HEICExifFinder"builtins.object*à
__init__%exifread.heic.HEICExifFinder.__init__"
None*F
self<
exifread.heic.HEICExifFinder"exifread.heic.HEICExifFinder*A
file_handle0
exifread._types.Reader"exifread._types.Readerz36z37z38z39z310z311*Õ
get exifread.heic.HEICExifFinder.get" 
builtins.bytes"builtins.bytes*F
self<
exifread.heic.HEICExifFinder"exifread.heic.HEICExifFinder*(
nbytes
builtins.int"builtins.intz36z37z38z39z310z311*«
get16"exifread.heic.HEICExifFinder.get16"
builtins.int"builtins.int*F
self<
exifread.heic.HEICExifFinder"exifread.heic.HEICExifFinderz36z37z38z39z310z311*«
get32"exifread.heic.HEICExifFinder.get32"
builtins.int"builtins.int*F
self<
exifread.heic.HEICExifFinder"exifread.heic.HEICExifFinderz36z37z38z39z310z311*«
get64"exifread.heic.HEICExifFinder.get64"
builtins.int"builtins.int*F
self<
exifread.heic.HEICExifFinder"exifread.heic.HEICExifFinderz36z37z38z39z310z311*ù

get_int4x2'exifread.heic.HEICExifFinder.get_int4x2"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*F
self<
exifread.heic.HEICExifFinder"exifread.heic.HEICExifFinderz36z37z38z39z310z311*×
get_int$exifread.heic.HEICExifFinder.get_int"
builtins.int"builtins.int*F
self<
exifread.heic.HEICExifFinder"exifread.heic.HEICExifFinder*&
size
builtins.int"builtins.intz36z37z38z39z310z311*¹

get_string'exifread.heic.HEICExifFinder.get_string" 
builtins.bytes"builtins.bytes*F
self<
exifread.heic.HEICExifFinder"exifread.heic.HEICExifFinderz36z37z38z39z310z311*»
next_box%exifread.heic.HEICExifFinder.next_box"&
exifread.heic.Box"exifread.heic.Box*F
self<
exifread.heic.HEICExifFinder"exifread.heic.HEICExifFinderz36z37z38z39z310z311*Î
get_full%exifread.heic.HEICExifFinder.get_full"
None*F
self<
exifread.heic.HEICExifFinder"exifread.heic.HEICExifFinder*/
box&
exifread.heic.Box"exifread.heic.Boxz36z37z38z39z310z311*Æ
skip!exifread.heic.HEICExifFinder.skip"
None*F
self<
exifread.heic.HEICExifFinder"exifread.heic.HEICExifFinder*/
box&
exifread.heic.Box"exifread.heic.Boxz36z37z38z39z310z311*ë
expect_parse)exifread.heic.HEICExifFinder.expect_parse"&
exifread.heic.Box"exifread.heic.Box*F
self<
exifread.heic.HEICExifFinder"exifread.heic.HEICExifFinder*&
name
builtins.str"builtins.strz36z37z38z39z310z311*•

get_parser'exifread.heic.HEICExifFinder.get_parser"K
CallableType[builtins.function]&
builtins.function"builtins.function*F
self<
exifread.heic.HEICExifFinder"exifread.heic.HEICExifFinder*/
box&
exifread.heic.Box"exifread.heic.Boxz36z37z38z39z310z311*î
	parse_box&exifread.heic.HEICExifFinder.parse_box"&
exifread.heic.Box"exifread.heic.Box*F
self<
exifread.heic.HEICExifFinder"exifread.heic.HEICExifFinder*/
box&
exifread.heic.Box"exifread.heic.Boxz36z37z38z39z310z311*ý
	find_exif&exifread.heic.HEICExifFinder.find_exif"f
"Tuple[builtins.int,builtins.bytes]
builtins.int"builtins.int 
builtins.bytes"builtins.bytes*F
self<
exifread.heic.HEICExifFinder"exifread.heic.HEICExifFinderz36z37z38z39z310z311j36j37j38j39j310j311rƒ
file_handle(exifread.heic.HEICExifFinder.file_handle0
exifread._types.Reader"exifread._types.Reader*36*37*38*39*310*311*£
__annotations__exifread.heic.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*Z
loggerexifread.heic.logger 
logging.Logger"logging.Logger*36*37*38*39*310*311