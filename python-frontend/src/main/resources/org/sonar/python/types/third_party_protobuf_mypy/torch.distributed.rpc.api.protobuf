
torch.distributed.rpc.apiÅ
AllGatherStates)torch.distributed.rpc.api.AllGatherStates"builtins.object*H
__init__2torch.distributed.rpc.api.AllGatherStates.__init__*
selfrW
gathered_objects:torch.distributed.rpc.api.AllGatherStates.gathered_objects
AnyrS
proceed_signal8torch.distributed.rpc.api.AllGatherStates.proceed_signal
AnyJ
RReftorch.distributed.rpc.api.RRef" torch._C._distributed_rpc.PyRRefPP
_require_initialized.torch.distributed.rpc.api._require_initialized*
funcI
_init_rpc_states*torch.distributed.rpc.api._init_rpc_states*	
agent
_gather_to_leader+torch.distributed.rpc.api._gather_to_leader*
sequence_id*
worker_name*
obj*
worker_names n
_broadcast_to_followers1torch.distributed.rpc.api._broadcast_to_followers*
sequence_id*
objects_mapB
_finalize_shutdown,torch.distributed.rpc.api._finalize_shutdownD
_to_worker_info)torch.distributed.rpc.api._to_worker_info*
to”
_rref_typeof_on_owner/torch.distributed.rpc.api._rref_typeof_on_owner"
Any*
rref
Any*.
blocking
builtins.bool"builtins.bool Ã
_rref_typeof_on_user.torch.distributed.rpc.api._rref_typeof_on_user"
Any*
rref
Any*/
timeout 
builtins.float"builtins.float *.
blocking
builtins.bool"builtins.bool Z
method_factory(torch.distributed.rpc.api.method_factory*
method_name*
	docstringÙ
_invoke_rpc%torch.distributed.rpc.api._invoke_rpc"
Any*
to
Any*
func
Any*
rpc_type
Any*
args
Any *
kwargs
Any *3
rpc_timeout 
builtins.float"builtins.float D
_get_should_profile-torch.distributed.rpc.api._get_should_profile›
_enable_rpc_profiler.torch.distributed.rpc.api._enable_rpc_profiler*
should_profile*
qualified_name*
func*
rpc_type*
dst_worker_info*•
__annotations__)torch.distributed.rpc.api.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*x
__all__!torch.distributed.rpc.api.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*L
logger torch.distributed.rpc.api.logger 
logging.Logger"logging.Logger*`
_ignore_rref_leak+torch.distributed.rpc.api._ignore_rref_leak
builtins.bool"builtins.bool*¨
_default_pickler*torch.distributed.rpc.api._default_picklerh
2torch.distributed.rpc.internal._InternalRPCPickler"2torch.distributed.rpc.internal._InternalRPCPickler*l
_ALL_WORKER_NAMES+torch.distributed.rpc.api._ALL_WORKER_NAMES*
builtins.set[Any]
Any"builtins.set*n
_all_gather_dict_lock/torch.distributed.rpc.api._all_gather_dict_lock$
threading._RLock"threading._RLock*Ã
_all_gather_sequence_id1torch.distributed.rpc.api._all_gather_sequence_idu
(builtins.dict[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"builtins.dict*¯
!_all_gather_sequence_id_to_states;torch.distributed.rpc.api._all_gather_sequence_id_to_statesM
 collections.defaultdict[Any,Any]
Any
Any"collections.defaultdict*d
_thread_local_var+torch.distributed.rpc.api._thread_local_var"
threading.local"threading.local*l
GenericWithOneTypeVar/torch.distributed.rpc.api.GenericWithOneTypeVar"
builtins.object"builtins.object*R
method_name%torch.distributed.rpc.api.method_name
builtins.str"builtins.str*3
method torch.distributed.rpc.api.method
Any*X
	docstring#torch.distributed.rpc.api.docstring&
Union[Any,None]
Any
None*;

new_method$torch.distributed.rpc.api.new_method
Any