
tarfileê
ExFileObjecttarfile.ExFileObject"_io.BufferedReader*—
__init__tarfile.ExFileObject.__init__"
None*6
self,
tarfile.ExFileObject"tarfile.ExFileObject*/
tarfile"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfoz27j27π
ExFileObjecttarfile.ExFileObject"io.BufferedReader*Ê
__init__tarfile.ExFileObject.__init__"
None*6
self,
tarfile.ExFileObject"tarfile.ExFileObject*/
tarfile"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfoz35z36z37z38z39z310j35j36j37j38j39j310â{
TarFiletarfile.TarFile"typing.Iterable*‘

__init__tarfile.TarFile.__init__"
None*,
self"
tarfile.TarFile"tarfile.TarFile*\
nameP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None *(
mode
builtins.str"builtins.str *Ñ
fileobju
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None *R
formatD
Union[builtins.int,None]
builtins.int"builtins.int
None *}
tarinfon
!Union[Type[tarfile.TarInfo],None]=
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo
None *Z
dereferenceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *[
ignore_zerosG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None **
errors
builtins.str"builtins.str *–
pax_headersº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *Q
debugD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

errorlevelD
Union[builtins.int,None]
builtins.int"builtins.int
None *W
copybufsizeD
Union[builtins.int,None]
builtins.int"builtins.int
None z27*z
	__enter__tarfile.TarFile.__enter__""
tarfile.TarFile"tarfile.TarFile**
self"
tarfile.TarFile"tarfile.TarFilez27*Ã
__exit__tarfile.TarFile.__exit__"
None**
self"
tarfile.TarFile"tarfile.TarFile*ó
exc_typeä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*m
exc_valb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*c
exc_tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Nonez27*≠
__iter__tarfile.TarFile.__iter__"W
 typing.Iterator[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo"typing.Iterator**
self"
tarfile.TarFile"tarfile.TarFilez27*Â

opentarfile.TarFile.open""
tarfile.TarFile"tarfile.TarFile*F
cls=
Type[tarfile.TarFile]"
tarfile.TarFile"tarfile.TarFile*\
nameP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None *(
mode
builtins.str"builtins.str *Ñ
fileobju
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None *+
bufsize
builtins.int"builtins.int *R
formatD
Union[builtins.int,None]
builtins.int"builtins.int
None *}
tarinfon
!Union[Type[tarfile.TarInfo],None]=
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo
None *Z
dereferenceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *[
ignore_zerosG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None **
errors
builtins.str"builtins.str *–
pax_headersº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *Q
debugD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

errorlevelD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:classmethodpz27*√

taropentarfile.TarFile.taropen""
tarfile.TarFile"tarfile.TarFile*F
cls=
Type[tarfile.TarFile]"
tarfile.TarFile"tarfile.TarFile*Z
nameP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None*(
mode
builtins.str"builtins.str *Ñ
fileobju
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None *1
compresslevel
builtins.int"builtins.int *R
formatD
Union[builtins.int,None]
builtins.int"builtins.int
None *}
tarinfon
!Union[Type[tarfile.TarInfo],None]=
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo
None *Z
dereferenceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *[
ignore_zerosG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *–
pax_headersº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *Q
debugD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

errorlevelD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:classmethodpz27*¡

gzopentarfile.TarFile.gzopen""
tarfile.TarFile"tarfile.TarFile*F
cls=
Type[tarfile.TarFile]"
tarfile.TarFile"tarfile.TarFile*Z
nameP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None*(
mode
builtins.str"builtins.str *Ñ
fileobju
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None *1
compresslevel
builtins.int"builtins.int *R
formatD
Union[builtins.int,None]
builtins.int"builtins.int
None *}
tarinfon
!Union[Type[tarfile.TarInfo],None]=
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo
None *Z
dereferenceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *[
ignore_zerosG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *–
pax_headersº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *Q
debugD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

errorlevelD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:classmethodpz27*√

bz2opentarfile.TarFile.bz2open""
tarfile.TarFile"tarfile.TarFile*F
cls=
Type[tarfile.TarFile]"
tarfile.TarFile"tarfile.TarFile*Z
nameP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None*(
mode
builtins.str"builtins.str *Ñ
fileobju
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None *1
compresslevel
builtins.int"builtins.int *R
formatD
Union[builtins.int,None]
builtins.int"builtins.int
None *}
tarinfon
!Union[Type[tarfile.TarInfo],None]=
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo
None *Z
dereferenceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *[
ignore_zerosG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *–
pax_headersº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *Q
debugD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

errorlevelD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:classmethodpz27*‚

xzopentarfile.TarFile.xzopen""
tarfile.TarFile"tarfile.TarFile*F
cls=
Type[tarfile.TarFile]"
tarfile.TarFile"tarfile.TarFile*Z
nameP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None*(
mode
builtins.str"builtins.str *Ñ
fileobju
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None *R
presetD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
formatD
Union[builtins.int,None]
builtins.int"builtins.int
None *}
tarinfon
!Union[Type[tarfile.TarInfo],None]=
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo
None *Z
dereferenceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *[
ignore_zerosG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *–
pax_headersº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *Q
debugD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

errorlevelD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:classmethodpz27*§
	getmembertarfile.TarFile.getmember""
tarfile.TarInfo"tarfile.TarInfo*,
self"
tarfile.TarFile"tarfile.TarFile*&
name
builtins.str"builtins.strz27*Ø

getmemberstarfile.TarFile.getmembers"S
builtins.list[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo"builtins.list*,
self"
tarfile.TarFile"tarfile.TarFilez27*¢
getnamestarfile.TarFile.getnames"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*,
self"
tarfile.TarFile"tarfile.TarFilez27*á
listtarfile.TarFile.list"
None*,
self"
tarfile.TarFile"tarfile.TarFile*-
verbose
builtins.bool"builtins.bool z27*ù
nexttarfile.TarFile.next"M
Union[tarfile.TarInfo,None]"
tarfile.TarInfo"tarfile.TarInfo
None*,
self"
tarfile.TarFile"tarfile.TarFilez27*º

extractalltarfile.TarFile.extractall"
None*,
self"
tarfile.TarFile"tarfile.TarFile*0
path$
builtins.unicode"builtins.unicode *£
membersì
,Union[typing.Iterable[tarfile.TarInfo],None]W
 typing.Iterable[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo"typing.Iterable
None z27*á
extracttarfile.TarFile.extract"
None*,
self"
tarfile.TarFile"tarfile.TarFile*u
memberi
#Union[builtins.str,tarfile.TarInfo]
builtins.str"builtins.str"
tarfile.TarInfo"tarfile.TarInfo*0
path$
builtins.unicode"builtins.unicode z27* 
extractfiletarfile.TarFile.extractfile"u
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None*,
self"
tarfile.TarFile"tarfile.TarFile*u
memberi
#Union[builtins.str,tarfile.TarInfo]
builtins.str"builtins.str"
tarfile.TarInfo"tarfile.TarInfoz27*≈
makedirtarfile.TarFile.makedir"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*4

targetpath$
builtins.unicode"builtins.unicodez27*«
makefiletarfile.TarFile.makefile"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*4

targetpath$
builtins.unicode"builtins.unicodez27*Õ
makeunknowntarfile.TarFile.makeunknown"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*4

targetpath$
builtins.unicode"builtins.unicodez27*«
makefifotarfile.TarFile.makefifo"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*4

targetpath$
builtins.unicode"builtins.unicodez27*≈
makedevtarfile.TarFile.makedev"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*4

targetpath$
builtins.unicode"builtins.unicodez27*«
makelinktarfile.TarFile.makelink"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*4

targetpath$
builtins.unicode"builtins.unicodez27*¡
chowntarfile.TarFile.chown"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*4

targetpath$
builtins.unicode"builtins.unicodez27*¡
chmodtarfile.TarFile.chmod"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*4

targetpath$
builtins.unicode"builtins.unicodez27*¡
utimetarfile.TarFile.utime"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*4

targetpath$
builtins.unicode"builtins.unicodez27*µ
addtarfile.TarFile.add"
None*,
self"
tarfile.TarFile"tarfile.TarFile*&
name
builtins.str"builtins.str*S
arcnameD
Union[builtins.str,None]
builtins.str"builtins.str
None */
	recursive
builtins.bool"builtins.bool *ñ
excludeÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *ï
filterÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None z27*ñ
addfiletarfile.TarFile.addfile"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*Ñ
fileobju
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None z27*¨

gettarinfotarfile.TarFile.gettarinfo""
tarfile.TarInfo"tarfile.TarInfo*,
self"
tarfile.TarFile"tarfile.TarFile*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
arcnameD
Union[builtins.str,None]
builtins.str"builtins.str
None *Ñ
fileobju
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None z27*Z
closetarfile.TarFile.close"
None*,
self"
tarfile.TarFile"tarfile.TarFilez27j27r£
	OPEN_METHtarfile.TarFile.OPEN_METHw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping*27rr
nametarfile.TarFile.nameP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None*27r>
modetarfile.TarFile.mode
builtins.str"builtins.str*27rù
fileobjtarfile.TarFile.fileobju
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None*27rj
formattarfile.TarFile.formatD
Union[builtins.int,None]
builtins.int"builtins.int
None*27re
tarinfotarfile.TarFile.tarinfo=
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo*27rw
dereferencetarfile.TarFile.dereferenceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*27ry
ignore_zerostarfile.TarFile.ignore_zerosG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*27rn
encodingtarfile.TarFile.encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None*27rB
errorstarfile.TarFile.errors
builtins.str"builtins.str*27rz

fileobjecttarfile.TarFile.fileobjectL
Type[tarfile.ExFileObject],
tarfile.ExFileObject"tarfile.ExFileObject*27rÌ
pax_headerstarfile.TarFile.pax_headersº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None*27rh
debugtarfile.TarFile.debugD
Union[builtins.int,None]
builtins.int"builtins.int
None*27rr

errorleveltarfile.TarFile.errorlevelD
Union[builtins.int,None]
builtins.int"builtins.int
None*27rB
offsettarfile.TarFile.offset
builtins.int"builtins.int*27rB
posixtarfile.TarFile.posix
builtins.bool"builtins.bool*27ƒﬁ
TarFiletarfile.TarFile"builtins.object*‚
__init__tarfile.TarFile.__init__"
None*,
self"
tarfile.TarFile"tarfile.TarFile*Œ
name¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *”
mode∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *_
fileobjP
Union[tarfile._Fileobj,None]$
tarfile._Fileobj"tarfile._Fileobj
None *R
formatD
Union[builtins.int,None]
builtins.int"builtins.int
None *}
tarinfon
!Union[Type[tarfile.TarInfo],None]=
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo
None *Z
dereferenceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *[
ignore_zerosG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None **
errors
builtins.str"builtins.str *–
pax_headersº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *Q
debugD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

errorlevelD
Union[builtins.int,None]
builtins.int"builtins.int
None *W
copybufsizeD
Union[builtins.int,None]
builtins.int"builtins.int
None z35z36z37z38z39z310*i
	__enter__tarfile.TarFile.__enter__"
tarfile._TF*
self
tarfile._TFz35z36z37z38z39z310*·
__exit__tarfile.TarFile.__exit__"
None**
self"
tarfile.TarFile"tarfile.TarFile*ó
exc_typeä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*m
exc_valb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*c
exc_tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Nonez35z36z37z38z39z310*¬
__iter__tarfile.TarFile.__iter__"W
 typing.Iterator[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo"typing.Iterator**
self"
tarfile.TarFile"tarfile.TarFilez35z36z37z38z39z310*À
opentarfile.TarFile.open"
tarfile._TF*/
cls&
Type[tarfile._TF]
tarfile._TF*Œ
name¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *(
mode
builtins.str"builtins.str *å
fileobj}
%Union[typing.IO[builtins.bytes],None]H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO
None *+
bufsize
builtins.int"builtins.int *R
formatD
Union[builtins.int,None]
builtins.int"builtins.int
None *}
tarinfon
!Union[Type[tarfile.TarInfo],None]=
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo
None *Z
dereferenceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *[
ignore_zerosG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None **
errors
builtins.str"builtins.str *–
pax_headersº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *Q
debugD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

errorlevelD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:classmethodpz35z36z37z38z39z310*ß
taropentarfile.TarFile.taropen"
tarfile._TF*/
cls&
Type[tarfile._TF]
tarfile._TF*Ã
name¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None*”
mode∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *_
fileobjP
Union[tarfile._Fileobj,None]$
tarfile._Fileobj"tarfile._Fileobj
None *1
compresslevel
builtins.int"builtins.int *R
formatD
Union[builtins.int,None]
builtins.int"builtins.int
None *}
tarinfon
!Union[Type[tarfile.TarInfo],None]=
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo
None *Z
dereferenceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *[
ignore_zerosG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *–
pax_headersº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *Q
debugD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

errorlevelD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:classmethodpz35z36z37z38z39z310*•
xzopentarfile.TarFile.xzopen"
tarfile._TF*/
cls&
Type[tarfile._TF]
tarfile._TF*Ã
name¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None*Ñ
mode˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *å
fileobj}
%Union[typing.IO[builtins.bytes],None]H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO
None *R
presetD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
formatD
Union[builtins.int,None]
builtins.int"builtins.int
None *}
tarinfon
!Union[Type[tarfile.TarInfo],None]=
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo
None *Z
dereferenceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *[
ignore_zerosG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *–
pax_headersº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *Q
debugD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

errorlevelD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:classmethodpz35z36z37z38z39z310*π
	getmembertarfile.TarFile.getmember""
tarfile.TarInfo"tarfile.TarInfo*,
self"
tarfile.TarFile"tarfile.TarFile*&
name
builtins.str"builtins.strz35z36z37z38z39z310*ƒ

getmemberstarfile.TarFile.getmembers"S
builtins.list[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo"builtins.list*,
self"
tarfile.TarFile"tarfile.TarFilez35z36z37z38z39z310*∑
getnamestarfile.TarFile.getnames"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*,
self"
tarfile.TarFile"tarfile.TarFilez35z36z37z38z39z310*º
listtarfile.TarFile.list"
None*,
self"
tarfile.TarFile"tarfile.TarFile*-
verbose
builtins.bool"builtins.bool *ù
membersç
*Union[builtins.list[tarfile.TarInfo],None]S
builtins.list[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo"builtins.list
None z35z36z37z38z39z310*≤
nexttarfile.TarFile.next"M
Union[tarfile.TarInfo,None]"
tarfile.TarInfo"tarfile.TarInfo
None*,
self"
tarfile.TarFile"tarfile.TarFilez35z36z37z38z39z310*ö

extractalltarfile.TarFile.extractall"
None*,
self"
tarfile.TarFile"tarfile.TarFile*√
path∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath *£
membersì
,Union[typing.Iterable[tarfile.TarInfo],None]W
 typing.Iterable[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo"typing.Iterable
None *3
numeric_owner
builtins.bool"builtins.bool z35z36z37z38z39z310*ñ
extracttarfile.TarFile.extract"
None*,
self"
tarfile.TarFile"tarfile.TarFile*u
memberi
#Union[builtins.str,tarfile.TarInfo]
builtins.str"builtins.str"
tarfile.TarInfo"tarfile.TarInfo*√
path∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath */
	set_attrs
builtins.bool"builtins.bool *3
numeric_owner
builtins.bool"builtins.bool z35z36z37z38z39z310*Á
extractfiletarfile.TarFile.extractfile"}
%Union[typing.IO[builtins.bytes],None]H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO
None*,
self"
tarfile.TarFile"tarfile.TarFile*u
memberi
#Union[builtins.str,tarfile.TarInfo]
builtins.str"builtins.str"
tarfile.TarInfo"tarfile.TarInfoz35z36z37z38z39z310*Ó
makedirtarfile.TarFile.makedir"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*«

targetpath∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39z310*
makefiletarfile.TarFile.makefile"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*«

targetpath∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39z310*ˆ
makeunknowntarfile.TarFile.makeunknown"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*«

targetpath∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39z310*
makefifotarfile.TarFile.makefifo"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*«

targetpath∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39z310*Ó
makedevtarfile.TarFile.makedev"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*«

targetpath∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39z310*
makelinktarfile.TarFile.makelink"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*«

targetpath∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39z310*ù
chowntarfile.TarFile.chown"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*«

targetpath∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*1
numeric_owner
builtins.bool"builtins.boolz35z36z37z38z39z310*Í
chmodtarfile.TarFile.chmod"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*«

targetpath∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39z310*Í
utimetarfile.TarFile.utime"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*«

targetpath∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39z310*Ï
addtarfile.TarFile.add"
None*,
self"
tarfile.TarFile"tarfile.TarFile*Ù
nameÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*∂
arcname¶
2Union[builtins.str,os.PathLike[builtins.str],None]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
None */
	recursive
builtins.bool"builtins.bool *ñ
excludeÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *ï
filterÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None z35z36*‹
addtarfile.TarFile.add"
None*,
self"
tarfile.TarFile"tarfile.TarFile*Ù
nameÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*∂
arcname¶
2Union[builtins.str,os.PathLike[builtins.str],None]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
None */
	recursive
builtins.bool"builtins.bool *ï
filterÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None z37z38z39z310*≥
addfiletarfile.TarFile.addfile"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*å
fileobj}
%Union[typing.IO[builtins.bytes],None]H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO
None z35z36z37z38z39z310*…

gettarinfotarfile.TarFile.gettarinfo""
tarfile.TarInfo"tarfile.TarInfo*,
self"
tarfile.TarFile"tarfile.TarFile*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
arcnameD
Union[builtins.str,None]
builtins.str"builtins.str
None *å
fileobj}
%Union[typing.IO[builtins.bytes],None]H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO
None z35z36z37z38z39z310*o
closetarfile.TarFile.close"
None*,
self"
tarfile.TarFile"tarfile.TarFilez35z36z37z38z39z3102‹
gzopentarfile.TarFile.gzopenñ
gzopentarfile.TarFile.gzopen"
tarfile._TF*/
cls&
Type[tarfile._TF]
tarfile._TF*Ã
name¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None*C
mode7
Literal[builtins.str]	
builtins.str"builtins.str *n
fileobj_
!Union[gzip._ReadableFileobj,None].
gzip._ReadableFileobj"gzip._ReadableFileobj
None *1
compresslevel
builtins.int"builtins.int *R
formatD
Union[builtins.int,None]
builtins.int"builtins.int
None *}
tarinfon
!Union[Type[tarfile.TarInfo],None]=
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo
None *Z
dereferenceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *[
ignore_zerosG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *–
pax_headersº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *Q
debugD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

errorlevelD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:overload:classmethodXpá
gzopentarfile.TarFile.gzopen"
tarfile._TF*/
cls&
Type[tarfile._TF]
tarfile._TF*Ã
name¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None*≥
mode®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*n
fileobj_
!Union[gzip._WritableFileobj,None].
gzip._WritableFileobj"gzip._WritableFileobj
None *1
compresslevel
builtins.int"builtins.int *R
formatD
Union[builtins.int,None]
builtins.int"builtins.int
None *}
tarinfon
!Union[Type[tarfile.TarInfo],None]=
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo
None *Z
dereferenceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *[
ignore_zerosG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *–
pax_headersº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *Q
debugD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

errorlevelD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:overload:classmethodXp"35"36"37"38"39"3102à
bz2opentarfile.TarFile.bz2openú
bz2opentarfile.TarFile.bz2open"
tarfile._TF*/
cls&
Type[tarfile._TF]
tarfile._TF*Ã
name¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None*≥
mode®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*Ä
fileobjq
'Union[tarfile._Bz2WritableFileobj,None]:
tarfile._Bz2WritableFileobj"tarfile._Bz2WritableFileobj
None *1
compresslevel
builtins.int"builtins.int *R
formatD
Union[builtins.int,None]
builtins.int"builtins.int
None *}
tarinfon
!Union[Type[tarfile.TarInfo],None]=
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo
None *Z
dereferenceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *[
ignore_zerosG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *–
pax_headersº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *Q
debugD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

errorlevelD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:overload:classmethodXp´
bz2opentarfile.TarFile.bz2open"
tarfile._TF*/
cls&
Type[tarfile._TF]
tarfile._TF*Ã
name¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None*C
mode7
Literal[builtins.str]	
builtins.str"builtins.str *Ä
fileobjq
'Union[tarfile._Bz2ReadableFileobj,None]:
tarfile._Bz2ReadableFileobj"tarfile._Bz2ReadableFileobj
None *1
compresslevel
builtins.int"builtins.int *R
formatD
Union[builtins.int,None]
builtins.int"builtins.int
None *}
tarinfon
!Union[Type[tarfile.TarInfo],None]=
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo
None *Z
dereferenceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *[
ignore_zerosG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *–
pax_headersº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *Q
debugD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

errorlevelD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:overload:classmethodXp"35"36"37"38"39"310j35j36j37j38j39j310r∏
	OPEN_METHtarfile.TarFile.OPEN_METHw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping*35*36*37*38*39*310r˘
nametarfile.TarFile.name¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None*35*36*37*38*39*310r˛
modetarfile.TarFile.mode∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*35*36*37*38*39*310rç
fileobjtarfile.TarFile.fileobjP
Union[tarfile._Fileobj,None]$
tarfile._Fileobj"tarfile._Fileobj
None*35*36*37*38*39*310r
formattarfile.TarFile.formatD
Union[builtins.int,None]
builtins.int"builtins.int
None*35*36*37*38*39*310rz
tarinfotarfile.TarFile.tarinfo=
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo*35*36*37*38*39*310rå
dereferencetarfile.TarFile.dereferenceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*35*36*37*38*39*310ré
ignore_zerostarfile.TarFile.ignore_zerosG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*35*36*37*38*39*310rÉ
encodingtarfile.TarFile.encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310rW
errorstarfile.TarFile.errors
builtins.str"builtins.str*35*36*37*38*39*310rè

fileobjecttarfile.TarFile.fileobjectL
Type[tarfile.ExFileObject],
tarfile.ExFileObject"tarfile.ExFileObject*35*36*37*38*39*310rÇ
pax_headerstarfile.TarFile.pax_headersº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None*35*36*37*38*39*310r}
debugtarfile.TarFile.debugD
Union[builtins.int,None]
builtins.int"builtins.int
None*35*36*37*38*39*310rá

errorleveltarfile.TarFile.errorlevelD
Union[builtins.int,None]
builtins.int"builtins.int
None*35*36*37*38*39*310rW
offsettarfile.TarFile.offset
builtins.int"builtins.int*35*36*37*38*39*310∑
TarFileCompattarfile.TarFileCompat"builtins.object*˘
__init__tarfile.TarFileCompat.__init__"
None*8
self.
tarfile.TarFileCompat"tarfile.TarFileCompat**
filename
builtins.str"builtins.str*(
mode
builtins.str"builtins.str */
compression
builtins.int"builtins.int z27j27M
TarErrortarfile.TarError"builtins.Exceptionj27j35j36j37j38j39j310M
	ReadErrortarfile.ReadError"tarfile.TarErrorj27j35j36j37j38j39j310[
CompressionErrortarfile.CompressionError"tarfile.TarErrorj27j35j36j37j38j39j310Q
StreamErrortarfile.StreamError"tarfile.TarErrorj27j35j36j37j38j39j310S
ExtractErrortarfile.ExtractError"tarfile.TarErrorj27j35j36j37j38j39j310Q
HeaderErrortarfile.HeaderError"tarfile.TarErrorj27j35j36j37j38j39j310ö[
TarInfotarfile.TarInfo"builtins.object*£
__init__tarfile.TarInfo.__init__"
None*,
self"
tarfile.TarInfo"tarfile.TarInfo*(
name
builtins.str"builtins.str z27z35z36z37z38z39z310* 
frombuftarfile.TarInfo.frombuf""
tarfile.TarInfo"tarfile.TarInfo*F
cls=
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo*%
buf
builtins.str"builtins.str0:classmethodpz27*π
frombuftarfile.TarInfo.frombuf""
tarfile.TarInfo"tarfile.TarInfo*F
cls=
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo*)
buf 
builtins.bytes"builtins.bytes**
encoding
builtins.str"builtins.str*(
errors
builtins.str"builtins.str0:classmethodpz35z36z37z38z39z310*ı
fromtarfiletarfile.TarInfo.fromtarfile""
tarfile.TarInfo"tarfile.TarInfo*F
cls=
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo*/
tarfile"
tarfile.TarFile"tarfile.TarFile0:classmethodpz27z35z36z37z38z39z310*Æ
get_infotarfile.TarInfo.get_info"’
ttyping.Mapping[builtins.str,Union[builtins.str,builtins.int,builtins.str,typing.Mapping[builtins.str,builtins.str]]]
builtins.str"builtins.strÆ
WUnion[builtins.str,builtins.int,builtins.str,typing.Mapping[builtins.str,builtins.str]]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.str"builtins.strw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping"typing.Mapping*,
self"
tarfile.TarInfo"tarfile.TarInfoz27*À
get_infotarfile.TarInfo.get_info"›
vtyping.Mapping[builtins.str,Union[builtins.str,builtins.int,builtins.bytes,typing.Mapping[builtins.str,builtins.str]]]
builtins.str"builtins.str¥
YUnion[builtins.str,builtins.int,builtins.bytes,typing.Mapping[builtins.str,builtins.str]]
builtins.str"builtins.str
builtins.int"builtins.int 
builtins.bytes"builtins.bytesw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping"typing.Mapping*,
self"
tarfile.TarInfo"tarfile.TarInfoz35z36z37z38z39z310*ƒ
tobuftarfile.TarInfo.tobuf"
builtins.str"builtins.str*,
self"
tarfile.TarInfo"tarfile.TarInfo*R
formatD
Union[builtins.int,None]
builtins.int"builtins.int
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None **
errors
builtins.str"builtins.str z27*›
tobuftarfile.TarInfo.tobuf" 
builtins.bytes"builtins.bytes*,
self"
tarfile.TarInfo"tarfile.TarInfo*R
formatD
Union[builtins.int,None]
builtins.int"builtins.int
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None **
errors
builtins.str"builtins.str z35z36z37z38z39z310*√
create_ustar_header#tarfile.TarInfo.create_ustar_header"
builtins.str"builtins.str*,
self"
tarfile.TarInfo"tarfile.TarInfo*‡
info’
ttyping.Mapping[builtins.str,Union[builtins.str,builtins.int,builtins.str,typing.Mapping[builtins.str,builtins.str]]]
builtins.str"builtins.strÆ
WUnion[builtins.str,builtins.int,builtins.str,typing.Mapping[builtins.str,builtins.str]]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.str"builtins.strw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping"typing.Mapping**
encoding
builtins.str"builtins.str*(
errors
builtins.str"builtins.strz27*‰
create_ustar_header#tarfile.TarInfo.create_ustar_header" 
builtins.bytes"builtins.bytes*,
self"
tarfile.TarInfo"tarfile.TarInfo*Ë
info›
vtyping.Mapping[builtins.str,Union[builtins.str,builtins.int,builtins.bytes,typing.Mapping[builtins.str,builtins.str]]]
builtins.str"builtins.str¥
YUnion[builtins.str,builtins.int,builtins.bytes,typing.Mapping[builtins.str,builtins.str]]
builtins.str"builtins.str
builtins.int"builtins.int 
builtins.bytes"builtins.bytesw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping"typing.Mapping**
encoding
builtins.str"builtins.str*(
errors
builtins.str"builtins.strz35z36z37z38z39z310*ø
create_gnu_header!tarfile.TarInfo.create_gnu_header"
builtins.str"builtins.str*,
self"
tarfile.TarInfo"tarfile.TarInfo*‡
info’
ttyping.Mapping[builtins.str,Union[builtins.str,builtins.int,builtins.str,typing.Mapping[builtins.str,builtins.str]]]
builtins.str"builtins.strÆ
WUnion[builtins.str,builtins.int,builtins.str,typing.Mapping[builtins.str,builtins.str]]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.str"builtins.strw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping"typing.Mapping**
encoding
builtins.str"builtins.str*(
errors
builtins.str"builtins.strz27*‡
create_gnu_header!tarfile.TarInfo.create_gnu_header" 
builtins.bytes"builtins.bytes*,
self"
tarfile.TarInfo"tarfile.TarInfo*Ë
info›
vtyping.Mapping[builtins.str,Union[builtins.str,builtins.int,builtins.bytes,typing.Mapping[builtins.str,builtins.str]]]
builtins.str"builtins.str¥
YUnion[builtins.str,builtins.int,builtins.bytes,typing.Mapping[builtins.str,builtins.str]]
builtins.str"builtins.str
builtins.int"builtins.int 
builtins.bytes"builtins.bytesw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping"typing.Mapping**
encoding
builtins.str"builtins.str*(
errors
builtins.str"builtins.strz35z36z37z38z39z310*ï
create_pax_header!tarfile.TarInfo.create_pax_header"
builtins.str"builtins.str*,
self"
tarfile.TarInfo"tarfile.TarInfo*‡
info’
ttyping.Mapping[builtins.str,Union[builtins.str,builtins.int,builtins.str,typing.Mapping[builtins.str,builtins.str]]]
builtins.str"builtins.strÆ
WUnion[builtins.str,builtins.int,builtins.str,typing.Mapping[builtins.str,builtins.str]]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.str"builtins.strw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping"typing.Mapping**
encoding
builtins.str"builtins.strz27*∂
create_pax_header!tarfile.TarInfo.create_pax_header" 
builtins.bytes"builtins.bytes*,
self"
tarfile.TarInfo"tarfile.TarInfo*Ë
info›
vtyping.Mapping[builtins.str,Union[builtins.str,builtins.int,builtins.bytes,typing.Mapping[builtins.str,builtins.str]]]
builtins.str"builtins.str¥
YUnion[builtins.str,builtins.int,builtins.bytes,typing.Mapping[builtins.str,builtins.str]]
builtins.str"builtins.str
builtins.int"builtins.int 
builtins.bytes"builtins.bytesw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping"typing.Mapping**
encoding
builtins.str"builtins.strz35z36z37z38z39z310* 
create_pax_global_header(tarfile.TarInfo.create_pax_global_header"
builtins.str"builtins.str*F
cls=
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo*à
pax_headersw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping0:classmethodpz27*„
create_pax_global_header(tarfile.TarInfo.create_pax_global_header" 
builtins.bytes"builtins.bytes*F
cls=
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo*à
pax_headersw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping0:classmethodpz35z36z37z38z39z310*ã
isfiletarfile.TarInfo.isfile"
builtins.bool"builtins.bool*,
self"
tarfile.TarInfo"tarfile.TarInfoz27z35z36z37z38z39z310*â
isregtarfile.TarInfo.isreg"
builtins.bool"builtins.bool*,
self"
tarfile.TarInfo"tarfile.TarInfoz27z35z36z37z38z39z310*è
issparsetarfile.TarInfo.issparse"
builtins.bool"builtins.bool*,
self"
tarfile.TarInfo"tarfile.TarInfoz27z35z36z37z38z39z310*â
isdirtarfile.TarInfo.isdir"
builtins.bool"builtins.bool*,
self"
tarfile.TarInfo"tarfile.TarInfoz27z35z36z37z38z39z310*â
issymtarfile.TarInfo.issym"
builtins.bool"builtins.bool*,
self"
tarfile.TarInfo"tarfile.TarInfoz27z35z36z37z38z39z310*â
islnktarfile.TarInfo.islnk"
builtins.bool"builtins.bool*,
self"
tarfile.TarInfo"tarfile.TarInfoz27z35z36z37z38z39z310*â
ischrtarfile.TarInfo.ischr"
builtins.bool"builtins.bool*,
self"
tarfile.TarInfo"tarfile.TarInfoz27z35z36z37z38z39z310*â
isblktarfile.TarInfo.isblk"
builtins.bool"builtins.bool*,
self"
tarfile.TarInfo"tarfile.TarInfoz27z35z36z37z38z39z310*ã
isfifotarfile.TarInfo.isfifo"
builtins.bool"builtins.bool*,
self"
tarfile.TarInfo"tarfile.TarInfoz27z35z36z37z38z39z310*â
isdevtarfile.TarInfo.isdev"
builtins.bool"builtins.bool*,
self"
tarfile.TarInfo"tarfile.TarInfoz27z35z36z37z38z39z3102‚
linkpathtarfile.TarInfo.linkpathÄ
linkpathtarfile.TarInfo.linkpath"
builtins.str"builtins.str*,
self"
tarfile.TarInfo"tarfile.TarInfo0:propertyX`õ
linkpathtarfile.TarInfo.linkpath"
None*,
self"
tarfile.TarInfo"tarfile.TarInfo**
linkname
builtins.str"builtins.str0:linkpath.setter"27"35"36"37"38"39"310j27j35j36j37j38j39j310rW
nametarfile.TarInfo.name
builtins.str"builtins.str*27*35*36*37*38*39*310rW
pathtarfile.TarInfo.path
builtins.str"builtins.str*27*35*36*37*38*39*310rW
sizetarfile.TarInfo.size
builtins.int"builtins.int*27*35*36*37*38*39*310rY
mtimetarfile.TarInfo.mtime
builtins.int"builtins.int*27*35*36*37*38*39*310r[
chksumtarfile.TarInfo.chksum
builtins.int"builtins.int*27*35*36*37*38*39*310r_
devmajortarfile.TarInfo.devmajor
builtins.int"builtins.int*27*35*36*37*38*39*310r_
devminortarfile.TarInfo.devminor
builtins.int"builtins.int*27*35*36*37*38*39*310r[
offsettarfile.TarInfo.offset
builtins.int"builtins.int*27*35*36*37*38*39*310re
offset_datatarfile.TarInfo.offset_data
builtins.int"builtins.int*27*35*36*37*38*39*310rj
sparsetarfile.TarInfo.sparseD
Union[builtins.str,None]
builtins.str"builtins.str
None*27rÖ
sparsetarfile.TarInfo.sparseJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None*35*36*37*38*39*310ré
tarfiletarfile.TarInfo.tarfileM
Union[tarfile.TarFile,None]"
tarfile.TarFile"tarfile.TarFile
None*27*35*36*37*38*39*310rW
modetarfile.TarInfo.mode
builtins.int"builtins.int*27*35*36*37*38*39*310r>
typetarfile.TarInfo.type
builtins.str"builtins.str*27rW
typetarfile.TarInfo.type 
builtins.bytes"builtins.bytes*35*36*37*38*39*310r_
linknametarfile.TarInfo.linkname
builtins.str"builtins.str*27*35*36*37*38*39*310rU
uidtarfile.TarInfo.uid
builtins.int"builtins.int*27*35*36*37*38*39*310rU
gidtarfile.TarInfo.gid
builtins.int"builtins.int*27*35*36*37*38*39*310rY
unametarfile.TarInfo.uname
builtins.str"builtins.str*27*35*36*37*38*39*310rY
gnametarfile.TarInfo.gname
builtins.str"builtins.str*27*35*36*37*38*39*310r¿
pax_headerstarfile.TarInfo.pax_headersw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping*27*35*36*37*38*39*310æ
_GzipReadableFileobjgzip._ReadableFileobj"builtins.object*º
readgzip._ReadableFileobj.read" 
builtins.bytes"builtins.bytes*8
self.
gzip._ReadableFileobj"gzip._ReadableFileobj*#
__n
builtins.int"builtins.intz35z36z37z38z39z310*£
seekgzip._ReadableFileobj.seek"
Any*8
self.
gzip._ReadableFileobj"gzip._ReadableFileobj*#
__n
builtins.int"builtins.intz35z36z37z38z39z310Xj35j36j37j38j39j310à
_GzipWritableFileobjgzip._WritableFileobj"builtins.object*©
writegzip._WritableFileobj.write"
Any*8
self.
gzip._WritableFileobj"gzip._WritableFileobj*'
__b 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*Ä
flushgzip._WritableFileobj.flush"
Any*8
self.
gzip._WritableFileobj"gzip._WritableFileobjz35z36z37z38z39z310Xj35j36j37j38j39j310˝
_Fileobjtarfile._Fileobj"builtins.object*∞
readtarfile._Fileobj.read" 
builtins.bytes"builtins.bytes*.
self$
tarfile._Fileobj"tarfile._Fileobj*&
__size
builtins.int"builtins.intz35z36z37z38z39z310*µ
writetarfile._Fileobj.write""
builtins.object"builtins.object*.
self$
tarfile._Fileobj"tarfile._Fileobj*'
__b 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*Ñ
telltarfile._Fileobj.tell"
builtins.int"builtins.int*.
self$
tarfile._Fileobj"tarfile._Fileobjz35z36z37z38z39z310*±
seektarfile._Fileobj.seek""
builtins.object"builtins.object*.
self$
tarfile._Fileobj"tarfile._Fileobj*%
__pos
builtins.int"builtins.intz35z36z37z38z39z310*å
closetarfile._Fileobj.close""
builtins.object"builtins.object*.
self$
tarfile._Fileobj"tarfile._Fileobjz35z36z37z38z39z310Xj35j36j37j38j39j310ë
_Bz2ReadableFileobjtarfile._Bz2ReadableFileobj"bz2._ReadableFileobj*≠
close!tarfile._Bz2ReadableFileobj.close""
builtins.object"builtins.object*D
self:
tarfile._Bz2ReadableFileobj"tarfile._Bz2ReadableFileobjz35z36z37z38z39z310j35j36j37j38j39j310ë
_Bz2WritableFileobjtarfile._Bz2WritableFileobj"bz2._WritableFileobj*≠
close!tarfile._Bz2WritableFileobj.close""
builtins.object"builtins.object*D
self:
tarfile._Bz2WritableFileobj"tarfile._Bz2WritableFileobjz35z36z37z38z39z310j35j36j37j38j39j310ﬂ

opentarfile.open""
tarfile.TarFile"tarfile.TarFile*\
nameP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None *(
mode
builtins.str"builtins.str *Ñ
fileobju
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None *+
bufsize
builtins.int"builtins.int *R
formatD
Union[builtins.int,None]
builtins.int"builtins.int
None *}
tarinfon
!Union[Type[tarfile.TarInfo],None]=
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo
None *Z
dereferenceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *[
ignore_zerosG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None **
errors
builtins.str"builtins.str *–
pax_headersº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *Q
debugD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

errorlevelD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y
compresslevelD
Union[builtins.int,None]
builtins.int"builtins.int
None z27Ô
opentarfile.open""
tarfile.TarFile"tarfile.TarFile*Œ
name¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *(
mode
builtins.str"builtins.str *å
fileobj}
%Union[typing.IO[builtins.bytes],None]H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO
None *+
bufsize
builtins.int"builtins.int *R
formatD
Union[builtins.int,None]
builtins.int"builtins.int
None *}
tarinfon
!Union[Type[tarfile.TarInfo],None]=
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo
None *Z
dereferenceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *[
ignore_zerosG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None **
errors
builtins.str"builtins.str *–
pax_headersº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *Q
debugD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

errorlevelD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y
compresslevelD
Union[builtins.int,None]
builtins.int"builtins.int
None z35z36z37z38z39z310t

is_tarfiletarfile.is_tarfile"
builtins.bool"builtins.bool*.
name$
builtins.unicode"builtins.unicodez27î

is_tarfiletarfile.is_tarfile"
builtins.bool"builtins.bool*¡
name∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38„

is_tarfiletarfile.is_tarfile"
builtins.bool"builtins.bool*ó
nameå
ÑUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.IO[builtins.bytes]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IOz39z310r
filemodetarfile.filemode"
builtins.str"builtins.str*&
mode
builtins.int"builtins.intz27z35z36z37*4
NULtarfile.NUL
builtins.str"builtins.str*27*M
NULtarfile.NUL 
builtins.bytes"builtins.bytes*35*36*37*38*39*310*Y
	BLOCKSIZEtarfile.BLOCKSIZE
builtins.int"builtins.int*27*35*36*37*38*39*310*[

RECORDSIZEtarfile.RECORDSIZE
builtins.int"builtins.int*27*35*36*37*38*39*310*@
	GNU_MAGICtarfile.GNU_MAGIC
builtins.str"builtins.str*27*Y
	GNU_MAGICtarfile.GNU_MAGIC 
builtins.bytes"builtins.bytes*35*36*37*38*39*310*D
POSIX_MAGICtarfile.POSIX_MAGIC
builtins.str"builtins.str*27*]
POSIX_MAGICtarfile.POSIX_MAGIC 
builtins.bytes"builtins.bytes*35*36*37*38*39*310*]
LENGTH_NAMEtarfile.LENGTH_NAME
builtins.int"builtins.int*27*35*36*37*38*39*310*]
LENGTH_LINKtarfile.LENGTH_LINK
builtins.int"builtins.int*27*35*36*37*38*39*310*a
LENGTH_PREFIXtarfile.LENGTH_PREFIX
builtins.int"builtins.int*27*35*36*37*38*39*310*<
REGTYPEtarfile.REGTYPE
builtins.str"builtins.str*27*U
REGTYPEtarfile.REGTYPE 
builtins.bytes"builtins.bytes*35*36*37*38*39*310*>
AREGTYPEtarfile.AREGTYPE
builtins.str"builtins.str*27*W
AREGTYPEtarfile.AREGTYPE 
builtins.bytes"builtins.bytes*35*36*37*38*39*310*<
LNKTYPEtarfile.LNKTYPE
builtins.str"builtins.str*27*U
LNKTYPEtarfile.LNKTYPE 
builtins.bytes"builtins.bytes*35*36*37*38*39*310*<
SYMTYPEtarfile.SYMTYPE
builtins.str"builtins.str*27*U
SYMTYPEtarfile.SYMTYPE 
builtins.bytes"builtins.bytes*35*36*37*38*39*310*>
CONTTYPEtarfile.CONTTYPE
builtins.str"builtins.str*27*W
CONTTYPEtarfile.CONTTYPE 
builtins.bytes"builtins.bytes*35*36*37*38*39*310*<
BLKTYPEtarfile.BLKTYPE
builtins.str"builtins.str*27*U
BLKTYPEtarfile.BLKTYPE 
builtins.bytes"builtins.bytes*35*36*37*38*39*310*<
DIRTYPEtarfile.DIRTYPE
builtins.str"builtins.str*27*U
DIRTYPEtarfile.DIRTYPE 
builtins.bytes"builtins.bytes*35*36*37*38*39*310*>
FIFOTYPEtarfile.FIFOTYPE
builtins.str"builtins.str*27*W
FIFOTYPEtarfile.FIFOTYPE 
builtins.bytes"builtins.bytes*35*36*37*38*39*310*<
CHRTYPEtarfile.CHRTYPE
builtins.str"builtins.str*27*U
CHRTYPEtarfile.CHRTYPE 
builtins.bytes"builtins.bytes*35*36*37*38*39*310*N
GNUTYPE_LONGNAMEtarfile.GNUTYPE_LONGNAME
builtins.str"builtins.str*27*g
GNUTYPE_LONGNAMEtarfile.GNUTYPE_LONGNAME 
builtins.bytes"builtins.bytes*35*36*37*38*39*310*N
GNUTYPE_LONGLINKtarfile.GNUTYPE_LONGLINK
builtins.str"builtins.str*27*g
GNUTYPE_LONGLINKtarfile.GNUTYPE_LONGLINK 
builtins.bytes"builtins.bytes*35*36*37*38*39*310*J
GNUTYPE_SPARSEtarfile.GNUTYPE_SPARSE
builtins.str"builtins.str*27*c
GNUTYPE_SPARSEtarfile.GNUTYPE_SPARSE 
builtins.bytes"builtins.bytes*35*36*37*38*39*310*<
XHDTYPEtarfile.XHDTYPE
builtins.str"builtins.str*27*U
XHDTYPEtarfile.XHDTYPE 
builtins.bytes"builtins.bytes*35*36*37*38*39*310*<
XGLTYPEtarfile.XGLTYPE
builtins.str"builtins.str*27*U
XGLTYPEtarfile.XGLTYPE 
builtins.bytes"builtins.bytes*35*36*37*38*39*310*L
SOLARIS_XHDTYPEtarfile.SOLARIS_XHDTYPE
builtins.str"builtins.str*27*e
SOLARIS_XHDTYPEtarfile.SOLARIS_XHDTYPE 
builtins.bytes"builtins.bytes*35*36*37*38*39*310*_
USTAR_FORMATtarfile.USTAR_FORMAT
builtins.int"builtins.int*27*35*36*37*38*39*310*[

GNU_FORMATtarfile.GNU_FORMAT
builtins.int"builtins.int*27*35*36*37*38*39*310*[

PAX_FORMATtarfile.PAX_FORMAT
builtins.int"builtins.int*27*35*36*37*38*39*310*c
DEFAULT_FORMATtarfile.DEFAULT_FORMAT
builtins.int"builtins.int*27*35*36*37*38*39*310*|
SUPPORTED_TYPEStarfile.SUPPORTED_TYPESL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*27*ó
SUPPORTED_TYPEStarfile.SUPPORTED_TYPESR
builtins.tuple[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.tuple*35*36*37*38*39*310*x
REGULAR_TYPEStarfile.REGULAR_TYPESL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*27*ì
REGULAR_TYPEStarfile.REGULAR_TYPESR
builtins.tuple[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.tuple*35*36*37*38*39*310*p
	GNU_TYPEStarfile.GNU_TYPESL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*27*ã
	GNU_TYPEStarfile.GNU_TYPESR
builtins.tuple[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.tuple*35*36*37*38*39*310*ã

PAX_FIELDStarfile.PAX_FIELDSL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*27*35*36*37*38*39*310*≈
PAX_NUMBER_FIELDStarfile.PAX_NUMBER_FIELDSx
)builtins.dict[builtins.str,builtins.type]
builtins.str"builtins.str
builtins.type"builtins.type"builtins.dict*27*35*36*37*38*39*310*W
ENCODINGtarfile.ENCODING
builtins.str"builtins.str*27*35*36*37*38*39*310*@
	TAR_PLAINtarfile.TAR_PLAIN
builtins.int"builtins.int*27*D
TAR_GZIPPEDtarfile.TAR_GZIPPED
builtins.int"builtins.int*27*ç
PAX_NAME_FIELDStarfile.PAX_NAME_FIELDSH
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.set*35*36*37*38*39*310