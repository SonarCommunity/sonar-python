
mypy_extensions¬

_TypedDictmypy_extensions._TypedDict"typing.Mapping*z
copymypy_extensions._TypedDict.copy"
mypy_extensions._T* 
self
mypy_extensions._Tz35z36z37z38z39z310*˙

setdefault%mypy_extensions._TypedDict.setdefault""
builtins.object"builtins.object*B
self8
mypy_extensions._TypedDict"mypy_extensions._TypedDict*
k
NoReturn
*/
default"
builtins.object"builtins.objectz35z36z37z38z39z310*‚
popmypy_extensions._TypedDict.pop""
builtins.object"builtins.object*B
self8
mypy_extensions._TypedDict"mypy_extensions._TypedDict*
k
NoReturn
*%
default
mypy_extensions._T z35z36z37z38z39z310*è
update!mypy_extensions._TypedDict.update"
None* 
self
mypy_extensions._T*
__m
mypy_extensions._Tz35z36z37z38z39z310*ç
items mypy_extensions._TypedDict.items"Ñ
.typing.ItemsView[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.ItemsView*B
self8
mypy_extensions._TypedDict"mypy_extensions._TypedDictz35z36z37z38z39z310*‘
keysmypy_extensions._TypedDict.keys"N
typing.KeysView[builtins.str]
builtins.str"builtins.str"typing.KeysView*B
self8
mypy_extensions._TypedDict"mypy_extensions._TypedDictz35z36z37z38z39z310*Â
values!mypy_extensions._TypedDict.values"[
"typing.ValuesView[builtins.object]"
builtins.object"builtins.object"typing.ValuesView*B
self8
mypy_extensions._TypedDict"mypy_extensions._TypedDictz35z36z37z38z39z310*≠
__delitem__&mypy_extensions._TypedDict.__delitem__"
None*@
self8
mypy_extensions._TypedDict"mypy_extensions._TypedDict*
k
NoReturn
z35z36z37z38z39z310@j35j36j37j38j39j310Z
FlexibleAliasmypy_extensions.FlexibleAlias"builtins.objectPj35j36j37j38j39j310ó
	TypedDictmypy_extensions.TypedDict"Ç
%Type[builtins.dict[builtins.str,Any]]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict**
typename
builtins.str"builtins.str*x
fieldsl
%builtins.dict[builtins.str,Type[Any]]
builtins.str"builtins.str
	Type[Any]
Any"builtins.dict*+
total
builtins.bool"builtins.bool z35z36z37z38z39z310¡
Argmypy_extensions.Arg"
mypy_extensions._T*"
type
mypy_extensions._T *P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39z310œ

DefaultArgmypy_extensions.DefaultArg"
mypy_extensions._T*"
type
mypy_extensions._T *P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39z310À
NamedArgmypy_extensions.NamedArg"
mypy_extensions._T*"
type
mypy_extensions._T *P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39z310Ÿ
DefaultNamedArgmypy_extensions.DefaultNamedArg"
mypy_extensions._T*"
type
mypy_extensions._T *P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39z310u
VarArgmypy_extensions.VarArg"
mypy_extensions._T*"
type
mypy_extensions._T z35z36z37z38z39z310s
KwArgmypy_extensions.KwArg"
mypy_extensions._T*"
type
mypy_extensions._T z35z36z37z38z39z310R
traitmypy_extensions.trait"
Any*
cls
Anyz35z36z37z38z39z310Ë

mypyc_attrmypy_extensions.mypyc_attr"K
CallableType[builtins.function]&
builtins.function"builtins.function*'
attrs
builtins.str"builtins.str*/
kwattrs"
builtins.object"builtins.objectz35z36z37z38z39z310