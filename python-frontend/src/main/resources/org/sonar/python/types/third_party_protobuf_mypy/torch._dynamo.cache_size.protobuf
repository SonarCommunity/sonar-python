
torch._dynamo.cache_size›
CacheSizeRelevantForFrame2torch._dynamo.cache_size.CacheSizeRelevantForFrame"builtins.object*¢
will_compilation_exceedJtorch._dynamo.cache_size.CacheSizeRelevantForFrame.will_compilation_exceed"
builtins.bool"builtins.bool*r
selfh
2torch._dynamo.cache_size.CacheSizeRelevantForFrame"2torch._dynamo.cache_size.CacheSizeRelevantForFrame*'
limit
builtins.int"builtins.int*ù
)will_compilation_exceed_accumulated_limit\torch._dynamo.cache_size.CacheSizeRelevantForFrame.will_compilation_exceed_accumulated_limit"
builtins.bool"builtins.bool*r
selfh
2torch._dynamo.cache_size.CacheSizeRelevantForFrame"2torch._dynamo.cache_size.CacheSizeRelevantForFrame*¿
&will_compilation_exceed_specific_limitYtorch._dynamo.cache_size.CacheSizeRelevantForFrame.will_compilation_exceed_specific_limit"
builtins.bool"builtins.bool*r
selfh
2torch._dynamo.cache_size.CacheSizeRelevantForFrame"2torch._dynamo.cache_size.CacheSizeRelevantForFrame*'
limit
builtins.int"builtins.int*Õ
__init__;torch._dynamo.cache_size.CacheSizeRelevantForFrame.__init__"
None*r
selfh
2torch._dynamo.cache_size.CacheSizeRelevantForFrame"2torch._dynamo.cache_size.CacheSizeRelevantForFrame*5
num_cache_entries
builtins.int"builtins.int *O
+num_cache_entries_with_same_id_matched_objs
builtins.int"builtins.int 8rw
num_cache_entriesDtorch._dynamo.cache_size.CacheSizeRelevantForFrame.num_cache_entries
builtins.int"builtins.intr´
+num_cache_entries_with_same_id_matched_objs^torch._dynamo.cache_size.CacheSizeRelevantForFrame.num_cache_entries_with_same_id_matched_objs
builtins.int"builtins.intr˘
__dataclass_fields__Gtorch._dynamo.cache_size.CacheSizeRelevantForFrame.__dataclass_fields__ó
2builtins.dict[builtins.str,dataclasses.Field[Any]]
builtins.str"builtins.str4
dataclasses.Field[Any]
Any"dataclasses.Field"builtins.dict∑
_get_weakref_from_f_locals3torch._dynamo.cache_size._get_weakref_from_f_locals"
Any*-
frame"
types.FrameType"types.FrameType*,

local_name
builtins.str"builtins.str∏
_has_same_id_matched_objs2torch._dynamo.cache_size._has_same_id_matched_objs"
builtins.bool"builtins.bool*-
frame"
types.FrameType"types.FrameType*
cache_entry
AnyÙ
compute_cache_size+torch._dynamo.cache_size.compute_cache_size"h
2torch._dynamo.cache_size.CacheSizeRelevantForFrame"2torch._dynamo.cache_size.CacheSizeRelevantForFrame*-
frame"
types.FrameType"types.FrameType*
cache_entry
Any◊
is_recompilation)torch._dynamo.cache_size.is_recompilation"
builtins.bool"builtins.bool*x

cache_sizeh
2torch._dynamo.cache_size.CacheSizeRelevantForFrame"2torch._dynamo.cache_size.CacheSizeRelevantForFrame¨
exceeds_cache_size_limit1torch._dynamo.cache_size.exceeds_cache_size_limit"c
!Tuple[builtins.bool,builtins.str]
builtins.bool"builtins.bool
builtins.str"builtins.str*x

cache_sizeh
2torch._dynamo.cache_size.CacheSizeRelevantForFrame"2torch._dynamo.cache_size.CacheSizeRelevantForFrame*î
__annotations__(torch._dynamo.cache_size.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*E
logtorch._dynamo.cache_size.log 
logging.Logger"logging.Logger