
certifi.core¤
get_pathimportlib.resources.path"Z
#typing.ContextManager[pathlib.Path]
pathlib.Path"pathlib.Path"typing.ContextManager*Ì
package¾
/TypeAlias[Union[builtins.str,types.ModuleType]]l
$Union[builtins.str,types.ModuleType]
builtins.str"builtins.str$
types.ModuleType"types.ModuleType"importlib.resources.Package*Ò
resourceÃ
/TypeAlias[Union[builtins.str,os.PathLike[Any]]]p
$Union[builtins.str,os.PathLike[Any]]
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"importlib.resources.Resource9
wherecertifi.core.where"
builtins.str"builtins.str?
contentscertifi.core.contents"
builtins.str"builtins.str*Ã
_CACERT_CTXcertifi.core._CACERT_CTX™
/Union[typing.ContextManager[pathlib.Path],None]Z
#typing.ContextManager[pathlib.Path]
pathlib.Path"pathlib.Path"typing.ContextManager
None*o
_CACERT_PATHcertifi.core._CACERT_PATHD
Union[builtins.str,None]
builtins.str"builtins.str
None