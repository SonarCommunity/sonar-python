
numpy.lib.type_check§
_SupportsReal"numpy.lib.type_check._SupportsReal"builtins.object*Ÿ
real'numpy.lib.type_check._SupportsReal.real"S
numpy.lib.type_check._T_co"
builtins.object"builtins.object"builtins.object*ƒ
selfπ
>numpy.lib.type_check._SupportsReal[numpy.lib.type_check._T_co]S
numpy.lib.type_check._T_co"
builtins.object"builtins.object"builtins.object""numpy.lib.type_check._SupportsReal0:property`PX§
_SupportsImag"numpy.lib.type_check._SupportsImag"builtins.object*Ÿ
imag'numpy.lib.type_check._SupportsImag.imag"S
numpy.lib.type_check._T_co"
builtins.object"builtins.object"builtins.object*ƒ
selfπ
>numpy.lib.type_check._SupportsImag[numpy.lib.type_check._T_co]S
numpy.lib.type_check._T_co"
builtins.object"builtins.object"builtins.object""numpy.lib.type_check._SupportsImag0:property`PX≠
mintypecode numpy.lib.type_check.mintypecode"
builtins.str"builtins.str*œ
	typecharsø
Òtyping.Iterable[Union[builtins.str,TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]]]∑
‡Union[builtins.str,TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]]
builtins.str"builtins.str±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike"typing.Iterable*_
typesetP
typing.Container[builtins.str]
builtins.str"builtins.str"typing.Container *+
default
builtins.str"builtins.str ∂
iscomplexobj!numpy.lib.type_check.iscomplexobj"
builtins.bool"builtins.bool*‚
x⁄
éUnion[numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]]ê
:numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]](
numpy.dtype[Any]
Any"numpy.dtype"(numpy._typing._dtype_like._SupportsDType±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike∞
	isrealobjnumpy.lib.type_check.isrealobj"
builtins.bool"builtins.bool*‚
x⁄
éUnion[numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]]ê
:numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]](
numpy.dtype[Any]
Any"numpy.dtype"(numpy._typing._dtype_like._SupportsDType±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike"öE
asfarraynumpy.lib.type_check.asfarray·
asfarraynumpy.lib.type_check.asfarray"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*)
a"
builtins.object"builtins.object*w
dtypej
 Union[None,Type[builtins.float]]
None:
Type[builtins.float] 
builtins.float"builtins.float 0:overloadXï2
asfarraynumpy.lib.type_check.asfarray"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*
a
Any*≈.
dtypeπ.
≥TypeAlias[Union[builtins.type,builtins.type,numpy.dtype[numpy.complexfloating[Any,Any]],numpy._typing._dtype_like._SupportsDType[numpy.dtype[numpy.complexfloating[Any,Any]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]]—&
®Union[builtins.type,builtins.type,numpy.dtype[numpy.complexfloating[Any,Any]],numpy._typing._dtype_like._SupportsDType[numpy.dtype[numpy.complexfloating[Any,Any]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]
builtins.type"builtins.type
builtins.type"builtins.typeÖ
+numpy.dtype[numpy.complexfloating[Any,Any]]I
numpy.complexfloating[Any,Any]
Any
Any"numpy.complexfloating"numpy.dtypeâ
Unumpy._typing._dtype_like._SupportsDType[numpy.dtype[numpy.complexfloating[Any,Any]]]Ö
+numpy.dtype[numpy.complexfloating[Any,Any]]I
numpy.complexfloating[Any,Any]
Any
Any"numpy.complexfloating"numpy.dtype"(numpy._typing._dtype_like._SupportsDType∆
TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ï
tUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str")numpy._typing._char_codes._Complex64Codes«
TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ï
tUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"*numpy._typing._char_codes._Complex128Codes´
ïTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Â
äUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"'numpy._typing._char_codes._CSingleCodesı
¡TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]É
∂Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"'numpy._typing._char_codes._CDoubleCodesî
´TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]¥
†Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"+numpy._typing._char_codes._CLongDoubleCodes"+numpy._typing._dtype_like._DTypeLikeComplex0:overloadXÚ
asfarraynumpy.lib.type_check.asfarray"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*
a
Any*¢

dtypeñ

ÍTypeAlias[Union[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]]]ˇ
ﬂUnion[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]](
numpy.dtype[Any]
Any"numpy.dtype
None
builtins.type"builtins.typeê
:numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]](
numpy.dtype[Any]
Any"numpy.dtype"(numpy._typing._dtype_like._SupportsDType
builtins.str"builtins.strì
lTypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]ˆ
aUnion[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]ç
"Tuple[TypeAlias[Any],builtins.int]G
TypeAlias[Any]
Any"*numpy._typing._dtype_like._DTypeLikeNested
builtins.int"builtins.int ,
builtins.list[Any]
Any"builtins.listM
TypeAlias[TypedDict]
	TypedDict"$numpy._typing._dtype_like._DTypeDict "(numpy._typing._dtype_like._VoidDTypeLike"#numpy._typing._dtype_like.DTypeLike0:overloadX"€
realnumpy.lib.type_check.real¡
realnumpy.lib.type_check.real"P
numpy.lib.type_check._T"
builtins.object"builtins.object"builtins.object*Ω
val≥
;numpy.lib.type_check._SupportsReal[numpy.lib.type_check._T]P
numpy.lib.type_check._T"
builtins.object"builtins.object"builtins.object""numpy.lib.type_check._SupportsReal0:overloadXÛ
realnumpy.lib.type_check.real"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*ª
val±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike0:overloadX"€
imagnumpy.lib.type_check.imag¡
imagnumpy.lib.type_check.imag"P
numpy.lib.type_check._T"
builtins.object"builtins.object"builtins.object*Ω
val≥
;numpy.lib.type_check._SupportsImag[numpy.lib.type_check._T]P
numpy.lib.type_check._T"
builtins.object"builtins.object"builtins.object""numpy.lib.type_check._SupportsImag0:overloadXÛ
imagnumpy.lib.type_check.imag"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*ª
val±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike0:overloadX"…
	iscomplexnumpy.lib.type_check.iscomplexù
	iscomplexnumpy.lib.type_check.iscomplex"
numpy.bool_"numpy.bool_*≈
xΩ
hTypeAlias[Union[builtins.int,builtins.float,builtins.complex,builtins.str,builtins.bytes,numpy.generic]]ß
]Union[builtins.int,builtins.float,builtins.complex,builtins.str,builtins.bytes,numpy.generic]
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complex
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
numpy.generic"numpy.generic"%numpy._typing._scalars._ScalarLike_co0:overloadX˚
	iscomplexnumpy.lib.type_check.iscomplex"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*π
x±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike0:overloadX"∑
isrealnumpy.lib.type_check.isrealó
isrealnumpy.lib.type_check.isreal"
numpy.bool_"numpy.bool_*≈
xΩ
hTypeAlias[Union[builtins.int,builtins.float,builtins.complex,builtins.str,builtins.bytes,numpy.generic]]ß
]Union[builtins.int,builtins.float,builtins.complex,builtins.str,builtins.bytes,numpy.generic]
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complex
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
numpy.generic"numpy.generic"%numpy._typing._scalars._ScalarLike_co0:overloadXı
isrealnumpy.lib.type_check.isreal"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*π
x±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike0:overloadX"“/

nan_to_numnumpy.lib.type_check.nan_to_numÎ

nan_to_numnumpy.lib.type_check.nan_to_num"L
numpy.lib.type_check._SCT
numpy.generic"numpy.generic"numpy.generic*S
xL
numpy.lib.type_check._SCT
numpy.generic"numpy.generic"numpy.generic**
copy
builtins.bool"builtins.bool *+
nan 
builtins.float"builtins.float *X
posinfJ
Union[None,builtins.float]
None 
builtins.float"builtins.float *X
neginfJ
Union[None,builtins.float]
None 
builtins.float"builtins.float 0:overloadXô

nan_to_numnumpy.lib.type_check.nan_to_num"
Any*≈
xΩ
hTypeAlias[Union[builtins.int,builtins.float,builtins.complex,builtins.str,builtins.bytes,numpy.generic]]ß
]Union[builtins.int,builtins.float,builtins.complex,builtins.str,builtins.bytes,numpy.generic]
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complex
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
numpy.generic"numpy.generic"%numpy._typing._scalars._ScalarLike_co**
copy
builtins.bool"builtins.bool *+
nan 
builtins.float"builtins.float *X
posinfJ
Union[None,builtins.float]
None 
builtins.float"builtins.float *X
neginfJ
Union[None,builtins.float]
None 
builtins.float"builtins.float 0:overloadXã

nan_to_numnumpy.lib.type_check.nan_to_num"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*∫

x≤

˚TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]]]â
Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]]¶
\numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]õ
2numpy.dtype[numpy._typing._array_like._ScalarType]X
%numpy._typing._array_like._ScalarType
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"(numpy._typing._array_like._SupportsArrayË
ånumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]¶
\numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]õ
2numpy.dtype[numpy._typing._array_like._ScalarType]X
%numpy._typing._array_like._ScalarType
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequence"$numpy._typing._array_like._ArrayLike**
copy
builtins.bool"builtins.bool *+
nan 
builtins.float"builtins.float *X
posinfJ
Union[None,builtins.float]
None 
builtins.float"builtins.float *X
neginfJ
Union[None,builtins.float]
None 
builtins.float"builtins.float 0:overloadXä

nan_to_numnumpy.lib.type_check.nan_to_num"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*π
x±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike**
copy
builtins.bool"builtins.bool *+
nan 
builtins.float"builtins.float *X
posinfJ
Union[None,builtins.float]
None 
builtins.float"builtins.float *X
neginfJ
Union[None,builtins.float]
None 
builtins.float"builtins.float 0:overloadX"π1
real_if_close"numpy.lib.type_check.real_if_closeú
real_if_close"numpy.lib.type_check.real_if_close"Ó
bUnion[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],Unknown]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray *∫

a≤

˚TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]]]â
Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]]¶
\numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]õ
2numpy.dtype[numpy._typing._array_like._ScalarType]X
%numpy._typing._array_like._ScalarType
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"(numpy._typing._array_like._SupportsArrayË
ånumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]¶
\numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]õ
2numpy.dtype[numpy._typing._array_like._ScalarType]X
%numpy._typing._array_like._ScalarType
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequence"$numpy._typing._array_like._ArrayLike*+
tol 
builtins.float"builtins.float 0:overloadX±
real_if_close"numpy.lib.type_check.real_if_close"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*∫

a≤

˚TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]]]â
Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]]¶
\numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]õ
2numpy.dtype[numpy._typing._array_like._ScalarType]X
%numpy._typing._array_like._ScalarType
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"(numpy._typing._array_like._SupportsArrayË
ånumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]¶
\numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]õ
2numpy.dtype[numpy._typing._array_like._ScalarType]X
%numpy._typing._array_like._ScalarType
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequence"$numpy._typing._array_like._ArrayLike*+
tol 
builtins.float"builtins.float 0:overloadX∞
real_if_close"numpy.lib.type_check.real_if_close"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*π
a±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike*+
tol 
builtins.float"builtins.float 0:overloadX"Õ
typenamenumpy.lib.type_check.typename≥
typenamenumpy.lib.type_check.typename"7
Literal[builtins.str]	
builtins.str"builtins.str*A
char7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadX≥
typenamenumpy.lib.type_check.typename"7
Literal[builtins.str]	
builtins.str"builtins.str*A
char7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadX≥
typenamenumpy.lib.type_check.typename"7
Literal[builtins.str]	
builtins.str"builtins.str*A
char7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadX≥
typenamenumpy.lib.type_check.typename"7
Literal[builtins.str]	
builtins.str"builtins.str*A
char7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadX≥
typenamenumpy.lib.type_check.typename"7
Literal[builtins.str]	
builtins.str"builtins.str*A
char7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadX≥
typenamenumpy.lib.type_check.typename"7
Literal[builtins.str]	
builtins.str"builtins.str*A
char7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadX≥
typenamenumpy.lib.type_check.typename"7
Literal[builtins.str]	
builtins.str"builtins.str*A
char7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadX≥
typenamenumpy.lib.type_check.typename"7
Literal[builtins.str]	
builtins.str"builtins.str*A
char7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadX≥
typenamenumpy.lib.type_check.typename"7
Literal[builtins.str]	
builtins.str"builtins.str*A
char7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadX≥
typenamenumpy.lib.type_check.typename"7
Literal[builtins.str]	
builtins.str"builtins.str*A
char7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadX≥
typenamenumpy.lib.type_check.typename"7
Literal[builtins.str]	
builtins.str"builtins.str*A
char7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadX≥
typenamenumpy.lib.type_check.typename"7
Literal[builtins.str]	
builtins.str"builtins.str*A
char7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadX≥
typenamenumpy.lib.type_check.typename"7
Literal[builtins.str]	
builtins.str"builtins.str*A
char7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadX≥
typenamenumpy.lib.type_check.typename"7
Literal[builtins.str]	
builtins.str"builtins.str*A
char7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadX≥
typenamenumpy.lib.type_check.typename"7
Literal[builtins.str]	
builtins.str"builtins.str*A
char7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadX≥
typenamenumpy.lib.type_check.typename"7
Literal[builtins.str]	
builtins.str"builtins.str*A
char7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadX≥
typenamenumpy.lib.type_check.typename"7
Literal[builtins.str]	
builtins.str"builtins.str*A
char7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadX≥
typenamenumpy.lib.type_check.typename"7
Literal[builtins.str]	
builtins.str"builtins.str*A
char7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadX≥
typenamenumpy.lib.type_check.typename"7
Literal[builtins.str]	
builtins.str"builtins.str*A
char7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadX≥
typenamenumpy.lib.type_check.typename"7
Literal[builtins.str]	
builtins.str"builtins.str*A
char7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadX≥
typenamenumpy.lib.type_check.typename"7
Literal[builtins.str]	
builtins.str"builtins.str*A
char7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadX≥
typenamenumpy.lib.type_check.typename"7
Literal[builtins.str]	
builtins.str"builtins.str*A
char7
Literal[builtins.str]	
builtins.str"builtins.str0:overloadX"é3
common_type numpy.lib.type_check.common_type∑
common_type numpy.lib.type_check.common_type"î
*Type[numpy.floating[numpy._typing._64Bit]]d
$numpy.floating[numpy._typing._64Bit],
numpy._typing._64Bit"numpy._typing._64Bit"numpy.floating*‡
arrays”
Inumpy._typing._dtype_like._SupportsDType[numpy.dtype[numpy.integer[Any]]]\
numpy.dtype[numpy.integer[Any]],
numpy.integer[Any]
Any"numpy.integer"numpy.dtype"(numpy._typing._dtype_like._SupportsDType0:overloadX≥
common_type numpy.lib.type_check.common_type"‡
1Type[numpy.floating[numpy.lib.type_check._NBit1]]®
+numpy.floating[numpy.lib.type_check._NBit1]i
numpy.lib.type_check._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.floating*ê
arraysÉ
bnumpy._typing._dtype_like._SupportsDType[numpy.dtype[numpy.floating[numpy.lib.type_check._NBit1]]]Ú
8numpy.dtype[numpy.floating[numpy.lib.type_check._NBit1]]®
+numpy.floating[numpy.lib.type_check._NBit1]i
numpy.lib.type_check._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.floating"numpy.dtype"(numpy._typing._dtype_like._SupportsDType0:overloadXÖ
common_type numpy.lib.type_check.common_type"Ñ
MType[numpy.floating[Union[numpy.lib.type_check._NBit1,numpy._typing._64Bit]]]∞
Gnumpy.floating[Union[numpy.lib.type_check._NBit1,numpy._typing._64Bit]]‘
7Union[numpy.lib.type_check._NBit1,numpy._typing._64Bit]i
numpy.lib.type_check._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase,
numpy._typing._64Bit"numpy._typing._64Bit"numpy.floating*æ
arrays±
|numpy._typing._dtype_like._SupportsDType[numpy.dtype[Union[numpy.integer[Any],numpy.floating[numpy.lib.type_check._NBit1]]]]Ü
Rnumpy.dtype[Union[numpy.integer[Any],numpy.floating[numpy.lib.type_check._NBit1]]]¢
EUnion[numpy.integer[Any],numpy.floating[numpy.lib.type_check._NBit1]],
numpy.integer[Any]
Any"numpy.integer®
+numpy.floating[numpy.lib.type_check._NBit1]i
numpy.lib.type_check._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.floating"numpy.dtype"(numpy._typing._dtype_like._SupportsDType0:overloadX–
common_type numpy.lib.type_check.common_type"Ü
öType[numpy.complexfloating[Union[numpy.lib.type_check._NBit1,numpy.lib.type_check._NBit2],Union[numpy.lib.type_check._NBit1,numpy.lib.type_check._NBit2]]]‰
înumpy.complexfloating[Union[numpy.lib.type_check._NBit1,numpy.lib.type_check._NBit2],Union[numpy.lib.type_check._NBit1,numpy.lib.type_check._NBit2]]ò
>Union[numpy.lib.type_check._NBit1,numpy.lib.type_check._NBit2]i
numpy.lib.type_check._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBasei
numpy.lib.type_check._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBaseò
>Union[numpy.lib.type_check._NBit1,numpy.lib.type_check._NBit2]i
numpy.lib.type_check._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBasei
numpy.lib.type_check._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.complexfloating*á
arrays˙
∏numpy._typing._dtype_like._SupportsDType[numpy.dtype[Union[numpy.floating[numpy.lib.type_check._NBit1],numpy.complexfloating[numpy.lib.type_check._NBit2,numpy.lib.type_check._NBit2]]]]í
énumpy.dtype[Union[numpy.floating[numpy.lib.type_check._NBit1],numpy.complexfloating[numpy.lib.type_check._NBit2,numpy.lib.type_check._NBit2]]]Ò
ÅUnion[numpy.floating[numpy.lib.type_check._NBit1],numpy.complexfloating[numpy.lib.type_check._NBit2,numpy.lib.type_check._NBit2]]®
+numpy.floating[numpy.lib.type_check._NBit1]i
numpy.lib.type_check._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.floatingΩ
Nnumpy.complexfloating[numpy.lib.type_check._NBit2,numpy.lib.type_check._NBit2]i
numpy.lib.type_check._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBasei
numpy.lib.type_check._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.complexfloating"numpy.dtype"(numpy._typing._dtype_like._SupportsDType0:overloadXë
common_type numpy.lib.type_check.common_type"‡
ƒType[numpy.complexfloating[Union[numpy._typing._64Bit,numpy.lib.type_check._NBit1,numpy.lib.type_check._NBit2],Union[numpy._typing._64Bit,numpy.lib.type_check._NBit1,numpy.lib.type_check._NBit2]]]î
ænumpy.complexfloating[Union[numpy._typing._64Bit,numpy.lib.type_check._NBit1,numpy.lib.type_check._NBit2],Union[numpy._typing._64Bit,numpy.lib.type_check._NBit1,numpy.lib.type_check._NBit2]]€
SUnion[numpy._typing._64Bit,numpy.lib.type_check._NBit1,numpy.lib.type_check._NBit2],
numpy._typing._64Bit"numpy._typing._64Biti
numpy.lib.type_check._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBasei
numpy.lib.type_check._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase€
SUnion[numpy._typing._64Bit,numpy.lib.type_check._NBit1,numpy.lib.type_check._NBit2],
numpy._typing._64Bit"numpy._typing._64Biti
numpy.lib.type_check._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBasei
numpy.lib.type_check._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.complexfloating*Ó
arrays·
Ànumpy._typing._dtype_like._SupportsDType[numpy.dtype[Union[numpy.integer[Any],numpy.floating[numpy.lib.type_check._NBit1],numpy.complexfloating[numpy.lib.type_check._NBit2,numpy.lib.type_check._NBit2]]]]Ê
°numpy.dtype[Union[numpy.integer[Any],numpy.floating[numpy.lib.type_check._NBit1],numpy.complexfloating[numpy.lib.type_check._NBit2,numpy.lib.type_check._NBit2]]]≤
îUnion[numpy.integer[Any],numpy.floating[numpy.lib.type_check._NBit1],numpy.complexfloating[numpy.lib.type_check._NBit2,numpy.lib.type_check._NBit2]],
numpy.integer[Any]
Any"numpy.integer®
+numpy.floating[numpy.lib.type_check._NBit1]i
numpy.lib.type_check._NBit10
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.floatingΩ
Nnumpy.complexfloating[numpy.lib.type_check._NBit2,numpy.lib.type_check._NBit2]i
numpy.lib.type_check._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBasei
numpy.lib.type_check._NBit20
numpy._typing.NBitBase"numpy._typing.NBitBase"numpy._typing.NBitBase"numpy.complexfloating"numpy.dtype"(numpy._typing._dtype_like._SupportsDType0:overloadX*ê
__annotations__$numpy.lib.type_check.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*?
Ltyping.Literal*
typing._SpecialForm"typing._SpecialForm*s
__all__numpy.lib.type_check.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list