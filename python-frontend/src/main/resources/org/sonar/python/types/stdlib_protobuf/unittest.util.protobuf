
unittest.utilØ
_shortenunittest.util._shorten"
builtins.str"builtins.str*#
s
builtins.str"builtins.str*+
	prefixlen
builtins.int"builtins.int*+
	suffixlen
builtins.int"builtins.intz35z36z37z38z39z310²
_common_shorten_repr"unittest.util._common_shorten_repr"5
Tuple[builtins.str]
builtins.str"builtins.str*&
args
builtins.str"builtins.strz35z36z37z38z39z310µ
	safe_reprunittest.util.safe_repr"
builtins.str"builtins.str*+
obj"
builtins.object"builtins.object*+
short
builtins.bool"builtins.bool z35z36z37z38z39z310‚
strclassunittest.util.strclass"
builtins.str"builtins.str*'
cls
builtins.type"builtins.typez35z36z37z38z39z310æ
sorted_list_difference$unittest.util.sorted_list_difference"Ú
FTuple[builtins.list[unittest.util._T],builtins.list[unittest.util._T]]F
builtins.list[unittest.util._T]
unittest.util._T"builtins.listF
builtins.list[unittest.util._T]
unittest.util._T"builtins.list*X
expectedJ
!typing.Sequence[unittest.util._T]
unittest.util._T"typing.Sequence*V
actualJ
!typing.Sequence[unittest.util._T]
unittest.util._T"typing.Sequencez35z36z37z38z39z310ð
unorderable_list_difference)unittest.util.unorderable_list_difference"Ú
FTuple[builtins.list[unittest.util._T],builtins.list[unittest.util._T]]F
builtins.list[unittest.util._T]
unittest.util._T"builtins.listF
builtins.list[unittest.util._T]
unittest.util._T"builtins.list*X
expectedJ
!typing.Sequence[unittest.util._T]
unittest.util._T"typing.Sequence*V
actualJ
!typing.Sequence[unittest.util._T]
unittest.util._T"typing.Sequencez35z36z37z38z39z310ƒ
three_way_cmpunittest.util.three_way_cmp"
builtins.int"builtins.int*
x
Any*
y
Anyz35z36z37z38z39z310Ë
_count_diff_all_purpose%unittest.util._count_diff_all_purpose"½
Mbuiltins.list[TypeAlias[Tuple[UnboundType[_T],UnboundType[_T],builtins.int]]]Ü
>TypeAlias[Tuple[UnboundType[_T],UnboundType[_T],builtins.int]]
3Tuple[UnboundType[_T],UnboundType[_T],builtins.int]
UnboundType[_T]
UnboundType[_T]
builtins.int"builtins.int"unittest.util._Mismatch"builtins.list*V
actualJ
!typing.Sequence[unittest.util._T]
unittest.util._T"typing.Sequence*X
expectedJ
!typing.Sequence[unittest.util._T]
unittest.util._T"typing.Sequencez35z36z37z38z39z310Å
_count_diff_hashable"unittest.util._count_diff_hashable"½
Mbuiltins.list[TypeAlias[Tuple[UnboundType[_T],UnboundType[_T],builtins.int]]]Ü
>TypeAlias[Tuple[UnboundType[_T],UnboundType[_T],builtins.int]]
3Tuple[UnboundType[_T],UnboundType[_T],builtins.int]
UnboundType[_T]
UnboundType[_T]
builtins.int"builtins.int"unittest.util._Mismatch"builtins.list*V
actualJ
!typing.Sequence[unittest.util._T]
unittest.util._T"typing.Sequence*X
expectedJ
!typing.Sequence[unittest.util._T]
unittest.util._T"typing.Sequencez35z36z37z38z39z310*_
_MAX_LENGTHunittest.util._MAX_LENGTH
builtins.int"builtins.int*35*36*37*38*39*310*i
_PLACEHOLDER_LENunittest.util._PLACEHOLDER_LEN
builtins.int"builtins.int*35*36*37*38*39*310*e
_MIN_BEGIN_LENunittest.util._MIN_BEGIN_LEN
builtins.int"builtins.int*35*36*37*38*39*310*a
_MIN_END_LENunittest.util._MIN_END_LEN
builtins.int"builtins.int*35*36*37*38*39*310*g
_MIN_COMMON_LENunittest.util._MIN_COMMON_LEN
builtins.int"builtins.int*35*36*37*38*39*310*c
_MIN_DIFF_LENunittest.util._MIN_DIFF_LEN
builtins.int"builtins.int*35*36*37*38*39*310