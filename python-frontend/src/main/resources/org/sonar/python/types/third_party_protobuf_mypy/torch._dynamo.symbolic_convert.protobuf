
torch._dynamo.symbolic_convertÅ
SpeculationEntry/torch._dynamo.symbolic_convert.SpeculationEntry"builtins.object*p
fail_and_restart_analysisItorch._dynamo.symbolic_convert.SpeculationEntry.fail_and_restart_analysis*
self*∞
__init__8torch._dynamo.symbolic_convert.SpeculationEntry.__init__"
None*l
selfb
/torch._dynamo.symbolic_convert.SpeculationEntry"/torch._dynamo.symbolic_convert.SpeculationEntry**
filename
builtins.str"builtins.str*(
lineno
builtins.int"builtins.int*5
instruction_pointer
builtins.int"builtins.int*,
failed
builtins.bool"builtins.bool *∂
reasonß
9Union[torch._dynamo.output_graph.GraphCompileReason,None]^
-torch._dynamo.output_graph.GraphCompileReason"-torch._dynamo.output_graph.GraphCompileReason
None 8rb
filename8torch._dynamo.symbolic_convert.SpeculationEntry.filename
builtins.str"builtins.strr^
lineno6torch._dynamo.symbolic_convert.SpeculationEntry.lineno
builtins.int"builtins.intrx
instruction_pointerCtorch._dynamo.symbolic_convert.SpeculationEntry.instruction_pointer
builtins.int"builtins.intr`
failed6torch._dynamo.symbolic_convert.SpeculationEntry.failed
builtins.bool"builtins.boolrÍ
reason6torch._dynamo.symbolic_convert.SpeculationEntry.reasonß
9Union[torch._dynamo.output_graph.GraphCompileReason,None]^
-torch._dynamo.output_graph.GraphCompileReason"-torch._dynamo.output_graph.GraphCompileReason
Nonerˆ
__dataclass_fields__Dtorch._dynamo.symbolic_convert.SpeculationEntry.__dataclass_fields__ó
2builtins.dict[builtins.str,dataclasses.Field[Any]]
builtins.str"builtins.str4
dataclasses.Field[Any]
Any"dataclasses.Field"builtins.dictﬂ
SpeculationLog-torch._dynamo.symbolic_convert.SpeculationLog"builtins.object*J
restart5torch._dynamo.symbolic_convert.SpeculationLog.restart*
self*F
clear3torch._dynamo.symbolic_convert.SpeculationLog.clear*
self*Ä
next2torch._dynamo.symbolic_convert.SpeculationLog.next"b
/torch._dynamo.symbolic_convert.SpeculationEntry"/torch._dynamo.symbolic_convert.SpeculationEntry*h
self^
-torch._dynamo.symbolic_convert.SpeculationLog"-torch._dynamo.symbolic_convert.SpeculationLog**
filename
builtins.str"builtins.str*(
lineno
builtins.int"builtins.int* 
instruction_pointer
Any*ß
__init__6torch._dynamo.symbolic_convert.SpeculationLog.__init__"
None*h
self^
-torch._dynamo.symbolic_convert.SpeculationLog"-torch._dynamo.symbolic_convert.SpeculationLog*√
entries≥
>builtins.list[torch._dynamo.symbolic_convert.SpeculationEntry]b
/torch._dynamo.symbolic_convert.SpeculationEntry"/torch._dynamo.symbolic_convert.SpeculationEntry"builtins.list *)
index
builtins.int"builtins.int 8rˆ
entries5torch._dynamo.symbolic_convert.SpeculationLog.entries≥
>builtins.list[torch._dynamo.symbolic_convert.SpeculationEntry]b
/torch._dynamo.symbolic_convert.SpeculationEntry"/torch._dynamo.symbolic_convert.SpeculationEntry"builtins.listrZ
index3torch._dynamo.symbolic_convert.SpeculationLog.index
builtins.int"builtins.intrÙ
__dataclass_fields__Btorch._dynamo.symbolic_convert.SpeculationLog.__dataclass_fields__ó
2builtins.dict[builtins.str,dataclasses.Field[Any]]
builtins.str"builtins.str4
dataclasses.Field[Any]
Any"dataclasses.Field"builtins.dict©
BlockStackEntry.torch._dynamo.symbolic_convert.BlockStackEntry"builtins.object*S
can_restore:torch._dynamo.symbolic_convert.BlockStackEntry.can_restore*
self*O
	resume_fn8torch._dynamo.symbolic_convert.BlockStackEntry.resume_fn*
self*M
exit3torch._dynamo.symbolic_convert.BlockStackEntry.exit*
self*
tx*·
__init__7torch._dynamo.symbolic_convert.BlockStackEntry.__init__"
None*j
self`
.torch._dynamo.symbolic_convert.BlockStackEntry".torch._dynamo.symbolic_convert.BlockStackEntry*p
instf
1torch._dynamo.bytecode_transformation.Instruction"1torch._dynamo.bytecode_transformation.Instruction*r
targetf
1torch._dynamo.bytecode_transformation.Instruction"1torch._dynamo.bytecode_transformation.Instruction*W
stack_indexD
Union[builtins.int,None]
builtins.int"builtins.int
None *Ê
with_context—
GUnion[torch._dynamo.variables.ctx_manager.ContextWrappingVariable,None]z
;torch._dynamo.variables.ctx_manager.ContextWrappingVariable";torch._dynamo.variables.ctx_manager.ContextWrappingVariable
None 8r£
inst3torch._dynamo.symbolic_convert.BlockStackEntry.instf
1torch._dynamo.bytecode_transformation.Instruction"1torch._dynamo.bytecode_transformation.Instructionrß
target5torch._dynamo.symbolic_convert.BlockStackEntry.targetf
1torch._dynamo.bytecode_transformation.Instruction"1torch._dynamo.bytecode_transformation.Instructionrè
stack_index:torch._dynamo.symbolic_convert.BlockStackEntry.stack_indexD
Union[builtins.int,None]
builtins.int"builtins.int
Nonerü
with_context;torch._dynamo.symbolic_convert.BlockStackEntry.with_context—
GUnion[torch._dynamo.variables.ctx_manager.ContextWrappingVariable,None]z
;torch._dynamo.variables.ctx_manager.ContextWrappingVariable";torch._dynamo.variables.ctx_manager.ContextWrappingVariable
Nonerı
__dataclass_fields__Ctorch._dynamo.symbolic_convert.BlockStackEntry.__dataclass_fields__ó
2builtins.dict[builtins.str,dataclasses.Field[Any]]
builtins.str"builtins.str4
dataclasses.Field[Any]
Any"dataclasses.Field"builtins.dictQ
ReturnValueOp,torch._dynamo.symbolic_convert.ReturnValueOp"builtins.Exception¬
BytecodeDistpatchTableMeta9torch._dynamo.symbolic_convert.BytecodeDistpatchTableMeta"builtins.type*u
__init__Btorch._dynamo.symbolic_convert.BytecodeDistpatchTableMeta.__init__*
cls*
name*	
bases*
dctrc
dispatch_tableHtorch._dynamo.symbolic_convert.BytecodeDistpatchTableMeta.dispatch_table
AnyçÛ
InstructionTranslatorBase8torch._dynamo.symbolic_convert.InstructionTranslatorBase"builtins.object*É
mark_inconsistent_side_effectsWtorch._dynamo.symbolic_convert.InstructionTranslatorBase.mark_inconsistent_side_effects*
self*k
maybe_has_backedgeKtorch._dynamo.symbolic_convert.InstructionTranslatorBase.maybe_has_backedge*
self*i
cell_and_freevarsJtorch._dynamo.symbolic_convert.InstructionTranslatorBase.cell_and_freevars*
self*i
prune_dead_localsJtorch._dynamo.symbolic_convert.InstructionTranslatorBase.prune_dead_locals*
self*„
call_functionFtorch._dynamo.symbolic_convert.InstructionTranslatorBase.call_function"
Any*~
selft
8torch._dynamo.symbolic_convert.InstructionTranslatorBase"8torch._dynamo.symbolic_convert.InstructionTranslatorBase*d
fn\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker*µ
args™
;builtins.list[torch._dynamo.variables.base.VariableTracker]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.list*‚
kwargs’
Hbuiltins.dict[builtins.str,torch._dynamo.variables.base.VariableTracker]
builtins.str"builtins.str\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.dict*õ
inline_user_function_returnTtorch._dynamo.symbolic_convert.InstructionTranslatorBase.inline_user_function_return*
self*
fn*
args*

kwargs*É
get_line_of_code_headerPtorch._dynamo.symbolic_convert.InstructionTranslatorBase.get_line_of_code_header*
self*
lineno *}
get_log_starts_line_log_strTtorch._dynamo.symbolic_convert.InstructionTranslatorBase.get_log_starts_line_log_str*
self*i
starts_lineDtorch._dynamo.symbolic_convert.InstructionTranslatorBase.starts_line*
self*

lineno*O
step=torch._dynamo.symbolic_convert.InstructionTranslatorBase.step*
self*u
update_block_stackKtorch._dynamo.symbolic_convert.InstructionTranslatorBase.update_block_stack*
self*
inst*u
next_instructionItorch._dynamo.symbolic_convert.InstructionTranslatorBase.next_instruction*
self0:property`*z
step_graph_breakItorch._dynamo.symbolic_convert.InstructionTranslatorBase.step_graph_break*
self*
continue_inst*]
run_ctx_mgrDtorch._dynamo.symbolic_convert.InstructionTranslatorBase.run_ctx_mgr*
self*M
run<torch._dynamo.symbolic_convert.InstructionTranslatorBase.run*
self*ˇ
push=torch._dynamo.symbolic_convert.InstructionTranslatorBase.push"
Any*~
selft
8torch._dynamo.symbolic_convert.InstructionTranslatorBase"8torch._dynamo.symbolic_convert.InstructionTranslatorBase*Æ
val§
8Union[torch._dynamo.variables.base.VariableTracker,None]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker
None*ê
	push_manyBtorch._dynamo.symbolic_convert.InstructionTranslatorBase.push_many"
Any*~
selft
8torch._dynamo.symbolic_convert.InstructionTranslatorBase"8torch._dynamo.symbolic_convert.InstructionTranslatorBase*µ
vals™
;builtins.list[torch._dynamo.variables.base.VariableTracker]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.list*°
pop<torch._dynamo.symbolic_convert.InstructionTranslatorBase.pop"\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker*~
selft
8torch._dynamo.symbolic_convert.InstructionTranslatorBase"8torch._dynamo.symbolic_convert.InstructionTranslatorBase*ó
popn=torch._dynamo.symbolic_convert.InstructionTranslatorBase.popn"™
;builtins.list[torch._dynamo.variables.base.VariableTracker]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.list*~
selft
8torch._dynamo.symbolic_convert.InstructionTranslatorBase"8torch._dynamo.symbolic_convert.InstructionTranslatorBase*#
n
builtins.int"builtins.int*c
	LOAD_FASTBtorch._dynamo.symbolic_convert.InstructionTranslatorBase.LOAD_FAST*
self*
inst*e

LOAD_DEREFCtorch._dynamo.symbolic_convert.InstructionTranslatorBase.LOAD_DEREF*
self*
inst*e

STORE_FASTCtorch._dynamo.symbolic_convert.InstructionTranslatorBase.STORE_FAST*
self*
inst*g
DELETE_FASTDtorch._dynamo.symbolic_convert.InstructionTranslatorBase.DELETE_FAST*
self*
inst*i
LOAD_CLOSUREEtorch._dynamo.symbolic_convert.InstructionTranslatorBase.LOAD_CLOSURE*
self*
inst*g
_load_constDtorch._dynamo.symbolic_convert.InstructionTranslatorBase._load_const*
self*
inst*e

LOAD_CONSTCtorch._dynamo.symbolic_convert.InstructionTranslatorBase.LOAD_CONST*
self*
inst*g
LOAD_GLOBALDtorch._dynamo.symbolic_convert.InstructionTranslatorBase.LOAD_GLOBAL*
self*
inst*i
STORE_GLOBALEtorch._dynamo.symbolic_convert.InstructionTranslatorBase.STORE_GLOBAL*
self*
inst*r
import_sourceFtorch._dynamo.symbolic_convert.InstructionTranslatorBase.import_source*
self*
module_name*Å
resolve_nameEtorch._dynamo.symbolic_convert.InstructionTranslatorBase.resolve_name*
self*
name*
package*	
level*_
calc_packageEtorch._dynamo.symbolic_convert.InstructionTranslatorBase.calc_package*
self*g
IMPORT_NAMEDtorch._dynamo.symbolic_convert.InstructionTranslatorBase.IMPORT_NAME*
self*
inst*g
IMPORT_FROMDtorch._dynamo.symbolic_convert.InstructionTranslatorBase.IMPORT_FROM*
self*
inst*É
load_builtin_from_argvalQtorch._dynamo.symbolic_convert.InstructionTranslatorBase.load_builtin_from_argval*
self*

argval*i
load_builtinEtorch._dynamo.symbolic_convert.InstructionTranslatorBase.load_builtin*
self*
inst*Y
jump=torch._dynamo.symbolic_convert.InstructionTranslatorBase.jump*
self*
inst*e

SETUP_LOOPCtorch._dynamo.symbolic_convert.InstructionTranslatorBase.SETUP_LOOP*
self*
inst*i
SETUP_EXCEPTEtorch._dynamo.symbolic_convert.InstructionTranslatorBase.SETUP_EXCEPT*
self*
inst*c
	POP_BLOCKBtorch._dynamo.symbolic_convert.InstructionTranslatorBase.POP_BLOCK*
self*
inst*e

SETUP_WITHCtorch._dynamo.symbolic_convert.InstructionTranslatorBase.SETUP_WITH*
self*
inst*k
SETUP_FINALLYFtorch._dynamo.symbolic_convert.InstructionTranslatorBase.SETUP_FINALLY*
self*
inst*k
BEGIN_FINALLYFtorch._dynamo.symbolic_convert.InstructionTranslatorBase.BEGIN_FINALLY*
self*
inst*u
WITH_CLEANUP_STARTKtorch._dynamo.symbolic_convert.InstructionTranslatorBase.WITH_CLEANUP_START*
self*
inst*w
WITH_CLEANUP_FINISHLtorch._dynamo.symbolic_convert.InstructionTranslatorBase.WITH_CLEANUP_FINISH*
self*
inst*i
CALL_FINALLYEtorch._dynamo.symbolic_convert.InstructionTranslatorBase.CALL_FINALLY*
self*
inst*g
END_FINALLYDtorch._dynamo.symbolic_convert.InstructionTranslatorBase.END_FINALLY*
self*
inst*g
POP_FINALLYDtorch._dynamo.symbolic_convert.InstructionTranslatorBase.POP_FINALLY*
self*
inst*a
FOR_ITERAtorch._dynamo.symbolic_convert.InstructionTranslatorBase.FOR_ITER*
self*
inst*k
RAISE_VARARGSFtorch._dynamo.symbolic_convert.InstructionTranslatorBase.RAISE_VARARGS*
self*
inst*i
exception_handlerJtorch._dynamo.symbolic_convert.InstructionTranslatorBase.exception_handler*
self*k
PUSH_EXC_INFOFtorch._dynamo.symbolic_convert.InstructionTranslatorBase.PUSH_EXC_INFO*
self*
inst*e

POP_EXCEPTCtorch._dynamo.symbolic_convert.InstructionTranslatorBase.POP_EXCEPT*
self*
inst*o
check_if_exc_matchesMtorch._dynamo.symbolic_convert.InstructionTranslatorBase.check_if_exc_matches*
self*o
CHECK_EXC_MATCHHtorch._dynamo.symbolic_convert.InstructionTranslatorBase.CHECK_EXC_MATCH*
self*
inst*{
JUMP_IF_NOT_EXC_MATCHNtorch._dynamo.symbolic_convert.InstructionTranslatorBase.JUMP_IF_NOT_EXC_MATCH*
self*
inst*e

COMPARE_OPCtorch._dynamo.symbolic_convert.InstructionTranslatorBase.COMPARE_OP*
self*
inst*a
GET_ITERAtorch._dynamo.symbolic_convert.InstructionTranslatorBase.GET_ITER*
self*
inst*m
CALL_FUNCTIONFtorch._dynamo.symbolic_convert.InstructionTranslatorBase.CALL_FUNCTION*
self*
inst0*s
CALL_FUNCTION_EXItorch._dynamo.symbolic_convert.InstructionTranslatorBase.CALL_FUNCTION_EX*
self*
inst0*s
CALL_FUNCTION_KWItorch._dynamo.symbolic_convert.InstructionTranslatorBase.CALL_FUNCTION_KW*
self*
inst0*s
LOAD_METHOD_SUPERJtorch._dynamo.symbolic_convert.InstructionTranslatorBase.LOAD_METHOD_SUPER*
self*
inst*o
LOAD_ATTR_SUPERHtorch._dynamo.symbolic_convert.InstructionTranslatorBase.LOAD_ATTR_SUPER*
self*
inst*g
LOAD_METHODDtorch._dynamo.symbolic_convert.InstructionTranslatorBase.LOAD_METHOD*
self*
inst*g
CALL_METHODDtorch._dynamo.symbolic_convert.InstructionTranslatorBase.CALL_METHOD*
self*
inst*e

_load_attrCtorch._dynamo.symbolic_convert.InstructionTranslatorBase._load_attr*
self*
inst*c
	LOAD_ATTRBtorch._dynamo.symbolic_convert.InstructionTranslatorBase.LOAD_ATTR*
self*
inst*e

STORE_ATTRCtorch._dynamo.symbolic_convert.InstructionTranslatorBase.STORE_ATTR*
self*
inst*}
store_attr_graph_breakOtorch._dynamo.symbolic_convert.InstructionTranslatorBase.store_attr_graph_break*
self*
inst*g
DELETE_ATTRDtorch._dynamo.symbolic_convert.InstructionTranslatorBase.DELETE_ATTR*
self*
inst*}
create_call_resume_atNtorch._dynamo.symbolic_convert.InstructionTranslatorBase.create_call_resume_at*
self*

offset*ï
should_compile_partial_graphUtorch._dynamo.symbolic_convert.InstructionTranslatorBase.should_compile_partial_graph"
builtins.bool"builtins.bool*~
selft
8torch._dynamo.symbolic_convert.InstructionTranslatorBase"8torch._dynamo.symbolic_convert.InstructionTranslatorBase*k
STORE_SUBSCREtorch._dynamo.symbolic_convert.InstructionTranslatorBase.STORE_SUBSCR*
self*
inst0*k
DELETE_SUBSCRFtorch._dynamo.symbolic_convert.InstructionTranslatorBase.DELETE_SUBSCR*
self*
inst*g
BUILD_TUPLEDtorch._dynamo.symbolic_convert.InstructionTranslatorBase.BUILD_TUPLE*
self*
inst*g
BUILD_SLICEDtorch._dynamo.symbolic_convert.InstructionTranslatorBase.BUILD_SLICE*
self*
inst*e

BUILD_LISTCtorch._dynamo.symbolic_convert.InstructionTranslatorBase.BUILD_LIST*
self*
inst*c
	BUILD_SETBtorch._dynamo.symbolic_convert.InstructionTranslatorBase.BUILD_SET*
self*
inst*~
BUILD_LIST_UNPACKJtorch._dynamo.symbolic_convert.InstructionTranslatorBase.BUILD_LIST_UNPACK*
self*
inst*	
cls *u
BUILD_TUPLE_UNPACKKtorch._dynamo.symbolic_convert.InstructionTranslatorBase.BUILD_TUPLE_UNPACK*
self*
inst*c
	BUILD_MAPBtorch._dynamo.symbolic_convert.InstructionTranslatorBase.BUILD_MAP*
self*
inst*q
BUILD_MAP_UNPACKItorch._dynamo.symbolic_convert.InstructionTranslatorBase.BUILD_MAP_UNPACK*
self*
inst*w
BUILD_CONST_KEY_MAPLtorch._dynamo.symbolic_convert.InstructionTranslatorBase.BUILD_CONST_KEY_MAP*
self*
inst*_
MAP_ADD@torch._dynamo.symbolic_convert.InstructionTranslatorBase.MAP_ADD*
self*
inst*_
SET_ADD@torch._dynamo.symbolic_convert.InstructionTranslatorBase.SET_ADD*
self*
inst*e

SET_UPDATECtorch._dynamo.symbolic_convert.InstructionTranslatorBase.SET_UPDATE*
self*
inst*g
LIST_APPENDDtorch._dynamo.symbolic_convert.InstructionTranslatorBase.LIST_APPEND*
self*
inst*k
MAKE_FUNCTIONFtorch._dynamo.symbolic_convert.InstructionTranslatorBase.MAKE_FUNCTION*
self*
inst*o
UNPACK_SEQUENCEHtorch._dynamo.symbolic_convert.InstructionTranslatorBase.UNPACK_SEQUENCE*
self*
inst*c
	UNPACK_EXBtorch._dynamo.symbolic_convert.InstructionTranslatorBase.UNPACK_EX*
self*
inst*W
NOP<torch._dynamo.symbolic_convert.InstructionTranslatorBase.NOP*
self*
inst*_
POP_TOP@torch._dynamo.symbolic_convert.InstructionTranslatorBase.POP_TOP*
self*
inst*_
ROT_TWO@torch._dynamo.symbolic_convert.InstructionTranslatorBase.ROT_TWO*
self*
inst*c
	ROT_THREEBtorch._dynamo.symbolic_convert.InstructionTranslatorBase.ROT_THREE*
self*
inst*a
ROT_FOURAtorch._dynamo.symbolic_convert.InstructionTranslatorBase.ROT_FOUR*
self*
inst*_
DUP_TOP@torch._dynamo.symbolic_convert.InstructionTranslatorBase.DUP_TOP*
self*
inst*g
DUP_TOP_TWODtorch._dynamo.symbolic_convert.InstructionTranslatorBase.DUP_TOP_TWO*
self*
inst*i
FORMAT_VALUEEtorch._dynamo.symbolic_convert.InstructionTranslatorBase.FORMAT_VALUE*
self*
inst*i
BUILD_STRINGEtorch._dynamo.symbolic_convert.InstructionTranslatorBase.BUILD_STRING*
self*
inst*[
IS_OP>torch._dynamo.symbolic_convert.InstructionTranslatorBase.IS_OP*
self*
inst*g
CONTAINS_OPDtorch._dynamo.symbolic_convert.InstructionTranslatorBase.CONTAINS_OP*
self*
inst*g
LIST_EXTENDDtorch._dynamo.symbolic_convert.InstructionTranslatorBase.LIST_EXTEND*
self*
inst*k
LIST_TO_TUPLEFtorch._dynamo.symbolic_convert.InstructionTranslatorBase.LIST_TO_TUPLE*
self*
inst*e

DICT_MERGECtorch._dynamo.symbolic_convert.InstructionTranslatorBase.DICT_MERGE*
self*
inst*c
	GEN_STARTBtorch._dynamo.symbolic_convert.InstructionTranslatorBase.GEN_START*
self*
inst*_
GET_LEN@torch._dynamo.symbolic_convert.InstructionTranslatorBase.GET_LEN*
self*
inst*k
MATCH_MAPPINGFtorch._dynamo.symbolic_convert.InstructionTranslatorBase.MATCH_MAPPING*
self*
inst*m
MATCH_SEQUENCEGtorch._dynamo.symbolic_convert.InstructionTranslatorBase.MATCH_SEQUENCE*
self*
inst*e

MATCH_KEYSCtorch._dynamo.symbolic_convert.InstructionTranslatorBase.MATCH_KEYS*
self*
inst*y
LOAD_ASSERTION_ERRORMtorch._dynamo.symbolic_convert.InstructionTranslatorBase.LOAD_ASSERTION_ERROR*
self*
inst*]
RESUME?torch._dynamo.symbolic_convert.InstructionTranslatorBase.RESUME*
self*
inst*_
PRECALL@torch._dynamo.symbolic_convert.InstructionTranslatorBase.PRECALL*
self*
inst*a
KW_NAMESAtorch._dynamo.symbolic_convert.InstructionTranslatorBase.KW_NAMES*
self*
inst*c
	PUSH_NULLBtorch._dynamo.symbolic_convert.InstructionTranslatorBase.PUSH_NULL*
self*
inst*[
CALL=torch._dynamo.symbolic_convert.InstructionTranslatorBase.CALL*
self*
inst0*Y
COPY=torch._dynamo.symbolic_convert.InstructionTranslatorBase.COPY*
self*
inst*Y
SWAP=torch._dynamo.symbolic_convert.InstructionTranslatorBase.SWAP*
self*
inst*[
CACHE>torch._dynamo.symbolic_convert.InstructionTranslatorBase.CACHE*
self*
inst*g
BEFORE_WITHDtorch._dynamo.symbolic_convert.InstructionTranslatorBase.BEFORE_WITH*
self*
inst*y
setup_or_before_withMtorch._dynamo.symbolic_convert.InstructionTranslatorBase.setup_or_before_with*
self*
inst*u
append_prefix_instKtorch._dynamo.symbolic_convert.InstructionTranslatorBase.append_prefix_inst*
self*
inst*c
	MAKE_CELLBtorch._dynamo.symbolic_convert.InstructionTranslatorBase.MAKE_CELL*
self*
inst*m
COPY_FREE_VARSGtorch._dynamo.symbolic_convert.InstructionTranslatorBase.COPY_FREE_VARS*
self*
inst*q
RETURN_GENERATORItorch._dynamo.symbolic_convert.InstructionTranslatorBase.RETURN_GENERATOR*
self*
inst*_
END_FOR@torch._dynamo.symbolic_convert.InstructionTranslatorBase.END_FOR*
self*
inst*o
LOAD_FAST_CHECKHtorch._dynamo.symbolic_convert.InstructionTranslatorBase.LOAD_FAST_CHECK*
self*
inst*w
LOAD_FAST_AND_CLEARLtorch._dynamo.symbolic_convert.InstructionTranslatorBase.LOAD_FAST_AND_CLEAR*
self*
inst*o
LOAD_SUPER_ATTRHtorch._dynamo.symbolic_convert.InstructionTranslatorBase.LOAD_SUPER_ATTR*
self*
inst*q
CALL_INTRINSIC_1Itorch._dynamo.symbolic_convert.InstructionTranslatorBase.CALL_INTRINSIC_1*
self*
inst*a
END_SENDAtorch._dynamo.symbolic_convert.InstructionTranslatorBase.END_SEND*
self*
inst*k
is_non_empty_graphKtorch._dynamo.symbolic_convert.InstructionTranslatorBase.is_non_empty_graph*
self*é
format_frame_summaryMtorch._dynamo.symbolic_convert.InstructionTranslatorBase.format_frame_summary*
self*
additional_stack_frames *a
frame_summaryFtorch._dynamo.symbolic_convert.InstructionTranslatorBase.frame_summary*
self*í
store_global_weakref_by_idStorch._dynamo.symbolic_convert.InstructionTranslatorBase.store_global_weakref_by_id*
self*

prefix*	
value*g
	fake_modeBtorch._dynamo.symbolic_convert.InstructionTranslatorBase.fake_mode*
self0:property`*é
find_symbolic_locals_nameRtorch._dynamo.symbolic_convert.InstructionTranslatorBase.find_symbolic_locals_name*
self*
tensor_variable*Ï
strict_translation_modePtorch._dynamo.symbolic_convert.InstructionTranslatorBase.strict_translation_mode"
Any*~
selft
8torch._dynamo.symbolic_convert.InstructionTranslatorBase"8torch._dynamo.symbolic_convert.InstructionTranslatorBase*Y
check_fnK
CallableType[builtins.function]&
builtins.function"builtins.function0:contextlib.contextmanager*≥
	speculateBtorch._dynamo.symbolic_convert.InstructionTranslatorBase.speculate"b
/torch._dynamo.symbolic_convert.SpeculationEntry"/torch._dynamo.symbolic_convert.SpeculationEntry*~
selft
8torch._dynamo.symbolic_convert.InstructionTranslatorBase"8torch._dynamo.symbolic_convert.InstructionTranslatorBase*É
__init__Atorch._dynamo.symbolic_convert.InstructionTranslatorBase.__init__"
None*~
selft
8torch._dynamo.symbolic_convert.InstructionTranslatorBase"8torch._dynamo.symbolic_convert.InstructionTranslatorBase*\
outputP
&torch._dynamo.output_graph.OutputGraph"&torch._dynamo.output_graph.OutputGraph*Ã
instructionsπ
@builtins.list[torch._dynamo.bytecode_transformation.Instruction]f
1torch._dynamo.bytecode_transformation.Instruction"1torch._dynamo.bytecode_transformation.Instruction"builtins.list*e
f_localsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*f
	f_globalsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*g

f_builtinsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*i
code_optionsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*Î
symbolic_locals’
Hbuiltins.dict[builtins.str,torch._dynamo.variables.base.VariableTracker]
builtins.str"builtins.str\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.dict*Ï
symbolic_globals’
Hbuiltins.dict[builtins.str,torch._dynamo.variables.base.VariableTracker]
builtins.str"builtins.str\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.dict*,
f_code 
types.CodeType"types.CodeType**
export
builtins.bool"builtins.bool*.
inline_depth
builtins.int"builtins.int*s
speculation_log^
-torch._dynamo.symbolic_convert.SpeculationLog"-torch._dynamo.symbolic_convert.SpeculationLog@b9torch._dynamo.symbolic_convert.BytecodeDistpatchTableMetarõ
output?torch._dynamo.symbolic_convert.InstructionTranslatorBase.outputP
&torch._dynamo.output_graph.OutputGraph"&torch._dynamo.output_graph.OutputGraphr≥
symbolic_localsHtorch._dynamo.symbolic_convert.InstructionTranslatorBase.symbolic_locals’
Hbuiltins.dict[builtins.str,torch._dynamo.variables.base.VariableTracker]
builtins.str"builtins.str\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.dictrµ
symbolic_globalsItorch._dynamo.symbolic_convert.InstructionTranslatorBase.symbolic_globals’
Hbuiltins.dict[builtins.str,torch._dynamo.variables.base.VariableTracker]
builtins.str"builtins.str\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.dictrÙ
stack>torch._dynamo.symbolic_convert.InstructionTranslatorBase.stack™
;builtins.list[torch._dynamo.variables.base.VariableTracker]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.listr©
instruction_pointerLtorch._dynamo.symbolic_convert.InstructionTranslatorBase.instruction_pointerD
Union[builtins.int,None]
builtins.int"builtins.int
NonerÀ
current_instructionLtorch._dynamo.symbolic_convert.InstructionTranslatorBase.current_instructionf
1torch._dynamo.bytecode_transformation.Instruction"1torch._dynamo.bytecode_transformation.InstructionrÜ
block_stackDtorch._dynamo.symbolic_convert.InstructionTranslatorBase.block_stack∞
=builtins.list[torch._dynamo.symbolic_convert.BlockStackEntry]`
.torch._dynamo.symbolic_convert.BlockStackEntry".torch._dynamo.symbolic_convert.BlockStackEntry"builtins.listrg
lineno?torch._dynamo.symbolic_convert.InstructionTranslatorBase.lineno
builtins.int"builtins.intrÉ
kw_namesAtorch._dynamo.symbolic_convert.InstructionTranslatorBase.kw_names≥
=Union[torch._dynamo.variables.constant.ConstantVariable,None]f
1torch._dynamo.variables.constant.ConstantVariable"1torch._dynamo.variables.constant.ConstantVariable
NonerÅ
accept_prefix_instKtorch._dynamo.symbolic_convert.InstructionTranslatorBase.accept_prefix_inst
builtins.bool"builtins.boolrë
prefix_instsEtorch._dynamo.symbolic_convert.InstructionTranslatorBase.prefix_instsπ
@builtins.list[torch._dynamo.bytecode_transformation.Instruction]f
1torch._dynamo.bytecode_transformation.Instruction"1torch._dynamo.bytecode_transformation.Instruction"builtins.listrs
inline_depthEtorch._dynamo.symbolic_convert.InstructionTranslatorBase.inline_depth
builtins.int"builtins.intrè
inconsistent_side_effectsRtorch._dynamo.symbolic_convert.InstructionTranslatorBase.inconsistent_side_effects
builtins.bool"builtins.boolrì
current_speculationLtorch._dynamo.symbolic_convert.InstructionTranslatorBase.current_speculation≠
;Union[torch._dynamo.symbolic_convert.SpeculationEntry,None]b
/torch._dynamo.symbolic_convert.SpeculationEntry"/torch._dynamo.symbolic_convert.SpeculationEntry
Nonerá
dispatch_tableGtorch._dynamo.symbolic_convert.InstructionTranslatorBase.dispatch_table,
builtins.list[Any]
Any"builtins.listrÇ
exn_vt_stackEtorch._dynamo.symbolic_convert.InstructionTranslatorBase.exn_vt_stack™
;builtins.list[torch._dynamo.variables.base.VariableTracker]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.listrÅ
exec_recorderFtorch._dynamo.symbolic_convert.InstructionTranslatorBase.exec_recorderß
9Union[torch._dynamo.replay_record.ExecutionRecorder,None]^
-torch._dynamo.replay_record.ExecutionRecorder"-torch._dynamo.replay_record.ExecutionRecorder
NonerÊ
strict_checks_fnItorch._dynamo.symbolic_convert.InstructionTranslatorBase.strict_checks_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
Noner†
STORE_DEREFDtorch._dynamo.symbolic_convert.InstructionTranslatorBase.STORE_DEREFK
CallableType[builtins.function]&
builtins.function"builtins.functionr¢
JUMP_FORWARDEtorch._dynamo.symbolic_convert.InstructionTranslatorBase.JUMP_FORWARDK
CallableType[builtins.function]&
builtins.function"builtins.functionr§
JUMP_ABSOLUTEFtorch._dynamo.symbolic_convert.InstructionTranslatorBase.JUMP_ABSOLUTEK
CallableType[builtins.function]&
builtins.function"builtins.functionrh
POP_JUMP_IF_FALSEJtorch._dynamo.symbolic_convert.InstructionTranslatorBase.POP_JUMP_IF_FALSE
Anyrf
POP_JUMP_IF_TRUEItorch._dynamo.symbolic_convert.InstructionTranslatorBase.POP_JUMP_IF_TRUE
Anyrn
JUMP_IF_FALSE_OR_POPMtorch._dynamo.symbolic_convert.InstructionTranslatorBase.JUMP_IF_FALSE_OR_POP
Anyrl
JUMP_IF_TRUE_OR_POPLtorch._dynamo.symbolic_convert.InstructionTranslatorBase.JUMP_IF_TRUE_OR_POP
Anyr¬
BUILD_TUPLE_UNPACK_WITH_CALLUtorch._dynamo.symbolic_convert.InstructionTranslatorBase.BUILD_TUPLE_UNPACK_WITH_CALLK
CallableType[builtins.function]&
builtins.function"builtins.functionræ
BUILD_MAP_UNPACK_WITH_CALLStorch._dynamo.symbolic_convert.InstructionTranslatorBase.BUILD_MAP_UNPACK_WITH_CALLK
CallableType[builtins.function]&
builtins.function"builtins.functionr†
DICT_UPDATEDtorch._dynamo.symbolic_convert.InstructionTranslatorBase.DICT_UPDATEK
CallableType[builtins.function]&
builtins.function"builtins.functionrb
UNARY_POSITIVEGtorch._dynamo.symbolic_convert.InstructionTranslatorBase.UNARY_POSITIVE
Anyrb
UNARY_NEGATIVEGtorch._dynamo.symbolic_convert.InstructionTranslatorBase.UNARY_NEGATIVE
AnyrX
	UNARY_NOTBtorch._dynamo.symbolic_convert.InstructionTranslatorBase.UNARY_NOT
Anyr^
UNARY_INVERTEtorch._dynamo.symbolic_convert.InstructionTranslatorBase.UNARY_INVERT
Anyr^
BINARY_POWEREtorch._dynamo.symbolic_convert.InstructionTranslatorBase.BINARY_POWER
Anyrd
BINARY_MULTIPLYHtorch._dynamo.symbolic_convert.InstructionTranslatorBase.BINARY_MULTIPLY
Anyrr
BINARY_MATRIX_MULTIPLYOtorch._dynamo.symbolic_convert.InstructionTranslatorBase.BINARY_MATRIX_MULTIPLY
Anyrl
BINARY_FLOOR_DIVIDELtorch._dynamo.symbolic_convert.InstructionTranslatorBase.BINARY_FLOOR_DIVIDE
Anyrj
BINARY_TRUE_DIVIDEKtorch._dynamo.symbolic_convert.InstructionTranslatorBase.BINARY_TRUE_DIVIDE
Anyr`
BINARY_MODULOFtorch._dynamo.symbolic_convert.InstructionTranslatorBase.BINARY_MODULO
Anyrf
BINARY_REMAINDERItorch._dynamo.symbolic_convert.InstructionTranslatorBase.BINARY_REMAINDER
AnyrZ

BINARY_ADDCtorch._dynamo.symbolic_convert.InstructionTranslatorBase.BINARY_ADD
Anyrd
BINARY_SUBTRACTHtorch._dynamo.symbolic_convert.InstructionTranslatorBase.BINARY_SUBTRACT
Anyr`
BINARY_SUBSCRFtorch._dynamo.symbolic_convert.InstructionTranslatorBase.BINARY_SUBSCR
Anyr`
BINARY_LSHIFTFtorch._dynamo.symbolic_convert.InstructionTranslatorBase.BINARY_LSHIFT
Anyr`
BINARY_RSHIFTFtorch._dynamo.symbolic_convert.InstructionTranslatorBase.BINARY_RSHIFT
AnyrZ

BINARY_ANDCtorch._dynamo.symbolic_convert.InstructionTranslatorBase.BINARY_AND
AnyrX
	BINARY_ORBtorch._dynamo.symbolic_convert.InstructionTranslatorBase.BINARY_OR
AnyrZ

BINARY_XORCtorch._dynamo.symbolic_convert.InstructionTranslatorBase.BINARY_XOR
Anyr`
INPLACE_POWERFtorch._dynamo.symbolic_convert.InstructionTranslatorBase.INPLACE_POWER
Anyrf
INPLACE_MULTIPLYItorch._dynamo.symbolic_convert.InstructionTranslatorBase.INPLACE_MULTIPLY
Anyrt
INPLACE_MATRIX_MULTIPLYPtorch._dynamo.symbolic_convert.InstructionTranslatorBase.INPLACE_MATRIX_MULTIPLY
Anyrn
INPLACE_FLOOR_DIVIDEMtorch._dynamo.symbolic_convert.InstructionTranslatorBase.INPLACE_FLOOR_DIVIDE
Anyrl
INPLACE_TRUE_DIVIDELtorch._dynamo.symbolic_convert.InstructionTranslatorBase.INPLACE_TRUE_DIVIDE
Anyrb
INPLACE_MODULOGtorch._dynamo.symbolic_convert.InstructionTranslatorBase.INPLACE_MODULO
Anyrh
INPLACE_REMAINDERJtorch._dynamo.symbolic_convert.InstructionTranslatorBase.INPLACE_REMAINDER
Anyr\
INPLACE_ADDDtorch._dynamo.symbolic_convert.InstructionTranslatorBase.INPLACE_ADD
Anyrf
INPLACE_SUBTRACTItorch._dynamo.symbolic_convert.InstructionTranslatorBase.INPLACE_SUBTRACT
Anyrb
INPLACE_LSHIFTGtorch._dynamo.symbolic_convert.InstructionTranslatorBase.INPLACE_LSHIFT
Anyrb
INPLACE_RSHIFTGtorch._dynamo.symbolic_convert.InstructionTranslatorBase.INPLACE_RSHIFT
Anyr\
INPLACE_ANDDtorch._dynamo.symbolic_convert.InstructionTranslatorBase.INPLACE_AND
Anyr\
INPLACE_XORDtorch._dynamo.symbolic_convert.InstructionTranslatorBase.INPLACE_XOR
AnyrZ

INPLACE_ORCtorch._dynamo.symbolic_convert.InstructionTranslatorBase.INPLACE_OR
Anyr§
JUMP_BACKWARDFtorch._dynamo.symbolic_convert.InstructionTranslatorBase.JUMP_BACKWARDK
CallableType[builtins.function]&
builtins.function"builtins.functionræ
JUMP_BACKWARD_NO_INTERRUPTStorch._dynamo.symbolic_convert.InstructionTranslatorBase.JUMP_BACKWARD_NO_INTERRUPTK
CallableType[builtins.function]&
builtins.function"builtins.functionrv
POP_JUMP_FORWARD_IF_TRUEQtorch._dynamo.symbolic_convert.InstructionTranslatorBase.POP_JUMP_FORWARD_IF_TRUE
Anyrx
POP_JUMP_BACKWARD_IF_TRUERtorch._dynamo.symbolic_convert.InstructionTranslatorBase.POP_JUMP_BACKWARD_IF_TRUE
Anyrx
POP_JUMP_FORWARD_IF_FALSERtorch._dynamo.symbolic_convert.InstructionTranslatorBase.POP_JUMP_FORWARD_IF_FALSE
Anyrz
POP_JUMP_BACKWARD_IF_FALSEStorch._dynamo.symbolic_convert.InstructionTranslatorBase.POP_JUMP_BACKWARD_IF_FALSE
Anyrj
_cell_and_freevarsKtorch._dynamo.symbolic_convert.InstructionTranslatorBase._cell_and_freevars
Anyrª
speculation_logHtorch._dynamo.symbolic_convert.InstructionTranslatorBase.speculation_log^
-torch._dynamo.symbolic_convert.SpeculationLog"-torch._dynamo.symbolic_convert.SpeculationLogrï
generic_context_manager_depthVtorch._dynamo.symbolic_convert.InstructionTranslatorBase.generic_context_manager_depth
builtins.int"builtins.intrë
instructionsEtorch._dynamo.symbolic_convert.InstructionTranslatorBase.instructionsπ
@builtins.list[torch._dynamo.bytecode_transformation.Instruction]f
1torch._dynamo.bytecode_transformation.Instruction"1torch._dynamo.bytecode_transformation.Instruction"builtins.listr≤
indexof@torch._dynamo.symbolic_convert.InstructionTranslatorBase.indexof‰
Mbuiltins.dict[torch._dynamo.bytecode_transformation.Instruction,builtins.int]f
1torch._dynamo.bytecode_transformation.Instruction"1torch._dynamo.bytecode_transformation.Instruction
builtins.int"builtins.int"builtins.dictr¶
f_localsAtorch._dynamo.symbolic_convert.InstructionTranslatorBase.f_localsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictr®
	f_globalsBtorch._dynamo.symbolic_convert.InstructionTranslatorBase.f_globalsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictr™

f_builtinsCtorch._dynamo.symbolic_convert.InstructionTranslatorBase.f_builtinsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictrÆ
code_optionsEtorch._dynamo.symbolic_convert.InstructionTranslatorBase.code_optionsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictrk
f_code?torch._dynamo.symbolic_convert.InstructionTranslatorBase.f_code 
types.CodeType"types.CodeTyper•
nn_module_stackHtorch._dynamo.symbolic_convert.InstructionTranslatorBase.nn_module_stack«
9builtins.dict[builtins.str,Tuple[builtins.str,Type[Any]]]
builtins.str"builtins.str]
Tuple[builtins.str,Type[Any]]
builtins.str"builtins.str
	Type[Any]
Any"type"builtins.dictri
export?torch._dynamo.symbolic_convert.InstructionTranslatorBase.export
builtins.bool"builtins.boolrﬂ
_constants_cacheItorch._dynamo.symbolic_convert.InstructionTranslatorBase._constants_cacheˇ
Gbuiltins.list[Union[torch._dynamo.variables.base.VariableTracker,None]]§
8Union[torch._dynamo.variables.base.VariableTracker,None]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker
None"builtins.listê
InstructionTranslator4torch._dynamo.symbolic_convert.InstructionTranslator"8torch._dynamo.symbolic_convert.InstructionTranslatorBase*Õ

current_tx?torch._dynamo.symbolic_convert.InstructionTranslator.current_tx"l
4torch._dynamo.symbolic_convert.InstructionTranslator"4torch._dynamo.symbolic_convert.InstructionTranslator0:staticmethodh*|
set_current_txCtorch._dynamo.symbolic_convert.InstructionTranslator.set_current_tx*
self0:contextlib.contextmanager*ˆ
__init__=torch._dynamo.symbolic_convert.InstructionTranslator.__init__"
None*v
selfl
4torch._dynamo.symbolic_convert.InstructionTranslator"4torch._dynamo.symbolic_convert.InstructionTranslator*Ã
instructionsπ
@builtins.list[torch._dynamo.bytecode_transformation.Instruction]f
1torch._dynamo.bytecode_transformation.Instruction"1torch._dynamo.bytecode_transformation.Instruction"builtins.list*
f_code
Any*
f_locals
Any*
	f_globals
Any*

f_builtins
Any*
code_options
Any*
compiler_fn
Any*
	one_graph
Any*
export
Any*
export_constraints
Any*k
mutated_closure_cell_contentsH
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.set*
frame_state
Any*s
speculation_log^
-torch._dynamo.symbolic_convert.SpeculationLog"-torch._dynamo.symbolic_convert.SpeculationLog*o
_throw_if_in_functorchKtorch._dynamo.symbolic_convert.InstructionTranslator._throw_if_in_functorch*
self*ñ
get_example_valueFtorch._dynamo.symbolic_convert.InstructionTranslator.get_example_value"
Any*v
selfl
4torch._dynamo.symbolic_convert.InstructionTranslator"4torch._dynamo.symbolic_convert.InstructionTranslator*8
source,
torch._guards.Source"torch._guards.Source*I
run8torch._dynamo.symbolic_convert.InstructionTranslator.run*
self*y
match_nested_cellFtorch._dynamo.symbolic_convert.InstructionTranslator.match_nested_cell*
self*
name*
cell*{
should_compile_partial_graphQtorch._dynamo.symbolic_convert.InstructionTranslator.should_compile_partial_graph*
self*w
create_call_resume_atJtorch._dynamo.symbolic_convert.InstructionTranslator.create_call_resume_at*
self*
inst*ã
$symbolic_locals_contain_module_classYtorch._dynamo.symbolic_convert.InstructionTranslator.symbolic_locals_contain_module_class*
self*[
_return<torch._dynamo.symbolic_convert.InstructionTranslator._return*
self*
inst*e
RETURN_VALUEAtorch._dynamo.symbolic_convert.InstructionTranslator.RETURN_VALUE*
self*
inst*e
RETURN_CONSTAtorch._dynamo.symbolic_convert.InstructionTranslator.RETURN_CONST*
self*
instrΩ
mutated_closure_cell_contentsRtorch._dynamo.symbolic_convert.InstructionTranslator.mutated_closure_cell_contentsH
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.setrk
	one_graph>torch._dynamo.symbolic_convert.InstructionTranslator.one_graph
builtins.bool"builtins.boolr‰
debug_localsAtorch._dynamo.symbolic_convert.InstructionTranslator.debug_localsê
~builtins.list[Tuple[torch._dynamo.variables.base.VariableTracker,builtins.list[torch._dynamo.variables.base.VariableTracker]]]˛
oTuple[torch._dynamo.variables.base.VariableTracker,builtins.list[torch._dynamo.variables.base.VariableTracker]]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker™
;builtins.list[torch._dynamo.variables.base.VariableTracker]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.list"builtins.listr¨
_freevars_idsBtorch._dynamo.symbolic_convert.InstructionTranslator._freevars_idsW
builtins.dict[Any,builtins.int]
Any
builtins.int"builtins.int"builtins.dict’"
InliningInstructionTranslator<torch._dynamo.symbolic_convert.InliningInstructionTranslator"8torch._dynamo.symbolic_convert.InstructionTranslatorBase*ù
inline_callHtorch._dynamo.symbolic_convert.InliningInstructionTranslator.inline_call*
cls*

parent*
func*
args*

kwargs0:classmethodp*}
check_inlineableMtorch._dynamo.symbolic_convert.InliningInstructionTranslator.check_inlineable*
func0:staticmethodh*æ
inline_call_Itorch._dynamo.symbolic_convert.InliningInstructionTranslator.inline_call_"
Any*
parent
Any*f
func\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker*µ
args™
;builtins.list[torch._dynamo.variables.base.VariableTracker]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.list*
kwargs
Any0:staticmethodh*‰	
__init__Etorch._dynamo.symbolic_convert.InliningInstructionTranslator.__init__"
None*Ü
self|
<torch._dynamo.symbolic_convert.InliningInstructionTranslator"<torch._dynamo.symbolic_convert.InliningInstructionTranslator*Ä
parentt
8torch._dynamo.symbolic_convert.InstructionTranslatorBase"8torch._dynamo.symbolic_convert.InstructionTranslatorBase**
code 
types.CodeType"types.CodeType*Î
symbolic_locals’
Hbuiltins.dict[builtins.str,torch._dynamo.variables.base.VariableTracker]
builtins.str"builtins.str\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.dict*Ï
symbolic_globals’
Hbuiltins.dict[builtins.str,torch._dynamo.variables.base.VariableTracker]
builtins.str"builtins.str\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.dict*È
closure_cells’
Hbuiltins.dict[builtins.str,torch._dynamo.variables.base.VariableTracker]
builtins.str"builtins.str\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.dict*Ö
funcvarx
:torch._dynamo.variables.functions.BaseUserFunctionVariable":torch._dynamo.variables.functions.BaseUserFunctionVariable*k
	fake_modeFtorch._dynamo.symbolic_convert.InliningInstructionTranslator.fake_mode*
self0:property`*a
run_ctx_mgrHtorch._dynamo.symbolic_convert.InliningInstructionTranslator.run_ctx_mgr*
self*k
STORE_DEREFHtorch._dynamo.symbolic_convert.InliningInstructionTranslator.STORE_DEREF*
self*
inst*i

LOAD_DEREFGtorch._dynamo.symbolic_convert.InliningInstructionTranslator.LOAD_DEREF*
self*
inst*m
LOAD_CLOSUREItorch._dynamo.symbolic_convert.InliningInstructionTranslator.LOAD_CLOSURE*
self*
inst*Å
check_replace_is_safeRtorch._dynamo.symbolic_convert.InliningInstructionTranslator.check_replace_is_safe*
self*

oldvar*É
should_compile_partial_graphYtorch._dynamo.symbolic_convert.InliningInstructionTranslator.should_compile_partial_graph*
self*Å
create_call_resume_atRtorch._dynamo.symbolic_convert.InliningInstructionTranslator.create_call_resume_at*
self*

offset*m
RETURN_VALUEItorch._dynamo.symbolic_convert.InliningInstructionTranslator.RETURN_VALUE*
self*
inst*m
RETURN_CONSTItorch._dynamo.symbolic_convert.InliningInstructionTranslator.RETURN_CONST*
self*
inst*ç
get_globals_source_and_valueYtorch._dynamo.symbolic_convert.InliningInstructionTranslator.get_globals_source_and_value*
self*
name*k
LOAD_GLOBALHtorch._dynamo.symbolic_convert.InliningInstructionTranslator.LOAD_GLOBAL*
self*
inst*m
STORE_GLOBALItorch._dynamo.symbolic_convert.InliningInstructionTranslator.STORE_GLOBAL*
self*
instrâ
symbolic_resultLtorch._dynamo.symbolic_convert.InliningInstructionTranslator.symbolic_resultß
9Union[torch._dynamo.variables.tensor.TensorVariable,None]^
-torch._dynamo.variables.tensor.TensorVariable"-torch._dynamo.variables.tensor.TensorVariable
Noner√
parentCtorch._dynamo.symbolic_convert.InliningInstructionTranslator.parentt
8torch._dynamo.symbolic_convert.InstructionTranslatorBase"8torch._dynamo.symbolic_convert.InstructionTranslatorBaser≥
closure_cellsJtorch._dynamo.symbolic_convert.InliningInstructionTranslator.closure_cells’
Hbuiltins.dict[builtins.str,torch._dynamo.variables.base.VariableTracker]
builtins.str"builtins.str\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.dictû

&InliningGeneratorInstructionTranslatorEtorch._dynamo.symbolic_convert.InliningGeneratorInstructionTranslator"<torch._dynamo.symbolic_convert.InliningInstructionTranslator*z
__init__Ntorch._dynamo.symbolic_convert.InliningGeneratorInstructionTranslator.__init__*
self*
args*

kwargs*˜
YIELD_VALUEQtorch._dynamo.symbolic_convert.InliningGeneratorInstructionTranslator.YIELD_VALUE"
Any*ô
selfé
Etorch._dynamo.symbolic_convert.InliningGeneratorInstructionTranslator"Etorch._dynamo.symbolic_convert.InliningGeneratorInstructionTranslator*p
instf
1torch._dynamo.bytecode_transformation.Instruction"1torch._dynamo.bytecode_transformation.Instruction*Ñ
GET_YIELD_FROM_ITERYtorch._dynamo.symbolic_convert.InliningGeneratorInstructionTranslator.GET_YIELD_FROM_ITER*
self*
inst*r

YIELD_FROMPtorch._dynamo.symbolic_convert.InliningGeneratorInstructionTranslator.YIELD_FROM*
self*
inst*f
SENDJtorch._dynamo.symbolic_convert.InliningGeneratorInstructionTranslator.SEND*
self*
instrï
generated_itemsUtorch._dynamo.symbolic_convert.InliningGeneratorInstructionTranslator.generated_items™
;builtins.list[torch._dynamo.variables.base.VariableTracker]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.listÓ
><subclass of "Unsupported" and "UncapturedHigherOrderOpError">]torch._dynamo.symbolic_convert.<subclass of "Unsupported" and "UncapturedHigherOrderOpError">"torch._dynamo.exc.Unsupported".torch._dynamo.exc.UncapturedHigherOrderOpError
?<subclass of "Unsupported" and "UncapturedHigherOrderOpError">1^torch._dynamo.symbolic_convert.<subclass of "Unsupported" and "UncapturedHigherOrderOpError">1"torch._dynamo.exc.Unsupported".torch._dynamo.exc.UncapturedHigherOrderOpErrorë
stack_op'torch._dynamo.symbolic_convert.stack_op"
Any*S
fnK
CallableType[builtins.function]&
builtins.function"builtins.function˝
&_detect_and_normalize_assert_statementEtorch._dynamo.symbolic_convert._detect_and_normalize_assert_statement"
Any*~
selft
8torch._dynamo.symbolic_convert.InstructionTranslatorBase"8torch._dynamo.symbolic_convert.InstructionTranslatorBase*Y
truth_fnK
CallableType[builtins.function]&
builtins.function"builtins.function*(
push
builtins.bool"builtins.bool…
generic_jump+torch._dynamo.symbolic_convert.generic_jump"
Any*Y
truth_fnK
CallableType[builtins.function]&
builtins.function"builtins.function*(
push
builtins.bool"builtins.boola
break_graph_if_unsupported9torch._dynamo.symbolic_convert.break_graph_if_unsupported*
push*ö
__annotations__.torch._dynamo.symbolic_convert.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*.
torchdynamo_loggingtorch._dynamo.logging *K
log"torch._dynamo.symbolic_convert.log 
logging.Logger"logging.Logger*J
graph_break_log.torch._dynamo.symbolic_convert.graph_break_log
Any*H
trace_call_log-torch._dynamo.symbolic_convert.trace_call_log
Any*L
trace_source_log/torch._dynamo.symbolic_convert.trace_source_log
Any*P
trace_bytecode_log1torch._dynamo.symbolic_convert.trace_bytecode_log
Any*M
tls"torch._dynamo.symbolic_convert.tls"
threading.local"threading.local*¢
compare_op_handlers2torch._dynamo.symbolic_convert.compare_op_handlersW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*é
handle_contains.torch._dynamo.symbolic_convert.handle_containsK
CallableType[builtins.function]&
builtins.function"builtins.function*Ñ

handle_not)torch._dynamo.symbolic_convert.handle_notK
CallableType[builtins.function]&
builtins.function"builtins.function*Q
explain&torch._dynamo.symbolic_convert.explain
builtins.bool"builtins.bool