
seaborn.matrix´;
_DendrogramPlotter!seaborn.matrix._DendrogramPlotter"builtins.object*”
__init__*seaborn.matrix._DendrogramPlotter.__init__"
None*P
selfF
!seaborn.matrix._DendrogramPlotter"!seaborn.matrix._DendrogramPlotter*D
data:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*Å
linkageÛ
_Union[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],None]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray
None*(
metric
builtins.str"builtins.str*(
method
builtins.str"builtins.str*&
axis
builtins.int"builtins.int*)
label
builtins.bool"builtins.bool**
rotate
builtins.bool"builtins.boolz36z37z38z39z310z311z312z313*‘
calculated_linkage4seaborn.matrix._DendrogramPlotter.calculated_linkage"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*P
selfF
!seaborn.matrix._DendrogramPlotter"!seaborn.matrix._DendrogramPlotter0:property`z36z37z38z39z310z311z312z313*í
calculate_dendrogram6seaborn.matrix._DendrogramPlotter.calculate_dendrogram"À
9builtins.dict[builtins.str,builtins.list[TypeAlias[Any]]]
builtins.str"builtins.stra
builtins.list[TypeAlias[Any]]1
TypeAlias[Any]
Any"_typeshed.Incomplete"builtins.list"builtins.dict*P
selfF
!seaborn.matrix._DendrogramPlotter"!seaborn.matrix._DendrogramPlotterz36z37z38z39z310z311z312z313*ê
reordered_ind/seaborn.matrix._DendrogramPlotter.reordered_ind"J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*P
selfF
!seaborn.matrix._DendrogramPlotter"!seaborn.matrix._DendrogramPlotter0:property`z36z37z38z39z310z311z312z313*º
plot&seaborn.matrix._DendrogramPlotter.plot"ï
&seaborn.matrix._DendrogramPlotter.SelfF
!seaborn.matrix._DendrogramPlotter"!seaborn.matrix._DendrogramPlotter"!seaborn.matrix._DendrogramPlotter*†
selfï
&seaborn.matrix._DendrogramPlotter.SelfF
!seaborn.matrix._DendrogramPlotter"!seaborn.matrix._DendrogramPlotter"!seaborn.matrix._DendrogramPlotter*
ax
Any*õ
tree_kwså
*builtins.dict[builtins.str,TypeAlias[Any]]
builtins.str"builtins.str1
TypeAlias[Any]
Any"_typeshed.Incomplete"builtins.dictz36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rp
axis&seaborn.matrix._DendrogramPlotter.axis
builtins.int"builtins.int*36*37*38*39*310*311*312*313r⁄
array'seaborn.matrix._DendrogramPlotter.arrayÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*36*37*38*39*310*311*312*313ré
data&seaborn.matrix._DendrogramPlotter.data:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*36*37*38*39*310*311*312*313r∂
shape'seaborn.matrix._DendrogramPlotter.shape`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*36*37*38*39*310*311*312*313rt
metric(seaborn.matrix._DendrogramPlotter.metric
builtins.str"builtins.str*36*37*38*39*310*311*312*313rt
method(seaborn.matrix._DendrogramPlotter.method
builtins.str"builtins.str*36*37*38*39*310*311*312*313rt
label'seaborn.matrix._DendrogramPlotter.label
builtins.bool"builtins.bool*36*37*38*39*310*311*312*313rv
rotate(seaborn.matrix._DendrogramPlotter.rotate
builtins.bool"builtins.bool*36*37*38*39*310*311*312*313rﬁ
linkage)seaborn.matrix._DendrogramPlotter.linkageÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*36*37*38*39*310*311*312*313r¨

dendrogram,seaborn.matrix._DendrogramPlotter.dendrogramÀ
9builtins.dict[builtins.str,builtins.list[TypeAlias[Any]]]
builtins.str"builtins.stra
builtins.list[TypeAlias[Any]]1
TypeAlias[Any]
Any"_typeshed.Incomplete"builtins.list"builtins.dict*36*37*38*39*310*311*312*313r≠
xticks(seaborn.matrix._DendrogramPlotter.xticks‘
xUnion[builtins.list[builtins.float],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]P
builtins.list[builtins.float] 
builtins.float"builtins.float"builtins.listÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*36*37*38*39*310*311*312*313r≠
yticks(seaborn.matrix._DendrogramPlotter.yticks‘
xUnion[builtins.list[builtins.float],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]P
builtins.list[builtins.float] 
builtins.float"builtins.float"builtins.listÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*36*37*38*39*310*311*312*313r¨
xticklabels-seaborn.matrix._DendrogramPlotter.xticklabelsJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*36*37*38*39*310*311*312*313r¨
yticklabels-seaborn.matrix._DendrogramPlotter.yticklabelsJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*36*37*38*39*310*311*312*313rt
ylabel(seaborn.matrix._DendrogramPlotter.ylabel
builtins.str"builtins.str*36*37*38*39*310*311*312*313rt
xlabel(seaborn.matrix._DendrogramPlotter.xlabel
builtins.str"builtins.str*36*37*38*39*310*311*312*313r˙
dependent_coord1seaborn.matrix._DendrogramPlotter.dependent_coordè
,builtins.list[builtins.list[builtins.float]]P
builtins.list[builtins.float] 
builtins.float"builtins.float"builtins.list"builtins.list*36*37*38*39*310*311*312*313r˛
independent_coord3seaborn.matrix._DendrogramPlotter.independent_coordè
,builtins.list[builtins.list[builtins.float]]P
builtins.list[builtins.float] 
builtins.float"builtins.float"builtins.list"builtins.list*36*37*38*39*310*311*312*313ù≥
ClusterGridseaborn.matrix.ClusterGrid"seaborn.axisgrid.Grid*Ì
__init__#seaborn.matrix.ClusterGrid.__init__"
None*B
self8
seaborn.matrix.ClusterGrid"seaborn.matrix.ClusterGrid*Ü

data˚	
©Union[TypeAlias[Union[typing.Sequence[TypeAlias[Any]],numpy.ndarray[Unknown,Unknown],pandas.core.series.Series[Unknown],pandas.core.indexes.base.Index[Unknown]]],pandas.core.frame.DataFrame,builtins.dict[Unknown,Unknown],typing.Iterable[Union[Unknown,Unknown,builtins.dict[Unknown,Unknown]]],None]ˇ
õTypeAlias[Union[typing.Sequence[TypeAlias[Any]],numpy.ndarray[Unknown,Unknown],pandas.core.series.Series[Unknown],pandas.core.indexes.base.Index[Unknown]]]¡
êUnion[typing.Sequence[TypeAlias[Any]],numpy.ndarray[Unknown,Unknown],pandas.core.series.Series[Unknown],pandas.core.indexes.base.Index[Unknown]]e
typing.Sequence[TypeAlias[Any]]1
TypeAlias[Any]
Any"_typeshed.Incomplete"typing.Sequence3
numpy.ndarray[Unknown,Unknown]  "numpy.ndarrayA
"pandas.core.series.Series[Unknown] "pandas.core.series.SeriesK
'pandas.core.indexes.base.Index[Unknown] "pandas.core.indexes.base.Index"seaborn.matrix._ListLikeU:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame3
builtins.dict[Unknown,Unknown]  "builtins.dictÕ
Ftyping.Iterable[Union[Unknown,Unknown,builtins.dict[Unknown,Unknown]]]r
5Union[Unknown,Unknown,builtins.dict[Unknown,Unknown]]  3
builtins.dict[Unknown,Unknown]  "builtins.dict"typing.Iterable
None*Ë
	pivot_kws÷
7Union[typing.Mapping[builtins.str,TypeAlias[Any]],None]é
+typing.Mapping[builtins.str,TypeAlias[Any]]
builtins.str"builtins.str1
TypeAlias[Any]
Any"_typeshed.Incomplete"typing.Mapping
None *S
z_scoreD
Union[builtins.int,None]
builtins.int"builtins.int
None *Z
standard_scaleD
Union[builtins.int,None]
builtins.int"builtins.int
None *º
figsize¨
0Union[Tuple[builtins.float,builtins.float],None]l
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float
None *m

row_colors[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *m

col_colors[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *ÿ
maskÀ
{Union[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],pandas.core.frame.DataFrame,None]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame
None *ˆ
dendrogram_ratio›
?Union[builtins.float,Tuple[builtins.float,builtins.float],None] 
builtins.float"builtins.floatl
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float
None *Ú
colors_ratio›
?Union[builtins.float,Tuple[builtins.float,builtins.float],None] 
builtins.float"builtins.floatl
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float
None *æ
cbar_pos≠
NUnion[Tuple[builtins.float,builtins.float,builtins.float,builtins.float],None]Œ
BTuple[builtins.float,builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float
None z36z37z38z39z310z311z312z313*π
format_data&seaborn.matrix.ClusterGrid.format_data":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*B
self8
seaborn.matrix.ClusterGrid"seaborn.matrix.ClusterGrid*D
data:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*Ê
	pivot_kws÷
7Union[typing.Mapping[builtins.str,TypeAlias[Any]],None]é
+typing.Mapping[builtins.str,TypeAlias[Any]]
builtins.str"builtins.str1
TypeAlias[Any]
Any"_typeshed.Incomplete"typing.Mapping
None*S
z_scoreD
Union[builtins.int,None]
builtins.int"builtins.int
None *Z
standard_scaleD
Union[builtins.int,None]
builtins.int"builtins.int
None z36z37z38z39z310z311z312z313*ë
z_score"seaborn.matrix.ClusterGrid.z_score":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*F
data2d:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*(
axis
builtins.int"builtins.int 0:staticmethodhz36z37z38z39z310z311z312z313*ü
standard_scale)seaborn.matrix.ClusterGrid.standard_scale":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*F
data2d:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*(
axis
builtins.int"builtins.int 0:staticmethodhz36z37z38z39z310z311z312z313*¬

dim_ratios%seaborn.matrix.ClusterGrid.dim_ratios"P
builtins.list[builtins.float] 
builtins.float"builtins.float"builtins.list*B
self8
seaborn.matrix.ClusterGrid"seaborn.matrix.ClusterGrid*g
colors[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None*6
dendrogram_ratio 
builtins.float"builtins.float*2
colors_ratio 
builtins.float"builtins.floatz36z37z38z39z310z311z312z313*∞
color_list_to_matrix_and_cmap8seaborn.matrix.ClusterGrid.color_list_to_matrix_and_cmap"Ò
^Tuple[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],Any]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray
Any*<
colors0
typing.Sequence[Any]
Any"typing.Sequence*¬
ind∏
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"*numpy._typing._array_like._ArrayLikeInt_co*(
axis
builtins.int"builtins.int 0:staticmethodhz36z37z38z39z310z311z312z313*‹
plot_dendrograms+seaborn.matrix.ClusterGrid.plot_dendrograms"
None*B
self8
seaborn.matrix.ClusterGrid"seaborn.matrix.ClusterGrid*/
row_cluster
builtins.bool"builtins.bool*/
col_cluster
builtins.bool"builtins.bool*(
metric
builtins.str"builtins.str*(
method
builtins.str"builtins.str*Ö
row_linkageÛ
_Union[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],None]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray
None*Ö
col_linkageÛ
_Union[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],None]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray
None*‚
tree_kws”
6Union[builtins.dict[builtins.str,TypeAlias[Any]],None]å
*builtins.dict[builtins.str,TypeAlias[Any]]
builtins.str"builtins.str1
TypeAlias[Any]
Any"_typeshed.Incomplete"builtins.dict
Nonez36z37z38z39z310z311z312z313*≈ 
plot_colors&seaborn.matrix.ClusterGrid.plot_colors"
None*B
self8
seaborn.matrix.ClusterGrid"seaborn.matrix.ClusterGrid*√
xind∏
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"*numpy._typing._array_like._ArrayLikeInt_co*√
yind∏
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"*numpy._typing._array_like._ArrayLikeInt_co*
kws
Anyz36z37z38z39z310z311z312z313*Á!
plot_matrix&seaborn.matrix.ClusterGrid.plot_matrix"
None*B
self8
seaborn.matrix.ClusterGrid"seaborn.matrix.ClusterGrid*ü
colorbar_kwså
*builtins.dict[builtins.str,TypeAlias[Any]]
builtins.str"builtins.str1
TypeAlias[Any]
Any"_typeshed.Incomplete"builtins.dict*√
xind∏
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"*numpy._typing._array_like._ArrayLikeInt_co*√
yind∏
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"*numpy._typing._array_like._ArrayLikeInt_co*
kws
Anyz36z37z38z39z310z311z312z313*Ú
plotseaborn.matrix.ClusterGrid.plot"y
seaborn.matrix.ClusterGrid.Self8
seaborn.matrix.ClusterGrid"seaborn.matrix.ClusterGrid"seaborn.matrix.ClusterGrid*É
selfy
seaborn.matrix.ClusterGrid.Self8
seaborn.matrix.ClusterGrid"seaborn.matrix.ClusterGrid"seaborn.matrix.ClusterGrid*(
metric
builtins.str"builtins.str*(
method
builtins.str"builtins.str*Ê
colorbar_kws”
6Union[builtins.dict[builtins.str,TypeAlias[Any]],None]å
*builtins.dict[builtins.str,TypeAlias[Any]]
builtins.str"builtins.str1
TypeAlias[Any]
Any"_typeshed.Incomplete"builtins.dict
None*/
row_cluster
builtins.bool"builtins.bool*/
col_cluster
builtins.bool"builtins.bool*Ö
row_linkageÛ
_Union[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],None]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray
None*Ö
col_linkageÛ
_Union[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],None]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray
None*‚
tree_kws”
6Union[builtins.dict[builtins.str,TypeAlias[Any]],None]å
*builtins.dict[builtins.str,TypeAlias[Any]]
builtins.str"builtins.str1
TypeAlias[Any]
Any"_typeshed.Incomplete"builtins.dict
None*
kws
Anyz36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rá
dataseaborn.matrix.ClusterGrid.data:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*36*37*38*39*310*311*312*313rã
data2d!seaborn.matrix.ClusterGrid.data2d:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*36*37*38*39*310*311*312*313rá
maskseaborn.matrix.ClusterGrid.mask:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*36*37*38*39*310*311*312*313rä

row_colors%seaborn.matrix.ClusterGrid.row_colors1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313rñ
row_color_labels+seaborn.matrix.ClusterGrid.row_color_labels1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313rä

col_colors%seaborn.matrix.ClusterGrid.col_colors1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313rñ
col_color_labels+seaborn.matrix.ClusterGrid.col_color_labels1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313rP
gsseaborn.matrix.ClusterGrid.gs
Any*36*37*38*39*310*311*312*313rn
ax_row_dendrogram,seaborn.matrix.ClusterGrid.ax_row_dendrogram
Any*36*37*38*39*310*311*312*313rn
ax_col_dendrogram,seaborn.matrix.ClusterGrid.ax_col_dendrogram
Any*36*37*38*39*310*311*312*313rÖ
ax_row_colors(seaborn.matrix.ClusterGrid.ax_row_colors&
Union[Any,None]
Any
None*36*37*38*39*310*311*312*313rÖ
ax_col_colors(seaborn.matrix.ClusterGrid.ax_col_colors&
Union[Any,None]
Any
None*36*37*38*39*310*311*312*313r`

ax_heatmap%seaborn.matrix.ClusterGrid.ax_heatmap
Any*36*37*38*39*310*311*312*313ry
ax_cbar"seaborn.matrix.ClusterGrid.ax_cbar&
Union[Any,None]
Any
None*36*37*38*39*310*311*312*313rq
caxseaborn.matrix.ClusterGrid.cax&
Union[Any,None]
Any
None*36*37*38*39*310*311*312*313rÜ
cbar_pos#seaborn.matrix.ClusterGrid.cbar_pos1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313rÂ
dendrogram_row)seaborn.matrix.ClusterGrid.dendrogram_rowÉ
-Union[seaborn.matrix._DendrogramPlotter,None]F
!seaborn.matrix._DendrogramPlotter"!seaborn.matrix._DendrogramPlotter
None*36*37*38*39*310*311*312*313rÂ
dendrogram_col)seaborn.matrix.ClusterGrid.dendrogram_colÉ
-Union[seaborn.matrix._DendrogramPlotter,None]F
!seaborn.matrix._DendrogramPlotter"!seaborn.matrix._DendrogramPlotter
None*36*37*38*39*310*311*312*313Î2
heatmapseaborn.matrix.heatmap"
Any*ü
dataî
ûUnion[pandas.core.frame.DataFrame,TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]]]]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame≤

˚TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]]]â
Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]]¶
\numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]õ
2numpy.dtype[numpy._typing._array_like._ScalarType]X
%numpy._typing._array_like._ScalarType
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"(numpy._typing._array_like._SupportsArrayË
ånumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]¶
\numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]õ
2numpy.dtype[numpy._typing._array_like._ScalarType]X
%numpy._typing._array_like._ScalarType
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequence"$numpy._typing._array_like._ArrayLike*V
vminJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *V
vmaxJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ü
cmapí
/Union[builtins.str,builtins.list[Any],Any,None]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list
Any
None *X
centerJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *,
robust
builtins.bool"builtins.bool *◊
annot…
ÊUnion[builtins.bool,TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]],None]
builtins.bool"builtins.bool±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike
None *'
fmt
builtins.str"builtins.str *Â
	annot_kws”
6Union[builtins.dict[builtins.str,TypeAlias[Any]],None]å
*builtins.dict[builtins.str,TypeAlias[Any]]
builtins.str"builtins.str1
TypeAlias[Any]
Any"_typeshed.Incomplete"builtins.dict
None *2

linewidths 
builtins.float"builtins.float *
	linecolor
Any **
cbar
builtins.bool"builtins.bool *‰
cbar_kws”
6Union[builtins.dict[builtins.str,TypeAlias[Any]],None]å
*builtins.dict[builtins.str,TypeAlias[Any]]
builtins.str"builtins.str1
TypeAlias[Any]
Any"_typeshed.Incomplete"builtins.dict
None *5
cbar_ax&
Union[Any,None]
Any
None *,
square
builtins.bool"builtins.bool *Ú
xticklabelsﬁ
CUnion[Any,builtins.bool,builtins.int,typing.Sequence[builtins.str]]
Any
builtins.bool"builtins.bool
builtins.int"builtins.intN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence *Ú
yticklabelsﬁ
CUnion[Any,builtins.bool,builtins.int,typing.Sequence[builtins.str]]
Any
builtins.bool"builtins.bool
builtins.int"builtins.intN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence *ÿ
maskÀ
{Union[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],pandas.core.frame.DataFrame,None]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame
None *0
ax&
Union[Any,None]
Any
None *
kwargs
Anyz36z37˘3
heatmapseaborn.matrix.heatmap"
Any*ü
dataî
ûUnion[pandas.core.frame.DataFrame,TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]]]]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame≤

˚TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]]]â
Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]]¶
\numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]õ
2numpy.dtype[numpy._typing._array_like._ScalarType]X
%numpy._typing._array_like._ScalarType
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"(numpy._typing._array_like._SupportsArrayË
ånumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]¶
\numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]õ
2numpy.dtype[numpy._typing._array_like._ScalarType]X
%numpy._typing._array_like._ScalarType
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequence"$numpy._typing._array_like._ArrayLike*V
vminJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *V
vmaxJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ü
cmapí
/Union[builtins.str,builtins.list[Any],Any,None]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list
Any
None *X
centerJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *,
robust
builtins.bool"builtins.bool *◊
annot…
ÊUnion[builtins.bool,TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]],None]
builtins.bool"builtins.bool±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike
None *'
fmt
builtins.str"builtins.str *Â
	annot_kws”
6Union[builtins.dict[builtins.str,TypeAlias[Any]],None]å
*builtins.dict[builtins.str,TypeAlias[Any]]
builtins.str"builtins.str1
TypeAlias[Any]
Any"_typeshed.Incomplete"builtins.dict
None *2

linewidths 
builtins.float"builtins.float *
	linecolor
Any **
cbar
builtins.bool"builtins.bool *‰
cbar_kws”
6Union[builtins.dict[builtins.str,TypeAlias[Any]],None]å
*builtins.dict[builtins.str,TypeAlias[Any]]
builtins.str"builtins.str1
TypeAlias[Any]
Any"_typeshed.Incomplete"builtins.dict
None *5
cbar_ax&
Union[Any,None]
Any
None *,
square
builtins.bool"builtins.bool *¥
xticklabels†
UUnion[Literal[builtins.str],builtins.bool,builtins.int,typing.Sequence[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str
builtins.bool"builtins.bool
builtins.int"builtins.intN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence *¥
yticklabels†
UUnion[Literal[builtins.str],builtins.bool,builtins.int,typing.Sequence[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str
builtins.bool"builtins.bool
builtins.int"builtins.intN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence *ÿ
maskÀ
{Union[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],pandas.core.frame.DataFrame,None]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame
None *0
ax&
Union[Any,None]
Any
None *
kwargs
Anyz38z39z310z311˙!
heatmapseaborn.matrix.heatmap"
Any*ü
dataî
ûUnion[pandas.core.frame.DataFrame,TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]]]]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame≤

˚TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]]]â
Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]]¶
\numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]õ
2numpy.dtype[numpy._typing._array_like._ScalarType]X
%numpy._typing._array_like._ScalarType
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"(numpy._typing._array_like._SupportsArrayË
ånumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]]¶
\numpy._typing._array_like._SupportsArray[numpy.dtype[numpy._typing._array_like._ScalarType]]õ
2numpy.dtype[numpy._typing._array_like._ScalarType]X
%numpy._typing._array_like._ScalarType
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequence"$numpy._typing._array_like._ArrayLike*V
vminJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *V
vmaxJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ü
cmapí
/Union[builtins.str,builtins.list[Any],Any,None]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list
Any
None *X
centerJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *,
robust
builtins.bool"builtins.bool *a
annotT
Union[builtins.bool,Any,None]
builtins.bool"builtins.bool
Any
None *'
fmt
builtins.str"builtins.str *Â
	annot_kws”
6Union[builtins.dict[builtins.str,TypeAlias[Any]],None]å
*builtins.dict[builtins.str,TypeAlias[Any]]
builtins.str"builtins.str1
TypeAlias[Any]
Any"_typeshed.Incomplete"builtins.dict
None *2

linewidths 
builtins.float"builtins.float *
	linecolor
Any **
cbar
builtins.bool"builtins.bool *‰
cbar_kws”
6Union[builtins.dict[builtins.str,TypeAlias[Any]],None]å
*builtins.dict[builtins.str,TypeAlias[Any]]
builtins.str"builtins.str1
TypeAlias[Any]
Any"_typeshed.Incomplete"builtins.dict
None *5
cbar_ax&
Union[Any,None]
Any
None *,
square
builtins.bool"builtins.bool *¥
xticklabels†
UUnion[Literal[builtins.str],builtins.bool,builtins.int,typing.Sequence[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str
builtins.bool"builtins.bool
builtins.int"builtins.intN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence *¥
yticklabels†
UUnion[Literal[builtins.str],builtins.bool,builtins.int,typing.Sequence[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str
builtins.bool"builtins.bool
builtins.int"builtins.intN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence *ÿ
maskÀ
{Union[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],pandas.core.frame.DataFrame,None]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame
None *0
ax&
Union[Any,None]
Any
None *
kwargs
Anyz312z313’	

dendrogramseaborn.matrix.dendrogram"F
!seaborn.matrix._DendrogramPlotter"!seaborn.matrix._DendrogramPlotter*D
data:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*É
linkageÛ
_Union[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],None]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray
None *(
axis
builtins.int"builtins.int *+
label
builtins.bool"builtins.bool **
metric
builtins.str"builtins.str **
method
builtins.str"builtins.str *,
rotate
builtins.bool"builtins.bool *‰
tree_kws”
6Union[builtins.dict[builtins.str,TypeAlias[Any]],None]å
*builtins.dict[builtins.str,TypeAlias[Any]]
builtins.str"builtins.str1
TypeAlias[Any]
Any"_typeshed.Incomplete"builtins.dict
None *0
ax&
Union[Any,None]
Any
None z36z37z38z39z310z311z312z313Â)

clustermapseaborn.matrix.clustermap"8
seaborn.matrix.ClusterGrid"seaborn.matrix.ClusterGrid*Ü

data˚	
©Union[TypeAlias[Union[typing.Sequence[TypeAlias[Any]],numpy.ndarray[Unknown,Unknown],pandas.core.series.Series[Unknown],pandas.core.indexes.base.Index[Unknown]]],pandas.core.frame.DataFrame,builtins.dict[Unknown,Unknown],typing.Iterable[Union[Unknown,Unknown,builtins.dict[Unknown,Unknown]]],None]ˇ
õTypeAlias[Union[typing.Sequence[TypeAlias[Any]],numpy.ndarray[Unknown,Unknown],pandas.core.series.Series[Unknown],pandas.core.indexes.base.Index[Unknown]]]¡
êUnion[typing.Sequence[TypeAlias[Any]],numpy.ndarray[Unknown,Unknown],pandas.core.series.Series[Unknown],pandas.core.indexes.base.Index[Unknown]]e
typing.Sequence[TypeAlias[Any]]1
TypeAlias[Any]
Any"_typeshed.Incomplete"typing.Sequence3
numpy.ndarray[Unknown,Unknown]  "numpy.ndarrayA
"pandas.core.series.Series[Unknown] "pandas.core.series.SeriesK
'pandas.core.indexes.base.Index[Unknown] "pandas.core.indexes.base.Index"seaborn.matrix._ListLikeU:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame3
builtins.dict[Unknown,Unknown]  "builtins.dictÕ
Ftyping.Iterable[Union[Unknown,Unknown,builtins.dict[Unknown,Unknown]]]r
5Union[Unknown,Unknown,builtins.dict[Unknown,Unknown]]  3
builtins.dict[Unknown,Unknown]  "builtins.dict"typing.Iterable
None*Â
	pivot_kws”
6Union[builtins.dict[builtins.str,TypeAlias[Any]],None]å
*builtins.dict[builtins.str,TypeAlias[Any]]
builtins.str"builtins.str1
TypeAlias[Any]
Any"_typeshed.Incomplete"builtins.dict
None **
method
builtins.str"builtins.str **
metric
builtins.str"builtins.str *S
z_scoreD
Union[builtins.int,None]
builtins.int"builtins.int
None *Z
standard_scaleD
Union[builtins.int,None]
builtins.int"builtins.int
None *º
figsize¨
0Union[Tuple[builtins.float,builtins.float],None]l
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float
None *‰
cbar_kws”
6Union[builtins.dict[builtins.str,TypeAlias[Any]],None]å
*builtins.dict[builtins.str,TypeAlias[Any]]
builtins.str"builtins.str1
TypeAlias[Any]
Any"_typeshed.Incomplete"builtins.dict
None *1
row_cluster
builtins.bool"builtins.bool *1
col_cluster
builtins.bool"builtins.bool *á
row_linkageÛ
_Union[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],None]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray
None *á
col_linkageÛ
_Union[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],None]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray
None *m

row_colors[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *m

col_colors[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *ÿ
maskÀ
{Union[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],pandas.core.frame.DataFrame,None]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame
None *Á
dendrogram_ratioŒ
:Union[builtins.float,Tuple[builtins.float,builtins.float]] 
builtins.float"builtins.floatl
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float *„
colors_ratioŒ
:Union[builtins.float,Tuple[builtins.float,builtins.float]] 
builtins.float"builtins.floatl
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float *æ
cbar_pos≠
NUnion[Tuple[builtins.float,builtins.float,builtins.float,builtins.float],None]Œ
BTuple[builtins.float,builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float
None *‰
tree_kws”
6Union[builtins.dict[builtins.str,TypeAlias[Any]],None]å
*builtins.dict[builtins.str,TypeAlias[Any]]
builtins.str"builtins.str1
TypeAlias[Any]
Any"_typeshed.Incomplete"builtins.dict
None *
kwargs
Anyz36z37z38z39z310z311z312z313*Æ
__annotations__seaborn.matrix.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313*2
Literalseaborn.matrix.Literal
Any*36*37*1
npnumpy *36*37*38*39*310*311*312*313*H
Axesseaborn.matrix.Axes
Any*36*37*38*39*310*311*312*313*P
Colormapseaborn.matrix.Colormap
Any*36*37*38*39*310*311*312*313*\
ListedColormapseaborn.matrix.ListedColormap
Any*36*37*38*39*310*311*312*313*P
GridSpecseaborn.matrix.GridSpec
Any*36*37*38*39*310*311*312*313*R
	ColorTypeseaborn.matrix.ColorType
Any*36*37*38*39*310*311*312*313*ë
__all__seaborn.matrix.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*36*37*38*39*310*311*312*313