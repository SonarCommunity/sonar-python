
torch.fx._pytree…
register_pytree_flatten_spec-torch.fx._pytree.register_pytree_flatten_spec"
None*%
cls
	Type[Any]
Any"type*≥
flatten_fn_specù
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function" torch.fx._pytree.FlattenFuncSpec*í
flatten_fn_exact_match_specÓ
6Union[TypeAlias[CallableType[builtins.function]],None]ß
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"*torch.fx._pytree.FlattenFuncExactMatchSpec
None ô
tree_flatten_spec"torch.fx._pytree.tree_flatten_spec",
builtins.list[Any]
Any"builtins.list*C
pytree7
TypeAlias[Any]
Any"torch.utils._pytree.PyTree*F
spec<
torch.utils._pytree.TreeSpec"torch.utils._pytree.TreeSpec*%
exact_structural_match
Any Ò
_dict_flatten_spec#torch.fx._pytree._dict_flatten_spec",
builtins.list[Any]
Any"builtins.list*@
d9
builtins.dict[Any,Any]
Any
Any"builtins.dict*F
spec<
torch.utils._pytree.TreeSpec"torch.utils._pytree.TreeSpec‰
_list_flatten_spec#torch.fx._pytree._list_flatten_spec",
builtins.list[Any]
Any"builtins.list*3
d,
builtins.list[Any]
Any"builtins.list*F
spec<
torch.utils._pytree.TreeSpec"torch.utils._pytree.TreeSpec—
_tuple_flatten_spec$torch.fx._pytree._tuple_flatten_spec",
builtins.list[Any]
Any"builtins.list*
d

Tuple[Any]
Any*F
spec<
torch.utils._pytree.TreeSpec"torch.utils._pytree.TreeSpecÍ
_namedtuple_flatten_spec)torch.fx._pytree._namedtuple_flatten_spec",
builtins.list[Any]
Any"builtins.list*-
d&
typing.NamedTuple"typing.NamedTuple*F
spec<
torch.utils._pytree.TreeSpec"torch.utils._pytree.TreeSpec˚
_dict_flatten_spec_exact_match/torch.fx._pytree._dict_flatten_spec_exact_match"
builtins.bool"builtins.bool*@
d9
builtins.dict[Any,Any]
Any
Any"builtins.dict*F
spec<
torch.utils._pytree.TreeSpec"torch.utils._pytree.TreeSpecÓ
_list_flatten_spec_exact_match/torch.fx._pytree._list_flatten_spec_exact_match"
builtins.bool"builtins.bool*3
d,
builtins.list[Any]
Any"builtins.list*F
spec<
torch.utils._pytree.TreeSpec"torch.utils._pytree.TreeSpec€
_tuple_flatten_spec_exact_match0torch.fx._pytree._tuple_flatten_spec_exact_match"
builtins.bool"builtins.bool*
d

Tuple[Any]
Any*F
spec<
torch.utils._pytree.TreeSpec"torch.utils._pytree.TreeSpecÙ
$_namedtuple_flatten_spec_exact_match5torch.fx._pytree._namedtuple_flatten_spec_exact_match"
builtins.bool"builtins.bool*-
d&
typing.NamedTuple"typing.NamedTuple*F
spec<
torch.utils._pytree.TreeSpec"torch.utils._pytree.TreeSpec*å
__annotations__ torch.fx._pytree.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
torchtorch *»
SUPPORTED_NODES torch.fx._pytree.SUPPORTED_NODESí
Cbuiltins.dict[Type[Any],TypeAlias[CallableType[builtins.function]]]
	Type[Any]
Any"typeù
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function" torch.fx._pytree.FlattenFuncSpec"builtins.dict*Ω
SUPPORTED_NODES_EXACT_MATCH,torch.fx._pytree.SUPPORTED_NODES_EXACT_MATCHÔ
Obuiltins.dict[Type[Any],Union[TypeAlias[CallableType[builtins.function]],None]]
	Type[Any]
Any"typeÓ
6Union[TypeAlias[CallableType[builtins.function]],None]ß
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"*torch.fx._pytree.FlattenFuncExactMatchSpec
None"builtins.dict*I
return_typetorch.fx._pytree.return_type
	Type[Any]
Any"type