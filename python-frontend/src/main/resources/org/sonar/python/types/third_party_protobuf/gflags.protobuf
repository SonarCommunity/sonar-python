
gflags—

ModuleTypetypes.ModuleType"builtins.object*Ò
__init__types.ModuleType.__init__"
None*.
self$
types.ModuleType"types.ModuleType*&
name
builtins.str"builtins.str*O
docD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39z310j35j36j37j38j39j310ró
__dict__types.ModuleType.__dict__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*35*36*37*38*39*310rª

__loader__types.ModuleType.__loader__w
)Union[importlib.abc._LoaderProtocol,None]>
importlib.abc._LoaderProtocol"importlib.abc._LoaderProtocol
None*35*36*37*38*39*310r∫
__spec__types.ModuleType.__spec__z
*Union[importlib.machinery.ModuleSpec,None]@
importlib.machinery.ModuleSpec"importlib.machinery.ModuleSpec
None*35*36*37*38*39*310º$
IO	typing.IO"typing.Iterator*ü
modetyping.IO.mode"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z35z36z37z38z39z310*ü
nametyping.IO.name"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z35z36z37z38z39z310*ì
closetyping.IO.close"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*•
closedtyping.IO.closed"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z35z36z37z38z39z310*©
filenotyping.IO.fileno"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*ì
flushtyping.IO.flush"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*´
isattytyping.IO.isatty"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*¡
readtyping.IO.read"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*%
n
builtins.int"builtins.int 0:abstractmethod@z35z36z37z38z39z310*Ø
readabletyping.IO.readable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*Õ
readlinetyping.IO.readline"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*)
limit
builtins.int"builtins.int 0:abstractmethod@z35z36z37z38z39z310*˝
	readlinestyping.IO.readlines"@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
hint
builtins.int"builtins.int 0:abstractmethod@z35z36z37z38z39z310*˚
seektyping.IO.seek"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int 0:abstractmethod@z35z36z37z38z39z310*Ø
seekabletyping.IO.seekable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*•
telltyping.IO.tell"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*ˇ
truncatetyping.IO.truncate"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:abstractmethod@z35z36z37z38z39z310*Ø
writabletyping.IO.writable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*¡
writetyping.IO.write"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*
s
typing.AnyStr0:abstractmethod@z35z36z37z38z39z310*Ó

writelinestyping.IO.writelines"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*O
linesD
typing.Iterable[typing.AnyStr]
typing.AnyStr"typing.Iterable0:abstractmethod@z35z36z37z38z39z310*¢
__next__typing.IO.__next__"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*”
__iter__typing.IO.__iter__"D
typing.Iterator[typing.AnyStr]
typing.AnyStr"typing.Iterator*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*…
	__enter__typing.IO.__enter__"8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*æ
__exit__typing.IO.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*ê
tä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*k
valueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*f
	tracebackY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None0:abstractmethod@z35z36z37z38z39z310Pj35j36j37j38j39j310Ø
Iterabletyping.Iterable"builtins.object*·
__iter__typing.Iterable.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Iterable[typing._T_co]
typing._T_co"typing.Iterable0:abstractmethod@z35z36z37z38z39z3108PXj35j36j37j38j39j310¬
Sequencetyping.Sequence"typing.Collection"typing.Reversible*å
indextyping.Sequence.index"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
value
Any*)
start
builtins.int"builtins.int *(
stop
builtins.int"builtins.int z35z36z37z38z39z310*∑
counttyping.Sequence.count"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
value
Anyz35z36z37z38z39z310*⁄
__contains__typing.Sequence.__contains__"
builtins.bool"builtins.bool*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*'
x"
builtins.object"builtins.objectz35z36z37z38z39z310*Õ
__iter__typing.Sequence.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez35z36z37z38z39z310*’
__reversed__typing.Sequence.__reversed__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez35z36z37z38z39z3102ï
__getitem__typing.Sequence.__getitem__À
__getitem__typing.Sequence.__getitem__"
typing._T_co*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*!
i
builtins.int"builtins.int0:overload:abstractmethod@XÅ
__getitem__typing.Sequence.__getitem__"B
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*%
s 
builtins.slice"builtins.slice0:overload:abstractmethod@X"35"36"37"38"39"310Pj35j36j37j38j39j310B
Errorgflags.Error"builtins.Exceptionj35j36j37j38j39j310L
DuplicateFlaggflags.DuplicateFlag"gflags.Errorj35j36j37j38j39j310\
CantOpenFlagFileErrorgflags.CantOpenFlagFileError"gflags.Errorj35j36j37j38j39j310Ü
&DuplicateFlagCannotPropagateNoneToSwig-gflags.DuplicateFlagCannotPropagateNoneToSwig"gflags.DuplicateFlagj35j36j37j38j39j310ö
DuplicateFlagErrorgflags.DuplicateFlagError"gflags.DuplicateFlag*π
__init__"gflags.DuplicateFlagError.__init__"
None*@
self6
gflags.DuplicateFlagError"gflags.DuplicateFlagError**
flagname
builtins.str"builtins.str*7
flag_values&
gflags.FlagValues"gflags.FlagValues*?
other_flag_values&
gflags.FlagValues"gflags.FlagValues z35z36z37z38z39z310j35j36j37j38j39j310\
IllegalFlagValueErrorgflags.IllegalFlagValueError"gflags.Errorj35j36j37j38j39j310R
UnrecognizedFlaggflags.UnrecognizedFlag"gflags.Errorj35j36j37j38j39j310·
UnrecognizedFlagErrorgflags.UnrecognizedFlagError"gflags.UnrecognizedFlag*˜
__init__%gflags.UnrecognizedFlagError.__init__"
None*F
self<
gflags.UnrecognizedFlagError"gflags.UnrecognizedFlagError**
flagname
builtins.str"builtins.str*-
	flagvalue
builtins.str"builtins.str z35z36z37z38z39z310j35j36j37j38j39j310£T

FlagValuesgflags.FlagValues"builtins.object*{
__init__gflags.FlagValues.__init__"
None*0
self&
gflags.FlagValues"gflags.FlagValuesz35z36z37z38z39z310*π
UseGnuGetOptgflags.FlagValues.UseGnuGetOpt"
None*0
self&
gflags.FlagValues"gflags.FlagValues*4
use_gnu_getopt
builtins.bool"builtins.bool z35z36z37z38z39z310*õ
is_gnu_getoptgflags.FlagValues.is_gnu_getopt"
builtins.bool"builtins.bool*0
self&
gflags.FlagValues"gflags.FlagValuesz35z36z37z38z39z310*¨
FlagDictgflags.FlagValues.FlagDict"9
builtins.dict[Any,Any]
Any
Any"builtins.dict*0
self&
gflags.FlagValues"gflags.FlagValuesz35z36z37z38z39z310*∫
flags_by_module_dict&gflags.FlagValues.flags_by_module_dict"Æ
6builtins.dict[builtins.str,builtins.list[gflags.Flag]]
builtins.str"builtins.strG
builtins.list[gflags.Flag]
gflags.Flag"gflags.Flag"builtins.list"builtins.dict*0
self&
gflags.FlagValues"gflags.FlagValuesz35z36z37z38z39z310*¿
flags_by_module_id_dict)gflags.FlagValues.flags_by_module_id_dict"Æ
6builtins.dict[builtins.int,builtins.list[gflags.Flag]]
builtins.int"builtins.intG
builtins.list[gflags.Flag]
gflags.Flag"gflags.Flag"builtins.list"builtins.dict*0
self&
gflags.FlagValues"gflags.FlagValuesz35z36z37z38z39z310*¬
key_flags_by_module_dict*gflags.FlagValues.key_flags_by_module_dict"Æ
6builtins.dict[builtins.str,builtins.list[gflags.Flag]]
builtins.str"builtins.strG
builtins.list[gflags.Flag]
gflags.Flag"gflags.Flag"builtins.list"builtins.dict*0
self&
gflags.FlagValues"gflags.FlagValuesz35z36z37z38z39z310*ä
find_module_defining_flag+gflags.FlagValues.find_module_defining_flag"
builtins.str"builtins.str*0
self&
gflags.FlagValues"gflags.FlagValues**
flagname
builtins.str"builtins.str*+
default
builtins.str"builtins.str z35z36z37z38z39z310*ê
find_module_id_defining_flag.gflags.FlagValues.find_module_id_defining_flag"
builtins.int"builtins.int*0
self&
gflags.FlagValues"gflags.FlagValues**
flagname
builtins.str"builtins.str*+
default
builtins.int"builtins.int z35z36z37z38z39z310*»
append_flag_values$gflags.FlagValues.append_flag_values"
None*0
self&
gflags.FlagValues"gflags.FlagValues*7
flag_values&
gflags.FlagValues"gflags.FlagValuesz35z36z37z38z39z310*»
remove_flag_values$gflags.FlagValues.remove_flag_values"
None*0
self&
gflags.FlagValues"gflags.FlagValues*7
flag_values&
gflags.FlagValues"gflags.FlagValuesz35z36z37z38z39z310*…
__setitem__gflags.FlagValues.__setitem__"
None*.
self&
gflags.FlagValues"gflags.FlagValues*$
name
builtins.str"builtins.str*"
flag
gflags.Flag"gflags.Flagz35z36z37z38z39z310*∑
__getitem__gflags.FlagValues.__getitem__"
gflags.Flag"gflags.Flag*.
self&
gflags.FlagValues"gflags.FlagValues*$
name
builtins.str"builtins.strz35z36z37z38z39z310*§
__getattr__gflags.FlagValues.__getattr__"
Any*.
self&
gflags.FlagValues"gflags.FlagValues*$
name
builtins.str"builtins.strz35z36z37z38z39z310*∑
__setattr__gflags.FlagValues.__setattr__"
None*.
self&
gflags.FlagValues"gflags.FlagValues*$
name
builtins.str"builtins.str*
value
Anyz35z36z37z38z39z310*™
__delattr__gflags.FlagValues.__delattr__"
None*.
self&
gflags.FlagValues"gflags.FlagValues*)
	flag_name
builtins.str"builtins.strz35z36z37z38z39z310*Ω
set_defaultgflags.FlagValues.set_default"
None*0
self&
gflags.FlagValues"gflags.FlagValues*&
name
builtins.str"builtins.str*
value
Anyz35z36z37z38z39z310*Ω
__contains__gflags.FlagValues.__contains__"
builtins.bool"builtins.bool*.
self&
gflags.FlagValues"gflags.FlagValues*$
name
builtins.str"builtins.strz35z36z37z38z39z310*ø
__iter__gflags.FlagValues.__iter__"N
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable*.
self&
gflags.FlagValues"gflags.FlagValuesz35z36z37z38z39z310*≈
__call__gflags.FlagValues.__call__"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*0
self&
gflags.FlagValues"gflags.FlagValues*T
argvJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*0

known_only
builtins.bool"builtins.bool z35z36z37z38z39z310*u
resetgflags.FlagValues.reset"
None*0
self&
gflags.FlagValues"gflags.FlagValuesz35z36z37z38z39z310*À
RegisteredFlags!gflags.FlagValues.RegisteredFlags"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*0
self&
gflags.FlagValues"gflags.FlagValuesz35z36z37z38z39z310*⁄
flag_values_dict"gflags.FlagValues.flag_values_dict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*0
self&
gflags.FlagValues"gflags.FlagValuesz35z36z37z38z39z310*ã
__str__gflags.FlagValues.__str__"
builtins.str"builtins.str*.
self&
gflags.FlagValues"gflags.FlagValuesz35z36z37z38z39z310*π
GetHelpgflags.FlagValues.GetHelp"
builtins.str"builtins.str*0
self&
gflags.FlagValues"gflags.FlagValues**
prefix
builtins.str"builtins.str z35z36z37z38z39z310*è
module_helpgflags.FlagValues.module_help"
builtins.str"builtins.str*0
self&
gflags.FlagValues"gflags.FlagValues*x
modulel
$Union[types.ModuleType,builtins.str]$
types.ModuleType"types.ModuleType
builtins.str"builtins.strz35z36z37z38z39z310*ü
main_module_help"gflags.FlagValues.main_module_help"
builtins.str"builtins.str*0
self&
gflags.FlagValues"gflags.FlagValuesz35z36z37z38z39z310*Æ
getgflags.FlagValues.get"
Any*0
self&
gflags.FlagValues"gflags.FlagValues*&
name
builtins.str"builtins.str*
default
Anyz35z36z37z38z39z310*Ä
ShortestUniquePrefixes(gflags.FlagValues.ShortestUniquePrefixes"u
(builtins.dict[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.dict*0
self&
gflags.FlagValues"gflags.FlagValues*z
flr
'builtins.dict[builtins.str,gflags.Flag]
builtins.str"builtins.str
gflags.Flag"gflags.Flag"builtins.dictz35z36z37z38z39z310*Õ
ExtractFilename!gflags.FlagValues.ExtractFilename"
builtins.str"builtins.str*0
self&
gflags.FlagValues"gflags.FlagValues*.
flagfile_str
builtins.str"builtins.strz35z36z37z38z39z310*ﬁ
read_flags_from_files'gflags.FlagValues.read_flags_from_files"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*0
self&
gflags.FlagValues"gflags.FlagValues*T
argvJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*/
	force_gnu
builtins.bool"builtins.bool z35z36z37z38z39z310*°
flags_into_string#gflags.FlagValues.flags_into_string"
builtins.str"builtins.str*0
self&
gflags.FlagValues"gflags.FlagValuesz35z36z37z38z39z310*√
append_flags_into_file(gflags.FlagValues.append_flags_into_file"
None*0
self&
gflags.FlagValues"gflags.FlagValues**
filename
builtins.str"builtins.strz35z36z37z38z39z310*Ó
write_help_in_xml_format*gflags.FlagValues.write_help_in_xml_format"
None*0
self&
gflags.FlagValues"gflags.FlagValues*Q
outfileB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO z35z36z37z38z39z310*õ
AddValidatorgflags.FlagValues.AddValidator"
None*0
self&
gflags.FlagValues"gflags.FlagValues*
	validator
Anyz35z36z37z38z39z310*ì
	is_parsedgflags.FlagValues.is_parsed"
builtins.bool"builtins.bool*0
self&
gflags.FlagValues"gflags.FlagValuesz35z36z37z38z39z310j35j36j37j38j39j310rí
IsGnuGetOptgflags.FlagValues.IsGnuGetOptK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310rû
FlagsByModuleDict#gflags.FlagValues.FlagsByModuleDictK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310r¢
FlagsByModuleIdDict%gflags.FlagValues.FlagsByModuleIdDictK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310r§
KeyFlagsByModuleDict&gflags.FlagValues.KeyFlagsByModuleDictK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310r®
FindModuleDefiningFlag(gflags.FlagValues.FindModuleDefiningFlagK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310r¨
FindModuleIdDefiningFlag*gflags.FlagValues.FindModuleIdDefiningFlagK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310rú
AppendFlagValues"gflags.FlagValues.AppendFlagValuesK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310rú
RemoveFlagValues"gflags.FlagValues.RemoveFlagValuesK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310rê

SetDefaultgflags.FlagValues.SetDefaultK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310rä
has_keygflags.FlagValues.has_keyK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310rÜ
Resetgflags.FlagValues.ResetK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310rò
FlagValuesDict gflags.FlagValues.FlagValuesDictK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310rê

ModuleHelpgflags.FlagValues.ModuleHelpK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310rò
MainModuleHelp gflags.FlagValues.MainModuleHelpK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310r†
ReadFlagsFromFiles$gflags.FlagValues.ReadFlagsFromFilesK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310rö
FlagsIntoString!gflags.FlagValues.FlagsIntoStringK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310r¢
AppendFlagsIntoFile%gflags.FlagValues.AppendFlagsIntoFileK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310r§
WriteHelpInXMLFormat&gflags.FlagValues.WriteHelpInXMLFormatK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310rå
IsParsedgflags.FlagValues.IsParsedK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310Ö
Flaggflags.Flag"builtins.object*¨
__init__gflags.Flag.__init__"
None*$
self
gflags.Flag"gflags.Flag*:
parser.
gflags.ArgumentParser"gflags.ArgumentParser*F

serializer6
gflags.ArgumentSerializer"gflags.ArgumentSerializer*&
name
builtins.str"builtins.str*Q
defaultD
Union[builtins.str,None]
builtins.str"builtins.str
None*-
help_string
builtins.str"builtins.str*.

short_name
builtins.str"builtins.str *-
boolean
builtins.bool"builtins.bool *4
allow_override
builtins.bool"builtins.bool z35z36z37z38z39z310*y
Parsegflags.Flag.Parse"
Any*$
self
gflags.Flag"gflags.Flag*
argument
Anyz35z36z37z38z39z310*g
Unparsegflags.Flag.Unparse"
None*$
self
gflags.Flag"gflags.Flagz35z36z37z38z39z310*
	Serializegflags.Flag.Serialize"
builtins.str"builtins.str*$
self
gflags.Flag"gflags.Flagz35z36z37z38z39z310*Å

SetDefaultgflags.Flag.SetDefault"
None*$
self
gflags.Flag"gflags.Flag*
value
Anyz35z36z37z38z39z310*u
Typegflags.Flag.Type"
builtins.str"builtins.str*$
self
gflags.Flag"gflags.Flagz35z36z37z38z39z310*€
WriteInfoInXMLFormat gflags.Flag.WriteInfoInXMLFormat"
None*$
self
gflags.Flag"gflags.Flag*O
outfileB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*-
module_name
builtins.str"builtins.str*,
is_key
builtins.bool"builtins.bool **
indent
builtins.str"builtins.str z35z36z37z38z39z310j35j36j37j38j39j310rO
namegflags.Flag.name
builtins.str"builtins.str*35*36*37*38*39*310r@
defaultgflags.Flag.default
Any*35*36*37*38*39*310rc
default_as_strgflags.Flag.default_as_str
builtins.str"builtins.str*35*36*37*38*39*310r<
valuegflags.Flag.value
Any*35*36*37*38*39*310rO
helpgflags.Flag.help
builtins.str"builtins.str*35*36*37*38*39*310r[

short_namegflags.Flag.short_name
builtins.str"builtins.str*35*36*37*38*39*310rW
booleangflags.Flag.boolean
builtins.bool"builtins.bool*35*36*37*38*39*310rW
presentgflags.Flag.present
builtins.bool"builtins.bool*35*36*37*38*39*310re
parsergflags.Flag.parser.
gflags.ArgumentParser"gflags.ArgumentParser*35*36*37*38*39*310ru

serializergflags.Flag.serializer6
gflags.ArgumentSerializer"gflags.ArgumentSerializer*35*36*37*38*39*310re
allow_overridegflags.Flag.allow_override
builtins.bool"builtins.bool*35*36*37*38*39*310Ω
ArgumentParsergflags.ArgumentParser"builtins.object*ó
parsegflags.ArgumentParser.parse"
Any*8
self.
gflags.ArgumentParser"gflags.ArgumentParser*
argument
Anyz35z36z37z38z39z310*ù
	flag_typegflags.ArgumentParser.flag_type"
builtins.str"builtins.str*8
self.
gflags.ArgumentParser"gflags.ArgumentParserz35z36z37z38z39z310*¶
WriteCustomInfoInXMLFormat0gflags.ArgumentParser.WriteCustomInfoInXMLFormat"
None*8
self.
gflags.ArgumentParser"gflags.ArgumentParser*O
outfileB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*(
indent
builtins.str"builtins.strz35z36z37z38z39z310j35j36j37j38j39j310rm
syntactic_help$gflags.ArgumentParser.syntactic_help
builtins.str"builtins.str*35*36*37*38*39*310rå
Parsergflags.ArgumentParser.ParserK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310rà
Typegflags.ArgumentParser.TypeK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310ô
ArgumentSerializergflags.ArgumentSerializer"builtins.object*Ω
	Serialize#gflags.ArgumentSerializer.Serialize"
builtins.str"builtins.str*@
self6
gflags.ArgumentSerializer"gflags.ArgumentSerializer*
value
Anyz35z36z37z38z39z310j35j36j37j38j39j310Í
ListSerializergflags.ListSerializer"gflags.ArgumentSerializer*≥
__init__gflags.ListSerializer.__init__"
None*8
self.
gflags.ListSerializer"gflags.ListSerializer**
list_sep
builtins.str"builtins.strz35z36z37z38z39z310*÷
	Serializegflags.ListSerializer.Serialize"
builtins.str"builtins.str*8
self.
gflags.ListSerializer"gflags.ListSerializer*7
value,
builtins.list[Any]
Any"builtins.listz35z36z37z38z39z310j35j36j37j38j39j310µ
BooleanParsergflags.BooleanParser"gflags.ArgumentParser*Ø
Convertgflags.BooleanParser.Convert"
builtins.bool"builtins.bool*6
self,
gflags.BooleanParser"gflags.BooleanParser*
argument
Anyz35z36z37z38z39z310*´
Parsegflags.BooleanParser.Parse"
builtins.bool"builtins.bool*6
self,
gflags.BooleanParser"gflags.BooleanParser*
argument
Anyz35z36z37z38z39z310j35j36j37j38j39j310±
BooleanFlaggflags.BooleanFlag"gflags.Flag*Á
__init__gflags.BooleanFlag.__init__"
None*2
self(
gflags.BooleanFlag"gflags.BooleanFlag*&
name
builtins.str"builtins.str*T
defaultG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*&
help
builtins.str"builtins.str*.

short_name
builtins.str"builtins.str *
args
Anyz35z36z37z38z39z310j35j36j37j38j39j310√
HelpFlaggflags.HelpFlag"gflags.BooleanFlag*u
__init__gflags.HelpFlag.__init__"
None*,
self"
gflags.HelpFlag"gflags.HelpFlagz35z36z37z38z39z310*Å
Parsegflags.HelpFlag.Parse"
None*,
self"
gflags.HelpFlag"gflags.HelpFlag*
arg
Anyz35z36z37z38z39z310j35j36j37j38j39j310€
HelpXMLFlaggflags.HelpXMLFlag"gflags.BooleanFlag*~
__init__gflags.HelpXMLFlag.__init__"
None*2
self(
gflags.HelpXMLFlag"gflags.HelpXMLFlagz35z36z37z38z39z310*ä
Parsegflags.HelpXMLFlag.Parse"
None*2
self(
gflags.HelpXMLFlag"gflags.HelpXMLFlag*
arg
Anyz35z36z37z38z39z310j35j36j37j38j39j310Ï
HelpshortFlaggflags.HelpshortFlag"gflags.BooleanFlag*Ñ
__init__gflags.HelpshortFlag.__init__"
None*6
self,
gflags.HelpshortFlag"gflags.HelpshortFlagz35z36z37z38z39z310*ê
Parsegflags.HelpshortFlag.Parse"
None*6
self,
gflags.HelpshortFlag"gflags.HelpshortFlag*
arg
Anyz35z36z37z38z39z310j35j36j37j38j39j310ú
NumericParsergflags.NumericParser"gflags.ArgumentParser*”
IsOutsideBounds$gflags.NumericParser.IsOutsideBounds"
builtins.bool"builtins.bool*6
self,
gflags.NumericParser"gflags.NumericParser*)
val 
builtins.float"builtins.floatz35z36z37z38z39z310*≠
Parsegflags.NumericParser.Parse" 
builtins.float"builtins.float*6
self,
gflags.NumericParser"gflags.NumericParser*
argument
Anyz35z36z37z38z39z310*£
WriteCustomInfoInXMLFormat/gflags.NumericParser.WriteCustomInfoInXMLFormat"
None*6
self,
gflags.NumericParser"gflags.NumericParser*O
outfileB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*(
indent
builtins.str"builtins.strz35z36z37z38z39z310*ò
Convertgflags.NumericParser.Convert"
Any*6
self,
gflags.NumericParser"gflags.NumericParser*
argument
Anyz35z36z37z38z39z310j35j36j37j38j39j310ß
FloatParsergflags.FloatParser"gflags.NumericParser*Ë
__init__gflags.FloatParser.__init__"
None*2
self(
gflags.FloatParser"gflags.FloatParser*3
lower_bound 
builtins.float"builtins.float *3
upper_bound 
builtins.float"builtins.float z35z36z37z38z39z310*´
Convertgflags.FloatParser.Convert" 
builtins.float"builtins.float*2
self(
gflags.FloatParser"gflags.FloatParser*
argument
Anyz35z36z37z38z39z310j35j36j37j38j39j310rj
number_article!gflags.FloatParser.number_article
builtins.str"builtins.str*35*36*37*38*39*310rd
number_namegflags.FloatParser.number_name
builtins.str"builtins.str*35*36*37*38*39*310rj
syntactic_help!gflags.FloatParser.syntactic_help
builtins.str"builtins.str*35*36*37*38*39*310±
IntegerParsergflags.IntegerParser"gflags.NumericParser*Ê
__init__gflags.IntegerParser.__init__"
None*6
self,
gflags.IntegerParser"gflags.IntegerParser*/
lower_bound
builtins.int"builtins.int */
upper_bound
builtins.int"builtins.int z35z36z37z38z39z310*≠
Convertgflags.IntegerParser.Convert"
builtins.int"builtins.int*6
self,
gflags.IntegerParser"gflags.IntegerParser*
argument
Anyz35z36z37z38z39z310j35j36j37j38j39j310rl
number_article#gflags.IntegerParser.number_article
builtins.str"builtins.str*35*36*37*38*39*310rf
number_name gflags.IntegerParser.number_name
builtins.str"builtins.str*35*36*37*38*39*310rl
syntactic_help#gflags.IntegerParser.syntactic_help
builtins.str"builtins.str*35*36*37*38*39*310∏

EnumParsergflags.EnumParser"gflags.ArgumentParser*ÿ
__init__gflags.EnumParser.__init__"
None*0
self&
gflags.EnumParser"gflags.EnumParser*[
enum_valuesJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listz35z36z37z38z39z310*ã
Parsegflags.EnumParser.Parse"
Any*0
self&
gflags.EnumParser"gflags.EnumParser*
argument
Anyz35z36z37z38z39z310j35j36j37j38j39j310˙
EnumFlaggflags.EnumFlag"gflags.Flag*∂
__init__gflags.EnumFlag.__init__"
None*,
self"
gflags.EnumFlag"gflags.EnumFlag*&
name
builtins.str"builtins.str*Q
defaultD
Union[builtins.str,None]
builtins.str"builtins.str
None*&
help
builtins.str"builtins.str*[
enum_valuesJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*,

short_name
builtins.str"builtins.str*
args
Anyz35z36z37z38z39z310j35j36j37j38j39j310ı
BaseListParsergflags.BaseListParser"gflags.ArgumentParser*‹
__init__gflags.BaseListParser.__init__"
None*8
self.
gflags.BaseListParser"gflags.BaseListParser*)
token
builtins.str"builtins.str *(
name
builtins.str"builtins.str z35z36z37z38z39z310*º
Parsegflags.BaseListParser.Parse",
builtins.list[Any]
Any"builtins.list*8
self.
gflags.BaseListParser"gflags.BaseListParser*
argument
Anyz35z36z37z38z39z310j35j36j37j38j39j310Ã

ListParsergflags.ListParser"gflags.BaseListParser*{
__init__gflags.ListParser.__init__"
None*0
self&
gflags.ListParser"gflags.ListParserz35z36z37z38z39z310j35j36j37j38j39j310¨
WhitespaceSeparatedListParser$gflags.WhitespaceSeparatedListParser"gflags.BaseListParser*¥
__init__-gflags.WhitespaceSeparatedListParser.__init__"
None*V
selfL
$gflags.WhitespaceSeparatedListParser"$gflags.WhitespaceSeparatedListParserz35z36z37z38z39z310j35j36j37j38j39j310Ñ
	MultiFlaggflags.MultiFlag"gflags.Flag*†
__init__gflags.MultiFlag.__init__"
None*.
self$
gflags.MultiFlag"gflags.MultiFlag*
args
Any*
kwargs
Anyz35z36z37z38z39z310*ä
Parsegflags.MultiFlag.Parse"
None*.
self$
gflags.MultiFlag"gflags.MultiFlag*
	arguments
Anyz35z36z37z38z39z310*é
	Serializegflags.MultiFlag.Serialize"
builtins.str"builtins.str*.
self$
gflags.MultiFlag"gflags.MultiFlagz35z36z37z38z39z310j35j36j37j38j39j310^
get_help_widthgflags.get_help_width"
builtins.int"builtins.intz35z36z37z38z39z310¥
	text_wrapgflags.text_wrap"
builtins.str"builtins.str*&
text
builtins.str"builtins.str**
length
builtins.int"builtins.int **
indent
builtins.str"builtins.str *4
firstline_indent
builtins.str"builtins.str *(
tabs
builtins.str"builtins.str z35z36z37z38z39z310
doc_to_helpgflags.doc_to_help"
builtins.str"builtins.str*%
doc
builtins.str"builtins.strz35z36z37z38z39z310¡
register_validatorgflags.register_validator"
None*+
	flag_name
builtins.str"builtins.str*X
checkerK
CallableType[builtins.function]&
builtins.function"builtins.function*+
message
builtins.str"builtins.str *9
flag_values&
gflags.FlagValues"gflags.FlagValues z35z36z37z38z39z310¿
mark_flag_as_requiredgflags.mark_flag_as_required"
None*+
	flag_name
builtins.str"builtins.str*9
flag_values&
gflags.FlagValues"gflags.FlagValues z35z36z37z38z39z310ı
mark_flags_as_requiredgflags.mark_flags_as_required"
None*^

flag_namesN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable*9
flag_values&
gflags.FlagValues"gflags.FlagValues z35z36z37z38z39z310µ
mark_flags_as_mutual_exclusive%gflags.mark_flags_as_mutual_exclusive"
None*^

flag_namesN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable*.
required
builtins.bool"builtins.bool *9
flag_values&
gflags.FlagValues"gflags.FlagValues z35z36z37z38z39z310Ù
DEFINEgflags.DEFINE"
None*:
parser.
gflags.ArgumentParser"gflags.ArgumentParser*&
name
builtins.str"builtins.str*
default
Any*&
help
builtins.str"builtins.str*9
flag_values&
gflags.FlagValues"gflags.FlagValues *H

serializer6
gflags.ArgumentSerializer"gflags.ArgumentSerializer *
args
Anyz35z36z37z38z39z310•
DEFINE_flaggflags.DEFINE_flag"
None*$
flag
gflags.Flag"gflags.Flag*9
flag_values&
gflags.FlagValues"gflags.FlagValues z35z36z37z38z39z310∂
declare_key_flaggflags.declare_key_flag"
None*+
	flag_name
builtins.str"builtins.str*9
flag_values&
gflags.FlagValues"gflags.FlagValues z35z36z37z38z39z310«
adopt_module_key_flagsgflags.adopt_module_key_flags"
None*0
module$
types.ModuleType"types.ModuleType*9
flag_values&
gflags.FlagValues"gflags.FlagValues z35z36z37z38z39z310π
DEFINE_stringgflags.DEFINE_string"
None*&
name
builtins.str"builtins.str*Q
defaultD
Union[builtins.str,None]
builtins.str"builtins.str
None*&
help
builtins.str"builtins.str*9
flag_values&
gflags.FlagValues"gflags.FlagValues *
args
Anyz35z36z37z38z39z310æ
DEFINE_booleangflags.DEFINE_boolean"
None*&
name
builtins.str"builtins.str*T
defaultG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*&
help
builtins.str"builtins.str*9
flag_values&
gflags.FlagValues"gflags.FlagValues *
args
Anyz35z36z37z38z39z310ß
DEFINE_floatgflags.DEFINE_float"
None*&
name
builtins.str"builtins.str*W
defaultJ
Union[builtins.float,None] 
builtins.float"builtins.float
None*&
help
builtins.str"builtins.str*3
lower_bound 
builtins.float"builtins.float *3
upper_bound 
builtins.float"builtins.float *9
flag_values&
gflags.FlagValues"gflags.FlagValues *
args
Anyz35z36z37z38z39z310ù
DEFINE_integergflags.DEFINE_integer"
None*&
name
builtins.str"builtins.str*Q
defaultD
Union[builtins.int,None]
builtins.int"builtins.int
None*&
help
builtins.str"builtins.str*/
lower_bound
builtins.int"builtins.int */
upper_bound
builtins.int"builtins.int *9
flag_values&
gflags.FlagValues"gflags.FlagValues *
args
Anyz35z36z37z38z39z310ñ
DEFINE_enumgflags.DEFINE_enum"
None*&
name
builtins.str"builtins.str*Q
defaultD
Union[builtins.str,None]
builtins.str"builtins.str
None*_
enum_valuesN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable*&
help
builtins.str"builtins.str*9
flag_values&
gflags.FlagValues"gflags.FlagValues *
args
Anyz35z36z37z38z39z310Ù
DEFINE_listgflags.DEFINE_list"
None*&
name
builtins.str"builtins.str*è
defaultÅ
'Union[builtins.list[builtins.str],None]J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
None*&
help
builtins.str"builtins.str*9
flag_values&
gflags.FlagValues"gflags.FlagValues *
args
Anyz35z36z37z38z39z310Ñ
DEFINE_spaceseplistgflags.DEFINE_spaceseplist"
None*&
name
builtins.str"builtins.str*è
defaultÅ
'Union[builtins.list[builtins.str],None]J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
None*&
help
builtins.str"builtins.str*9
flag_values&
gflags.FlagValues"gflags.FlagValues *
args
Anyz35z36z37z38z39z310Ø
DEFINE_multi_stringgflags.DEFINE_multi_string"
None*&
name
builtins.str"builtins.str*∫
default¨
4Union[builtins.str,builtins.list[builtins.str],None]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
None*&
help
builtins.str"builtins.str*9
flag_values&
gflags.FlagValues"gflags.FlagValues *
args
Anyz35z36z37z38z39z310ì
DEFINE_multi_integergflags.DEFINE_multi_integer"
None*&
name
builtins.str"builtins.str*∫
default¨
4Union[builtins.int,builtins.list[builtins.int],None]
builtins.int"builtins.intJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list
None*&
help
builtins.str"builtins.str*/
lower_bound
builtins.int"builtins.int */
upper_bound
builtins.int"builtins.int *9
flag_values&
gflags.FlagValues"gflags.FlagValues *
args
Anyz35z36z37z38z39z310•
DEFINE_multi_floatgflags.DEFINE_multi_float"
None*&
name
builtins.str"builtins.str*»
default∫
8Union[builtins.float,builtins.list[builtins.float],None] 
builtins.float"builtins.floatP
builtins.list[builtins.float] 
builtins.float"builtins.float"builtins.list
None*&
help
builtins.str"builtins.str*3
lower_bound 
builtins.float"builtins.float *3
upper_bound 
builtins.float"builtins.float *9
flag_values&
gflags.FlagValues"gflags.FlagValues *
args
Anyz35z36z37z38z39z310»
DEFINE_multi_enumgflags.DEFINE_multi_enum"
None*&
name
builtins.str"builtins.str*¿
default≤
6Union[typing.Sequence[builtins.str],builtins.str,None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
builtins.str"builtins.str
None*_
enum_valuesN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*&
help
builtins.str"builtins.str*9
flag_values&
gflags.FlagValues"gflags.FlagValues *4
case_sensitive
builtins.bool"builtins.bool *
args
Anyz35z36z37z38z39z310*N
Any
typing.Any"
builtins.object"builtins.object*35*36*37*38*39*310*`
Callabletyping.Callable*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*`
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*Z
Uniontyping.Union*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*â
GetHelpWidthgflags.GetHelpWidthK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310*Å
TextWrapgflags.TextWrapK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310*É
	DocToHelpgflags.DocToHelpK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310*V
FLAGSgflags.FLAGS&
gflags.FlagValues"gflags.FlagValues*35*36*37*38*39*310*ì
RegisterValidatorgflags.RegisterValidatorK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310*ï
MarkFlagAsRequiredgflags.MarkFlagAsRequiredK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310*ó
MarkFlagsAsRequiredgflags.MarkFlagsAsRequiredK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310*•
MarkFlagsAsMutualExclusive!gflags.MarkFlagsAsMutualExclusiveK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310*ë
DECLARE_key_flaggflags.DECLARE_key_flagK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310*ù
ADOPT_module_key_flagsgflags.ADOPT_module_key_flagsK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310*á
DEFINE_boolgflags.DEFINE_boolK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310*ï
DEFINE_multistringgflags.DEFINE_multistringK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310*ë
DEFINE_multi_intgflags.DEFINE_multi_intK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310