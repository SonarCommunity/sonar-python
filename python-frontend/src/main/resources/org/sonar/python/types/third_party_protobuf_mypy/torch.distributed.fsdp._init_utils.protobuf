
"torch.distributed.fsdp._init_utils”
!_init_intra_and_inter_node_groupsDtorch.distributed.fsdp._init_utils._init_intra_and_inter_node_groups"‚
VTuple[torch._C._distributed_c10d.ProcessGroup,torch._C._distributed_c10d.ProcessGroup]R
'torch._C._distributed_c10d.ProcessGroup"'torch._C._distributed_c10d.ProcessGroupR
'torch._C._distributed_c10d.ProcessGroup"'torch._C._distributed_c10d.ProcessGroup*l
global_process_groupR
'torch._C._distributed_c10d.ProcessGroup"'torch._C._distributed_c10d.ProcessGroup*6
num_devices_per_node
builtins.int"builtins.intÛ
_check_ignored_states8torch.distributed.fsdp._init_utils._check_ignored_states"
None*@
ignored_states,
builtins.list[Any]
Any"builtins.list*<
passed_as_ignored_states
builtins.bool"builtins.boolŒ
_get_ignored_modules7torch.distributed.fsdp._init_utils._get_ignored_modules"~
,builtins.set[torch.nn.modules.module.Module]@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"builtins.set*Q
root_module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*ç
_ignored_modulesÐ
;Union[typing.Iterable[torch.nn.modules.module.Module],None]„
/typing.Iterable[torch.nn.modules.module.Module]@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"typing.Iterable
None•
_get_ignored_params6torch.distributed.fsdp._init_utils._get_ignored_params"x
*builtins.set[torch.nn.parameter.Parameter]<
torch.nn.parameter.Parameter"torch.nn.parameter.Parameter"builtins.set*Q
root_module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*“
ignored_modules~
,builtins.set[torch.nn.modules.module.Module]@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"builtins.set*â
ignored_parametersÇ
9Union[typing.Iterable[torch.nn.parameter.Parameter],None]~
-typing.Iterable[torch.nn.parameter.Parameter]<
torch.nn.parameter.Parameter"torch.nn.parameter.Parameter"typing.Iterable
None Œ
_get_ignored_buffer_names<torch.distributed.fsdp._init_utils._get_ignored_buffer_names"H
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.set*Q
root_module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*“
ignored_modules~
,builtins.set[torch.nn.modules.module.Module]@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"builtins.setæ
_get_buffer_names4torch.distributed.fsdp._init_utils._get_buffer_names"H
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.set*Q
root_module@
torch.nn.modules.module.Module"torch.nn.modules.module.ModuleÎ
_check_single_device_module>torch.distributed.fsdp._init_utils._check_single_device_module"
None*L
module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*Œ
ignored_paramsx
*builtins.set[torch.nn.parameter.Parameter]<
torch.nn.parameter.Parameter"torch.nn.parameter.Parameter"builtins.set*‡
	device_idx
(Union[builtins.int,torch._C.device,None]
builtins.int"builtins.int"
torch._C.device"torch._C.device
NoneÜ
_get_device_from_device_id=torch.distributed.fsdp._init_utils._get_device_from_device_id"M
Union[torch._C.device,None]"
torch._C.device"torch._C.device
None*‡
	device_idx
(Union[builtins.int,torch._C.device,None]
builtins.int"builtins.int"
torch._C.device"torch._C.device
None*&
rank
builtins.int"builtins.int¸
_need_to_materialize_module>torch.distributed.fsdp._init_utils._need_to_materialize_module"f
"Tuple[builtins.bool,builtins.bool]
builtins.bool"builtins.bool
builtins.bool"builtins.bool*L
module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*Œ
ignored_paramsx
*builtins.set[torch.nn.parameter.Parameter]<
torch.nn.parameter.Parameter"torch.nn.parameter.Parameter"builtins.set*“
ignored_modules~
,builtins.set[torch.nn.modules.module.Module]@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"builtins.set¸
_materialize_with_param_init_fnBtorch.distributed.fsdp._init_utils._materialize_with_param_init_fn"
None*Q
root_module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*^
param_init_fnK
CallableType[builtins.function]&
builtins.function"builtins.function*“
ignored_modules~
,builtins.set[torch.nn.modules.module.Module]@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"builtins.set³
_materialize_meta_module;torch.distributed.fsdp._init_utils._materialize_meta_module"
Any*Q
root_module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*h
device_from_device_idM
Union[torch._C.device,None]"
torch._C.device"torch._C.device
None*“
ignored_modules~
,builtins.set[torch.nn.modules.module.Module]@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"builtins.setÉ
_get_modules_to_materialize>torch.distributed.fsdp._init_utils._get_modules_to_materialize"€
-builtins.list[torch.nn.modules.module.Module]@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"builtins.list*Q
root_module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*“
ignored_modules~
,builtins.set[torch.nn.modules.module.Module]@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"builtins.set›
_move_module_to_device9torch.distributed.fsdp._init_utils._move_module_to_device"
None*L
module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*Œ
ignored_paramsx
*builtins.set[torch.nn.parameter.Parameter]<
torch.nn.parameter.Parameter"torch.nn.parameter.Parameter"builtins.set*u
ignored_buffers`
"builtins.set[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"builtins.set*h
device_from_device_idM
Union[torch._C.device,None]"
torch._C.device"torch._C.device
NoneÁ
_move_states_to_device9torch.distributed.fsdp._init_utils._move_states_to_device"
None*†
paramsz
+builtins.list[torch.nn.parameter.Parameter]<
torch.nn.parameter.Parameter"torch.nn.parameter.Parameter"builtins.list*o
buffersb
#builtins.list[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"builtins.list*h
device_from_device_idM
Union[torch._C.device,None]"
torch._C.device"torch._C.device
NoneC
_warn_cpu_init1torch.distributed.fsdp._init_utils._warn_cpu_inità
_get_compute_device6torch.distributed.fsdp._init_utils._get_compute_device""
torch._C.device"torch._C.device*L
module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*Œ
ignored_paramsx
*builtins.set[torch.nn.parameter.Parameter]<
torch.nn.parameter.Parameter"torch.nn.parameter.Parameter"builtins.set*h
device_from_device_idM
Union[torch._C.device,None]"
torch._C.device"torch._C.device
None*&
rank
builtins.int"builtins.int­
_sync_module_params_and_buffersBtorch.distributed.fsdp._init_utils._sync_module_params_and_buffers"
None*L
module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*†
paramsz
+builtins.list[torch.nn.parameter.Parameter]<
torch.nn.parameter.Parameter"torch.nn.parameter.Parameter"builtins.list*e
process_groupR
'torch._C._distributed_c10d.ProcessGroup"'torch._C._distributed_c10d.ProcessGroupþ
+_check_module_states_for_sync_module_statesNtorch.distributed.fsdp._init_utils._check_module_states_for_sync_module_states"
None*u
module_statesb
#builtins.list[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"builtins.list¤
_get_orig_params3torch.distributed.fsdp._init_utils._get_orig_params"~
-typing.Iterator[torch.nn.parameter.Parameter]<
torch.nn.parameter.Parameter"torch.nn.parameter.Parameter"typing.Iterator*L
module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*Œ
ignored_paramsx
*builtins.set[torch.nn.parameter.Parameter]<
torch.nn.parameter.Parameter"torch.nn.parameter.Parameter"builtins.set’
_check_orig_params_flattened?torch.distributed.fsdp._init_utils._check_orig_params_flattened"
None*
fsdp_module
Any*Œ
ignored_paramsx
*builtins.set[torch.nn.parameter.Parameter]<
torch.nn.parameter.Parameter"torch.nn.parameter.Parameter"builtins.setÏ
_get_default_comm_hook9torch.distributed.fsdp._init_utils._get_default_comm_hook"
Any*q
sharding_strategyZ
+torch.distributed.fsdp.api.ShardingStrategy"+torch.distributed.fsdp.api.ShardingStrategyÓ
_get_default_comm_hook_state?torch.distributed.fsdp._init_utils._get_default_comm_hook_state"Š
Ctorch.distributed.algorithms._comm_hooks.default_hooks.DefaultState"Ctorch.distributed.algorithms._comm_hooks.default_hooks.DefaultState*e
process_groupR
'torch._C._distributed_c10d.ProcessGroup"'torch._C._distributed_c10d.ProcessGroup*ž
__annotations__2torch.distributed.fsdp._init_utils.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
disttorch.distributed *>
exec_order_utils(torch.distributed.fsdp._exec_order_utils *<
traversal_utils'torch.distributed.fsdp._traversal_utils *A
	fsdp_file2torch.distributed.fsdp.fully_sharded_data_parallel *
nntorch.nn *i
_TORCHDISTX_AVAIL4torch.distributed.fsdp._init_utils._TORCHDISTX_AVAIL
builtins.bool"builtins.bool*J
deferred_init0torch.distributed.fsdp._init_utils.deferred_init
Any*8
fake'torch.distributed.fsdp._init_utils.fake
Any*{
PARAM_BROADCAST_BUCKET_SIZE>torch.distributed.fsdp._init_utils.PARAM_BROADCAST_BUCKET_SIZE
builtins.int"builtins.int*[
FSDP_SYNCED.torch.distributed.fsdp._init_utils.FSDP_SYNCED
builtins.str"builtins.str*­
SHARDING_STRATEGY_MAP8torch.distributed.fsdp._init_utils.SHARDING_STRATEGY_MAPÙ
tbuiltins.dict[torch.distributed.fsdp.api.ShardingStrategy,torch.distributed.fsdp._flat_param.HandleShardingStrategy]Z
+torch.distributed.fsdp.api.ShardingStrategy"+torch.distributed.fsdp.api.ShardingStrategyv
9torch.distributed.fsdp._flat_param.HandleShardingStrategy"9torch.distributed.fsdp._flat_param.HandleShardingStrategy"builtins.dict*…
HYBRID_SHARDING_STRATEGIES=torch.distributed.fsdp._init_utils.HYBRID_SHARDING_STRATEGIES§
:builtins.list[torch.distributed.fsdp.api.ShardingStrategy]Z
+torch.distributed.fsdp.api.ShardingStrategy"+torch.distributed.fsdp.api.ShardingStrategy"builtins.list*Š
#NO_RESHARD_AFTER_FORWARD_STRATEGIESFtorch.distributed.fsdp._init_utils.NO_RESHARD_AFTER_FORWARD_STRATEGIESš
^Tuple[torch.distributed.fsdp.api.ShardingStrategy,torch.distributed.fsdp.api.ShardingStrategy]Z
+torch.distributed.fsdp.api.ShardingStrategy"+torch.distributed.fsdp.api.ShardingStrategyZ
+torch.distributed.fsdp.api.ShardingStrategy"+torch.distributed.fsdp.api.ShardingStrategy