
argparseÚ
ArgumentErrorargparse.ArgumentError"builtins.Exception*ñ
__init__argparse.ArgumentError.__init__"
None*:
self0
argparse.ArgumentError"argparse.ArgumentError*[
argumentM
Union[argparse.Action,None]"
argparse.Action"argparse.Action
None*)
message
builtins.str"builtins.strz27z35z36z37z38z39z310j27j35j36j37j38j39j310rò
argument_name$argparse.ArgumentError.argument_nameD
Union[builtins.str,None]
builtins.str"builtins.str
None*27*35*36*37*38*39*310rd
messageargparse.ArgumentError.message
builtins.str"builtins.str*27*35*36*37*38*39*310Æ
_AttributeHolderargparse._AttributeHolder"builtins.object*ê
_get_kwargs%argparse._AttributeHolder._get_kwargs"{
&builtins.list[Tuple[builtins.str,Any]]B
Tuple[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.list*@
self6
argparse._AttributeHolder"argparse._AttributeHolderz27z35z36z37z38z39z310*Ω
	_get_args#argparse._AttributeHolder._get_args",
builtins.list[Any]
Any"builtins.list*@
self6
argparse._AttributeHolder"argparse._AttributeHolderz27z35z36z37z38z39z310j27j35j36j37j38j39j310Ÿj
_ActionsContainerargparse._ActionsContainer"builtins.object*˜
__init__#argparse._ActionsContainer.__init__"
None*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*a
descriptionP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None*6
prefix_chars$
builtins.unicode"builtins.unicode*
argument_default
Any*:
conflict_handler$
builtins.unicode"builtins.unicodez27*
__init__#argparse._ActionsContainer.__init__"
None*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*U
descriptionD
Union[builtins.str,None]
builtins.str"builtins.str
None*.
prefix_chars
builtins.str"builtins.str*
argument_default
Any*2
conflict_handler
builtins.str"builtins.strz35z36z37z38z39z310*„
register#argparse._ActionsContainer.register"
None*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*7
registry_name$
builtins.unicode"builtins.unicode*
value
Any*
object
Anyz27*
register#argparse._ActionsContainer.register"
None*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*/
registry_name
builtins.str"builtins.str*
value
Any*
object
Anyz35z36z37z38z39z310*Ô
_registry_get(argparse._ActionsContainer._registry_get"
Any*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*7
registry_name$
builtins.unicode"builtins.unicode*
value
Any*
default
Any z27*¸
_registry_get(argparse._ActionsContainer._registry_get"
Any*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*/
registry_name
builtins.str"builtins.str*
value
Any*
default
Any z35z36z37z38z39z310*∑
set_defaults'argparse._ActionsContainer.set_defaults"
None*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*
kwargs
Anyz27z35z36z37z38z39z310*∂
get_default&argparse._ActionsContainer.get_default"
Any*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*.
dest$
builtins.unicode"builtins.unicodez27*√
get_default&argparse._ActionsContainer.get_default"
Any*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*&
dest
builtins.str"builtins.strz35z36z37z38z39z310*¿
add_argument'argparse._ActionsContainer.add_argument""
argparse.Action"argparse.Action*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*7
name_or_flags$
builtins.unicode"builtins.unicode*•
actionñ
-Union[builtins.unicode,Type[argparse.Action]]$
builtins.unicode"builtins.unicode=
Type[argparse.Action]"
argparse.Action"argparse.Action *y
nargsl
$Union[builtins.int,builtins.unicode]
builtins.int"builtins.int$
builtins.unicode"builtins.unicode *
const
Any *
default
Any *´
typeû
XUnion[CallableType[builtins.function],CallableType[builtins.function],argparse.FileType]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function&
argparse.FileType"argparse.FileType *O
choices@
typing.Iterable[argparse._T]
argparse._T"typing.Iterable *.
required
builtins.bool"builtins.bool *\
helpP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None *€
metavarÀ
=Union[builtins.unicode,builtins.tuple[builtins.unicode],None]$
builtins.unicode"builtins.unicodeX
 builtins.tuple[builtins.unicode]$
builtins.unicode"builtins.unicode"builtins.tuple
None *\
destP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None *3
version$
builtins.unicode"builtins.unicode *
kwargs
Anyz27*≤
add_argument'argparse._ActionsContainer.add_argument""
argparse.Action"argparse.Action*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*/
name_or_flags
builtins.str"builtins.str*ô
actionä
)Union[builtins.str,Type[argparse.Action]]
builtins.str"builtins.str=
Type[argparse.Action]"
argparse.Action"argparse.Action *m
nargs`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str *
const
Any *
default
Any *´
typeû
XUnion[CallableType[builtins.function],CallableType[builtins.function],argparse.FileType]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function&
argparse.FileType"argparse.FileType *á
choicesx
(Union[typing.Iterable[argparse._T],None]@
typing.Iterable[argparse._T]
argparse._T"typing.Iterable
None *.
required
builtins.bool"builtins.bool *P
helpD
Union[builtins.str,None]
builtins.str"builtins.str
None *ø
metavarØ
5Union[builtins.str,builtins.tuple[builtins.str],None]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple
None *P
destD
Union[builtins.str,None]
builtins.str"builtins.str
None *+
version
builtins.str"builtins.str *
kwargs
Anyz35z36z37z38z39z310*Ä
add_argument_group-argparse._ActionsContainer.add_argument_group"2
argparse._ArgumentGroup"argparse._ArgumentGroup*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*
args
Any*
kwargs
Anyz27z35z36z37z38z39z310*ì
add_mutually_exclusive_group7argparse._ActionsContainer.add_mutually_exclusive_group"D
 argparse._MutuallyExclusiveGroup" argparse._MutuallyExclusiveGroup*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*
kwargs
Anyz27z35z36z37z38z39z310*–
_add_action&argparse._ActionsContainer._add_action"
argparse._ActionT*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*!
action
argparse._ActionTz27z35z36z37z38z39z310*÷
_remove_action)argparse._ActionsContainer._remove_action"
None*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*.
action"
argparse.Action"argparse.Actionz27z35z36z37z38z39z310*ˇ
_add_container_actions1argparse._ActionsContainer._add_container_actions"
None*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*G
	container8
argparse._ActionsContainer"argparse._ActionsContainerz27z35z36z37z38z39z310*±
_get_positional_kwargs1argparse._ActionsContainer._get_positional_kwargs"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*.
dest$
builtins.unicode"builtins.unicode*
kwargs
Anyz27*æ
_get_positional_kwargs1argparse._ActionsContainer._get_positional_kwargs"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*&
dest
builtins.str"builtins.str*
kwargs
Anyz35z36z37z38z39z310*©
_get_optional_kwargs/argparse._ActionsContainer._get_optional_kwargs"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*
args
Any*
kwargs
Anyz27z35z36z37z38z39z310*ı
_pop_action_class,argparse._ActionsContainer._pop_action_class"=
Type[argparse.Action]"
argparse.Action"argparse.Action*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*
kwargs
Any*}
defaultn
!Union[Type[argparse.Action],None]=
Type[argparse.Action]"
argparse.Action"argparse.Action
None z27z35z36z37z38z39z310*Â
_get_handler'argparse._ActionsContainer._get_handler"K
CallableType[builtins.function]&
builtins.function"builtins.function*B
self8
argparse._ActionsContainer"argparse._ActionsContainerz27z35z36z37z38z39z310*ÿ
_check_conflict*argparse._ActionsContainer._check_conflict"
None*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*.
action"
argparse.Action"argparse.Actionz27z35z36z37z38z39z310*∞
_handle_conflict_error1argparse._ActionsContainer._handle_conflict_error"
NoReturn
*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*.
action"
argparse.Action"argparse.Action*‹
conflicting_actions¬
8typing.Iterable[Tuple[builtins.unicode,argparse.Action]]u
'Tuple[builtins.unicode,argparse.Action]$
builtins.unicode"builtins.unicode"
argparse.Action"argparse.Action"typing.Iterablez27*µ
_handle_conflict_error1argparse._ActionsContainer._handle_conflict_error"
NoReturn
*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*.
action"
argparse.Action"argparse.Action*Ã
conflicting_actions≤
4typing.Iterable[Tuple[builtins.str,argparse.Action]]i
#Tuple[builtins.str,argparse.Action]
builtins.str"builtins.str"
argparse.Action"argparse.Action"typing.Iterablez35z36z37z38z39z310*∞
_handle_conflict_resolve3argparse._ActionsContainer._handle_conflict_resolve"
None*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*.
action"
argparse.Action"argparse.Action*‹
conflicting_actions¬
8typing.Iterable[Tuple[builtins.unicode,argparse.Action]]u
'Tuple[builtins.unicode,argparse.Action]$
builtins.unicode"builtins.unicode"
argparse.Action"argparse.Action"typing.Iterablez27*µ
_handle_conflict_resolve3argparse._ActionsContainer._handle_conflict_resolve"
None*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*.
action"
argparse.Action"argparse.Action*Ã
conflicting_actions≤
4typing.Iterable[Tuple[builtins.str,argparse.Action]]i
#Tuple[builtins.str,argparse.Action]
builtins.str"builtins.str"
argparse.Action"argparse.Action"typing.Iterablez35z36z37z38z39z310j27j35j36j37j38j39j310r∂
description&argparse._ActionsContainer.description{
)Union[builtins.str,builtins.unicode,None]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode
None*27rî
description&argparse._ActionsContainer.descriptionD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310rÔ
prefix_chars'argparse._ActionsContainer.prefix_chars±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"argparse._Text*27rn
prefix_chars'argparse._ActionsContainer.prefix_chars
builtins.str"builtins.str*35*36*37*38*39*310re
argument_default+argparse._ActionsContainer.argument_default
Any*27*35*36*37*38*39*310r˜
conflict_handler+argparse._ActionsContainer.conflict_handler±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"argparse._Text*27rv
conflict_handler+argparse._ActionsContainer.conflict_handler
builtins.str"builtins.str*35*36*37*38*39*310rë
_registries&argparse._ActionsContainer._registries’
Ubuiltins.dict[TypeAlias[Union[builtins.str,builtins.unicode]],builtins.dict[Any,Any]]±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"argparse._Text9
builtins.dict[Any,Any]
Any
Any"builtins.dict"builtins.dict*27rÌ
_registries&argparse._ActionsContainer._registriesú
2builtins.dict[builtins.str,builtins.dict[Any,Any]]
builtins.str"builtins.str9
builtins.dict[Any,Any]
Any
Any"builtins.dict"builtins.dict*35*36*37*38*39*310r°
_actions#argparse._ActionsContainer._actionsS
builtins.list[argparse.Action]"
argparse.Action"argparse.Action"builtins.list*27*35*36*37*38*39*310râ
_option_string_actions1argparse._ActionsContainer._option_string_actions∑
Nbuiltins.dict[TypeAlias[Union[builtins.str,builtins.unicode]],argparse.Action]±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"argparse._Text"
argparse.Action"argparse.Action"builtins.dict*27r‰
_option_string_actions1argparse._ActionsContainer._option_string_actions~
+builtins.dict[builtins.str,argparse.Action]
builtins.str"builtins.str"
argparse.Action"argparse.Action"builtins.dict*35*36*37*38*39*310r≈
_action_groups)argparse._ActionsContainer._action_groupsk
&builtins.list[argparse._ArgumentGroup]2
argparse._ArgumentGroup"argparse._ArgumentGroup"builtins.list*27*35*36*37*38*39*310r˘
_mutually_exclusive_groups5argparse._ActionsContainer._mutually_exclusive_groupsÜ
/builtins.list[argparse._MutuallyExclusiveGroup]D
 argparse._MutuallyExclusiveGroup" argparse._MutuallyExclusiveGroup"builtins.list*27*35*36*37*38*39*310rß
	_defaults$argparse._ActionsContainer._defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*27*35*36*37*38*39*310r∫
_negative_number_matcher3argparse._ActionsContainer._negative_number_matcherL
typing.Pattern[builtins.str]
builtins.str"builtins.str"typing.Pattern*27*35*36*37*38*39*310r«
_has_negative_number_optionals9argparse._ActionsContainer._has_negative_number_optionalsM
builtins.list[builtins.bool]
builtins.bool"builtins.bool"builtins.list*27*35*36*37*38*39*310¬
_FormatterClassargparse._FormatterClass"builtins.object*‰
__call__!argparse._FormatterClass.__call__"0
argparse.HelpFormatter"argparse.HelpFormatter*>
self4
argparse._FormatterClass"argparse._FormatterClass*&
prog
builtins.str"builtins.strz27z35z36z37z38z39z310Xj27j35j36j37j38j39j310´∑
ArgumentParserargparse.ArgumentParser"argparse._AttributeHolder"argparse._ActionsContainer*ˇ
__init__ argparse.ArgumentParser.__init__"
None*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*\
progP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None *]
usageP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None *c
descriptionP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None *^
epilogP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None *~
parentso
(typing.Sequence[argparse.ArgumentParser]2
argparse.ArgumentParser"argparse.ArgumentParser"typing.Sequence *K
formatter_class4
argparse._FormatterClass"argparse._FormatterClass *8
prefix_chars$
builtins.unicode"builtins.unicode *m
fromfile_prefix_charsP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None *
argument_default
Any *<
conflict_handler$
builtins.unicode"builtins.unicode *.
add_help
builtins.bool"builtins.bool z27*Û
__init__ argparse.ArgumentParser.__init__"
None*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*P
progD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
usageD
Union[builtins.str,None]
builtins.str"builtins.str
None *W
descriptionD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
epilogD
Union[builtins.str,None]
builtins.str"builtins.str
None *~
parentso
(typing.Sequence[argparse.ArgumentParser]2
argparse.ArgumentParser"argparse.ArgumentParser"typing.Sequence *K
formatter_class4
argparse._FormatterClass"argparse._FormatterClass *0
prefix_chars
builtins.str"builtins.str *a
fromfile_prefix_charsD
Union[builtins.str,None]
builtins.str"builtins.str
None *
argument_default
Any *4
conflict_handler
builtins.str"builtins.str *.
add_help
builtins.bool"builtins.bool *2
allow_abbrev
builtins.bool"builtins.bool z35z36z37z38*°
__init__ argparse.ArgumentParser.__init__"
None*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*P
progD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
usageD
Union[builtins.str,None]
builtins.str"builtins.str
None *W
descriptionD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
epilogD
Union[builtins.str,None]
builtins.str"builtins.str
None *~
parentso
(typing.Sequence[argparse.ArgumentParser]2
argparse.ArgumentParser"argparse.ArgumentParser"typing.Sequence *K
formatter_class4
argparse._FormatterClass"argparse._FormatterClass *0
prefix_chars
builtins.str"builtins.str *a
fromfile_prefix_charsD
Union[builtins.str,None]
builtins.str"builtins.str
None *
argument_default
Any *4
conflict_handler
builtins.str"builtins.str *.
add_help
builtins.bool"builtins.bool *2
allow_abbrev
builtins.bool"builtins.bool *3
exit_on_error
builtins.bool"builtins.bool z39z310*é
add_subparsers&argparse.ArgumentParser.add_subparsers"8
argparse._SubParsersAction"argparse._SubParsersAction*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*1
title$
builtins.unicode"builtins.unicode *c
descriptionP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None *0
prog$
builtins.unicode"builtins.unicode *i
parser_classU
Type[argparse.ArgumentParser]2
argparse.ArgumentParser"argparse.ArgumentParser *K
action=
Type[argparse.Action]"
argparse.Action"argparse.Action *9
option_string$
builtins.unicode"builtins.unicode *\
destP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None *\
helpP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None *_
metavarP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None z27* 
add_subparsers&argparse.ArgumentParser.add_subparsers"8
argparse._SubParsersAction"argparse._SubParsersAction*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*)
title
builtins.str"builtins.str *W
descriptionD
Union[builtins.str,None]
builtins.str"builtins.str
None *(
prog
builtins.str"builtins.str *i
parser_classU
Type[argparse.ArgumentParser]2
argparse.ArgumentParser"argparse.ArgumentParser *K
action=
Type[argparse.Action]"
argparse.Action"argparse.Action *1
option_string
builtins.str"builtins.str *P
destD
Union[builtins.str,None]
builtins.str"builtins.str
None *P
helpD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
metavarD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36*É
add_subparsers&argparse.ArgumentParser.add_subparsers"8
argparse._SubParsersAction"argparse._SubParsersAction*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*)
title
builtins.str"builtins.str *W
descriptionD
Union[builtins.str,None]
builtins.str"builtins.str
None *(
prog
builtins.str"builtins.str *i
parser_classU
Type[argparse.ArgumentParser]2
argparse.ArgumentParser"argparse.ArgumentParser *K
action=
Type[argparse.Action]"
argparse.Action"argparse.Action *1
option_string
builtins.str"builtins.str *P
destD
Union[builtins.str,None]
builtins.str"builtins.str
None *.
required
builtins.bool"builtins.bool *P
helpD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
metavarD
Union[builtins.str,None]
builtins.str"builtins.str
None z37z38z39z310*õ
print_usage#argparse.ArgumentParser.print_usage"
None*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*Å
fileu
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None z27z35z36z37z38z39z310*ô

print_help"argparse.ArgumentParser.print_help"
None*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*Å
fileu
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None z27z35z36z37z38z39z310*≠
format_usage$argparse.ArgumentParser.format_usage"
builtins.str"builtins.str*<
self2
argparse.ArgumentParser"argparse.ArgumentParserz27z35z36z37z38z39z310*´
format_help#argparse.ArgumentParser.format_help"
builtins.str"builtins.str*<
self2
argparse.ArgumentParser"argparse.ArgumentParserz27z35z36z37z38z39z310*¿
parse_known_args(argparse.ArgumentParser.parse_known_args"Ø
5Tuple[argparse.Namespace,builtins.list[builtins.str]](
argparse.Namespace"argparse.NamespaceJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*§
argsó
-Union[typing.Sequence[builtins.unicode],None]Z
!typing.Sequence[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Sequence
None *g
	namespaceV
Union[argparse.Namespace,None](
argparse.Namespace"argparse.Namespace
None z27*≈
parse_known_args(argparse.ArgumentParser.parse_known_args"Ø
5Tuple[argparse.Namespace,builtins.list[builtins.str]](
argparse.Namespace"argparse.NamespaceJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*î
argsá
)Union[typing.Sequence[builtins.str],None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
None *g
	namespaceV
Union[argparse.Namespace,None](
argparse.Namespace"argparse.Namespace
None z35z36z37z38z39z310*é
convert_arg_line_to_args0argparse.ArgumentParser.convert_arg_line_to_args"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*2
arg_line$
builtins.unicode"builtins.unicodez27*õ
convert_arg_line_to_args0argparse.ArgumentParser.convert_arg_line_to_args"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*<
self2
argparse.ArgumentParser"argparse.ArgumentParser**
arg_line
builtins.str"builtins.strz35z36z37z38z39z310*Å
exitargparse.ArgumentParser.exit"
NoReturn
*<
self2
argparse.ArgumentParser"argparse.ArgumentParser**
status
builtins.int"builtins.int *_
messageP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None z27*ä
exitargparse.ArgumentParser.exit"
NoReturn
*<
self2
argparse.ArgumentParser"argparse.ArgumentParser**
status
builtins.int"builtins.int *S
messageD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39z310*©
errorargparse.ArgumentParser.error"
NoReturn
*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*1
message$
builtins.unicode"builtins.unicodez27*∂
errorargparse.ArgumentParser.error"
NoReturn
*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*)
message
builtins.str"builtins.strz35z36z37z38z39z310*ˆ
_get_optional_actions-argparse.ArgumentParser._get_optional_actions"S
builtins.list[argparse.Action]"
argparse.Action"argparse.Action"builtins.list*<
self2
argparse.ArgumentParser"argparse.ArgumentParserz27z35z36z37z38z39z310*˙
_get_positional_actions/argparse.ArgumentParser._get_positional_actions"S
builtins.list[argparse.Action]"
argparse.Action"argparse.Action"builtins.list*<
self2
argparse.ArgumentParser"argparse.ArgumentParserz27z35z36z37z38z39z310*‘
_parse_known_args)argparse.ArgumentParser._parse_known_args"Ø
5Tuple[argparse.Namespace,builtins.list[builtins.str]](
argparse.Namespace"argparse.NamespaceJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*g
arg_stringsV
builtins.list[builtins.unicode]$
builtins.unicode"builtins.unicode"builtins.list*7
	namespace(
argparse.Namespace"argparse.Namespacez27*›
_parse_known_args)argparse.ArgumentParser._parse_known_args"Ø
5Tuple[argparse.Namespace,builtins.list[builtins.str]](
argparse.Namespace"argparse.NamespaceJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*[
arg_stringsJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*7
	namespace(
argparse.Namespace"argparse.Namespacez35z36z37z38z39z310*…
_read_args_from_files-argparse.ArgumentParser._read_args_from_files"V
builtins.list[builtins.unicode]$
builtins.unicode"builtins.unicode"builtins.list*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*g
arg_stringsV
builtins.list[builtins.unicode]$
builtins.unicode"builtins.unicode"builtins.listz27*∆
_read_args_from_files-argparse.ArgumentParser._read_args_from_files"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*[
arg_stringsJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listz35z36z37z38z39z310*â
_match_argument'argparse.ArgumentParser._match_argument"
builtins.int"builtins.int*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*.
action"
argparse.Action"argparse.Action*=
arg_strings_pattern$
builtins.unicode"builtins.unicodez27*ñ
_match_argument'argparse.ArgumentParser._match_argument"
builtins.int"builtins.int*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*.
action"
argparse.Action"argparse.Action*5
arg_strings_pattern
builtins.str"builtins.strz35z36z37z38z39z310*ˇ
_match_arguments_partial0argparse.ArgumentParser._match_arguments_partial"J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*d
actionsW
 typing.Sequence[argparse.Action]"
argparse.Action"argparse.Action"typing.Sequence*=
arg_strings_pattern$
builtins.unicode"builtins.unicodez27*å
_match_arguments_partial0argparse.ArgumentParser._match_arguments_partial"J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*d
actionsW
 typing.Sequence[argparse.Action]"
argparse.Action"argparse.Action"typing.Sequence*5
arg_strings_pattern
builtins.str"builtins.strz35z36z37z38z39z310*Ω
_parse_optional'argparse.ArgumentParser._parse_optional"à
\Union[Tuple[Union[argparse.Action,None],builtins.unicode,Union[builtins.unicode,None]],None]õ
PTuple[Union[argparse.Action,None],builtins.unicode,Union[builtins.unicode,None]]M
Union[argparse.Action,None]"
argparse.Action"argparse.Action
None$
builtins.unicode"builtins.unicodeP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None
None*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*4

arg_string$
builtins.unicode"builtins.unicodez27*¶
_parse_optional'argparse.ArgumentParser._parse_optional"‰
TUnion[Tuple[Union[argparse.Action,None],builtins.str,Union[builtins.str,None]],None]ˇ
HTuple[Union[argparse.Action,None],builtins.str,Union[builtins.str,None]]M
Union[argparse.Action,None]"
argparse.Action"argparse.Action
None
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
None
None*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*,

arg_string
builtins.str"builtins.strz35z36z37z38z39z310*â
_get_option_tuples*argparse.ArgumentParser._get_option_tuples"À
Sbuiltins.list[Tuple[argparse.Action,builtins.unicode,Union[builtins.unicode,None]]]‰
DTuple[argparse.Action,builtins.unicode,Union[builtins.unicode,None]]"
argparse.Action"argparse.Action$
builtins.unicode"builtins.unicodeP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None"builtins.list*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*7
option_string$
builtins.unicode"builtins.unicodez27*Ú
_get_option_tuples*argparse.ArgumentParser._get_option_tuples"ß
Kbuiltins.list[Tuple[argparse.Action,builtins.str,Union[builtins.str,None]]]»
<Tuple[argparse.Action,builtins.str,Union[builtins.str,None]]"
argparse.Action"argparse.Action
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
None"builtins.list*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*/
option_string
builtins.str"builtins.strz35z36z37z38z39z310*Ê
_get_nargs_pattern*argparse.ArgumentParser._get_nargs_pattern"±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"argparse._Text*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*.
action"
argparse.Action"argparse.Actionz27*Â
_get_nargs_pattern*argparse.ArgumentParser._get_nargs_pattern"
builtins.str"builtins.str*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*.
action"
argparse.Action"argparse.Actionz35z36z37z38z39z310*ñ
_get_values#argparse.ArgumentParser._get_values"
Any*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*.
action"
argparse.Action"argparse.Action*g
arg_stringsV
builtins.list[builtins.unicode]$
builtins.unicode"builtins.unicode"builtins.listz27*ü
_get_values#argparse.ArgumentParser._get_values"
Any*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*.
action"
argparse.Action"argparse.Action*[
arg_stringsJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listz35z36z37z38z39z310*·

_get_value"argparse.ArgumentParser._get_value"
Any*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*.
action"
argparse.Action"argparse.Action*4

arg_string$
builtins.unicode"builtins.unicodez27*Ó

_get_value"argparse.ArgumentParser._get_value"
Any*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*.
action"
argparse.Action"argparse.Action*,

arg_string
builtins.str"builtins.strz35z36z37z38z39z310*›
_check_value$argparse.ArgumentParser._check_value"
None*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*.
action"
argparse.Action"argparse.Action*
value
Anyz27z35z36z37z38z39z310*≈
_get_formatter&argparse.ArgumentParser._get_formatter"0
argparse.HelpFormatter"argparse.HelpFormatter*<
self2
argparse.ArgumentParser"argparse.ArgumentParserz27z35z36z37z38z39z310*Ã
_print_message&argparse.ArgumentParser._print_message"
None*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*)
message
builtins.str"builtins.str*Å
fileu
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None z27z35z36z37z38z39z310*ø
parse_intermixed_args-argparse.ArgumentParser.parse_intermixed_args"(
argparse.Namespace"argparse.Namespace*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*î
argsá
)Union[typing.Sequence[builtins.str],None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
None *g
	namespaceV
Union[argparse.Namespace,None](
argparse.Namespace"argparse.Namespace
None z37z38z39z310*”
parse_known_intermixed_args3argparse.ArgumentParser.parse_known_intermixed_args"Ø
5Tuple[argparse.Namespace,builtins.list[builtins.str]](
argparse.Namespace"argparse.NamespaceJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*î
argsá
)Union[typing.Sequence[builtins.str],None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
None *g
	namespaceV
Union[argparse.Namespace,None](
argparse.Namespace"argparse.Namespace
None z37z38z39z3102≤

parse_args"argparse.ArgumentParser.parse_argsÕ

parse_args"argparse.ArgumentParser.parse_args"(
argparse.Namespace"argparse.Namespace*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*§
argsó
-Union[typing.Sequence[builtins.unicode],None]Z
!typing.Sequence[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Sequence
None 0:overloadX‰

parse_args"argparse.ArgumentParser.parse_args"(
argparse.Namespace"argparse.Namespace*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*¢
argsó
-Union[typing.Sequence[builtins.unicode],None]Z
!typing.Sequence[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Sequence
None*
	namespace
None0:overloadX“

parse_args"argparse.ArgumentParser.parse_args"
argparse._N*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*¢
argsó
-Union[typing.Sequence[builtins.unicode],None]Z
!typing.Sequence[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Sequence
None*
	namespace
argparse._N0:overloadXø

parse_args"argparse.ArgumentParser.parse_args"(
argparse.Namespace"argparse.Namespace*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*
	namespace
None0:overloadX≠

parse_args"argparse.ArgumentParser.parse_args"
argparse._N*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*
	namespace
argparse._N0:overloadX"272ó

parse_args"argparse.ArgumentParser.parse_argsΩ

parse_args"argparse.ArgumentParser.parse_args"(
argparse.Namespace"argparse.Namespace*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*î
argsá
)Union[typing.Sequence[builtins.str],None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
None 0:overloadX‘

parse_args"argparse.ArgumentParser.parse_args"(
argparse.Namespace"argparse.Namespace*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*í
argsá
)Union[typing.Sequence[builtins.str],None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
None*
	namespace
None0:overloadX¬

parse_args"argparse.ArgumentParser.parse_args"
argparse._N*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*í
argsá
)Union[typing.Sequence[builtins.str],None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
None*
	namespace
argparse._N0:overloadXø

parse_args"argparse.ArgumentParser.parse_args"(
argparse.Namespace"argparse.Namespace*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*
	namespace
None0:overloadX≠

parse_args"argparse.ArgumentParser.parse_args"
argparse._N*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*
	namespace
argparse._N0:overloadX"35"36"37"38"39"310j27j35j36j37j38j39j310r‹
progargparse.ArgumentParser.prog±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"argparse._Text*27r[
progargparse.ArgumentParser.prog
builtins.str"builtins.str*35*36*37*38*39*310rß
usageargparse.ArgumentParser.usage{
)Union[builtins.str,builtins.unicode,None]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode
None*27rÖ
usageargparse.ArgumentParser.usageD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310r©
epilogargparse.ArgumentParser.epilog{
)Union[builtins.str,builtins.unicode,None]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode
None*27rá
epilogargparse.ArgumentParser.epilogD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310rç
formatter_class'argparse.ArgumentParser.formatter_class4
argparse._FormatterClass"argparse._FormatterClass*27*35*36*37*38*39*310r«
fromfile_prefix_chars-argparse.ArgumentParser.fromfile_prefix_chars{
)Union[builtins.str,builtins.unicode,None]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode
None*27r•
fromfile_prefix_chars-argparse.ArgumentParser.fromfile_prefix_charsD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310ri
add_help argparse.ArgumentParser.add_help
builtins.bool"builtins.bool*27*35*36*37*38*39*310rÖ
_positionals$argparse.ArgumentParser._positionals2
argparse._ArgumentGroup"argparse._ArgumentGroup*27*35*36*37*38*39*310rÅ

_optionals"argparse.ArgumentParser._optionals2
argparse._ArgumentGroup"argparse._ArgumentGroup*27*35*36*37*38*39*310r∂
_subparsers#argparse.ArgumentParser._subparserse
#Union[argparse._ArgumentGroup,None]2
argparse._ArgumentGroup"argparse._ArgumentGroup
None*27*35*36*37*38*39*310rm
allow_abbrev$argparse.ArgumentParser.allow_abbrev
builtins.bool"builtins.bool*35*36*37*38*39*310–~
HelpFormatterargparse.HelpFormatter"builtins.object*Â
__init__argparse.HelpFormatter.__init__"
None*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
prog$
builtins.unicode"builtins.unicode*4
indent_increment
builtins.int"builtins.int *5
max_help_position
builtins.int"builtins.int *Q
widthD
Union[builtins.int,None]
builtins.int"builtins.int
None z27*Ú
__init__argparse.HelpFormatter.__init__"
None*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*&
prog
builtins.str"builtins.str*4
indent_increment
builtins.int"builtins.int *5
max_help_position
builtins.int"builtins.int *Q
widthD
Union[builtins.int,None]
builtins.int"builtins.int
None z35z36z37z38z39z310*å
_indentargparse.HelpFormatter._indent"
None*:
self0
argparse.HelpFormatter"argparse.HelpFormatterz27z35z36z37z38z39z310*å
_dedentargparse.HelpFormatter._dedent"
None*:
self0
argparse.HelpFormatter"argparse.HelpFormatterz27z35z36z37z38z39z310*£
	_add_item argparse.HelpFormatter._add_item"
None*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*U
funcK
CallableType[builtins.function]&
builtins.function"builtins.function*:
args0
typing.Iterable[Any]
Any"typing.Iterablez27z35z36z37z38z39z310*ﬁ
start_section$argparse.HelpFormatter.start_section"
None*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*]
headingP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
Nonez27*Á
start_section$argparse.HelpFormatter.start_section"
None*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*Q
headingD
Union[builtins.str,None]
builtins.str"builtins.str
Nonez35z36z37z38z39z310*î
end_section"argparse.HelpFormatter.end_section"
None*:
self0
argparse.HelpFormatter"argparse.HelpFormatterz27z35z36z37z38z39z310*—
add_textargparse.HelpFormatter.add_text"
None*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*Z
textP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
Nonez27*⁄
add_textargparse.HelpFormatter.add_text"
None*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*N
textD
Union[builtins.str,None]
builtins.str"builtins.str
Nonez35z36z37z38z39z310*ó
	add_usage argparse.HelpFormatter.add_usage"
None*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*[
usageP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None*d
actionsW
 typing.Iterable[argparse.Action]"
argparse.Action"argparse.Action"typing.Iterable*{
groupso
(typing.Iterable[argparse._ArgumentGroup]2
argparse._ArgumentGroup"argparse._ArgumentGroup"typing.Iterable*^
prefixP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None z27*î
	add_usage argparse.HelpFormatter.add_usage"
None*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*O
usageD
Union[builtins.str,None]
builtins.str"builtins.str
None*d
actionsW
 typing.Iterable[argparse.Action]"
argparse.Action"argparse.Action"typing.Iterable*{
groupso
(typing.Iterable[argparse._ArgumentGroup]2
argparse._ArgumentGroup"argparse._ArgumentGroup"typing.Iterable*R
prefixD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39z310*∆
add_argument#argparse.HelpFormatter.add_argument"
None*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
action"
argparse.Action"argparse.Actionz27z35z36z37z38z39z310*˛
add_arguments$argparse.HelpFormatter.add_arguments"
None*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*d
actionsW
 typing.Iterable[argparse.Action]"
argparse.Action"argparse.Action"typing.Iterablez27z35z36z37z38z39z310*•
format_help"argparse.HelpFormatter.format_help"±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"argparse._Text*:
self0
argparse.HelpFormatter"argparse.HelpFormatterz27*§
format_help"argparse.HelpFormatter.format_help"
builtins.str"builtins.str*:
self0
argparse.HelpFormatter"argparse.HelpFormatterz35z36z37z38z39z310*ì
_join_parts"argparse.HelpFormatter._join_parts"±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"argparse._Text*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*l
part_stringsZ
!typing.Iterable[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Iterablez27*Ü
_join_parts"argparse.HelpFormatter._join_parts"
builtins.str"builtins.str*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*`
part_stringsN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterablez35z36z37z38z39z310*õ
_format_usage$argparse.HelpFormatter._format_usage"±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"argparse._Text*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*/
usage$
builtins.unicode"builtins.unicode*d
actionsW
 typing.Iterable[argparse.Action]"
argparse.Action"argparse.Action"typing.Iterable*{
groupso
(typing.Iterable[argparse._ArgumentGroup]2
argparse._ArgumentGroup"argparse._ArgumentGroup"typing.Iterable*\
prefixP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
Nonez27*Ü
_format_usage$argparse.HelpFormatter._format_usage"
builtins.str"builtins.str*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*'
usage
builtins.str"builtins.str*d
actionsW
 typing.Iterable[argparse.Action]"
argparse.Action"argparse.Action"typing.Iterable*{
groupso
(typing.Iterable[argparse._ArgumentGroup]2
argparse._ArgumentGroup"argparse._ArgumentGroup"typing.Iterable*P
prefixD
Union[builtins.str,None]
builtins.str"builtins.str
Nonez35z36z37z38z39z310*ú
_format_actions_usage,argparse.HelpFormatter._format_actions_usage"±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"argparse._Text*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*d
actionsW
 typing.Iterable[argparse.Action]"
argparse.Action"argparse.Action"typing.Iterable*{
groupso
(typing.Iterable[argparse._ArgumentGroup]2
argparse._ArgumentGroup"argparse._ArgumentGroup"typing.Iterablez27*õ
_format_actions_usage,argparse.HelpFormatter._format_actions_usage"
builtins.str"builtins.str*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*d
actionsW
 typing.Iterable[argparse.Action]"
argparse.Action"argparse.Action"typing.Iterable*{
groupso
(typing.Iterable[argparse._ArgumentGroup]2
argparse._ArgumentGroup"argparse._ArgumentGroup"typing.Iterablez35z36z37z38z39z310*◊
_format_text#argparse.HelpFormatter._format_text"±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"argparse._Text*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
text$
builtins.unicode"builtins.unicodez27*Œ
_format_text#argparse.HelpFormatter._format_text"
builtins.str"builtins.str*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*&
text
builtins.str"builtins.strz35z36z37z38z39z310*€
_format_action%argparse.HelpFormatter._format_action"±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"argparse._Text*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
action"
argparse.Action"argparse.Actionz27*⁄
_format_action%argparse.HelpFormatter._format_action"
builtins.str"builtins.str*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
action"
argparse.Action"argparse.Actionz35z36z37z38z39z310*Ò
_format_action_invocation0argparse.HelpFormatter._format_action_invocation"±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"argparse._Text*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
action"
argparse.Action"argparse.Actionz27*
_format_action_invocation0argparse.HelpFormatter._format_action_invocation"
builtins.str"builtins.str*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
action"
argparse.Action"argparse.Actionz35z36z37z38z39z310*∑
_metavar_formatter)argparse.HelpFormatter._metavar_formatter"K
CallableType[builtins.function]&
builtins.function"builtins.function*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
action"
argparse.Action"argparse.Action*9
default_metavar$
builtins.unicode"builtins.unicodez27*ƒ
_metavar_formatter)argparse.HelpFormatter._metavar_formatter"K
CallableType[builtins.function]&
builtins.function"builtins.function*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
action"
argparse.Action"argparse.Action*1
default_metavar
builtins.str"builtins.strz35z36z37z38z39z310*í
_format_args#argparse.HelpFormatter._format_args"±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"argparse._Text*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
action"
argparse.Action"argparse.Action*9
default_metavar$
builtins.unicode"builtins.unicodez27*â
_format_args#argparse.HelpFormatter._format_args"
builtins.str"builtins.str*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
action"
argparse.Action"argparse.Action*1
default_metavar
builtins.str"builtins.strz35z36z37z38z39z310*◊
_expand_help#argparse.HelpFormatter._expand_help"±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"argparse._Text*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
action"
argparse.Action"argparse.Actionz27*÷
_expand_help#argparse.HelpFormatter._expand_help"
builtins.str"builtins.str*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
action"
argparse.Action"argparse.Actionz35z36z37z38z39z310*œ
_iter_indented_subactions0argparse.HelpFormatter._iter_indented_subactions"w
+typing.Generator[argparse.Action,None,None]"
argparse.Action"argparse.Action
None
None"typing.Generator*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
action"
argparse.Action"argparse.Actionz27z35z36z37z38z39z310*“
_split_lines#argparse.HelpFormatter._split_lines"É
>builtins.list[TypeAlias[Union[builtins.str,builtins.unicode]]]±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"argparse._Text"builtins.list*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
text$
builtins.unicode"builtins.unicode*'
width
builtins.int"builtins.intz27*•
_split_lines#argparse.HelpFormatter._split_lines"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*&
text
builtins.str"builtins.str*'
width
builtins.int"builtins.intz35z36z37z38z39z310*Æ

_fill_text!argparse.HelpFormatter._fill_text"±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"argparse._Text*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
text$
builtins.unicode"builtins.unicode*'
width
builtins.int"builtins.int*0
indent$
builtins.unicode"builtins.unicodez27*ù

_fill_text!argparse.HelpFormatter._fill_text"
builtins.str"builtins.str*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*&
text
builtins.str"builtins.str*'
width
builtins.int"builtins.int*(
indent
builtins.str"builtins.strz35z36z37z38z39z310*®
_get_help_string'argparse.HelpFormatter._get_help_string"{
)Union[builtins.str,builtins.unicode,None]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode
None*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
action"
argparse.Action"argparse.Actionz27*Ü
_get_help_string'argparse.HelpFormatter._get_help_string"D
Union[builtins.str,None]
builtins.str"builtins.str
None*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
action"
argparse.Action"argparse.Actionz35z36z37z38z39z310*Å
!_get_default_metavar_for_optional8argparse.HelpFormatter._get_default_metavar_for_optional"±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"argparse._Text*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
action"
argparse.Action"argparse.Actionz27*Ä
!_get_default_metavar_for_optional8argparse.HelpFormatter._get_default_metavar_for_optional"
builtins.str"builtins.str*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
action"
argparse.Action"argparse.Actionz35z36z37z38z39z310*Ö
#_get_default_metavar_for_positional:argparse.HelpFormatter._get_default_metavar_for_positional"±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"argparse._Text*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
action"
argparse.Action"argparse.Actionz27*Ñ
#_get_default_metavar_for_positional:argparse.HelpFormatter._get_default_metavar_for_positional"
builtins.str"builtins.str*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
action"
argparse.Action"argparse.Actionz35z36z37z38z39z310j27j35j36j37j38j39j310r›
_progargparse.HelpFormatter._prog±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"argparse._Text*27r\
_progargparse.HelpFormatter._prog
builtins.str"builtins.str*35*36*37*38*39*310rx
_indent_increment(argparse.HelpFormatter._indent_increment
builtins.int"builtins.int*27*35*36*37*38*39*310rz
_max_help_position)argparse.HelpFormatter._max_help_position
builtins.int"builtins.int*27*35*36*37*38*39*310rb
_widthargparse.HelpFormatter._width
builtins.int"builtins.int*27*35*36*37*38*39*310rt
_current_indent&argparse.HelpFormatter._current_indent
builtins.int"builtins.int*27*35*36*37*38*39*310rb
_levelargparse.HelpFormatter._level
builtins.int"builtins.int*27*35*36*37*38*39*310rz
_action_max_length)argparse.HelpFormatter._action_max_length
builtins.int"builtins.int*27*35*36*37*38*39*310r[
_root_section$argparse.HelpFormatter._root_section
Any*27*35*36*37*38*39*310ra
_current_section'argparse.HelpFormatter._current_section
Any*27*35*36*37*38*39*310r¨
_whitespace_matcher*argparse.HelpFormatter._whitespace_matcherL
typing.Pattern[builtins.str]
builtins.str"builtins.str"typing.Pattern*27*35*36*37*38*39*310r¨
_long_break_matcher*argparse.HelpFormatter._long_break_matcherL
typing.Pattern[builtins.str]
builtins.str"builtins.str"typing.Pattern*27*35*36*37*38*39*310r`
_Sectionargparse.HelpFormatter._Section
	Type[Any]
Any*27*35*36*37*38*39*310x
RawDescriptionHelpFormatter$argparse.RawDescriptionHelpFormatter"argparse.HelpFormatterj27j35j36j37j38j39j310x
RawTextHelpFormatterargparse.RawTextHelpFormatter"$argparse.RawDescriptionHelpFormatterj27j35j36j37j38j39j310|
ArgumentDefaultsHelpFormatter&argparse.ArgumentDefaultsHelpFormatter"argparse.HelpFormatterj27j35j36j37j38j39j310ˆ4
Actionargparse.Action"argparse._AttributeHolder*ı

__init__argparse.Action.__init__"
None*,
self"
argparse.Action"argparse.Action*n
option_stringsZ
!typing.Sequence[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Sequence*.
dest$
builtins.unicode"builtins.unicode*à
nargs{
)Union[builtins.int,builtins.unicode,None]
builtins.int"builtins.int$
builtins.unicode"builtins.unicode
None *C
const6
Union[argparse._T,None]
argparse._T
None *p
defaulta
$Union[argparse._T,builtins.str,None]
argparse._T
builtins.str"builtins.str
None *∫
type≠
]Union[CallableType[builtins.function],CallableType[builtins.function],argparse.FileType,None]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function&
argparse.FileType"argparse.FileType
None *á
choicesx
(Union[typing.Iterable[argparse._T],None]@
typing.Iterable[argparse._T]
argparse._T"typing.Iterable
None *.
required
builtins.bool"builtins.bool *\
helpP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None *€
metavarÀ
=Union[builtins.unicode,builtins.tuple[builtins.unicode],None]$
builtins.unicode"builtins.unicodeX
 builtins.tuple[builtins.unicode]$
builtins.unicode"builtins.unicode"builtins.tuple
None z27*¡

__init__argparse.Action.__init__"
None*,
self"
argparse.Action"argparse.Action*b
option_stringsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*&
dest
builtins.str"builtins.str*|
nargso
%Union[builtins.int,builtins.str,None]
builtins.int"builtins.int
builtins.str"builtins.str
None *C
const6
Union[argparse._T,None]
argparse._T
None *p
defaulta
$Union[argparse._T,builtins.str,None]
argparse._T
builtins.str"builtins.str
None *∫
type≠
]Union[CallableType[builtins.function],CallableType[builtins.function],argparse.FileType,None]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function&
argparse.FileType"argparse.FileType
None *á
choicesx
(Union[typing.Iterable[argparse._T],None]@
typing.Iterable[argparse._T]
argparse._T"typing.Iterable
None *.
required
builtins.bool"builtins.bool *P
helpD
Union[builtins.str,None]
builtins.str"builtins.str
None *ø
metavarØ
5Union[builtins.str,builtins.tuple[builtins.str],None]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple
None z35z36z37z38z39z310*Á
__call__argparse.Action.__call__"
None*,
self"
argparse.Action"argparse.Action*>
parser2
argparse.ArgumentParser"argparse.ArgumentParser*7
	namespace(
argparse.Namespace"argparse.Namespace*§
valuesó
1Union[builtins.unicode,typing.Sequence[Any],None]$
builtins.unicode"builtins.unicode0
typing.Sequence[Any]
Any"typing.Sequence
None*e
option_stringP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None z27*‰
__call__argparse.Action.__call__"
None*,
self"
argparse.Action"argparse.Action*>
parser2
argparse.ArgumentParser"argparse.ArgumentParser*7
	namespace(
argparse.Namespace"argparse.Namespace*ò
valuesã
-Union[builtins.str,typing.Sequence[Any],None]
builtins.str"builtins.str0
typing.Sequence[Any]
Any"typing.Sequence
None*Y
option_stringD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39z310*Å
format_usageargparse.Action.format_usage"
builtins.str"builtins.str*,
self"
argparse.Action"argparse.Actionz39z310j27j35j36j37j38j39j310ræ
option_stringsargparse.Action.option_stringsá
@typing.Sequence[TypeAlias[Union[builtins.str,builtins.unicode]]]±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"argparse._Text"typing.Sequence*27rô
option_stringsargparse.Action.option_stringsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*35*36*37*38*39*310r‘
destargparse.Action.dest±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"argparse._Text*27rS
destargparse.Action.dest
builtins.str"builtins.str*35*36*37*38*39*310rÀ
nargsargparse.Action.nargs¶
6Union[builtins.int,builtins.str,builtins.unicode,None]
builtins.int"builtins.int
builtins.str"builtins.str$
builtins.unicode"builtins.unicode
None*27r®
nargsargparse.Action.nargso
%Union[builtins.int,builtins.str,None]
builtins.int"builtins.int
builtins.str"builtins.str
None*35*36*37*38*39*310rD
constargparse.Action.const
Any*27*35*36*37*38*39*310rH
defaultargparse.Action.default
Any*27*35*36*37*38*39*310r¸
typeargparse.Action.type¿
=Union[CallableType[builtins.function],argparse.FileType,None]K
CallableType[builtins.function]&
builtins.function"builtins.function&
argparse.FileType"argparse.FileType
None*27*35*36*37*38*39*310r°
choicesargparse.Action.choices`
 Union[typing.Iterable[Any],None]0
typing.Iterable[Any]
Any"typing.Iterable
None*27*35*36*37*38*39*310ra
requiredargparse.Action.required
builtins.bool"builtins.bool*27*35*36*37*38*39*310rù
helpargparse.Action.help{
)Union[builtins.str,builtins.unicode,None]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode
None*27r{
helpargparse.Action.helpD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310rÏ
metavarargparse.Action.metavar√
iUnion[builtins.str,builtins.unicode,builtins.tuple[TypeAlias[Union[builtins.str,builtins.unicode]]],None]
builtins.str"builtins.str$
builtins.unicode"builtins.unicodeÖ
?builtins.tuple[TypeAlias[Union[builtins.str,builtins.unicode]]]±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"argparse._Text"builtins.tuple
None*27rÌ
metavarargparse.Action.metavarØ
5Union[builtins.str,builtins.tuple[builtins.str],None]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple
None*35*36*37*38*39*310Î
	Namespaceargparse.Namespace"argparse._AttributeHolder*ó
__init__argparse.Namespace.__init__"
None*2
self(
argparse.Namespace"argparse.Namespace*
kwargs
Anyz27z35z36z37z38z39z310*ö
__getattr__argparse.Namespace.__getattr__"
Any*0
self(
argparse.Namespace"argparse.Namespace*,
name$
builtins.unicode"builtins.unicodez27*ß
__getattr__argparse.Namespace.__getattr__"
Any*0
self(
argparse.Namespace"argparse.Namespace*$
name
builtins.str"builtins.strz35z36z37z38z39z310*≠
__setattr__argparse.Namespace.__setattr__"
None*0
self(
argparse.Namespace"argparse.Namespace*,
name$
builtins.unicode"builtins.unicode*
value
Anyz27*∫
__setattr__argparse.Namespace.__setattr__"
None*0
self(
argparse.Namespace"argparse.Namespace*$
name
builtins.str"builtins.str*
value
Anyz35z36z37z38z39z310*√
__contains__argparse.Namespace.__contains__"
builtins.bool"builtins.bool*0
self(
argparse.Namespace"argparse.Namespace*#
key
builtins.str"builtins.strz27z35z36z37z38z39z310j27j35j36j37j38j39j310‹
FileTypeargparse.FileType"builtins.object*Ì
__init__argparse.FileType.__init__"
None*0
self&
argparse.FileType"argparse.FileType*0
mode$
builtins.unicode"builtins.unicode *S
bufsizeD
Union[builtins.int,None]
builtins.int"builtins.int
None z27*¸
__init__argparse.FileType.__init__"
None*0
self&
argparse.FileType"argparse.FileType*(
mode
builtins.str"builtins.str *+
bufsize
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39z310*¥
__call__argparse.FileType.__call__"$
typing.IO[Any]
Any"	typing.IO*0
self&
argparse.FileType"argparse.FileType*0
string$
builtins.unicode"builtins.unicodez27*¡
__call__argparse.FileType.__call__"$
typing.IO[Any]
Any"	typing.IO*0
self&
argparse.FileType"argparse.FileType*(
string
builtins.str"builtins.strz35z36z37z38z39z310j27j35j36j37j38j39j310rÿ
_modeargparse.FileType._mode±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"argparse._Text*27rW
_modeargparse.FileType._mode
builtins.str"builtins.str*35*36*37*38*39*310ra
_bufsizeargparse.FileType._bufsize
builtins.int"builtins.int*27*35*36*37*38*39*310rá
	_encodingargparse.FileType._encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310rÉ
_errorsargparse.FileType._errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310¯

_ArgumentGroupargparse._ArgumentGroup"argparse._ActionsContainer*ö
__init__ argparse._ArgumentGroup.__init__"
None*<
self2
argparse._ArgumentGroup"argparse._ArgumentGroup*G
	container8
argparse._ActionsContainer"argparse._ActionsContainer*]
titleP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None *c
descriptionP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None *
kwargs
Anyz27*ó
__init__ argparse._ArgumentGroup.__init__"
None*<
self2
argparse._ArgumentGroup"argparse._ArgumentGroup*G
	container8
argparse._ActionsContainer"argparse._ActionsContainer*Q
titleD
Union[builtins.str,None]
builtins.str"builtins.str
None *W
descriptionD
Union[builtins.str,None]
builtins.str"builtins.str
None *
kwargs
Anyz35z36z37z38z39z310j27j35j36j37j38j39j310rß
titleargparse._ArgumentGroup.title{
)Union[builtins.str,builtins.unicode,None]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode
None*27rÖ
titleargparse._ArgumentGroup.titleD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310r™
_group_actions&argparse._ArgumentGroup._group_actionsS
builtins.list[argparse.Action]"
argparse.Action"argparse.Action"builtins.list*27*35*36*37*38*39*310†
_MutuallyExclusiveGroup argparse._MutuallyExclusiveGroup"argparse._ArgumentGroup*•
__init__)argparse._MutuallyExclusiveGroup.__init__"
None*N
selfD
 argparse._MutuallyExclusiveGroup" argparse._MutuallyExclusiveGroup*G
	container8
argparse._ActionsContainer"argparse._ActionsContainer*.
required
builtins.bool"builtins.bool z27z35z36z37z38z39z310j27j35j36j37j38j39j310rr
required)argparse._MutuallyExclusiveGroup.required
builtins.bool"builtins.bool*27*35*36*37*38*39*310rê

_container+argparse._MutuallyExclusiveGroup._container8
argparse._ActionsContainer"argparse._ActionsContainer*27*35*36*37*38*39*310S
_StoreActionargparse._StoreAction"argparse.Actionj27j35j36j37j38j39j310Æ
_StoreConstActionargparse._StoreConstAction"argparse.Action*π
__init__#argparse._StoreConstAction.__init__"
None*B
self8
argparse._StoreConstAction"argparse._StoreConstAction*n
option_stringsZ
!typing.Sequence[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Sequence*.
dest$
builtins.unicode"builtins.unicode*
const
Any*
default
Any *.
required
builtins.bool"builtins.bool *\
helpP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None *€
metavarÀ
=Union[builtins.unicode,builtins.tuple[builtins.unicode],None]$
builtins.unicode"builtins.unicodeX
 builtins.tuple[builtins.unicode]$
builtins.unicode"builtins.unicode"builtins.tuple
None z27*í
__init__#argparse._StoreConstAction.__init__"
None*B
self8
argparse._StoreConstAction"argparse._StoreConstAction*b
option_stringsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*&
dest
builtins.str"builtins.str*
const
Any*
default
Any *.
required
builtins.bool"builtins.bool *P
helpD
Union[builtins.str,None]
builtins.str"builtins.str
None *ø
metavarØ
5Union[builtins.str,builtins.tuple[builtins.str],None]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple
None z35z36z37z38z39z310j27j35j36j37j38j39j310ó
_StoreTrueActionargparse._StoreTrueAction"argparse._StoreConstAction*€
__init__"argparse._StoreTrueAction.__init__"
None*@
self6
argparse._StoreTrueAction"argparse._StoreTrueAction*n
option_stringsZ
!typing.Sequence[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Sequence*.
dest$
builtins.unicode"builtins.unicode*-
default
builtins.bool"builtins.bool *.
required
builtins.bool"builtins.bool *\
helpP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None z27*–
__init__"argparse._StoreTrueAction.__init__"
None*@
self6
argparse._StoreTrueAction"argparse._StoreTrueAction*b
option_stringsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*&
dest
builtins.str"builtins.str*-
default
builtins.bool"builtins.bool *.
required
builtins.bool"builtins.bool *P
helpD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39z310j27j35j36j37j38j39j310ü
_StoreFalseActionargparse._StoreFalseAction"argparse._StoreConstAction*ﬁ
__init__#argparse._StoreFalseAction.__init__"
None*B
self8
argparse._StoreFalseAction"argparse._StoreFalseAction*n
option_stringsZ
!typing.Sequence[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Sequence*.
dest$
builtins.unicode"builtins.unicode*-
default
builtins.bool"builtins.bool *.
required
builtins.bool"builtins.bool *\
helpP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None z27*”
__init__#argparse._StoreFalseAction.__init__"
None*B
self8
argparse._StoreFalseAction"argparse._StoreFalseAction*b
option_stringsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*&
dest
builtins.str"builtins.str*-
default
builtins.bool"builtins.bool *.
required
builtins.bool"builtins.bool *P
helpD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39z310j27j35j36j37j38j39j310U
_AppendActionargparse._AppendAction"argparse.Actionj27j35j36j37j38j39j310∂
_AppendConstActionargparse._AppendConstAction"argparse.Action*º
__init__$argparse._AppendConstAction.__init__"
None*D
self:
argparse._AppendConstAction"argparse._AppendConstAction*n
option_stringsZ
!typing.Sequence[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Sequence*.
dest$
builtins.unicode"builtins.unicode*
const
Any*
default
Any *.
required
builtins.bool"builtins.bool *\
helpP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None *€
metavarÀ
=Union[builtins.unicode,builtins.tuple[builtins.unicode],None]$
builtins.unicode"builtins.unicodeX
 builtins.tuple[builtins.unicode]$
builtins.unicode"builtins.unicode"builtins.tuple
None z27*ï
__init__$argparse._AppendConstAction.__init__"
None*D
self:
argparse._AppendConstAction"argparse._AppendConstAction*b
option_stringsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*&
dest
builtins.str"builtins.str*
const
Any*
default
Any *.
required
builtins.bool"builtins.bool *P
helpD
Union[builtins.str,None]
builtins.str"builtins.str
None *ø
metavarØ
5Union[builtins.str,builtins.tuple[builtins.str],None]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple
None z35z36z37z38z39z310j27j35j36j37j38j39j310æ
_CountActionargparse._CountAction"argparse.Action*∏
__init__argparse._CountAction.__init__"
None*8
self.
argparse._CountAction"argparse._CountAction*n
option_stringsZ
!typing.Sequence[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Sequence*.
dest$
builtins.unicode"builtins.unicode*
default
Any *.
required
builtins.bool"builtins.bool *\
helpP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None z27*≠
__init__argparse._CountAction.__init__"
None*8
self.
argparse._CountAction"argparse._CountAction*b
option_stringsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*&
dest
builtins.str"builtins.str*
default
Any *.
required
builtins.bool"builtins.bool *P
helpD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39z310j27j35j36j37j38j39j310å
_HelpActionargparse._HelpAction"argparse.Action*§
__init__argparse._HelpAction.__init__"
None*6
self,
argparse._HelpAction"argparse._HelpAction*n
option_stringsZ
!typing.Sequence[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Sequence*0
dest$
builtins.unicode"builtins.unicode *3
default$
builtins.unicode"builtins.unicode *\
helpP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None z27*ë
__init__argparse._HelpAction.__init__"
None*6
self,
argparse._HelpAction"argparse._HelpAction*b
option_stringsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*(
dest
builtins.str"builtins.str *+
default
builtins.str"builtins.str *P
helpD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39z310j27j35j36j37j38j39j310¿

_VersionActionargparse._VersionAction"argparse.Action*‚
__init__ argparse._VersionAction.__init__"
None*<
self2
argparse._VersionAction"argparse._VersionAction*n
option_stringsZ
!typing.Sequence[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Sequence*_
versionP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None *0
dest$
builtins.unicode"builtins.unicode *3
default$
builtins.unicode"builtins.unicode *0
help$
builtins.unicode"builtins.unicode z27*«
__init__ argparse._VersionAction.__init__"
None*<
self2
argparse._VersionAction"argparse._VersionAction*b
option_stringsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*S
versionD
Union[builtins.str,None]
builtins.str"builtins.str
None *(
dest
builtins.str"builtins.str *+
default
builtins.str"builtins.str *(
help
builtins.str"builtins.str z35z36z37z38z39z310j27j35j36j37j38j39j310r´
versionargparse._VersionAction.version{
)Union[builtins.str,builtins.unicode,None]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode
None*27râ
versionargparse._VersionAction.versionD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310∞(
_SubParsersActionargparse._SubParsersAction"argparse.Action*¯
__init__#argparse._SubParsersAction.__init__"
None*B
self8
argparse._SubParsersAction"argparse._SubParsersAction*n
option_stringsZ
!typing.Sequence[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Sequence*.
prog$
builtins.unicode"builtins.unicode*g
parser_classU
Type[argparse.ArgumentParser]2
argparse.ArgumentParser"argparse.ArgumentParser*0
dest$
builtins.unicode"builtins.unicode *\
helpP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None *€
metavarÀ
=Union[builtins.unicode,builtins.tuple[builtins.unicode],None]$
builtins.unicode"builtins.unicodeX
 builtins.tuple[builtins.unicode]$
builtins.unicode"builtins.unicode"builtins.tuple
None z27*∏
__init__#argparse._SubParsersAction.__init__"
None*B
self8
argparse._SubParsersAction"argparse._SubParsersAction*b
option_stringsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*&
prog
builtins.str"builtins.str*g
parser_classU
Type[argparse.ArgumentParser]2
argparse.ArgumentParser"argparse.ArgumentParser*(
dest
builtins.str"builtins.str *P
helpD
Union[builtins.str,None]
builtins.str"builtins.str
None *ø
metavarØ
5Union[builtins.str,builtins.tuple[builtins.str],None]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple
None z35z36*Ò
__init__#argparse._SubParsersAction.__init__"
None*B
self8
argparse._SubParsersAction"argparse._SubParsersAction*b
option_stringsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*&
prog
builtins.str"builtins.str*g
parser_classU
Type[argparse.ArgumentParser]2
argparse.ArgumentParser"argparse.ArgumentParser*(
dest
builtins.str"builtins.str *.
required
builtins.bool"builtins.bool *P
helpD
Union[builtins.str,None]
builtins.str"builtins.str
None *ø
metavarØ
5Union[builtins.str,builtins.tuple[builtins.str],None]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple
None z37z38z39z310*Ù

add_parser%argparse._SubParsersAction.add_parser"2
argparse.ArgumentParser"argparse.ArgumentParser*B
self8
argparse._SubParsersAction"argparse._SubParsersAction*.
name$
builtins.unicode"builtins.unicode*
kwargs
Anyz27*Å

add_parser%argparse._SubParsersAction.add_parser"2
argparse.ArgumentParser"argparse.ArgumentParser*B
self8
argparse._SubParsersAction"argparse._SubParsersAction*&
name
builtins.str"builtins.str*
kwargs
Anyz35z36z37z38z39z310*Û
_get_subactions*argparse._SubParsersAction._get_subactions"S
builtins.list[argparse.Action]"
argparse.Action"argparse.Action"builtins.list*B
self8
argparse._SubParsersAction"argparse._SubParsersActionz27z35z36z37z38z39z310j27j35j36j37j38j39j310r|
_ChoicesPseudoAction/argparse._SubParsersAction._ChoicesPseudoAction
	Type[Any]
Any*27*35*36*37*38*39*310rÔ
_prog_prefix'argparse._SubParsersAction._prog_prefix±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"argparse._Text*27rn
_prog_prefix'argparse._SubParsersAction._prog_prefix
builtins.str"builtins.str*35*36*37*38*39*310r≠
_parser_class(argparse._SubParsersAction._parser_classU
Type[argparse.ArgumentParser]2
argparse.ArgumentParser"argparse.ArgumentParser*27*35*36*37*38*39*310rï
_name_parser_map+argparse._SubParsersAction._name_parser_mapœ
Vbuiltins.dict[TypeAlias[Union[builtins.str,builtins.unicode]],argparse.ArgumentParser]±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"argparse._Text2
argparse.ArgumentParser"argparse.ArgumentParser"builtins.dict*27rÒ
_name_parser_map+argparse._SubParsersAction._name_parser_mapñ
3builtins.dict[builtins.str,argparse.ArgumentParser]
builtins.str"builtins.str2
argparse.ArgumentParser"argparse.ArgumentParser"builtins.dict*35*36*37*38*39*310rÉ
choices"argparse._SubParsersAction.choicesœ
Vbuiltins.dict[TypeAlias[Union[builtins.str,builtins.unicode]],argparse.ArgumentParser]±
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"argparse._Text2
argparse.ArgumentParser"argparse.ArgumentParser"builtins.dict*27rﬂ
choices"argparse._SubParsersAction.choicesñ
3builtins.dict[builtins.str,argparse.ArgumentParser]
builtins.str"builtins.str2
argparse.ArgumentParser"argparse.ArgumentParser"builtins.dict*35*36*37*38*39*310r±
_choices_actions+argparse._SubParsersAction._choices_actionsS
builtins.list[argparse.Action]"
argparse.Action"argparse.Action"builtins.list*27*35*36*37*38*39*310`
ArgumentTypeErrorargparse.ArgumentTypeError"builtins.Exceptionj27j35j36j37j38j39j310n
MetavarTypeHelpFormatter!argparse.MetavarTypeHelpFormatter"argparse.HelpFormatterj35j36j37j38j39j310Ô	
BooleanOptionalActionargparse.BooleanOptionalAction"argparse.Action*õ	
__init__'argparse.BooleanOptionalAction.__init__"
None*J
self@
argparse.BooleanOptionalAction"argparse.BooleanOptionalAction*b
option_stringsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*&
dest
builtins.str"builtins.str*p
defaulta
$Union[argparse._T,builtins.str,None]
argparse._T
builtins.str"builtins.str
None *∫
type≠
]Union[CallableType[builtins.function],CallableType[builtins.function],argparse.FileType,None]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function&
argparse.FileType"argparse.FileType
None *á
choicesx
(Union[typing.Iterable[argparse._T],None]@
typing.Iterable[argparse._T]
argparse._T"typing.Iterable
None *.
required
builtins.bool"builtins.bool *P
helpD
Union[builtins.str,None]
builtins.str"builtins.str
None *ø
metavarØ
5Union[builtins.str,builtins.tuple[builtins.str],None]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple
None z39z310j39j310±
_ensure_valueargparse._ensure_value"
Any*7
	namespace(
argparse.Namespace"argparse.Namespace*.
name$
builtins.unicode"builtins.unicode*
value
Anyz27≠
_ensure_valueargparse._ensure_value"
Any*7
	namespace(
argparse.Namespace"argparse.Namespace*&
name
builtins.str"builtins.str*
value
Anyz35z36Ì
_get_action_nameargparse._get_action_name"D
Union[builtins.str,None]
builtins.str"builtins.str
None*[
argumentM
Union[argparse.Action,None]"
argparse.Action"argparse.Action
Nonez27z35z36z37z38z39z310*^
ONE_OR_MOREargparse.ONE_OR_MORE
builtins.str"builtins.str*27*35*36*37*38*39*310*X
OPTIONALargparse.OPTIONAL
builtins.str"builtins.str*27*35*36*37*38*39*310*T
PARSERargparse.PARSER
builtins.str"builtins.str*27*35*36*37*38*39*310*Z
	REMAINDERargparse.REMAINDER
builtins.str"builtins.str*27*35*36*37*38*39*310*X
SUPPRESSargparse.SUPPRESS
builtins.str"builtins.str*27*35*36*37*38*39*310*`
ZERO_OR_MOREargparse.ZERO_OR_MORE
builtins.str"builtins.str*27*35*36*37*38*39*310*v
_UNRECOGNIZED_ARGS_ATTR argparse._UNRECOGNIZED_ARGS_ATTR
builtins.str"builtins.str*27*35*36*37*38*39*310