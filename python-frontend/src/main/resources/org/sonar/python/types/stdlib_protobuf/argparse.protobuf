
argparse˚
_SUPPRESS_Targparse._SUPPRESS_T"builtins.str*≠
__init__argparse._SUPPRESS_T.__init__"
None*6
self,
argparse._SUPPRESS_T"argparse._SUPPRESS_T*&
item
builtins.str"builtins.strz36z37z38z39z310z311j36j37j38j39j310j311Ê
ArgumentErrorargparse.ArgumentError"builtins.Exception*ì
__init__argparse.ArgumentError.__init__"
None*:
self0
argparse.ArgumentError"argparse.ArgumentError*[
argumentM
Union[argparse.Action,None]"
argparse.Action"argparse.Action
None*)
message
builtins.str"builtins.strz36z37z38z39z310z311j36j37j38j39j310j311rï
argument_name$argparse.ArgumentError.argument_nameD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310*311ra
messageargparse.ArgumentError.message
builtins.str"builtins.str*36*37*38*39*310*311•
_AttributeHolderargparse._AttributeHolder"builtins.object*ç
_get_kwargs%argparse._AttributeHolder._get_kwargs"{
&builtins.list[Tuple[builtins.str,Any]]B
Tuple[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.list*@
self6
argparse._AttributeHolder"argparse._AttributeHolderz36z37z38z39z310z311*∫
	_get_args#argparse._AttributeHolder._get_args",
builtins.list[Any]
Any"builtins.list*@
self6
argparse._AttributeHolder"argparse._AttributeHolderz36z37z38z39z310z311j36j37j38j39j310j311ÛB
_ActionsContainerargparse._ActionsContainer"builtins.object*Ò
__init__#argparse._ActionsContainer.__init__"
None*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*U
descriptionD
Union[builtins.str,None]
builtins.str"builtins.str
None*.
prefix_chars
builtins.str"builtins.str*
argument_default
Any*2
conflict_handler
builtins.str"builtins.strz36z37z38z39z310z311*Ò
register#argparse._ActionsContainer.register"
None*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*/
registry_name
builtins.str"builtins.str*
value
Any*
object
Anyz36z37z38z39z310z311*˝
_registry_get(argparse._ActionsContainer._registry_get"
Any*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*/
registry_name
builtins.str"builtins.str*
value
Any*
default
Any z36z37z38z39z310z311*¥
set_defaults'argparse._ActionsContainer.set_defaults"
None*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*
kwargs
Anyz36z37z38z39z310z311*ƒ
get_default&argparse._ActionsContainer.get_default"
Any*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*&
dest
builtins.str"builtins.strz36z37z38z39z310z311*¡
add_argument'argparse._ActionsContainer.add_argument""
argparse.Action"argparse.Action*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*/
name_or_flags
builtins.str"builtins.str*ô
actionä
)Union[builtins.str,Type[argparse.Action]]
builtins.str"builtins.str=
Type[argparse.Action]"
argparse.Action"argparse.Action *±
nargs£
5Union[builtins.int,builtins.str,argparse._SUPPRESS_T]
builtins.int"builtins.int
builtins.str"builtins.str,
argparse._SUPPRESS_T"argparse._SUPPRESS_T *
const
Any *
default
Any *æ
type±
8Union[CallableType[builtins.function],argparse.FileType]K
CallableType[builtins.function]&
builtins.function"builtins.function&
argparse.FileType"argparse.FileType *Ω
choices≠
(Union[typing.Iterable[argparse._T],None]u
typing.Iterable[argparse._T]D
argparse._T"
builtins.object"builtins.object"builtins.object"typing.Iterable
None *.
required
builtins.bool"builtins.bool *P
helpD
Union[builtins.str,None]
builtins.str"builtins.str
None *ø
metavarØ
5Union[builtins.str,builtins.tuple[builtins.str],None]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple
None *P
destD
Union[builtins.str,None]
builtins.str"builtins.str
None *+
version
builtins.str"builtins.str *
kwargs
Anyz36z37z38z39z310z311*˝
add_argument_group-argparse._ActionsContainer.add_argument_group"2
argparse._ArgumentGroup"argparse._ArgumentGroup*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*
args
Any*
kwargs
Anyz36z37z38z39z310z311*ê
add_mutually_exclusive_group7argparse._ActionsContainer.add_mutually_exclusive_group"D
 argparse._MutuallyExclusiveGroup" argparse._MutuallyExclusiveGroup*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*
kwargs
Anyz36z37z38z39z310z311*∑
_add_action&argparse._ActionsContainer._add_action"J
argparse._ActionT"
argparse.Action"argparse.Action"argparse.Action*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*V
actionJ
argparse._ActionT"
argparse.Action"argparse.Action"argparse.Actionz36z37z38z39z310z311*”
_remove_action)argparse._ActionsContainer._remove_action"
None*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*.
action"
argparse.Action"argparse.Actionz36z37z38z39z310z311*¸
_add_container_actions1argparse._ActionsContainer._add_container_actions"
None*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*G
	container8
argparse._ActionsContainer"argparse._ActionsContainerz36z37z38z39z310z311*ø
_get_positional_kwargs1argparse._ActionsContainer._get_positional_kwargs"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*&
dest
builtins.str"builtins.str*
kwargs
Anyz36z37z38z39z310z311*¶
_get_optional_kwargs/argparse._ActionsContainer._get_optional_kwargs"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*
args
Any*
kwargs
Anyz36z37z38z39z310z311*Ú
_pop_action_class,argparse._ActionsContainer._pop_action_class"=
Type[argparse.Action]"
argparse.Action"argparse.Action*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*
kwargs
Any*}
defaultn
!Union[Type[argparse.Action],None]=
Type[argparse.Action]"
argparse.Action"argparse.Action
None z36z37z38z39z310z311*‚
_get_handler'argparse._ActionsContainer._get_handler"K
CallableType[builtins.function]&
builtins.function"builtins.function*B
self8
argparse._ActionsContainer"argparse._ActionsContainerz36z37z38z39z310z311*’
_check_conflict*argparse._ActionsContainer._check_conflict"
None*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*.
action"
argparse.Action"argparse.Actionz36z37z38z39z310z311*∂
_handle_conflict_error1argparse._ActionsContainer._handle_conflict_error"
NoReturn
*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*.
action"
argparse.Action"argparse.Action*Ã
conflicting_actions≤
4typing.Iterable[Tuple[builtins.str,argparse.Action]]i
#Tuple[builtins.str,argparse.Action]
builtins.str"builtins.str"
argparse.Action"argparse.Action"typing.Iterablez36z37z38z39z310z311*∂
_handle_conflict_resolve3argparse._ActionsContainer._handle_conflict_resolve"
None*B
self8
argparse._ActionsContainer"argparse._ActionsContainer*.
action"
argparse.Action"argparse.Action*Ã
conflicting_actions≤
4typing.Iterable[Tuple[builtins.str,argparse.Action]]i
#Tuple[builtins.str,argparse.Action]
builtins.str"builtins.str"
argparse.Action"argparse.Action"typing.Iterablez36z37z38z39z310z311j36j37j38j39j310j311rï
description&argparse._ActionsContainer.descriptionD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310*311ro
prefix_chars'argparse._ActionsContainer.prefix_chars
builtins.str"builtins.str*36*37*38*39*310*311rb
argument_default+argparse._ActionsContainer.argument_default
Any*36*37*38*39*310*311rw
conflict_handler+argparse._ActionsContainer.conflict_handler
builtins.str"builtins.str*36*37*38*39*310*311rÓ
_registries&argparse._ActionsContainer._registriesú
2builtins.dict[builtins.str,builtins.dict[Any,Any]]
builtins.str"builtins.str9
builtins.dict[Any,Any]
Any
Any"builtins.dict"builtins.dict*36*37*38*39*310*311rû
_actions#argparse._ActionsContainer._actionsS
builtins.list[argparse.Action]"
argparse.Action"argparse.Action"builtins.list*36*37*38*39*310*311rÂ
_option_string_actions1argparse._ActionsContainer._option_string_actions~
+builtins.dict[builtins.str,argparse.Action]
builtins.str"builtins.str"
argparse.Action"argparse.Action"builtins.dict*36*37*38*39*310*311r¬
_action_groups)argparse._ActionsContainer._action_groupsk
&builtins.list[argparse._ArgumentGroup]2
argparse._ArgumentGroup"argparse._ArgumentGroup"builtins.list*36*37*38*39*310*311rˆ
_mutually_exclusive_groups5argparse._ActionsContainer._mutually_exclusive_groupsÜ
/builtins.list[argparse._MutuallyExclusiveGroup]D
 argparse._MutuallyExclusiveGroup" argparse._MutuallyExclusiveGroup"builtins.list*36*37*38*39*310*311r§
	_defaults$argparse._ActionsContainer._defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311rØ
_negative_number_matcher3argparse._ActionsContainer._negative_number_matcherD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*36*37*38*39*310*311rƒ
_has_negative_number_optionals9argparse._ActionsContainer._has_negative_number_optionalsM
builtins.list[builtins.bool]
builtins.bool"builtins.bool"builtins.list*36*37*38*39*310*311º
_FormatterClassargparse._FormatterClass"builtins.object*·
__call__!argparse._FormatterClass.__call__"0
argparse.HelpFormatter"argparse.HelpFormatter*>
self4
argparse._FormatterClass"argparse._FormatterClass*&
prog
builtins.str"builtins.strz36z37z38z39z310z311Xj36j37j38j39j310j311Ír
ArgumentParserargparse.ArgumentParser"argparse._AttributeHolder"argparse._ActionsContainer*Ô
__init__ argparse.ArgumentParser.__init__"
None*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*P
progD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
usageD
Union[builtins.str,None]
builtins.str"builtins.str
None *W
descriptionD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
epilogD
Union[builtins.str,None]
builtins.str"builtins.str
None *~
parentso
(typing.Sequence[argparse.ArgumentParser]2
argparse.ArgumentParser"argparse.ArgumentParser"typing.Sequence *K
formatter_class4
argparse._FormatterClass"argparse._FormatterClass *0
prefix_chars
builtins.str"builtins.str *a
fromfile_prefix_charsD
Union[builtins.str,None]
builtins.str"builtins.str
None *
argument_default
Any *4
conflict_handler
builtins.str"builtins.str *.
add_help
builtins.bool"builtins.bool *2
allow_abbrev
builtins.bool"builtins.bool z36z37z38*¶
__init__ argparse.ArgumentParser.__init__"
None*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*P
progD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
usageD
Union[builtins.str,None]
builtins.str"builtins.str
None *W
descriptionD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
epilogD
Union[builtins.str,None]
builtins.str"builtins.str
None *~
parentso
(typing.Sequence[argparse.ArgumentParser]2
argparse.ArgumentParser"argparse.ArgumentParser"typing.Sequence *K
formatter_class4
argparse._FormatterClass"argparse._FormatterClass *0
prefix_chars
builtins.str"builtins.str *a
fromfile_prefix_charsD
Union[builtins.str,None]
builtins.str"builtins.str
None *
argument_default
Any *4
conflict_handler
builtins.str"builtins.str *.
add_help
builtins.bool"builtins.bool *2
allow_abbrev
builtins.bool"builtins.bool *3
exit_on_error
builtins.bool"builtins.bool z39z310z311*ò
print_usage#argparse.ArgumentParser.print_usage"
None*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*Å
fileu
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None z36z37z38z39z310z311*ñ

print_help"argparse.ArgumentParser.print_help"
None*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*Å
fileu
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None z36z37z38z39z310z311*™
format_usage$argparse.ArgumentParser.format_usage"
builtins.str"builtins.str*<
self2
argparse.ArgumentParser"argparse.ArgumentParserz36z37z38z39z310z311*®
format_help#argparse.ArgumentParser.format_help"
builtins.str"builtins.str*<
self2
argparse.ArgumentParser"argparse.ArgumentParserz36z37z38z39z310z311*∆
parse_known_args(argparse.ArgumentParser.parse_known_args"Ø
5Tuple[argparse.Namespace,builtins.list[builtins.str]](
argparse.Namespace"argparse.NamespaceJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*î
argsá
)Union[typing.Sequence[builtins.str],None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
None *g
	namespaceV
Union[argparse.Namespace,None](
argparse.Namespace"argparse.Namespace
None z36z37z38z39z310z311*ú
convert_arg_line_to_args0argparse.ArgumentParser.convert_arg_line_to_args"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*<
self2
argparse.ArgumentParser"argparse.ArgumentParser**
arg_line
builtins.str"builtins.strz36z37z38z39z310z311*ã
exitargparse.ArgumentParser.exit"
NoReturn
*<
self2
argparse.ArgumentParser"argparse.ArgumentParser**
status
builtins.int"builtins.int *S
messageD
Union[builtins.str,None]
builtins.str"builtins.str
None z36z37z38z39z310z311*∑
errorargparse.ArgumentParser.error"
NoReturn
*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*)
message
builtins.str"builtins.strz36z37z38z39z310z311*»
parse_intermixed_args-argparse.ArgumentParser.parse_intermixed_args"(
argparse.Namespace"argparse.Namespace*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*î
argsá
)Union[typing.Sequence[builtins.str],None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
None *g
	namespaceV
Union[argparse.Namespace,None](
argparse.Namespace"argparse.Namespace
None z36z37z38z39z310z311*‹
parse_known_intermixed_args3argparse.ArgumentParser.parse_known_intermixed_args"Ø
5Tuple[argparse.Namespace,builtins.list[builtins.str]](
argparse.Namespace"argparse.NamespaceJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*î
argsá
)Union[typing.Sequence[builtins.str],None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
None *g
	namespaceV
Union[argparse.Namespace,None](
argparse.Namespace"argparse.Namespace
None z36z37z38z39z310z311*Û
_get_optional_actions-argparse.ArgumentParser._get_optional_actions"S
builtins.list[argparse.Action]"
argparse.Action"argparse.Action"builtins.list*<
self2
argparse.ArgumentParser"argparse.ArgumentParserz36z37z38z39z310z311*˜
_get_positional_actions/argparse.ArgumentParser._get_positional_actions"S
builtins.list[argparse.Action]"
argparse.Action"argparse.Action"builtins.list*<
self2
argparse.ArgumentParser"argparse.ArgumentParserz36z37z38z39z310z311*ﬁ
_parse_known_args)argparse.ArgumentParser._parse_known_args"Ø
5Tuple[argparse.Namespace,builtins.list[builtins.str]](
argparse.Namespace"argparse.NamespaceJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*[
arg_stringsJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*7
	namespace(
argparse.Namespace"argparse.Namespacez36z37z38z39z310z311*«
_read_args_from_files-argparse.ArgumentParser._read_args_from_files"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*[
arg_stringsJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listz36z37z38z39z310z311*ó
_match_argument'argparse.ArgumentParser._match_argument"
builtins.int"builtins.int*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*.
action"
argparse.Action"argparse.Action*5
arg_strings_pattern
builtins.str"builtins.strz36z37z38z39z310z311*ç
_match_arguments_partial0argparse.ArgumentParser._match_arguments_partial"J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*d
actionsW
 typing.Sequence[argparse.Action]"
argparse.Action"argparse.Action"typing.Sequence*5
arg_strings_pattern
builtins.str"builtins.strz36z37z38z39z310z311*ß
_parse_optional'argparse.ArgumentParser._parse_optional"‰
TUnion[Tuple[Union[argparse.Action,None],builtins.str,Union[builtins.str,None]],None]ˇ
HTuple[Union[argparse.Action,None],builtins.str,Union[builtins.str,None]]M
Union[argparse.Action,None]"
argparse.Action"argparse.Action
None
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
None
None*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*,

arg_string
builtins.str"builtins.strz36z37z38z39z310z311*Û
_get_option_tuples*argparse.ArgumentParser._get_option_tuples"ß
Kbuiltins.list[Tuple[argparse.Action,builtins.str,Union[builtins.str,None]]]»
<Tuple[argparse.Action,builtins.str,Union[builtins.str,None]]"
argparse.Action"argparse.Action
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
None"builtins.list*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*/
option_string
builtins.str"builtins.strz36z37z38z39z310z311*Ê
_get_nargs_pattern*argparse.ArgumentParser._get_nargs_pattern"
builtins.str"builtins.str*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*.
action"
argparse.Action"argparse.Actionz36z37z38z39z310z311*†
_get_values#argparse.ArgumentParser._get_values"
Any*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*.
action"
argparse.Action"argparse.Action*[
arg_stringsJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listz36z37z38z39z310z311*Ô

_get_value"argparse.ArgumentParser._get_value"
Any*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*.
action"
argparse.Action"argparse.Action*,

arg_string
builtins.str"builtins.strz36z37z38z39z310z311*⁄
_check_value$argparse.ArgumentParser._check_value"
None*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*.
action"
argparse.Action"argparse.Action*
value
Anyz36z37z38z39z310z311*¬
_get_formatter&argparse.ArgumentParser._get_formatter"0
argparse.HelpFormatter"argparse.HelpFormatter*<
self2
argparse.ArgumentParser"argparse.ArgumentParserz36z37z38z39z310z311*…
_print_message&argparse.ArgumentParser._print_message"
None*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*)
message
builtins.str"builtins.str*Å
fileu
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None z36z37z38z39z310z3112Ó

parse_args"argparse.ArgumentParser.parse_argsÿ

parse_args"argparse.ArgumentParser.parse_args"(
argparse.Namespace"argparse.Namespace*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*î
argsá
)Union[typing.Sequence[builtins.str],None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
None *
	namespace
None 0:overloadX¨

parse_args"argparse.ArgumentParser.parse_args"D
argparse._N"
builtins.object"builtins.object"builtins.object*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*í
argsá
)Union[typing.Sequence[builtins.str],None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
None*S
	namespaceD
argparse._N"
builtins.object"builtins.object"builtins.object0:overloadXó

parse_args"argparse.ArgumentParser.parse_args"D
argparse._N"
builtins.object"builtins.object"builtins.object*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*S
	namespaceD
argparse._N"
builtins.object"builtins.object"builtins.object0:overloadX"36"37"38"39"310"3112Ô
add_subparsers&argparse.ArgumentParser.add_subparsers’
add_subparsers&argparse.ArgumentParser.add_subparsers"ø
5argparse._SubParsersAction[argparse._ArgumentParserT]j
argparse._ArgumentParserT2
argparse.ArgumentParser"argparse.ArgumentParser"argparse.ArgumentParser"argparse._SubParsersAction*t
selfj
argparse._ArgumentParserT2
argparse.ArgumentParser"argparse.ArgumentParser"argparse.ArgumentParser*)
title
builtins.str"builtins.str *W
descriptionD
Union[builtins.str,None]
builtins.str"builtins.str
None *(
prog
builtins.str"builtins.str *K
action=
Type[argparse.Action]"
argparse.Action"argparse.Action *1
option_string
builtins.str"builtins.str *P
destD
Union[builtins.str,None]
builtins.str"builtins.str
None *.
required
builtins.bool"builtins.bool *P
helpD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
metavarD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX¬
add_subparsers&argparse.ArgumentParser.add_subparsers"ø
5argparse._SubParsersAction[argparse._ArgumentParserT]j
argparse._ArgumentParserT2
argparse.ArgumentParser"argparse.ArgumentParser"argparse.ArgumentParser"argparse._SubParsersAction*<
self2
argparse.ArgumentParser"argparse.ArgumentParser*)
title
builtins.str"builtins.str *W
descriptionD
Union[builtins.str,None]
builtins.str"builtins.str
None *(
prog
builtins.str"builtins.str *¢
parser_classè
Type[argparse._ArgumentParserT]j
argparse._ArgumentParserT2
argparse.ArgumentParser"argparse.ArgumentParser"argparse.ArgumentParser*K
action=
Type[argparse.Action]"
argparse.Action"argparse.Action *1
option_string
builtins.str"builtins.str *P
destD
Union[builtins.str,None]
builtins.str"builtins.str
None *.
required
builtins.bool"builtins.bool *P
helpD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
metavarD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX"36"37"38"39"310"311j36j37j38j39j310j311r\
progargparse.ArgumentParser.prog
builtins.str"builtins.str*36*37*38*39*310*311rÜ
usageargparse.ArgumentParser.usageD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310*311rà
epilogargparse.ArgumentParser.epilogD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310*311rä
formatter_class'argparse.ArgumentParser.formatter_class4
argparse._FormatterClass"argparse._FormatterClass*36*37*38*39*310*311r¶
fromfile_prefix_chars-argparse.ArgumentParser.fromfile_prefix_charsD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310*311rf
add_help argparse.ArgumentParser.add_help
builtins.bool"builtins.bool*36*37*38*39*310*311rn
allow_abbrev$argparse.ArgumentParser.allow_abbrev
builtins.bool"builtins.bool*36*37*38*39*310*311rÇ
_positionals$argparse.ArgumentParser._positionals2
argparse._ArgumentGroup"argparse._ArgumentGroup*36*37*38*39*310*311r~

_optionals"argparse.ArgumentParser._optionals2
argparse._ArgumentGroup"argparse._ArgumentGroup*36*37*38*39*310*311r≥
_subparsers#argparse.ArgumentParser._subparserse
#Union[argparse._ArgumentGroup,None]2
argparse._ArgumentGroup"argparse._ArgumentGroup
None*36*37*38*39*310*311üC
HelpFormatterargparse.HelpFormatter"builtins.object*Û
__init__argparse.HelpFormatter.__init__"
None*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*&
prog
builtins.str"builtins.str*4
indent_increment
builtins.int"builtins.int *5
max_help_position
builtins.int"builtins.int *Q
widthD
Union[builtins.int,None]
builtins.int"builtins.int
None z36z37z38z39z310z311*â
_indentargparse.HelpFormatter._indent"
None*:
self0
argparse.HelpFormatter"argparse.HelpFormatterz36z37z38z39z310z311*â
_dedentargparse.HelpFormatter._dedent"
None*:
self0
argparse.HelpFormatter"argparse.HelpFormatterz36z37z38z39z310z311*†
	_add_item argparse.HelpFormatter._add_item"
None*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*U
funcK
CallableType[builtins.function]&
builtins.function"builtins.function*:
args0
typing.Iterable[Any]
Any"typing.Iterablez36z37z38z39z310z311*Ë
start_section$argparse.HelpFormatter.start_section"
None*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*Q
headingD
Union[builtins.str,None]
builtins.str"builtins.str
Nonez36z37z38z39z310z311*ë
end_section"argparse.HelpFormatter.end_section"
None*:
self0
argparse.HelpFormatter"argparse.HelpFormatterz36z37z38z39z310z311*€
add_textargparse.HelpFormatter.add_text"
None*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*N
textD
Union[builtins.str,None]
builtins.str"builtins.str
Nonez36z37z38z39z310z311*ï
	add_usage argparse.HelpFormatter.add_usage"
None*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*O
usageD
Union[builtins.str,None]
builtins.str"builtins.str
None*d
actionsW
 typing.Iterable[argparse.Action]"
argparse.Action"argparse.Action"typing.Iterable*{
groupso
(typing.Iterable[argparse._ArgumentGroup]2
argparse._ArgumentGroup"argparse._ArgumentGroup"typing.Iterable*R
prefixD
Union[builtins.str,None]
builtins.str"builtins.str
None z36z37z38z39z310z311*√
add_argument#argparse.HelpFormatter.add_argument"
None*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
action"
argparse.Action"argparse.Actionz36z37z38z39z310z311*˚
add_arguments$argparse.HelpFormatter.add_arguments"
None*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*d
actionsW
 typing.Iterable[argparse.Action]"
argparse.Action"argparse.Action"typing.Iterablez36z37z38z39z310z311*•
format_help"argparse.HelpFormatter.format_help"
builtins.str"builtins.str*:
self0
argparse.HelpFormatter"argparse.HelpFormatterz36z37z38z39z310z311*á
_join_parts"argparse.HelpFormatter._join_parts"
builtins.str"builtins.str*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*`
part_stringsN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterablez36z37z38z39z310z311*Ø
_format_usage$argparse.HelpFormatter._format_usage"
builtins.str"builtins.str*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*O
usageD
Union[builtins.str,None]
builtins.str"builtins.str
None*d
actionsW
 typing.Iterable[argparse.Action]"
argparse.Action"argparse.Action"typing.Iterable*{
groupso
(typing.Iterable[argparse._ArgumentGroup]2
argparse._ArgumentGroup"argparse._ArgumentGroup"typing.Iterable*P
prefixD
Union[builtins.str,None]
builtins.str"builtins.str
Nonez36z37z38z39z310z311*ú
_format_actions_usage,argparse.HelpFormatter._format_actions_usage"
builtins.str"builtins.str*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*d
actionsW
 typing.Iterable[argparse.Action]"
argparse.Action"argparse.Action"typing.Iterable*{
groupso
(typing.Iterable[argparse._ArgumentGroup]2
argparse._ArgumentGroup"argparse._ArgumentGroup"typing.Iterablez36z37z38z39z310z311*œ
_format_text#argparse.HelpFormatter._format_text"
builtins.str"builtins.str*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*&
text
builtins.str"builtins.strz36z37z38z39z310z311*€
_format_action%argparse.HelpFormatter._format_action"
builtins.str"builtins.str*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
action"
argparse.Action"argparse.Actionz36z37z38z39z310z311*Ò
_format_action_invocation0argparse.HelpFormatter._format_action_invocation"
builtins.str"builtins.str*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
action"
argparse.Action"argparse.Actionz36z37z38z39z310z311*≈
_metavar_formatter)argparse.HelpFormatter._metavar_formatter"K
CallableType[builtins.function]&
builtins.function"builtins.function*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
action"
argparse.Action"argparse.Action*1
default_metavar
builtins.str"builtins.strz36z37z38z39z310z311*ä
_format_args#argparse.HelpFormatter._format_args"
builtins.str"builtins.str*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
action"
argparse.Action"argparse.Action*1
default_metavar
builtins.str"builtins.strz36z37z38z39z310z311*◊
_expand_help#argparse.HelpFormatter._expand_help"
builtins.str"builtins.str*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
action"
argparse.Action"argparse.Actionz36z37z38z39z310z311*Ã
_iter_indented_subactions0argparse.HelpFormatter._iter_indented_subactions"w
+typing.Generator[argparse.Action,None,None]"
argparse.Action"argparse.Action
None
None"typing.Generator*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
action"
argparse.Action"argparse.Actionz36z37z38z39z310z311*¶
_split_lines#argparse.HelpFormatter._split_lines"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*&
text
builtins.str"builtins.str*'
width
builtins.int"builtins.intz36z37z38z39z310z311*û

_fill_text!argparse.HelpFormatter._fill_text"
builtins.str"builtins.str*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*&
text
builtins.str"builtins.str*'
width
builtins.int"builtins.int*(
indent
builtins.str"builtins.strz36z37z38z39z310z311*á
_get_help_string'argparse.HelpFormatter._get_help_string"D
Union[builtins.str,None]
builtins.str"builtins.str
None*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
action"
argparse.Action"argparse.Actionz36z37z38z39z310z311*Å
!_get_default_metavar_for_optional8argparse.HelpFormatter._get_default_metavar_for_optional"
builtins.str"builtins.str*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
action"
argparse.Action"argparse.Actionz36z37z38z39z310z311*Ö
#_get_default_metavar_for_positional:argparse.HelpFormatter._get_default_metavar_for_positional"
builtins.str"builtins.str*:
self0
argparse.HelpFormatter"argparse.HelpFormatter*.
action"
argparse.Action"argparse.Actionz36z37z38z39z310z311j36j37j38j39j310j311r]
_progargparse.HelpFormatter._prog
builtins.str"builtins.str*36*37*38*39*310*311ru
_indent_increment(argparse.HelpFormatter._indent_increment
builtins.int"builtins.int*36*37*38*39*310*311rw
_max_help_position)argparse.HelpFormatter._max_help_position
builtins.int"builtins.int*36*37*38*39*310*311r_
_widthargparse.HelpFormatter._width
builtins.int"builtins.int*36*37*38*39*310*311rq
_current_indent&argparse.HelpFormatter._current_indent
builtins.int"builtins.int*36*37*38*39*310*311r_
_levelargparse.HelpFormatter._level
builtins.int"builtins.int*36*37*38*39*310*311rw
_action_max_length)argparse.HelpFormatter._action_max_length
builtins.int"builtins.int*36*37*38*39*310*311rX
_root_section$argparse.HelpFormatter._root_section
Any*36*37*38*39*310*311r^
_current_section'argparse.HelpFormatter._current_section
Any*36*37*38*39*310*311r°
_whitespace_matcher*argparse.HelpFormatter._whitespace_matcherD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*36*37*38*39*310*311r°
_long_break_matcher*argparse.HelpFormatter._long_break_matcherD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*36*37*38*39*310*311r]
_Sectionargparse.HelpFormatter._Section
	Type[Any]
Any*36*37*38*39*310*311u
RawDescriptionHelpFormatter$argparse.RawDescriptionHelpFormatter"argparse.HelpFormatterj36j37j38j39j310j311u
RawTextHelpFormatterargparse.RawTextHelpFormatter"$argparse.RawDescriptionHelpFormatterj36j37j38j39j310j311y
ArgumentDefaultsHelpFormatter&argparse.ArgumentDefaultsHelpFormatter"argparse.HelpFormatterj36j37j38j39j310j311o
MetavarTypeHelpFormatter!argparse.MetavarTypeHelpFormatter"argparse.HelpFormatterj36j37j38j39j310j311Œ
Actionargparse.Action"argparse._AttributeHolder*˜

__init__argparse.Action.__init__"
None*,
self"
argparse.Action"argparse.Action*b
option_stringsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*&
dest
builtins.str"builtins.str*|
nargso
%Union[builtins.int,builtins.str,None]
builtins.int"builtins.int
builtins.str"builtins.str
None *x
constk
Union[argparse._T,None]D
argparse._T"
builtins.object"builtins.object"builtins.object
None *¶
defaultñ
$Union[argparse._T,builtins.str,None]D
argparse._T"
builtins.object"builtins.object"builtins.object
builtins.str"builtins.str
None *Õ
type¿
=Union[CallableType[builtins.function],argparse.FileType,None]K
CallableType[builtins.function]&
builtins.function"builtins.function&
argparse.FileType"argparse.FileType
None *Ω
choices≠
(Union[typing.Iterable[argparse._T],None]u
typing.Iterable[argparse._T]D
argparse._T"
builtins.object"builtins.object"builtins.object"typing.Iterable
None *.
required
builtins.bool"builtins.bool *P
helpD
Union[builtins.str,None]
builtins.str"builtins.str
None *ø
metavarØ
5Union[builtins.str,builtins.tuple[builtins.str],None]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple
None z36z37z38z39z310z311*Â
__call__argparse.Action.__call__"
None*,
self"
argparse.Action"argparse.Action*>
parser2
argparse.ArgumentParser"argparse.ArgumentParser*7
	namespace(
argparse.Namespace"argparse.Namespace*ò
valuesã
-Union[builtins.str,typing.Sequence[Any],None]
builtins.str"builtins.str0
typing.Sequence[Any]
Any"typing.Sequence
None*Y
option_stringD
Union[builtins.str,None]
builtins.str"builtins.str
None z36z37z38z39z310z311*Ü
format_usageargparse.Action.format_usage"
builtins.str"builtins.str*,
self"
argparse.Action"argparse.Actionz39z310z311j36j37j38j39j310j311rö
option_stringsargparse.Action.option_stringsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*36*37*38*39*310*311rT
destargparse.Action.dest
builtins.str"builtins.str*36*37*38*39*310*311r©
nargsargparse.Action.nargso
%Union[builtins.int,builtins.str,None]
builtins.int"builtins.int
builtins.str"builtins.str
None*36*37*38*39*310*311rA
constargparse.Action.const
Any*36*37*38*39*310*311rE
defaultargparse.Action.default
Any*36*37*38*39*310*311r˘
typeargparse.Action.type¿
=Union[CallableType[builtins.function],argparse.FileType,None]K
CallableType[builtins.function]&
builtins.function"builtins.function&
argparse.FileType"argparse.FileType
None*36*37*38*39*310*311rû
choicesargparse.Action.choices`
 Union[typing.Iterable[Any],None]0
typing.Iterable[Any]
Any"typing.Iterable
None*36*37*38*39*310*311r^
requiredargparse.Action.required
builtins.bool"builtins.bool*36*37*38*39*310*311r|
helpargparse.Action.helpD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310*311rÓ
metavarargparse.Action.metavarØ
5Union[builtins.str,builtins.tuple[builtins.str],None]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple
None*36*37*38*39*310*311ß
	Namespaceargparse.Namespace"argparse._AttributeHolder*î
__init__argparse.Namespace.__init__"
None*2
self(
argparse.Namespace"argparse.Namespace*
kwargs
Anyz36z37z38z39z310z311*ú
__getattr__argparse.Namespace.__getattr__"
Any**(
argparse.Namespace"argparse.Namespace*
builtins.str"builtins.strz36z37z38z39z310z311*∞
__setattr__argparse.Namespace.__setattr__"
None*2
self(
argparse.Namespace"argparse.Namespace*
builtins.str"builtins.str*	
Anyz36z37z38z39z310z311*µ
__contains__argparse.Namespace.__contains__"
builtins.bool"builtins.bool**(
argparse.Namespace"argparse.Namespace*
builtins.str"builtins.strz36z37z38z39z310z311*Ø
__eq__argparse.Namespace.__eq__"
builtins.bool"builtins.bool**(
argparse.Namespace"argparse.Namespace*$"
builtins.object"builtins.objectz36z37z38z39z310z311j36j37j38j39j310j311Ÿ
FileTypeargparse.FileType"builtins.object*˝
__init__argparse.FileType.__init__"
None*0
self&
argparse.FileType"argparse.FileType*(
mode
builtins.str"builtins.str *+
bufsize
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None z36z37z38z39z310z311*¬
__call__argparse.FileType.__call__"$
typing.IO[Any]
Any"	typing.IO*0
self&
argparse.FileType"argparse.FileType*(
string
builtins.str"builtins.strz36z37z38z39z310z311j36j37j38j39j310j311rX
_modeargparse.FileType._mode
builtins.str"builtins.str*36*37*38*39*310*311r^
_bufsizeargparse.FileType._bufsize
builtins.int"builtins.int*36*37*38*39*310*311rà
	_encodingargparse.FileType._encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310*311rÑ
_errorsargparse.FileType._errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310*311≠
_ArgumentGroupargparse._ArgumentGroup"argparse._ActionsContainer*ò
__init__ argparse._ArgumentGroup.__init__"
None*<
self2
argparse._ArgumentGroup"argparse._ArgumentGroup*G
	container8
argparse._ActionsContainer"argparse._ActionsContainer*Q
titleD
Union[builtins.str,None]
builtins.str"builtins.str
None *W
descriptionD
Union[builtins.str,None]
builtins.str"builtins.str
None *
kwargs
Anyz36z37z38z39z310z311j36j37j38j39j310j311rÜ
titleargparse._ArgumentGroup.titleD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310*311rß
_group_actions&argparse._ArgumentGroup._group_actionsS
builtins.list[argparse.Action]"
argparse.Action"argparse.Action"builtins.list*36*37*38*39*310*311î
_MutuallyExclusiveGroup argparse._MutuallyExclusiveGroup"argparse._ArgumentGroup*¢
__init__)argparse._MutuallyExclusiveGroup.__init__"
None*N
selfD
 argparse._MutuallyExclusiveGroup" argparse._MutuallyExclusiveGroup*G
	container8
argparse._ActionsContainer"argparse._ActionsContainer*.
required
builtins.bool"builtins.bool z36z37z38z39z310z311j36j37j38j39j310j311ro
required)argparse._MutuallyExclusiveGroup.required
builtins.bool"builtins.bool*36*37*38*39*310*311rç

_container+argparse._MutuallyExclusiveGroup._container8
argparse._ActionsContainer"argparse._ActionsContainer*36*37*38*39*310*311P
_StoreActionargparse._StoreAction"argparse.Actionj36j37j38j39j310j311ç
_StoreConstActionargparse._StoreConstAction"argparse.Action*é
__init__#argparse._StoreConstAction.__init__"
None*B
self8
argparse._StoreConstAction"argparse._StoreConstAction*b
option_stringsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*&
dest
builtins.str"builtins.str*
const
Any*
default
Any *.
required
builtins.bool"builtins.bool *P
helpD
Union[builtins.str,None]
builtins.str"builtins.str
None *ø
metavarØ
5Union[builtins.str,builtins.tuple[builtins.str],None]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple
None z36z37z38z39z310*ü
__init__#argparse._StoreConstAction.__init__"
None*B
self8
argparse._StoreConstAction"argparse._StoreConstAction*b
option_stringsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*&
dest
builtins.str"builtins.str*3
const&
Union[Any,None]
Any
None *
default
Any *.
required
builtins.bool"builtins.bool *P
helpD
Union[builtins.str,None]
builtins.str"builtins.str
None *ø
metavarØ
5Union[builtins.str,builtins.tuple[builtins.str],None]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple
None z311j36j37j38j39j310j311∑
_StoreTrueActionargparse._StoreTrueAction"argparse._StoreConstAction*—
__init__"argparse._StoreTrueAction.__init__"
None*@
self6
argparse._StoreTrueAction"argparse._StoreTrueAction*b
option_stringsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*&
dest
builtins.str"builtins.str*-
default
builtins.bool"builtins.bool *.
required
builtins.bool"builtins.bool *P
helpD
Union[builtins.str,None]
builtins.str"builtins.str
None z36z37z38z39z310z311j36j37j38j39j310j311º
_StoreFalseActionargparse._StoreFalseAction"argparse._StoreConstAction*‘
__init__#argparse._StoreFalseAction.__init__"
None*B
self8
argparse._StoreFalseAction"argparse._StoreFalseAction*b
option_stringsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*&
dest
builtins.str"builtins.str*-
default
builtins.bool"builtins.bool *.
required
builtins.bool"builtins.bool *P
helpD
Union[builtins.str,None]
builtins.str"builtins.str
None z36z37z38z39z310z311j36j37j38j39j310j311R
_AppendActionargparse._AppendAction"argparse.Actionj36j37j38j39j310j311ï
_AppendConstActionargparse._AppendConstAction"argparse.Action*ë
__init__$argparse._AppendConstAction.__init__"
None*D
self:
argparse._AppendConstAction"argparse._AppendConstAction*b
option_stringsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*&
dest
builtins.str"builtins.str*
const
Any*
default
Any *.
required
builtins.bool"builtins.bool *P
helpD
Union[builtins.str,None]
builtins.str"builtins.str
None *ø
metavarØ
5Union[builtins.str,builtins.tuple[builtins.str],None]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple
None z36z37z38z39z310*¢
__init__$argparse._AppendConstAction.__init__"
None*D
self:
argparse._AppendConstAction"argparse._AppendConstAction*b
option_stringsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*&
dest
builtins.str"builtins.str*3
const&
Union[Any,None]
Any
None *
default
Any *.
required
builtins.bool"builtins.bool *P
helpD
Union[builtins.str,None]
builtins.str"builtins.str
None *ø
metavarØ
5Union[builtins.str,builtins.tuple[builtins.str],None]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple
None z311j36j37j38j39j310j311Å
_CountActionargparse._CountAction"argparse.Action*Æ
__init__argparse._CountAction.__init__"
None*8
self.
argparse._CountAction"argparse._CountAction*b
option_stringsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*&
dest
builtins.str"builtins.str*
default
Any *.
required
builtins.bool"builtins.bool *P
helpD
Union[builtins.str,None]
builtins.str"builtins.str
None z36z37z38z39z310z311j36j37j38j39j310j311„
_HelpActionargparse._HelpAction"argparse.Action*í
__init__argparse._HelpAction.__init__"
None*6
self,
argparse._HelpAction"argparse._HelpAction*b
option_stringsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*(
dest
builtins.str"builtins.str *+
default
builtins.str"builtins.str *P
helpD
Union[builtins.str,None]
builtins.str"builtins.str
None z36z37z38z39z310z311j36j37j38j39j310j311¨
_VersionActionargparse._VersionAction"argparse.Action*»
__init__ argparse._VersionAction.__init__"
None*<
self2
argparse._VersionAction"argparse._VersionAction*b
option_stringsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*S
versionD
Union[builtins.str,None]
builtins.str"builtins.str
None *(
dest
builtins.str"builtins.str *+
default
builtins.str"builtins.str *(
help
builtins.str"builtins.str z36z37z38z39z310z311j36j37j38j39j310j311rä
versionargparse._VersionAction.versionD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310*311†-
_SubParsersActionargparse._SubParsersAction"argparse.Action*ø
__init__#argparse._SubParsersAction.__init__"
None* 
selfø
5argparse._SubParsersAction[argparse._ArgumentParserT]j
argparse._ArgumentParserT2
argparse.ArgumentParser"argparse.ArgumentParser"argparse.ArgumentParser"argparse._SubParsersAction*b
option_stringsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*&
prog
builtins.str"builtins.str*¢
parser_classè
Type[argparse._ArgumentParserT]j
argparse._ArgumentParserT2
argparse.ArgumentParser"argparse.ArgumentParser"argparse.ArgumentParser*(
dest
builtins.str"builtins.str *.
required
builtins.bool"builtins.bool *P
helpD
Union[builtins.str,None]
builtins.str"builtins.str
None *ø
metavarØ
5Union[builtins.str,builtins.tuple[builtins.str],None]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple
None z36z37z38z39z310z311*¸

add_parser%argparse._SubParsersAction.add_parser"j
argparse._ArgumentParserT2
argparse.ArgumentParser"argparse.ArgumentParser"argparse.ArgumentParser* 
selfø
5argparse._SubParsersAction[argparse._ArgumentParserT]j
argparse._ArgumentParserT2
argparse.ArgumentParser"argparse.ArgumentParser"argparse.ArgumentParser"argparse._SubParsersAction*&
name
builtins.str"builtins.str*P
helpD
Union[builtins.str,None]
builtins.str"builtins.str
None *]
aliasesN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence *P
progD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
usageD
Union[builtins.str,None]
builtins.str"builtins.str
None *W
descriptionD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
epilogD
Union[builtins.str,None]
builtins.str"builtins.str
None *π
parents©
*typing.Sequence[argparse._ArgumentParserT]j
argparse._ArgumentParserT2
argparse.ArgumentParser"argparse.ArgumentParser"argparse.ArgumentParser"typing.Sequence *K
formatter_class4
argparse._FormatterClass"argparse._FormatterClass *0
prefix_chars
builtins.str"builtins.str *a
fromfile_prefix_charsD
Union[builtins.str,None]
builtins.str"builtins.str
None *
argument_default
Any *4
conflict_handler
builtins.str"builtins.str *.
add_help
builtins.bool"builtins.bool *2
allow_abbrev
builtins.bool"builtins.bool z36z37z38*≥

add_parser%argparse._SubParsersAction.add_parser"j
argparse._ArgumentParserT2
argparse.ArgumentParser"argparse.ArgumentParser"argparse.ArgumentParser* 
selfø
5argparse._SubParsersAction[argparse._ArgumentParserT]j
argparse._ArgumentParserT2
argparse.ArgumentParser"argparse.ArgumentParser"argparse.ArgumentParser"argparse._SubParsersAction*&
name
builtins.str"builtins.str*P
helpD
Union[builtins.str,None]
builtins.str"builtins.str
None *]
aliasesN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence *P
progD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
usageD
Union[builtins.str,None]
builtins.str"builtins.str
None *W
descriptionD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
epilogD
Union[builtins.str,None]
builtins.str"builtins.str
None *π
parents©
*typing.Sequence[argparse._ArgumentParserT]j
argparse._ArgumentParserT2
argparse.ArgumentParser"argparse.ArgumentParser"argparse.ArgumentParser"typing.Sequence *K
formatter_class4
argparse._FormatterClass"argparse._FormatterClass *0
prefix_chars
builtins.str"builtins.str *a
fromfile_prefix_charsD
Union[builtins.str,None]
builtins.str"builtins.str
None *
argument_default
Any *4
conflict_handler
builtins.str"builtins.str *.
add_help
builtins.bool"builtins.bool *2
allow_abbrev
builtins.bool"builtins.bool *3
exit_on_error
builtins.bool"builtins.bool z39z310z311*˘
_get_subactions*argparse._SubParsersAction._get_subactions"S
builtins.list[argparse.Action]"
argparse.Action"argparse.Action"builtins.list* 
selfø
5argparse._SubParsersAction[argparse._ArgumentParserT]j
argparse._ArgumentParserT2
argparse.ArgumentParser"argparse.ArgumentParser"argparse.ArgumentParser"argparse._SubParsersActionz36z37z38z39z310z311Pj36j37j38j39j310j311ry
_ChoicesPseudoAction/argparse._SubParsersAction._ChoicesPseudoAction
	Type[Any]
Any*36*37*38*39*310*311ro
_prog_prefix'argparse._SubParsersAction._prog_prefix
builtins.str"builtins.str*36*37*38*39*310*311rÂ
_parser_class(argparse._SubParsersAction._parser_classè
Type[argparse._ArgumentParserT]j
argparse._ArgumentParserT2
argparse.ArgumentParser"argparse.ArgumentParser"argparse.ArgumentParser*36*37*38*39*310*311r¨
_name_parser_map+argparse._SubParsersAction._name_parser_map–
5builtins.dict[builtins.str,argparse._ArgumentParserT]
builtins.str"builtins.strj
argparse._ArgumentParserT2
argparse.ArgumentParser"argparse.ArgumentParser"argparse.ArgumentParser"builtins.dict*36*37*38*39*310*311rö
choices"argparse._SubParsersAction.choices–
5builtins.dict[builtins.str,argparse._ArgumentParserT]
builtins.str"builtins.strj
argparse._ArgumentParserT2
argparse.ArgumentParser"argparse.ArgumentParser"argparse.ArgumentParser"builtins.dict*36*37*38*39*310*311rÆ
_choices_actions+argparse._SubParsersAction._choices_actionsS
builtins.list[argparse.Action]"
argparse.Action"argparse.Action"builtins.list*36*37*38*39*310*311]
ArgumentTypeErrorargparse.ArgumentTypeError"builtins.Exceptionj36j37j38j39j310j311Q
_ExtendActionargparse._ExtendAction"argparse._AppendActionj38j39j310j311˘	
BooleanOptionalActionargparse.BooleanOptionalAction"argparse.Action*†	
__init__'argparse.BooleanOptionalAction.__init__"
None*J
self@
argparse.BooleanOptionalAction"argparse.BooleanOptionalAction*b
option_stringsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*&
dest
builtins.str"builtins.str*¶
defaultñ
$Union[argparse._T,builtins.str,None]D
argparse._T"
builtins.object"builtins.object"builtins.object
builtins.str"builtins.str
None *Õ
type¿
=Union[CallableType[builtins.function],argparse.FileType,None]K
CallableType[builtins.function]&
builtins.function"builtins.function&
argparse.FileType"argparse.FileType
None *Ω
choices≠
(Union[typing.Iterable[argparse._T],None]u
typing.Iterable[argparse._T]D
argparse._T"
builtins.object"builtins.object"builtins.object"typing.Iterable
None *.
required
builtins.bool"builtins.bool *P
helpD
Union[builtins.str,None]
builtins.str"builtins.str
None *ø
metavarØ
5Union[builtins.str,builtins.tuple[builtins.str],None]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple
None z39z310z311j39j310j311Í
_get_action_nameargparse._get_action_name"D
Union[builtins.str,None]
builtins.str"builtins.str
None*[
argumentM
Union[argparse.Action,None]"
argparse.Action"argparse.Action
Nonez36z37z38z39z310z311*û
__annotations__argparse.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*Å
__all__argparse.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*36*37*38*39*310*311*v
ONE_OR_MOREargparse.ONE_OR_MORE7
Literal[builtins.str]	
builtins.str"builtins.str*36*37*38*39*310*311*p
OPTIONALargparse.OPTIONAL7
Literal[builtins.str]	
builtins.str"builtins.str*36*37*38*39*310*311*l
PARSERargparse.PARSER7
Literal[builtins.str]	
builtins.str"builtins.str*36*37*38*39*310*311*r
	REMAINDERargparse.REMAINDER7
Literal[builtins.str]	
builtins.str"builtins.str*36*37*38*39*310*311*±
SUPPRESSargparse.SUPPRESSx
(Union[argparse._SUPPRESS_T,builtins.str],
argparse._SUPPRESS_T"argparse._SUPPRESS_T
builtins.str"builtins.str*36*37*38*39*310*311*x
ZERO_OR_MOREargparse.ZERO_OR_MORE7
Literal[builtins.str]	
builtins.str"builtins.str*36*37*38*39*310*311*s
_UNRECOGNIZED_ARGS_ATTR argparse._UNRECOGNIZED_ARGS_ATTR
builtins.str"builtins.str*36*37*38*39*310*311