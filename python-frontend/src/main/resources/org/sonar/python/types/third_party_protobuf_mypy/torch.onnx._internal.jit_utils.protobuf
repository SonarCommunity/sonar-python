
torch.onnx._internal.jit_utilsî
GraphContext+torch.onnx._internal.jit_utils.GraphContext"builtins.object*Õ
__getattr__7torch.onnx._internal.jit_utils.GraphContext.__getattr__"
Any*\Z
+torch.onnx._internal.jit_utils.GraphContext"+torch.onnx._internal.jit_utils.GraphContext*
builtins.str"builtins.str*¥
op.torch.onnx._internal.jit_utils.GraphContext.op"
Any*d
selfZ
+torch.onnx._internal.jit_utils.GraphContext"+torch.onnx._internal.jit_utils.GraphContext*(
opname
builtins.str"builtins.str*å
raw_args~
*Union[torch._tensor.Tensor,torch._C.Value],
torch._tensor.Tensor"torch._tensor.Tensor 
torch._C.Value"torch._C.Value*+
outputs
builtins.int"builtins.int *
kwargs
Any0:_beartype.beartype* 
aten_op3torch.onnx._internal.jit_utils.GraphContext.aten_op"
Any*d
selfZ
+torch.onnx._internal.jit_utils.GraphContext"+torch.onnx._internal.jit_utils.GraphContext**
operator
builtins.str"builtins.str*
args
Any*1
overload_name
builtins.str"builtins.str *
kwargs
Any0:_beartype.beartype*∂
onnxscript_op9torch.onnx._internal.jit_utils.GraphContext.onnxscript_op"
Any*d
selfZ
+torch.onnx._internal.jit_utils.GraphContext"+torch.onnx._internal.jit_utils.GraphContext*
onnx_fn
Any*å
raw_args~
*Union[torch._tensor.Tensor,torch._C.Value],
torch._tensor.Tensor"torch._tensor.Tensor 
torch._C.Value"torch._C.Value*+
outputs
builtins.int"builtins.int *
kwargs
Any0:_beartype.beartype*…
__init__4torch.onnx._internal.jit_utils.GraphContext.__init__"
None*d
selfZ
+torch.onnx._internal.jit_utils.GraphContext"+torch.onnx._internal.jit_utils.GraphContext*+
graph 
torch._C.Graph"torch._C.Graph*+
block 
torch._C.Block"torch._C.Block*'
opset
builtins.int"builtins.int*1
original_node
torch._C.Node"torch._C.Node*è
params_dict~
+builtins.dict[builtins.str,torch._C.IValue]
builtins.str"builtins.str"
torch._C.IValue"torch._C.IValue"builtins.dict*ã
envÅ
,builtins.dict[torch._C.Value,torch._C.Value] 
torch._C.Value"torch._C.Value 
torch._C.Value"torch._C.Value"builtins.dict*a
values_in_envN
builtins.set[torch._C.Value] 
torch._C.Value"torch._C.Value"builtins.set*^
	new_nodesM
builtins.list[torch._C.Node]
torch._C.Node"torch._C.Node"builtins.list 8r\
graph1torch.onnx._internal.jit_utils.GraphContext.graph 
torch._C.Graph"torch._C.Graphr\
block1torch.onnx._internal.jit_utils.GraphContext.block 
torch._C.Block"torch._C.BlockrX
opset1torch.onnx._internal.jit_utils.GraphContext.opset
builtins.int"builtins.intrj
original_node9torch.onnx._internal.jit_utils.GraphContext.original_node
torch._C.Node"torch._C.Noder∆
params_dict7torch.onnx._internal.jit_utils.GraphContext.params_dict~
+builtins.dict[builtins.str,torch._C.IValue]
builtins.str"builtins.str"
torch._C.IValue"torch._C.IValue"builtins.dictr∫
env/torch.onnx._internal.jit_utils.GraphContext.envÅ
,builtins.dict[torch._C.Value,torch._C.Value] 
torch._C.Value"torch._C.Value 
torch._C.Value"torch._C.Value"builtins.dictrö
values_in_env9torch.onnx._internal.jit_utils.GraphContext.values_in_envN
builtins.set[torch._C.Value] 
torch._C.Value"torch._C.Value"builtins.setrë
	new_nodes5torch.onnx._internal.jit_utils.GraphContext.new_nodesM
builtins.list[torch._C.Node]
torch._C.Node"torch._C.Node"builtins.listr=
at.torch.onnx._internal.jit_utils.GraphContext.at
AnyrÚ
__dataclass_fields__@torch.onnx._internal.jit_utils.GraphContext.__dataclass_fields__ó
2builtins.dict[builtins.str,dataclasses.Field[Any]]
builtins.str"builtins.str4
dataclasses.Field[Any]
Any"dataclasses.Field"builtins.dictı
_create_node+torch.onnx._internal.jit_utils._create_node"
torch._C.Node"torch._C.Node*Ä
graph_or_blockl
$Union[torch._C.Graph,torch._C.Block] 
torch._C.Graph"torch._C.Graph 
torch._C.Block"torch._C.Block*+
	domain_op
builtins.str"builtins.str*<
inputs0
typing.Sequence[Any]
Any"typing.Sequence*I

attributes9
builtins.dict[Any,Any]
Any
Any"builtins.dict*J
params_dict9
builtins.dict[Any,Any]
Any
Any"builtins.dict*/
opset_version
builtins.int"builtins.int*+
	n_outputs
builtins.int"builtins.int*5
shape_inference
builtins.bool"builtins.bool *ö
__annotations__.torch.onnx._internal.jit_utils.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
_C_onnxtorch._C._onnx *É
_ATTR_PATTERN,torch.onnx._internal.jit_utils._ATTR_PATTERND
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*ó
_SKIP_NODE_ATTRIBUTES4torch.onnx._internal.jit_utils._SKIP_NODE_ATTRIBUTESH
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.set