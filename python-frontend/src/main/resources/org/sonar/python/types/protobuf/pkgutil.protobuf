
pkgutilpkgutil†
ImpImporterpkgutil.ImpImporter"builtins.object2“
__init__pkgutil.ImpImporter.__init__"
None*4
self*
pkgutil.ImpImporter"pkgutil.ImpImporter*P
pathD
Union[builtins.str,None]
builtins.str"builtins.str
None z27z35z36z37z38z39r27r35r36r37r38r39Ç
	ImpLoaderpkgutil.ImpLoader"builtins.object2∏
__init__pkgutil.ImpLoader.__init__"
None*0
self&
pkgutil.ImpLoader"pkgutil.ImpLoader**
fullname
builtins.str"builtins.str*L
fileB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO**
filename
builtins.str"builtins.str*ï
etcã
-Tuple[builtins.str,builtins.str,builtins.int]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.intz27z35z36z37z38z39r27r35r36r37r38r39

ModuleInfopkgutil.ModuleInfo"builtins.tuple*typing.Sequence*typing.Collection*typing.Reversible*typing.Iterable*typing.Container2±
_replacepkgutil.ModuleInfo._replace"
pkgutil.ModuleInfo._NT*%
_self
pkgutil.ModuleInfo._NT*Ÿ
module_finder√
AUnion[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder]<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder *(
name
builtins.str"builtins.str *+
ispkg
builtins.bool"builtins.bool z35z36z37z38z392 
__new__pkgutil.ModuleInfo.__new__"
pkgutil.ModuleInfo._NT*F
_cls<
Type[pkgutil.ModuleInfo._NT]
pkgutil.ModuleInfo._NT*◊
module_finder√
AUnion[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder]<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder*&
name
builtins.str"builtins.str*)
ispkg
builtins.bool"builtins.boolz35z36z37z38z392π
_asdictpkgutil.ModuleInfo._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*%
_self
pkgutil.ModuleInfo._NTz35z36z37z38z392í
_makepkgutil.ModuleInfo._make"
pkgutil.ModuleInfo._NT*F
_cls<
Type[pkgutil.ModuleInfo._NT]
pkgutil.ModuleInfo._NT*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpz35z36z37z38z39r35r36r37r38r39"Ñ
extend_pathpkgutil.extend_path"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*T
pathJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*&
name
builtins.str"builtins.strz27z35z36z37z38z39"z
find_loaderpkgutil.find_loader"&
Union[Any,None]
Any
None**
fullname
builtins.str"builtins.strz27"¿
find_loaderpkgutil.find_loader"\
 Union[importlib.abc.Loader,None],
importlib.abc.Loader"importlib.abc.Loader
None**
fullname
builtins.str"builtins.strz35z36z37z38z39"}
get_importerpkgutil.get_importer"&
Union[Any,None]
Any
None*+
	path_item
builtins.str"builtins.strz27"ﬁ
get_importerpkgutil.get_importer"w
)Union[importlib.abc.PathEntryFinder,None]>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder
None*+
	path_item
builtins.str"builtins.strz35z36z37z38z39"É

get_loaderpkgutil.get_loader"+
TypeAlias[Any]
Any"pkgutil.Loader*0
module_or_name
builtins.str"builtins.strz27"î

get_loaderpkgutil.get_loader",
importlib.abc.Loader"importlib.abc.Loader*0
module_or_name
builtins.str"builtins.strz35z36z37z38z39"ª
iter_importerspkgutil.iter_importers"ﬁ
5typing.Iterator[Union[TypeAlias[Any],TypeAlias[Any]]]ì
$Union[TypeAlias[Any],TypeAlias[Any]]3
TypeAlias[Any]
Any"pkgutil.MetaPathFinder4
TypeAlias[Any]
Any"pkgutil.PathEntryFinder"typing.Iterator*,
fullname
builtins.str"builtins.str z27"ò
iter_importerspkgutil.iter_importers"´
Rtyping.Iterator[Union[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder]]√
AUnion[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder]<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder"typing.Iterator*,
fullname
builtins.str"builtins.str z35z36z37z38z39"ı
iter_modulespkgutil.iter_modules"á
btyping.Iterator[TypeAlias[Tuple[Union[TypeAlias[Any],TypeAlias[Any]],builtins.str,builtins.bool]]]è
QTypeAlias[Tuple[Union[TypeAlias[Any],TypeAlias[Any]],builtins.str,builtins.bool]]û
FTuple[Union[TypeAlias[Any],TypeAlias[Any]],builtins.str,builtins.bool]ì
$Union[TypeAlias[Any],TypeAlias[Any]]3
TypeAlias[Any]
Any"pkgutil.MetaPathFinder4
TypeAlias[Any]
Any"pkgutil.PathEntryFinder
builtins.str"builtins.str
builtins.bool"builtins.bool"pkgutil._ModuleInfoLike"typing.Iterator*î
pathá
)Union[typing.Iterable[builtins.str],None]N
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable
None **
prefix
builtins.str"builtins.str z27"Û
iter_modulespkgutil.iter_modules"ı
ttyping.Iterator[Tuple[Union[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder],builtins.str,builtins.bool]]Î
cTuple[Union[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder],builtins.str,builtins.bool]√
AUnion[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder]<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder
builtins.str"builtins.str
builtins.bool"builtins.bool"typing.Iterator*î
pathá
)Union[typing.Iterable[builtins.str],None]N
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable
None **
prefix
builtins.str"builtins.str z35z36z37z38z39"ï
	read_codepkgutil.read_code"
Any*h
stream\
$_typeshed.SupportsRead[builtins.str]
builtins.str"builtins.str"_typeshed.SupportsReadz27"´
	read_codepkgutil.read_code"
Any*n
streamb
&_typeshed.SupportsRead[builtins.bytes] 
builtins.bytes"builtins.bytes"_typeshed.SupportsReadz35z36z37z38z39"ê
walk_packagespkgutil.walk_packages"á
btyping.Iterator[TypeAlias[Tuple[Union[TypeAlias[Any],TypeAlias[Any]],builtins.str,builtins.bool]]]è
QTypeAlias[Tuple[Union[TypeAlias[Any],TypeAlias[Any]],builtins.str,builtins.bool]]û
FTuple[Union[TypeAlias[Any],TypeAlias[Any]],builtins.str,builtins.bool]ì
$Union[TypeAlias[Any],TypeAlias[Any]]3
TypeAlias[Any]
Any"pkgutil.MetaPathFinder4
TypeAlias[Any]
Any"pkgutil.PathEntryFinder
builtins.str"builtins.str
builtins.bool"builtins.bool"pkgutil._ModuleInfoLike"typing.Iterator*î
pathá
)Union[typing.Iterable[builtins.str],None]N
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable
None **
prefix
builtins.str"builtins.str *ñ
onerrorÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None z27"é
walk_packagespkgutil.walk_packages"ı
ttyping.Iterator[Tuple[Union[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder],builtins.str,builtins.bool]]Î
cTuple[Union[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder],builtins.str,builtins.bool]√
AUnion[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder]<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder
builtins.str"builtins.str
builtins.bool"builtins.bool"typing.Iterator*î
pathá
)Union[typing.Iterable[builtins.str],None]N
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable
None **
prefix
builtins.str"builtins.str *ñ
onerrorÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None z35z36z37z38z39"Ω
get_datapkgutil.get_data"D
Union[builtins.str,None]
builtins.str"builtins.str
None*)
package
builtins.str"builtins.str**
resource
builtins.str"builtins.strz27"”
get_datapkgutil.get_data"J
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None*)
package
builtins.str"builtins.str**
resource
builtins.str"builtins.strz35z36z37z38z39"Y
resolve_namepkgutil.resolve_name"
Any*&
name
builtins.str"builtins.strz39