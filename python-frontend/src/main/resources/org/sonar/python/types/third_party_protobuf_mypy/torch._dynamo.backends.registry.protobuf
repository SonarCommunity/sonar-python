
torch._dynamo.backends.registry‘

CompiledFn*torch._dynamo.backends.registry.CompiledFn"builtins.object*Ã
__call__3torch._dynamo.backends.registry.CompiledFn.__call__"d
$builtins.tuple[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"builtins.tuple*b
selfX
*torch._dynamo.backends.registry.CompiledFn"*torch._dynamo.backends.registry.CompiledFn*6
args,
torch._tensor.Tensor"torch._tensor.Tensor@X€
register_backend0torch._dynamo.backends.registry.register_backend"
Any*‚
compiler_fnî
6Union[TypeAlias[CallableType[builtins.function]],None]§
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"*torch._dynamo.backends.registry.CompilerFn
None *P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *Z
tagsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence Q
lookup_backend.torch._dynamo.backends.registry.lookup_backend*
compiler_fn§
list_backends-torch._dynamo.backends.registry.list_backends"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*
exclude_tags
Any *›
__annotations__/torch._dynamo.backends.registry.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*Ø
	_BACKENDS)torch._dynamo.backends.registry._BACKENDSŸ
Fbuiltins.dict[builtins.str,TypeAlias[CallableType[builtins.function]]]
builtins.str"builtins.str§
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"*torch._dynamo.backends.registry.CompilerFn"builtins.dict*†
register_debug_backend6torch._dynamo.backends.registry.register_debug_backend4
functools.partial[Any]
Any"functools.partial*”
register_experimental_backend=torch._dynamo.backends.registry.register_experimental_backend4
functools.partial[Any]
Any"functools.partial