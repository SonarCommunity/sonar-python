
six.moves.urllib_parse–
ParseResulturlparse.ParseResult"urlparse._ParseResult"urlparse.ResultMixin*˘
geturlurlparse.ParseResult.geturl"≥
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"urlparse._String*ó
selfå
TTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strz27j27ç
SplitResulturlparse.SplitResult"urlparse._SplitResult"urlparse.ResultMixin*∂
geturlurlparse.SplitResult.geturl"
builtins.str"builtins.str*Ï
self·
GTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strz27j27Ä
DefragResulturllib.parse.DefragResult"urllib.parse._DefragResultBase"urllib.parse._ResultMixinStrj35j36j37j38j39j310É
SplitResulturllib.parse.SplitResult"urllib.parse._SplitResultBase""urllib.parse._NetlocResultMixinStrj35j36j37j38j39j310É
ParseResulturllib.parse.ParseResult"urllib.parse._ParseResultBase""urllib.parse._NetlocResultMixinStrj35j36j37j38j39j310å
DefragResultBytesurllib.parse.DefragResultBytes"urllib.parse._DefragResultBase"urllib.parse._ResultMixinBytesj35j36j37j38j39j310î
SplitResultBytesurllib.parse.SplitResultBytes""urllib.parse._SplitResultBytesBase"$urllib.parse._NetlocResultMixinBytesj35j36j37j38j39j310î
ParseResultBytesurllib.parse.ParseResultBytes""urllib.parse._ParseResultBytesBase"$urllib.parse._NetlocResultMixinBytesj35j36j37j38j39j310x
quoteurllib.quote"
typing.AnyStr*
s
typing.AnyStr*0
safe$
builtins.unicode"builtins.unicode z27Ç

quote_plusurllib.quote_plus"
typing.AnyStr*
s
typing.AnyStr*0
safe$
builtins.unicode"builtins.unicode z27,

splitqueryurllib.splitquery*
urlz27(
splittagurllib.splittag*
urlz27+
	splituserurllib.splituser*
hostz27J
unquoteurllib.unquote"
typing.AnyStr*
s
typing.AnyStrz27T
unquote_plusurllib.unquote_plus"
typing.AnyStr*
s
typing.AnyStrz27Ω
	urlencodeurllib.urlencode"
builtins.str"builtins.str*Â
queryŸ
>Union[typing.Sequence[Tuple[Any,Any]],typing.Mapping[Any,Any]]X
typing.Sequence[Tuple[Any,Any]]$
Tuple[Any,Any]
Any
Any"typing.Sequence;
typing.Mapping[Any,Any]
Any
Any"typing.Mapping*
doseq
Any z27Õ
parse_qsurlparse.parse_qs"ü
9builtins.dict[typing.AnyStr,builtins.list[typing.AnyStr]]
typing.AnyStr@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list"builtins.dict*
qs
typing.AnyStr*7
keep_blank_values
builtins.bool"builtins.bool *4
strict_parsing
builtins.bool"builtins.bool z27æ
	parse_qslurlparse.parse_qsl"ê
1builtins.list[Tuple[typing.AnyStr,typing.AnyStr]]L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr"builtins.list*
qs
typing.AnyStr*5
keep_blank_values
builtins.int"builtins.int *4
strict_parsing
builtins.bool"builtins.bool z27ç
	urldefragurlparse.urldefrag"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*
url
typing.AnyStrz27¢
urljoinurlparse.urljoin"
typing.AnyStr*
base
typing.AnyStr*
url
typing.AnyStr*5
allow_fragments
builtins.bool"builtins.bool z27Ï
urlparseurlparse.urlparse"å
TTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*Ω
url≥
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"urlparse._String*¬
scheme≥
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"urlparse._String *5
allow_fragments
builtins.bool"builtins.bool z27¡
urlspliturlparse.urlsplit"·
GTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*Ω
url≥
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"urlparse._String*¬
scheme≥
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"urlparse._String *5
allow_fragments
builtins.bool"builtins.bool z27Ù
parse_qsurllib.parse.parse_qs"ü
9builtins.dict[typing.AnyStr,builtins.list[typing.AnyStr]]
typing.AnyStr@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list"builtins.dict*B
qs:
Union[typing.AnyStr,None]
typing.AnyStr
None*7
keep_blank_values
builtins.bool"builtins.bool *4
strict_parsing
builtins.bool"builtins.bool *,
encoding
builtins.str"builtins.str **
errors
builtins.str"builtins.str *Z
max_num_fieldsD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
	separator
builtins.str"builtins.str z35z36z37z38z39z310Á
	parse_qslurllib.parse.parse_qsl"ê
1builtins.list[Tuple[typing.AnyStr,typing.AnyStr]]L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr"builtins.list*B
qs:
Union[typing.AnyStr,None]
typing.AnyStr
None*7
keep_blank_values
builtins.bool"builtins.bool *4
strict_parsing
builtins.bool"builtins.bool *,
encoding
builtins.str"builtins.str **
errors
builtins.str"builtins.str *Z
max_num_fieldsD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
	separator
builtins.str"builtins.str z35z36z37z38z39z310Œ
quote_from_bytesurllib.parse.quote_from_bytes"
builtins.str"builtins.str*(
bs 
builtins.bytes"builtins.bytes*π
safe¨
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"urllib.parse._Str z35z36z37z38z39z310⁄
unquoteurllib.parse.unquote"
builtins.str"builtins.str*(
string
builtins.str"builtins.str*,
encoding
builtins.str"builtins.str **
errors
builtins.str"builtins.str z35z36z37z38z39z310®
unquote_to_bytesurllib.parse.unquote_to_bytes" 
builtins.bytes"builtins.bytes*π
string¨
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"urllib.parse._Strz35z36z37z38z39z310‰
unquote_plusurllib.parse.unquote_plus"
builtins.str"builtins.str*(
string
builtins.str"builtins.str*,
encoding
builtins.str"builtins.str **
errors
builtins.str"builtins.str z35z36z37z38z39z310æ
	urlencodeurllib.parse.urlencode"
builtins.str"builtins.str*›
query—
òUnion[typing.Mapping[Any,Any],typing.Mapping[Any,typing.Sequence[Any]],typing.Sequence[Tuple[Any,Any]],typing.Sequence[Tuple[Any,typing.Sequence[Any]]]];
typing.Mapping[Any,Any]
Any
Any"typing.Mappingu
(typing.Mapping[Any,typing.Sequence[Any]]
Any0
typing.Sequence[Any]
Any"typing.Sequence"typing.MappingX
typing.Sequence[Tuple[Any,Any]]$
Tuple[Any,Any]
Any
Any"typing.Sequence£
0typing.Sequence[Tuple[Any,typing.Sequence[Any]]]^
Tuple[Any,typing.Sequence[Any]]
Any0
typing.Sequence[Any]
Any"typing.Sequence"typing.Sequence*+
doseq
builtins.bool"builtins.bool *
safe
typing.AnyStr *,
encoding
builtins.str"builtins.str **
errors
builtins.str"builtins.str *\
	quote_viaK
CallableType[builtins.function]&
builtins.function"builtins.function z35z36z37z38z39z310‰
urljoinurllib.parse.urljoin"
typing.AnyStr*
base
typing.AnyStr*C
url:
Union[typing.AnyStr,None]
typing.AnyStr
None*5
allow_fragments
builtins.bool"builtins.bool z35z36z37z38z39z310"›

urlunparseurlparse.urlunparse†

urlunparseurlparse.urlunparse"
typing.AnyStr*€
data–
ZTuple[typing.AnyStr,typing.AnyStr,typing.AnyStr,typing.AnyStr,typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr
typing.AnyStr
typing.AnyStr
typing.AnyStr
typing.AnyStr0:overloadXí

urlunparseurlparse.urlunparse"
typing.AnyStr*N
dataD
typing.Sequence[typing.AnyStr]
typing.AnyStr"typing.Sequence0:overloadX"27"º

urlunspliturlparse.urlunsplitˇ

urlunspliturlparse.urlunsplit"
typing.AnyStr*∫
dataØ
LTuple[typing.AnyStr,typing.AnyStr,typing.AnyStr,typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr
typing.AnyStr
typing.AnyStr
typing.AnyStr0:overloadXí

urlunspliturlparse.urlunsplit"
typing.AnyStr*N
dataD
typing.Sequence[typing.AnyStr]
typing.AnyStr"typing.Sequence0:overloadX"27"¬
quoteurllib.parse.quote◊
quoteurllib.parse.quote"
builtins.str"builtins.str*(
string
builtins.str"builtins.str*π
safe¨
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"urllib.parse._Str *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX±
quoteurllib.parse.quote"
builtins.str"builtins.str*,
string 
builtins.bytes"builtins.bytes*π
safe¨
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"urllib.parse._Str 0:overloadX"35"36"37"38"39"310"‡

quote_plusurllib.parse.quote_plus·

quote_plusurllib.parse.quote_plus"
builtins.str"builtins.str*(
string
builtins.str"builtins.str*π
safe¨
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"urllib.parse._Str *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadXª

quote_plusurllib.parse.quote_plus"
builtins.str"builtins.str*,
string 
builtins.bytes"builtins.bytes*π
safe¨
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"urllib.parse._Str 0:overloadX"35"36"37"38"39"310"ö
	urldefragurllib.parse.urldefragê
	urldefragurllib.parse.urldefrag"6
urllib.parse.DefragResult"urllib.parse.DefragResult*%
url
builtins.str"builtins.str0:overloadX»
	urldefragurllib.parse.urldefrag"@
urllib.parse.DefragResultBytes"urllib.parse.DefragResultBytes*S
urlJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None0:overloadX"35"36"37"38"39"310"¯
urlparseurllib.parse.urlparse
urlparseurllib.parse.urlparse"å
TTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*%
url
builtins.str"builtins.str*R
schemeD
Union[builtins.str,None]
builtins.str"builtins.str
None *5
allow_fragments
builtins.bool"builtins.bool 0:overloadX»
urlparseurllib.parse.urlparse"∞
`Tuple[builtins.bytes,builtins.bytes,builtins.bytes,builtins.bytes,builtins.bytes,builtins.bytes] 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes*S
urlJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None*X
schemeJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None *5
allow_fragments
builtins.bool"builtins.bool 0:overloadX"35"36"37"38"39"310"ú
urlspliturllib.parse.urlsplit≈
urlspliturllib.parse.urlsplit"·
GTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*%
url
builtins.str"builtins.str*R
schemeD
Union[builtins.str,None]
builtins.str"builtins.str
None *5
allow_fragments
builtins.bool"builtins.bool 0:overloadXó
urlspliturllib.parse.urlsplit"ˇ
QTuple[builtins.bytes,builtins.bytes,builtins.bytes,builtins.bytes,builtins.bytes] 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes*S
urlJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None*X
schemeJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None *5
allow_fragments
builtins.bool"builtins.bool 0:overloadX"35"36"37"38"39"310"ˇ

urlunparseurllib.parse.urlunparseÈ

urlunparseurllib.parse.urlunparse"
typing.AnyStr*†

componentsè
¢Tuple[Union[typing.AnyStr,None],Union[typing.AnyStr,None],Union[typing.AnyStr,None],Union[typing.AnyStr,None],Union[typing.AnyStr,None],Union[typing.AnyStr,None]]:
Union[typing.AnyStr,None]
typing.AnyStr
None:
Union[typing.AnyStr,None]
typing.AnyStr
None:
Union[typing.AnyStr,None]
typing.AnyStr
None:
Union[typing.AnyStr,None]
typing.AnyStr
None:
Union[typing.AnyStr,None]
typing.AnyStr
None:
Union[typing.AnyStr,None]
typing.AnyStr
None0:overloadX“

urlunparseurllib.parse.urlunparse"
typing.AnyStr*â

componentsy
*typing.Sequence[Union[typing.AnyStr,None]]:
Union[typing.AnyStr,None]
typing.AnyStr
None"typing.Sequence0:overloadX"35"36"37"38"39"310"©

urlunspliturllib.parse.urlunsplitì

urlunspliturllib.parse.urlunsplit"
typing.AnyStr* 

componentsπ
àTuple[Union[typing.AnyStr,None],Union[typing.AnyStr,None],Union[typing.AnyStr,None],Union[typing.AnyStr,None],Union[typing.AnyStr,None]]:
Union[typing.AnyStr,None]
typing.AnyStr
None:
Union[typing.AnyStr,None]
typing.AnyStr
None:
Union[typing.AnyStr,None]
typing.AnyStr
None:
Union[typing.AnyStr,None]
typing.AnyStr
None:
Union[typing.AnyStr,None]
typing.AnyStr
None0:overloadX“

urlunspliturllib.parse.urlunsplit"
typing.AnyStr*â

componentsy
*typing.Sequence[Union[typing.AnyStr,None]]:
Union[typing.AnyStr,None]
typing.AnyStr
None"typing.Sequence0:overloadX"35"36"37"38"39"310*w
uses_fragmenturlparse.uses_fragmentJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*27*s
uses_netlocurlparse.uses_netlocJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*27*s
uses_paramsurlparse.uses_paramsJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*27*q

uses_queryurlparse.uses_queryJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*27*w
uses_relativeurlparse.uses_relativeJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*27*å
unquote_to_bytes'six.moves.urllib.parse.unquote_to_bytesK
CallableType[builtins.function]&
builtins.function"builtins.function*27*ê
uses_relativeurllib.parse.uses_relativeJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*35*36*37*38*39*310*å
uses_netlocurllib.parse.uses_netlocJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*35*36*37*38*39*310*å
uses_paramsurllib.parse.uses_paramsJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*35*36*37*38*39*310*ñ
non_hierarchicalurllib.parse.non_hierarchicalJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*35*36*37*38*39*310*ä

uses_queryurllib.parse.uses_queryJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*35*36*37*38*39*310*ê
uses_fragmenturllib.parse.uses_fragmentJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*35*36*37*38*39*310*`
scheme_charsurllib.parse.scheme_chars
builtins.str"builtins.str*35*36*37*38*39*310*d
MAX_CACHE_SIZEurllib.parse.MAX_CACHE_SIZE
builtins.int"builtins.int*35*36*37*38*39*310