
openpyxl.descriptors.nestedØ
Nested"openpyxl.descriptors.nested.Nested"$openpyxl.descriptors.base.Descriptor*–
__set__*openpyxl.descriptors.nested.Nested.__set__"
None*R
selfH
"openpyxl.descriptors.nested.Nested""openpyxl.descriptors.nested.Nested*Ç
instanceÛ
QUnion[openpyxl.descriptors.serialisable.Serialisable,openpyxl.descriptors.Strict]`
.openpyxl.descriptors.serialisable.Serialisable".openpyxl.descriptors.serialisable.Serialisable:
openpyxl.descriptors.Strict"openpyxl.descriptors.Strict*
value
Anyz36z37z38z39z310z311z312z313*q
	from_tree,openpyxl.descriptors.nested.Nested.from_tree*
self*
nodez36z37z38z39z310z311z312z313*˙
to_tree*openpyxl.descriptors.nested.Nested.to_tree"
Any*R
selfH
"openpyxl.descriptors.nested.Nested""openpyxl.descriptors.nested.Nested*j
tagname[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
value[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	namespace[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rw
nested)openpyxl.descriptors.nested.Nested.nested
builtins.bool"builtins.bool*36*37*38*39*310*311*312*313r{
	attribute,openpyxl.descriptors.nested.Nested.attribute
builtins.str"builtins.str*36*37*38*39*310*311*312*313•
NestedValue'openpyxl.descriptors.nested.NestedValue""openpyxl.descriptors.nested.Nested"%openpyxl.descriptors.base.Convertiblej36j37j38j39j310j311j312j313Å

NestedText&openpyxl.descriptors.nested.NestedText"'openpyxl.descriptors.nested.NestedValue*u
	from_tree0openpyxl.descriptors.nested.NestedText.from_tree*
self*
nodez36z37z38z39z310z311z312z313*Ü
to_tree.openpyxl.descriptors.nested.NestedText.to_tree"
Any*Z
selfP
&openpyxl.descriptors.nested.NestedText"&openpyxl.descriptors.nested.NestedText*j
tagname[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
value[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	namespace[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313§
NestedFloat'openpyxl.descriptors.nested.NestedFloat"'openpyxl.descriptors.nested.NestedValue"openpyxl.descriptors.base.Floatj36j37j38j39j310j311j312j313™
NestedInteger)openpyxl.descriptors.nested.NestedInteger"'openpyxl.descriptors.nested.NestedValue"!openpyxl.descriptors.base.Integerj36j37j38j39j310j311j312j313ß
NestedString(openpyxl.descriptors.nested.NestedString"'openpyxl.descriptors.nested.NestedValue" openpyxl.descriptors.base.Stringj36j37j38j39j310j311j312j313ò

NestedBool&openpyxl.descriptors.nested.NestedBool"'openpyxl.descriptors.nested.NestedValue"openpyxl.descriptors.base.Bool*u
	from_tree0openpyxl.descriptors.nested.NestedBool.from_tree*
self*
nodez36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313•
NestedNoneSet)openpyxl.descriptors.nested.NestedNoneSet""openpyxl.descriptors.nested.Nested"!openpyxl.descriptors.base.NoneSetj36j37j38j39j310j311j312j313ô
	NestedSet%openpyxl.descriptors.nested.NestedSet""openpyxl.descriptors.nested.Nested"openpyxl.descriptors.base.Setj36j37j38j39j310j311j312j313¢
NestedMinMax(openpyxl.descriptors.nested.NestedMinMax""openpyxl.descriptors.nested.Nested" openpyxl.descriptors.base.MinMaxj36j37j38j39j310j311j312j313ê
EmptyTag$openpyxl.descriptors.nested.EmptyTag""openpyxl.descriptors.nested.Nested"openpyxl.descriptors.base.Bool*s
	from_tree.openpyxl.descriptors.nested.EmptyTag.from_tree*
self*
nodez36z37z38z39z310z311z312z313*Ä
to_tree,openpyxl.descriptors.nested.EmptyTag.to_tree"
Any*V
selfL
$openpyxl.descriptors.nested.EmptyTag"$openpyxl.descriptors.nested.EmptyTag*j
tagname[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
value[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	namespace[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313*ª
__annotations__+openpyxl.descriptors.nested.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313