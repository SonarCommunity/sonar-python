
 torch.nn.parallel.parallel_applyÆ
	get_a_var*torch.nn.parallel.parallel_apply.get_a_var"\
 Union[torch._tensor.Tensor,None],
torch._tensor.Tensor"torch._tensor.Tensor
None*®
obj¤
YUnion[torch._tensor.Tensor,builtins.list[Any],builtins.tuple[Any],builtins.dict[Any,Any]],
torch._tensor.Tensor"torch._tensor.Tensor,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tuple9
builtins.dict[Any,Any]
Any
Any"builtins.dictð
parallel_apply/torch.nn.parallel.parallel_apply.parallel_apply",
builtins.list[Any]
Any"builtins.list*’
modules„
/typing.Sequence[torch.nn.modules.module.Module]@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"typing.Sequence*<
inputs0
typing.Sequence[Any]
Any"typing.Sequence*ü

kwargs_tupé
<Union[typing.Sequence[builtins.dict[builtins.str,Any]],None]œ
0typing.Sequence[builtins.dict[builtins.str,Any]]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"typing.Sequence
None *¬
devicesœ
EUnion[typing.Sequence[Union[builtins.int,torch._C.device,None]],None]Æ
9typing.Sequence[Union[builtins.int,torch._C.device,None]]x
(Union[builtins.int,torch._C.device,None]
builtins.int"builtins.int"
torch._C.device"torch._C.device
None"typing.Sequence
None *œ
__annotations__0torch.nn.parallel.parallel_apply.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
__all__(torch.nn.parallel.parallel_apply.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list