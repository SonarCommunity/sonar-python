
numpy.lib.ufunclike"‡D
fixnumpy.lib.ufunclike.fixÄ
fixnumpy.lib.ufunclike.fix".
numpy.floating[Any]
Any"numpy.floating*å
xÑ
íTypeAlias[Union[TypeAlias[Union[TypeAlias[Union[builtins.bool,numpy.bool_]],builtins.int,numpy.integer[Any]]],builtins.float,numpy.floating[Any]]]ƒ
áUnion[TypeAlias[Union[TypeAlias[Union[builtins.bool,numpy.bool_]],builtins.int,numpy.integer[Any]]],builtins.float,numpy.floating[Any]]„
]TypeAlias[Union[TypeAlias[Union[builtins.bool,numpy.bool_]],builtins.int,numpy.integer[Any]]]€
RUnion[TypeAlias[Union[builtins.bool,numpy.bool_]],builtins.int,numpy.integer[Any]]∂
+TypeAlias[Union[builtins.bool,numpy.bool_]]`
 Union[builtins.bool,numpy.bool_]
builtins.bool"builtins.bool
numpy.bool_"numpy.bool_"#numpy._typing._scalars._BoolLike_co
builtins.int"builtins.int,
numpy.integer[Any]
Any"numpy.integer""numpy._typing._scalars._IntLike_co 
builtins.float"builtins.float.
numpy.floating[Any]
Any"numpy.floating"$numpy._typing._scalars._FloatLike_co*
out
None 0:overloadXå
fixnumpy.lib.ufunclike.fix"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*¬
x∫
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike",numpy._typing._array_like._ArrayLikeFloat_co*
out
None 0:overloadXæ
fixnumpy.lib.ufunclike.fix"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*Ù
xÏ
ÀTypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]]Í
¿Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]ª
Dnumpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]I
numpy.dtype[numpy.object_]
numpy.object_"numpy.object_"numpy.dtype"(numpy._typing._array_like._SupportsArray‰
tnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]ª
Dnumpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]I
numpy.dtype[numpy.object_]
numpy.object_"numpy.object_"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequence"-numpy._typing._array_like._ArrayLikeObject_co*
out
None 0:overloadXÏ
fixnumpy.lib.ufunclike.fix"l
numpy.lib.ufunclike._ArrayType9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"numpy.ndarray*ÿ
x–
üUnion[TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]],TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]]]∫
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike",numpy._typing._array_like._ArrayLikeFloat_coÏ
ÀTypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]]Í
¿Union[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]]ª
Dnumpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]I
numpy.dtype[numpy.object_]
numpy.object_"numpy.object_"numpy.dtype"(numpy._typing._array_like._SupportsArray‰
tnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]]ª
Dnumpy._typing._array_like._SupportsArray[numpy.dtype[numpy.object_]]I
numpy.dtype[numpy.object_]
numpy.object_"numpy.object_"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequence"-numpy._typing._array_like._ArrayLikeObject_co*u
outl
numpy.lib.ufunclike._ArrayType9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"numpy.ndarray0:overloadX"ù-
isposinfnumpy.lib.ufunclike.isposinfˆ
isposinfnumpy.lib.ufunclike.isposinf"
numpy.bool_"numpy.bool_*å
xÑ
íTypeAlias[Union[TypeAlias[Union[TypeAlias[Union[builtins.bool,numpy.bool_]],builtins.int,numpy.integer[Any]]],builtins.float,numpy.floating[Any]]]ƒ
áUnion[TypeAlias[Union[TypeAlias[Union[builtins.bool,numpy.bool_]],builtins.int,numpy.integer[Any]]],builtins.float,numpy.floating[Any]]„
]TypeAlias[Union[TypeAlias[Union[builtins.bool,numpy.bool_]],builtins.int,numpy.integer[Any]]]€
RUnion[TypeAlias[Union[builtins.bool,numpy.bool_]],builtins.int,numpy.integer[Any]]∂
+TypeAlias[Union[builtins.bool,numpy.bool_]]`
 Union[builtins.bool,numpy.bool_]
builtins.bool"builtins.bool
numpy.bool_"numpy.bool_"#numpy._typing._scalars._BoolLike_co
builtins.int"builtins.int,
numpy.integer[Any]
Any"numpy.integer""numpy._typing._scalars._IntLike_co 
builtins.float"builtins.float.
numpy.floating[Any]
Any"numpy.floating"$numpy._typing._scalars._FloatLike_co*
out
None 0:overloadXñ
isposinfnumpy.lib.ufunclike.isposinf"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*¬
x∫
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike",numpy._typing._array_like._ArrayLikeFloat_co*
out
None 0:overloadX‡
isposinfnumpy.lib.ufunclike.isposinf"l
numpy.lib.ufunclike._ArrayType9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"numpy.ndarray*¬
x∫
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike",numpy._typing._array_like._ArrayLikeFloat_co*u
outl
numpy.lib.ufunclike._ArrayType9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"numpy.ndarray0:overloadX"ù-
isneginfnumpy.lib.ufunclike.isneginfˆ
isneginfnumpy.lib.ufunclike.isneginf"
numpy.bool_"numpy.bool_*å
xÑ
íTypeAlias[Union[TypeAlias[Union[TypeAlias[Union[builtins.bool,numpy.bool_]],builtins.int,numpy.integer[Any]]],builtins.float,numpy.floating[Any]]]ƒ
áUnion[TypeAlias[Union[TypeAlias[Union[builtins.bool,numpy.bool_]],builtins.int,numpy.integer[Any]]],builtins.float,numpy.floating[Any]]„
]TypeAlias[Union[TypeAlias[Union[builtins.bool,numpy.bool_]],builtins.int,numpy.integer[Any]]]€
RUnion[TypeAlias[Union[builtins.bool,numpy.bool_]],builtins.int,numpy.integer[Any]]∂
+TypeAlias[Union[builtins.bool,numpy.bool_]]`
 Union[builtins.bool,numpy.bool_]
builtins.bool"builtins.bool
numpy.bool_"numpy.bool_"#numpy._typing._scalars._BoolLike_co
builtins.int"builtins.int,
numpy.integer[Any]
Any"numpy.integer""numpy._typing._scalars._IntLike_co 
builtins.float"builtins.float.
numpy.floating[Any]
Any"numpy.floating"$numpy._typing._scalars._FloatLike_co*
out
None 0:overloadXñ
isneginfnumpy.lib.ufunclike.isneginf"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*¬
x∫
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike",numpy._typing._array_like._ArrayLikeFloat_co*
out
None 0:overloadX‡
isneginfnumpy.lib.ufunclike.isneginf"l
numpy.lib.ufunclike._ArrayType9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"numpy.ndarray*¬
x∫
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike",numpy._typing._array_like._ArrayLikeFloat_co*u
outl
numpy.lib.ufunclike._ArrayType9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"numpy.ndarray0:overloadX*è
__annotations__#numpy.lib.ufunclike.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*r
__all__numpy.lib.ufunclike.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list