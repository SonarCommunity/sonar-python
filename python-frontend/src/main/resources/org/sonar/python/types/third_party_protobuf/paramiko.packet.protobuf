
paramiko.packetπÜ
Loggerlogging.Logger"logging.Filterer*Ã
__init__logging.Logger.__init__"
None**
self 
logging.Logger"logging.Logger*&
name
builtins.str"builtins.str*Ø
level°
+TypeAlias[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"logging._Level z35z36z37z38z39z310*¢
setLevellogging.Logger.setLevel"
None**
self 
logging.Logger"logging.Logger*≠
level°
+TypeAlias[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"logging._Levelz35z36z37z38z39z310*π
isEnabledForlogging.Logger.isEnabledFor"
builtins.bool"builtins.bool**
self 
logging.Logger"logging.Logger*'
level
builtins.int"builtins.intz35z36z37z38z39z310*ò
getEffectiveLevel logging.Logger.getEffectiveLevel"
builtins.int"builtins.int**
self 
logging.Logger"logging.Loggerz35z36z37z38z39z310*¥
getChildlogging.Logger.getChild" 
logging.Logger"logging.Logger**
self 
logging.Logger"logging.Logger*(
suffix
builtins.str"builtins.strz35z36z37z38z39z310*é
debuglogging.Logger.debug"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*ø
debuglogging.Logger.debug"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*å
infologging.Logger.info"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*Ω
infologging.Logger.info"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*í
warninglogging.Logger.warning"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*√
warninglogging.Logger.warning"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*å
warnlogging.Logger.warn"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*Ω
warnlogging.Logger.warn"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*é
errorlogging.Logger.error"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*ø
errorlogging.Logger.error"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*î
criticallogging.Logger.critical"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*≈
criticallogging.Logger.critical"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*≥
loglogging.Logger.log"
None**
self 
logging.Logger"logging.Logger*'
level
builtins.int"builtins.int*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*‰
loglogging.Logger.log"
None**
self 
logging.Logger"logging.Logger*'
level
builtins.int"builtins.int*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*ñ
	exceptionlogging.Logger.exception"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz35z36z37*«
	exceptionlogging.Logger.exception"
None**
self 
logging.Logger"logging.Logger*
msg
Any*
args
Any*ù	
exc_infoå	
æTypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]∞
≥Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolô
ÇTypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ˆ
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *
kwargs
Anyz38z39z310*∂

_loglogging.Logger._log"
None**
self 
logging.Logger"logging.Logger*'
level
builtins.int"builtins.int*
msg
Any*µ
args™
FTypeAlias[Union[builtins.tuple[Any],typing.Mapping[builtins.str,Any]]] 
;Union[builtins.tuple[Any],typing.Mapping[builtins.str,Any]].
builtins.tuple[Any]
Any"builtins.tupleY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"logging._ArgsType*é
exc_info˝
°Union[builtins.bool,Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None],builtins.BaseException,None]
builtins.bool"builtins.boolø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None0
builtins.BaseException"builtins.BaseException
None *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *0

stack_info
builtins.bool"builtins.bool z35z36z37*Á

_loglogging.Logger._log"
None**
self 
logging.Logger"logging.Logger*'
level
builtins.int"builtins.int*
msg
Any*µ
args™
FTypeAlias[Union[builtins.tuple[Any],typing.Mapping[builtins.str,Any]]] 
;Union[builtins.tuple[Any],typing.Mapping[builtins.str,Any]].
builtins.tuple[Any]
Any"builtins.tupleY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"logging._ArgsType*é
exc_info˝
°Union[builtins.bool,Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None],builtins.BaseException,None]
builtins.bool"builtins.boolø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None0
builtins.BaseException"builtins.BaseException
None *†
extraí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int z38z39z310*∏
filterlogging.Logger.filter"
builtins.bool"builtins.bool**
self 
logging.Logger"logging.Logger*2
record&
logging.LogRecord"logging.LogRecordz35z36z37z38z39z310*§

addHandlerlogging.Logger.addHandler"
None**
self 
logging.Logger"logging.Logger*,
hdlr"
logging.Handler"logging.Handlerz35z36z37z38z39z310*™
removeHandlerlogging.Logger.removeHandler"
None**
self 
logging.Logger"logging.Logger*,
hdlr"
logging.Handler"logging.Handlerz35z36z37z38z39z310*˛

findCallerlogging.Logger.findCaller"Í
FTuple[builtins.str,builtins.int,builtins.str,Union[builtins.str,None]]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
None**
self 
logging.Logger"logging.Logger*0

stack_info
builtins.bool"builtins.bool z35z36z37*Ø

findCallerlogging.Logger.findCaller"Í
FTuple[builtins.str,builtins.int,builtins.str,Union[builtins.str,None]]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
None**
self 
logging.Logger"logging.Logger*0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int z38z39z310*¢
handlelogging.Logger.handle"
None**
self 
logging.Logger"logging.Logger*2
record&
logging.LogRecord"logging.LogRecordz35z36z37z38z39z310*ﬁ

makeRecordlogging.Logger.makeRecord"&
logging.LogRecord"logging.LogRecord**
self 
logging.Logger"logging.Logger*&
name
builtins.str"builtins.str*'
level
builtins.int"builtins.int*$
fn
builtins.str"builtins.str*%
lno
builtins.int"builtins.int*
msg
Any*µ
args™
FTypeAlias[Union[builtins.tuple[Any],typing.Mapping[builtins.str,Any]]] 
;Union[builtins.tuple[Any],typing.Mapping[builtins.str,Any]].
builtins.tuple[Any]
Any"builtins.tupleY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"logging._ArgsType*î
exc_infoÖ
|Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None],None]ø
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None
None*P
funcD
Union[builtins.str,None]
builtins.str"builtins.str
None *£
extraï
,Union[typing.Mapping[builtins.str,Any],None]Y
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping
None *Q
sinfoD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39z310*é
hasHandlerslogging.Logger.hasHandlers"
builtins.bool"builtins.bool**
self 
logging.Logger"logging.Loggerz35z36z37z38z39z310*Æ
callHandlerslogging.Logger.callHandlers"
None**
self 
logging.Logger"logging.Logger*2
record&
logging.LogRecord"logging.LogRecordz35z36z37z38z39z310j35j36j37j38j39j310rR
namelogging.Logger.name
builtins.str"builtins.str*35*36*37*38*39*310rT
levellogging.Logger.level
builtins.int"builtins.int*35*36*37*38*39*310rÑ
parentlogging.Logger.parentJ
Union[logging.Logger,None] 
logging.Logger"logging.Logger
None*35*36*37*38*39*310r^
	propagatelogging.Logger.propagate
builtins.bool"builtins.bool*35*36*37*38*39*310rë
handlerslogging.Logger.handlersS
builtins.list[logging.Handler]"
logging.Handler"logging.Handler"builtins.list*35*36*37*38*39*310r\
disabledlogging.Logger.disabled
builtins.bool"builtins.bool*35*36*37*38*39*310r^
rootlogging.Logger.root(
logging.RootLogger"logging.RootLogger*35*36*37*38*39*310r^
managerlogging.Logger.manager"
logging.Manager"logging.Manager*35*36*37*38*39*310rÉ
fatallogging.Logger.fatalK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310Ëp
socketsocket.socket"builtins.object*ƒ
__init__socket.socket.__init__"
None*(
self
socket.socket"socket.socket**
family
builtins.int"builtins.int *(
type
builtins.int"builtins.int *)
proto
builtins.int"builtins.int *R
filenoD
Union[builtins.int,None]
builtins.int"builtins.int
None z35z36z37z38z39z310*k
	__enter__socket.socket.__enter__"
socket._SelfT*
self
socket._SelfTz35z36z37z38z39z310*Ä
__exit__socket.socket.__exit__"
None*&
self
socket.socket"socket.socket*
args
Anyz35z36z37z38z39z310*€
acceptsocket.socket.accept"x
#Tuple[socket.socket,TypeAlias[Any]]
socket.socket"socket.socket/
TypeAlias[Any]
Any"socket._RetAddress*(
self
socket.socket"socket.socketz35z36z37z38z39z310*´
bindsocket.socket.bind"
None*(
self
socket.socket"socket.socket*¡
address≥
HUnion[TypeAlias[Union[builtins.tuple[Any],builtins.str]],builtins.bytes]¬
2TypeAlias[Union[builtins.tuple[Any],builtins.str]]y
'Union[builtins.tuple[Any],builtins.str].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str"socket._Address 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*i
closesocket.socket.close"
None*(
self
socket.socket"socket.socketz35z36z37z38z39z310*±
connectsocket.socket.connect"
None*(
self
socket.socket"socket.socket*¡
address≥
HUnion[TypeAlias[Union[builtins.tuple[Any],builtins.str]],builtins.bytes]¬
2TypeAlias[Union[builtins.tuple[Any],builtins.str]]y
'Union[builtins.tuple[Any],builtins.str].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str"socket._Address 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*À

connect_exsocket.socket.connect_ex"
builtins.int"builtins.int*(
self
socket.socket"socket.socket*¡
address≥
HUnion[TypeAlias[Union[builtins.tuple[Any],builtins.str]],builtins.bytes]¬
2TypeAlias[Union[builtins.tuple[Any],builtins.str]]y
'Union[builtins.tuple[Any],builtins.str].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str"socket._Address 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*
detachsocket.socket.detach"
builtins.int"builtins.int*(
self
socket.socket"socket.socketz35z36z37z38z39z310*{
dupsocket.socket.dup"
socket.socket"socket.socket*(
self
socket.socket"socket.socketz35z36z37z38z39z310*
filenosocket.socket.fileno"
builtins.int"builtins.int*(
self
socket.socket"socket.socketz35z36z37z38z39z310*ì
get_inheritablesocket.socket.get_inheritable"
builtins.bool"builtins.bool*(
self
socket.socket"socket.socketz35z36z37z38z39z310*ú
getpeernamesocket.socket.getpeername"/
TypeAlias[Any]
Any"socket._RetAddress*(
self
socket.socket"socket.socketz35z36z37z38z39z310*ú
getsocknamesocket.socket.getsockname"/
TypeAlias[Any]
Any"socket._RetAddress*(
self
socket.socket"socket.socketz35z36z37z38z39z310*µ

gettimeoutsocket.socket.gettimeout"J
Union[builtins.float,None] 
builtins.float"builtins.float
None*(
self
socket.socket"socket.socketz35z36z37z38z39z310*ò
listensocket.socket.listen"
None*(
self
socket.socket"socket.socket*+
	__backlog
builtins.int"builtins.int z35z36z37z38z39z310*’
recvsocket.socket.recv" 
builtins.bytes"builtins.bytes*(
self
socket.socket"socket.socket*)
bufsize
builtins.int"builtins.int*)
flags
builtins.int"builtins.int z35z36z37z38z39z310*∏
recvfromsocket.socket.recvfrom"{
$Tuple[builtins.bytes,TypeAlias[Any]] 
builtins.bytes"builtins.bytes/
TypeAlias[Any]
Any"socket._RetAddress*(
self
socket.socket"socket.socket*)
bufsize
builtins.int"builtins.int*)
flags
builtins.int"builtins.int z35z36z37z38z39z310*È
recvmsgsocket.socket.recvmsg"˝
pTuple[builtins.bytes,builtins.list[TypeAlias[Tuple[builtins.int,builtins.int,builtins.bytes]]],builtins.int,Any] 
builtins.bytes"builtins.bytesΩ
Ibuiltins.list[TypeAlias[Tuple[builtins.int,builtins.int,builtins.bytes]]]‡
:TypeAlias[Tuple[builtins.int,builtins.int,builtins.bytes]]ë
/Tuple[builtins.int,builtins.int,builtins.bytes]
builtins.int"builtins.int
builtins.int"builtins.int 
builtins.bytes"builtins.bytes"socket._CMSG"builtins.list
builtins.int"builtins.int
Any*(
self
socket.socket"socket.socket*)
	__bufsize
builtins.int"builtins.int*.
__ancbufsize
builtins.int"builtins.int *)
__flags
builtins.int"builtins.int z35z36z37z38z39z310*ç
recvmsg_intosocket.socket.recvmsg_into"˜
nTuple[builtins.int,builtins.list[TypeAlias[Tuple[builtins.int,builtins.int,builtins.bytes]]],builtins.int,Any]
builtins.int"builtins.intΩ
Ibuiltins.list[TypeAlias[Tuple[builtins.int,builtins.int,builtins.bytes]]]‡
:TypeAlias[Tuple[builtins.int,builtins.int,builtins.bytes]]ë
/Tuple[builtins.int,builtins.int,builtins.bytes]
builtins.int"builtins.int
builtins.int"builtins.int 
builtins.bytes"builtins.bytes"socket._CMSG"builtins.list
builtins.int"builtins.int
Any*(
self
socket.socket"socket.socket*»
	__buffers∫
Ityping.Iterable[TypeAlias[Union[builtins.bytearray,builtins.memoryview]]]€
8TypeAlias[Union[builtins.bytearray,builtins.memoryview]]á
-Union[builtins.bytearray,builtins.memoryview](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview"socket._WriteBuffer"typing.Iterable*.
__ancbufsize
builtins.int"builtins.int *)
__flags
builtins.int"builtins.int z35z36z37z38z39z310*®
recvfrom_intosocket.socket.recvfrom_into"u
"Tuple[builtins.int,TypeAlias[Any]]
builtins.int"builtins.int/
TypeAlias[Any]
Any"socket._RetAddress*(
self
socket.socket"socket.socket*Ë
buffer€
8TypeAlias[Union[builtins.bytearray,builtins.memoryview]]á
-Union[builtins.bytearray,builtins.memoryview](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview"socket._WriteBuffer**
nbytes
builtins.int"builtins.int *)
flags
builtins.int"builtins.int z35z36z37z38z39z310*«
	recv_intosocket.socket.recv_into"
builtins.int"builtins.int*(
self
socket.socket"socket.socket*Ë
buffer€
8TypeAlias[Union[builtins.bytearray,builtins.memoryview]]á
-Union[builtins.bytearray,builtins.memoryview](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview"socket._WriteBuffer**
nbytes
builtins.int"builtins.int *)
flags
builtins.int"builtins.int z35z36z37z38z39z310*“
sendsocket.socket.send"
builtins.int"builtins.int*(
self
socket.socket"socket.socket**
data 
builtins.bytes"builtins.bytes*)
flags
builtins.int"builtins.int z35z36z37z38z39z310*ƒ
sendallsocket.socket.sendall"
None*(
self
socket.socket"socket.socket**
data 
builtins.bytes"builtins.bytes*)
flags
builtins.int"builtins.int z35z36z37z38z39z310*∏
sendmsgsocket.socket.sendmsg"
builtins.int"builtins.int*(
self
socket.socket"socket.socket*a
	__buffersT
typing.Iterable[builtins.bytes] 
builtins.bytes"builtins.bytes"typing.Iterable*—
	__ancdata¡
Ktyping.Iterable[TypeAlias[Tuple[builtins.int,builtins.int,builtins.bytes]]]‡
:TypeAlias[Tuple[builtins.int,builtins.int,builtins.bytes]]ë
/Tuple[builtins.int,builtins.int,builtins.bytes]
builtins.int"builtins.int
builtins.int"builtins.int 
builtins.bytes"builtins.bytes"socket._CMSG"typing.Iterable *)
__flags
builtins.int"builtins.int *“
	__address¬
2TypeAlias[Union[builtins.tuple[Any],builtins.str]]y
'Union[builtins.tuple[Any],builtins.str].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str"socket._Address z35z36z37z38z39z310*∞
sendfilesocket.socket.sendfile"
builtins.int"builtins.int*(
self
socket.socket"socket.socket*,
file"
typing.BinaryIO"typing.BinaryIO**
offset
builtins.int"builtins.int *Q
countD
Union[builtins.int,None]
builtins.int"builtins.int
None z35z36z37z38z39z310*Æ
set_inheritablesocket.socket.set_inheritable"
None*(
self
socket.socket"socket.socket*/
inheritable
builtins.bool"builtins.boolz35z36z37z38z39z310*ü
setblockingsocket.socket.setblocking"
None*(
self
socket.socket"socket.socket*(
flag
builtins.bool"builtins.boolz35z36z37z38z39z310* 

settimeoutsocket.socket.settimeout"
None*(
self
socket.socket"socket.socket*U
valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
Nonez35z36z37z38z39z310*•

setsockoptsocket.socket.setsockopt"
None*(
self
socket.socket"socket.socket*'
level
builtins.int"builtins.int*)
optname
builtins.int"builtins.int*q
valuef
"Union[builtins.int,builtins.bytes]
builtins.int"builtins.int 
builtins.bytes"builtins.bytesz35*ñ
shutdownsocket.socket.shutdown"
None*(
self
socket.socket"socket.socket*%
how
builtins.int"builtins.intz35z36z37z38z39z310*¸
sendmsg_afalgsocket.socket.sendmsg_afalg"
builtins.int"builtins.int*(
self
socket.socket"socket.socket*_
msgT
typing.Iterable[builtins.bytes] 
builtins.bytes"builtins.bytes"typing.Iterable *$
op
builtins.int"builtins.int*
iv
Any *,
assoclen
builtins.int"builtins.int *)
flags
builtins.int"builtins.int z36z37z38z39z310*É
getblockingsocket.socket.getblocking"
builtins.bool"builtins.bool*(
self
socket.socket"socket.socketz37z38z39z3102ì

getsockoptsocket.socket.getsockopt–

getsockoptsocket.socket.getsockopt"
builtins.int"builtins.int*(
self
socket.socket"socket.socket*'
level
builtins.int"builtins.int*)
optname
builtins.int"builtins.int0:overloadX˛

getsockoptsocket.socket.getsockopt" 
builtins.bytes"builtins.bytes*(
self
socket.socket"socket.socket*'
level
builtins.int"builtins.int*)
optname
builtins.int"builtins.int*(
buflen
builtins.int"builtins.int0:overloadX"35"36"37"38"39"3102à
makefilesocket.socket.makefileı
makefilesocket.socket.makefile"
typing.TextIO"typing.TextIO*(
self
socket.socket"socket.socket*¢
modeï
tUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *U
	bufferingD
Union[builtins.int,None]
builtins.int"builtins.int
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX“

makefilesocket.socket.makefile""
typing.BinaryIO"typing.BinaryIO*(
self
socket.socket"socket.socket*˚
mode
¯Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*U
	bufferingD
Union[builtins.int,None]
builtins.int"builtins.int
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX"35"36"37"38"39"3102Ã
sendtosocket.socket.sendtoÛ
sendtosocket.socket.sendto"
builtins.int"builtins.int*(
self
socket.socket"socket.socket**
data 
builtins.bytes"builtins.bytes*–
address¬
2TypeAlias[Union[builtins.tuple[Any],builtins.str]]y
'Union[builtins.tuple[Any],builtins.str].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str"socket._Address0:overloadXú
sendtosocket.socket.sendto"
builtins.int"builtins.int*(
self
socket.socket"socket.socket**
data 
builtins.bytes"builtins.bytes*'
flags
builtins.int"builtins.int*–
address¬
2TypeAlias[Union[builtins.tuple[Any],builtins.str]]y
'Union[builtins.tuple[Any],builtins.str].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str"socket._Address0:overloadX"35"36"37"38"39"3102Î

setsockoptsocket.socket.setsockoptØ

setsockoptsocket.socket.setsockopt"
None*(
self
socket.socket"socket.socket*'
level
builtins.int"builtins.int*)
optname
builtins.int"builtins.int*q
valuef
"Union[builtins.int,builtins.bytes]
builtins.int"builtins.int 
builtins.bytes"builtins.bytes0:overloadX˚

setsockoptsocket.socket.setsockopt"
None*(
self
socket.socket"socket.socket*'
level
builtins.int"builtins.int*)
optname
builtins.int"builtins.int*
value
None*(
optlen
builtins.int"builtins.int0:overloadX"36"37"38"39"310j35j36j37j38j39j310rU
familysocket.socket.family
builtins.int"builtins.int*35*36*37*38*39*310rQ
typesocket.socket.type
builtins.int"builtins.int*35*36*37*38*39*310rS
protosocket.socket.proto
builtins.int"builtins.int*35*36*37*38*39*310∑
Cipher-cryptography.hazmat.primitives.ciphers.Cipher"builtins.object*„
__init__6cryptography.hazmat.primitives.ciphers.Cipher.__init__"
None*h
self^
-cryptography.hazmat.primitives.ciphers.Cipher"-cryptography.hazmat.primitives.ciphers.Cipher*
	algorithmp
6cryptography.hazmat.primitives.ciphers.CipherAlgorithm"6cryptography.hazmat.primitives.ciphers.CipherAlgorithm*æ
mode≥
=Union[cryptography.hazmat.primitives.ciphers.modes.Mode,None]f
1cryptography.hazmat.primitives.ciphers.modes.Mode"1cryptography.hazmat.primitives.ciphers.modes.Mode
None*œ
backendø
AUnion[cryptography.hazmat.backends.interfaces.CipherBackend,None]n
5cryptography.hazmat.backends.interfaces.CipherBackend"5cryptography.hazmat.backends.interfaces.CipherBackend
None z35z36z37z38z39z310*µ
	decryptor7cryptography.hazmat.primitives.ciphers.Cipher.decryptor"l
4cryptography.hazmat.primitives.ciphers.CipherContext"4cryptography.hazmat.primitives.ciphers.CipherContext*h
self^
-cryptography.hazmat.primitives.ciphers.Cipher"-cryptography.hazmat.primitives.ciphers.Cipherz35z36z37z38z39z310*µ
	encryptor7cryptography.hazmat.primitives.ciphers.Cipher.encryptor"l
4cryptography.hazmat.primitives.ciphers.CipherContext"4cryptography.hazmat.primitives.ciphers.CipherContext*h
self^
-cryptography.hazmat.primitives.ciphers.Cipher"-cryptography.hazmat.primitives.ciphers.Cipherz35z36z37z38z39z310j35j36j37j38j39j310⁄
ZlibCompressor paramiko.compress.ZlibCompressor"builtins.object*®
__init__)paramiko.compress.ZlibCompressor.__init__"
None*N
selfD
 paramiko.compress.ZlibCompressor" paramiko.compress.ZlibCompressorz35z36z37z38z39z310*Ï
__call__)paramiko.compress.ZlibCompressor.__call__" 
builtins.bytes"builtins.bytes*N
selfD
 paramiko.compress.ZlibCompressor" paramiko.compress.ZlibCompressor**
data 
builtins.bytes"builtins.bytesz35z36z37z38z39z310j35j36j37j38j39j310rb
z"paramiko.compress.ZlibCompressor.z 
zlib._Compress"zlib._Compress*35*36*37*38*39*310
ZlibDecompressor"paramiko.compress.ZlibDecompressor"builtins.object*Æ
__init__+paramiko.compress.ZlibDecompressor.__init__"
None*R
selfH
"paramiko.compress.ZlibDecompressor""paramiko.compress.ZlibDecompressorz35z36z37z38z39z310*Ú
__call__+paramiko.compress.ZlibDecompressor.__call__" 
builtins.bytes"builtins.bytes*R
selfH
"paramiko.compress.ZlibDecompressor""paramiko.compress.ZlibDecompressor**
data 
builtins.bytes"builtins.bytesz35z36z37z38z39z310j35j36j37j38j39j310rh
z$paramiko.compress.ZlibDecompressor.z$
zlib._Decompress"zlib._Decompress*35*36*37*38*39*310 -
Messageparamiko.message.Message"builtins.object*Î
__init__!paramiko.message.Message.__init__"
None*>
self4
paramiko.message.Message"paramiko.message.Message*Y
contentJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None z35z36z37z38z39z310*¶
asbytes paramiko.message.Message.asbytes" 
builtins.bytes"builtins.bytes*>
self4
paramiko.message.Message"paramiko.message.Messagez35z36z37z38z39z310*å
rewindparamiko.message.Message.rewind"
None*>
self4
paramiko.message.Message"paramiko.message.Messagez35z36z37z38z39z310*≤
get_remainder&paramiko.message.Message.get_remainder" 
builtins.bytes"builtins.bytes*>
self4
paramiko.message.Message"paramiko.message.Messagez35z36z37z38z39z310*¨

get_so_far#paramiko.message.Message.get_so_far" 
builtins.bytes"builtins.bytes*>
self4
paramiko.message.Message"paramiko.message.Messagez35z36z37z38z39z310*œ
	get_bytes"paramiko.message.Message.get_bytes" 
builtins.bytes"builtins.bytes*>
self4
paramiko.message.Message"paramiko.message.Message*#
n
builtins.int"builtins.intz35z36z37z38z39z310*®
get_byte!paramiko.message.Message.get_byte" 
builtins.bytes"builtins.bytes*>
self4
paramiko.message.Message"paramiko.message.Messagez35z36z37z38z39z310*¨
get_boolean$paramiko.message.Message.get_boolean"
builtins.bool"builtins.bool*>
self4
paramiko.message.Message"paramiko.message.Messagez35z36z37z38z39z310*¥
get_adaptive_int)paramiko.message.Message.get_adaptive_int"
builtins.int"builtins.int*>
self4
paramiko.message.Message"paramiko.message.Messagez35z36z37z38z39z310*¢
get_int paramiko.message.Message.get_int"
builtins.int"builtins.int*>
self4
paramiko.message.Message"paramiko.message.Messagez35z36z37z38z39z310*¶
	get_int64"paramiko.message.Message.get_int64"
builtins.int"builtins.int*>
self4
paramiko.message.Message"paramiko.message.Messagez35z36z37z38z39z310*¶
	get_mpint"paramiko.message.Message.get_mpint"
builtins.int"builtins.int*>
self4
paramiko.message.Message"paramiko.message.Messagez35z36z37z38z39z310*¨

get_string#paramiko.message.Message.get_string" 
builtins.bytes"builtins.bytes*>
self4
paramiko.message.Message"paramiko.message.Messagez35z36z37z38z39z310*§
get_text!paramiko.message.Message.get_text"
builtins.str"builtins.str*>
self4
paramiko.message.Message"paramiko.message.Messagez35z36z37z38z39z310*¨

get_binary#paramiko.message.Message.get_binary" 
builtins.bytes"builtins.bytes*>
self4
paramiko.message.Message"paramiko.message.Messagez35z36z37z38z39z310*“
get_list!paramiko.message.Message.get_list"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*>
self4
paramiko.message.Message"paramiko.message.Messagez35z36z37z38z39z310*Á
	add_bytes"paramiko.message.Message.add_bytes"4
paramiko.message.Message"paramiko.message.Message*>
self4
paramiko.message.Message"paramiko.message.Message*'
b 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*Â
add_byte!paramiko.message.Message.add_byte"4
paramiko.message.Message"paramiko.message.Message*>
self4
paramiko.message.Message"paramiko.message.Message*'
b 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*È
add_boolean$paramiko.message.Message.add_boolean"4
paramiko.message.Message"paramiko.message.Message*>
self4
paramiko.message.Message"paramiko.message.Message*%
b
builtins.bool"builtins.boolz35z36z37z38z39z310*ﬂ
add_int paramiko.message.Message.add_int"4
paramiko.message.Message"paramiko.message.Message*>
self4
paramiko.message.Message"paramiko.message.Message*#
n
builtins.int"builtins.intz35z36z37z38z39z310*Ò
add_adaptive_int)paramiko.message.Message.add_adaptive_int"4
paramiko.message.Message"paramiko.message.Message*>
self4
paramiko.message.Message"paramiko.message.Message*#
n
builtins.int"builtins.intz35z36z37z38z39z310*„
	add_int64"paramiko.message.Message.add_int64"4
paramiko.message.Message"paramiko.message.Message*>
self4
paramiko.message.Message"paramiko.message.Message*#
n
builtins.int"builtins.intz35z36z37z38z39z310*„
	add_mpint"paramiko.message.Message.add_mpint"4
paramiko.message.Message"paramiko.message.Message*>
self4
paramiko.message.Message"paramiko.message.Message*#
z
builtins.int"builtins.intz35z36z37z38z39z310*â

add_string#paramiko.message.Message.add_string"4
paramiko.message.Message"paramiko.message.Message*>
self4
paramiko.message.Message"paramiko.message.Message*∆
sæ
NTypeAlias[Union[builtins.bytes,builtins.str,paramiko.common._SupportsAsBytes]]Õ
CUnion[builtins.bytes,builtins.str,paramiko.common._SupportsAsBytes] 
builtins.bytes"builtins.bytes
builtins.str"builtins.strD
 paramiko.common._SupportsAsBytes" paramiko.common._SupportsAsBytes"paramiko.common._LikeBytesz35z36z37z38z39z310*ì
add_list!paramiko.message.Message.add_list"4
paramiko.message.Message"paramiko.message.Message*>
self4
paramiko.message.Message"paramiko.message.Message*U
lN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterablez35z36z37z38z39z310*ò
addparamiko.message.Message.add"
None*>
self4
paramiko.message.Message"paramiko.message.Message*
seq
Anyz35z36z37z38z39z310j35j36j37j38j39j310rb
big_int paramiko.message.Message.big_int
builtins.int"builtins.int*35*36*37*38*39*310r\
packetparamiko.message.Message.packet

io.BytesIO"
io.BytesIO*35*36*37*38*39*310r^
seqnoparamiko.message.Message.seqno
builtins.int"builtins.int*35*36*37*38*39*310é
_Hashhashlib._Hash"builtins.object*ó
__init__hashlib._Hash.__init__"
None*(
self
hashlib._Hash"hashlib._Hash*•
dataò
bTypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]ï
WUnion[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap] 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap"_typeshed.ReadableBuffer z35z36z37z38z39z310*}
copyhashlib._Hash.copy"
hashlib._Hash"hashlib._Hash*(
self
hashlib._Hash"hashlib._Hashz35z36z37z38z39z310*É
digesthashlib._Hash.digest" 
builtins.bytes"builtins.bytes*(
self
hashlib._Hash"hashlib._Hashz35z36z37z38z39z310*Ö
	hexdigesthashlib._Hash.hexdigest"
builtins.str"builtins.str*(
self
hashlib._Hash"hashlib._Hashz35z36z37z38z39z310*ë
updatehashlib._Hash.update"
None*(
self
hashlib._Hash"hashlib._Hash*£
__dataò
bTypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]ï
WUnion[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap] 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap"_typeshed.ReadableBufferz35z36z37z38z39z310j35j36j37j38j39j310r_
digest_sizehashlib._Hash.digest_size
builtins.int"builtins.int*35*36*37*38*39*310r]

block_sizehashlib._Hash.block_size
builtins.int"builtins.int*35*36*37*38*39*310rQ
namehashlib._Hash.name
builtins.str"builtins.str*35*36*37*38*39*310e
NeedRekeyException"paramiko.packet.NeedRekeyException"builtins.Exceptionj35j36j37j38j39j310—/

Packetizerparamiko.packet.Packetizer"builtins.object*¬
__init__#paramiko.packet.Packetizer.__init__"
None*B
self8
paramiko.packet.Packetizer"paramiko.packet.Packetizer**
socket
socket.socket"socket.socketz35z36z37z38z39z310*∂
closed!paramiko.packet.Packetizer.closed"
builtins.bool"builtins.bool*B
self8
paramiko.packet.Packetizer"paramiko.packet.Packetizer0:property`z35z36z37z38z39z310*ø
set_log"paramiko.packet.Packetizer.set_log"
None*B
self8
paramiko.packet.Packetizer"paramiko.packet.Packetizer*)
log 
logging.Logger"logging.Loggerz35z36z37z38z39z310*Ø
set_outbound_cipher.paramiko.packet.Packetizer.set_outbound_cipher"
None*B
self8
paramiko.packet.Packetizer"paramiko.packet.Packetizer*p
block_engine^
-cryptography.hazmat.primitives.ciphers.Cipher"-cryptography.hazmat.primitives.ciphers.Cipher*,

block_size
builtins.int"builtins.int*.

mac_engine
hashlib._Hash"hashlib._Hash**
mac_size
builtins.int"builtins.int*-
mac_key 
builtins.bytes"builtins.bytes*+
sdctr
builtins.bool"builtins.bool *)
etm
builtins.bool"builtins.bool z35z36z37z38z39z310*Ä
set_inbound_cipher-paramiko.packet.Packetizer.set_inbound_cipher"
None*B
self8
paramiko.packet.Packetizer"paramiko.packet.Packetizer*p
block_engine^
-cryptography.hazmat.primitives.ciphers.Cipher"-cryptography.hazmat.primitives.ciphers.Cipher*,

block_size
builtins.int"builtins.int*.

mac_engine
hashlib._Hash"hashlib._Hash**
mac_size
builtins.int"builtins.int*-
mac_key 
builtins.bytes"builtins.bytes*)
etm
builtins.bool"builtins.bool z35z36z37z38z39z310*ä
set_outbound_compressor2paramiko.packet.Packetizer.set_outbound_compressor"
None*B
self8
paramiko.packet.Packetizer"paramiko.packet.Packetizer*T

compressorD
 paramiko.compress.ZlibCompressor" paramiko.compress.ZlibCompressorz35z36z37z38z39z310*å
set_inbound_compressor1paramiko.packet.Packetizer.set_inbound_compressor"
None*B
self8
paramiko.packet.Packetizer"paramiko.packet.Packetizer*X

compressorH
"paramiko.compress.ZlibDecompressor""paramiko.compress.ZlibDecompressorz35z36z37z38z39z310*ê
close paramiko.packet.Packetizer.close"
None*B
self8
paramiko.packet.Packetizer"paramiko.packet.Packetizerz35z36z37z38z39z310*…
set_hexdump&paramiko.packet.Packetizer.set_hexdump"
None*B
self8
paramiko.packet.Packetizer"paramiko.packet.Packetizer*+
hexdump
builtins.bool"builtins.boolz35z36z37z38z39z310*≤
get_hexdump&paramiko.packet.Packetizer.get_hexdump"
builtins.bool"builtins.bool*B
self8
paramiko.packet.Packetizer"paramiko.packet.Packetizerz35z36z37z38z39z310*∏
get_mac_size_in*paramiko.packet.Packetizer.get_mac_size_in"
builtins.int"builtins.int*B
self8
paramiko.packet.Packetizer"paramiko.packet.Packetizerz35z36z37z38z39z310*∫
get_mac_size_out+paramiko.packet.Packetizer.get_mac_size_out"
builtins.int"builtins.int*B
self8
paramiko.packet.Packetizer"paramiko.packet.Packetizerz35z36z37z38z39z310*∞

need_rekey%paramiko.packet.Packetizer.need_rekey"
builtins.bool"builtins.bool*B
self8
paramiko.packet.Packetizer"paramiko.packet.Packetizerz35z36z37z38z39z310*ß
set_keepalive(paramiko.packet.Packetizer.set_keepalive"
None*B
self8
paramiko.packet.Packetizer"paramiko.packet.Packetizer**
interval
builtins.int"builtins.int*Y
callbackK
CallableType[builtins.function]&
builtins.function"builtins.functionz35z36z37z38z39z310*ö

read_timer%paramiko.packet.Packetizer.read_timer"
None*B
self8
paramiko.packet.Packetizer"paramiko.packet.Packetizerz35z36z37z38z39z310*”
start_handshake*paramiko.packet.Packetizer.start_handshake"
None*B
self8
paramiko.packet.Packetizer"paramiko.packet.Packetizer*-
timeout 
builtins.float"builtins.floatz35z36z37z38z39z310*¬
handshake_timed_out.paramiko.packet.Packetizer.handshake_timed_out"
builtins.bool"builtins.bool*B
self8
paramiko.packet.Packetizer"paramiko.packet.Packetizerz35z36z37z38z39z310*™
complete_handshake-paramiko.packet.Packetizer.complete_handshake"
None*B
self8
paramiko.packet.Packetizer"paramiko.packet.Packetizerz35z36z37z38z39z310*Ü
read_all#paramiko.packet.Packetizer.read_all" 
builtins.bytes"builtins.bytes*B
self8
paramiko.packet.Packetizer"paramiko.packet.Packetizer*#
n
builtins.int"builtins.int*1
check_rekey
builtins.bool"builtins.bool z35z36z37z38z39z310*√
	write_all$paramiko.packet.Packetizer.write_all"
None*B
self8
paramiko.packet.Packetizer"paramiko.packet.Packetizer*)
out 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*Ÿ
readline#paramiko.packet.Packetizer.readline"
builtins.str"builtins.str*B
self8
paramiko.packet.Packetizer"paramiko.packet.Packetizer*-
timeout 
builtins.float"builtins.floatz35z36z37z38z39z310*ﬁ
send_message'paramiko.packet.Packetizer.send_message"
None*B
self8
paramiko.packet.Packetizer"paramiko.packet.Packetizer*>
data4
paramiko.message.Message"paramiko.message.Messagez35z36z37z38z39z310*õ
read_message'paramiko.packet.Packetizer.read_message"Ñ
,Tuple[builtins.int,paramiko.message.Message]
builtins.int"builtins.int4
paramiko.message.Message"paramiko.message.Message*B
self8
paramiko.packet.Packetizer"paramiko.packet.Packetizerz35z36z37z38z39z310j35j36j37j38j39j310rp
REKEY_PACKETS(paramiko.packet.Packetizer.REKEY_PACKETS
builtins.int"builtins.int*35*36*37*38*39*310rl
REKEY_BYTES&paramiko.packet.Packetizer.REKEY_BYTES
builtins.int"builtins.int*35*36*37*38*39*310rä
REKEY_PACKETS_OVERFLOW_MAX5paramiko.packet.Packetizer.REKEY_PACKETS_OVERFLOW_MAX
builtins.int"builtins.int*35*36*37*38*39*310rÜ
REKEY_BYTES_OVERFLOW_MAX3paramiko.packet.Packetizer.REKEY_BYTES_OVERFLOW_MAX
builtins.int"builtins.int*35*36*37*38*39*310Û
compute_hmacparamiko.packet.compute_hmac" 
builtins.bytes"builtins.bytes*)
key 
builtins.bytes"builtins.bytes*-
message 
builtins.bytes"builtins.bytes*0
digest_class
hashlib._Hash"hashlib._Hashz35z36z37z38z39z310y
	first_argparamiko.packet.first_arg"
Any*/
e(
builtins.Exception"builtins.Exceptionz35z36z37z38z39z310*%
syssys *35*36*37*38*39*310*N
Any
typing.Any"
builtins.object"builtins.object*35*36*37*38*39*310*`
Callabletyping.Callable*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*Z
Tupletyping.Tuple*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310