
regex€
errorregex._regex_core.error"builtins.Exception*ä
__init__ regex._regex_core.error.__init__"
None*<
self2
regex._regex_core.error"regex._regex_core.error*)
message
builtins.str"builtins.str*~
patterno
Union[typing.AnyStr,None]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object
None *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None z36z37z38z39z310z311j36j37j38j39j310j311‰
	RegexFlagregex._regex_core.RegexFlag"enum.IntFlagHj36j37j38j39j310j311rZ
Aregex._regex_core.RegexFlag.A
builtins.int"builtins.int*36*37*38*39*310*311rb
ASCII!regex._regex_core.RegexFlag.ASCII
builtins.int"builtins.int*36*37*38*39*310*311rZ
Bregex._regex_core.RegexFlag.B
builtins.int"builtins.int*36*37*38*39*310*311rj
	BESTMATCH%regex._regex_core.RegexFlag.BESTMATCH
builtins.int"builtins.int*36*37*38*39*310*311rZ
Dregex._regex_core.RegexFlag.D
builtins.int"builtins.int*36*37*38*39*310*311rb
DEBUG!regex._regex_core.RegexFlag.DEBUG
builtins.int"builtins.int*36*37*38*39*310*311rZ
Eregex._regex_core.RegexFlag.E
builtins.int"builtins.int*36*37*38*39*310*311rp
ENHANCEMATCH(regex._regex_core.RegexFlag.ENHANCEMATCH
builtins.int"builtins.int*36*37*38*39*310*311rZ
Fregex._regex_core.RegexFlag.F
builtins.int"builtins.int*36*37*38*39*310*311rh
FULLCASE$regex._regex_core.RegexFlag.FULLCASE
builtins.int"builtins.int*36*37*38*39*310*311rZ
Iregex._regex_core.RegexFlag.I
builtins.int"builtins.int*36*37*38*39*310*311rl

IGNORECASE&regex._regex_core.RegexFlag.IGNORECASE
builtins.int"builtins.int*36*37*38*39*310*311rZ
Lregex._regex_core.RegexFlag.L
builtins.int"builtins.int*36*37*38*39*310*311rd
LOCALE"regex._regex_core.RegexFlag.LOCALE
builtins.int"builtins.int*36*37*38*39*310*311rZ
Mregex._regex_core.RegexFlag.M
builtins.int"builtins.int*36*37*38*39*310*311rj
	MULTILINE%regex._regex_core.RegexFlag.MULTILINE
builtins.int"builtins.int*36*37*38*39*310*311rZ
Pregex._regex_core.RegexFlag.P
builtins.int"builtins.int*36*37*38*39*310*311rb
POSIX!regex._regex_core.RegexFlag.POSIX
builtins.int"builtins.int*36*37*38*39*310*311rZ
Rregex._regex_core.RegexFlag.R
builtins.int"builtins.int*36*37*38*39*310*311rf
REVERSE#regex._regex_core.RegexFlag.REVERSE
builtins.int"builtins.int*36*37*38*39*310*311rZ
Tregex._regex_core.RegexFlag.T
builtins.int"builtins.int*36*37*38*39*310*311rh
TEMPLATE$regex._regex_core.RegexFlag.TEMPLATE
builtins.int"builtins.int*36*37*38*39*310*311rZ
Sregex._regex_core.RegexFlag.S
builtins.int"builtins.int*36*37*38*39*310*311rd
DOTALL"regex._regex_core.RegexFlag.DOTALL
builtins.int"builtins.int*36*37*38*39*310*311rZ
Uregex._regex_core.RegexFlag.U
builtins.int"builtins.int*36*37*38*39*310*311rf
UNICODE#regex._regex_core.RegexFlag.UNICODE
builtins.int"builtins.int*36*37*38*39*310*311r\
V0regex._regex_core.RegexFlag.V0
builtins.int"builtins.int*36*37*38*39*310*311rh
VERSION0$regex._regex_core.RegexFlag.VERSION0
builtins.int"builtins.int*36*37*38*39*310*311r\
V1regex._regex_core.RegexFlag.V1
builtins.int"builtins.int*36*37*38*39*310*311rh
VERSION1$regex._regex_core.RegexFlag.VERSION1
builtins.int"builtins.int*36*37*38*39*310*311rZ
Wregex._regex_core.RegexFlag.W
builtins.int"builtins.int*36*37*38*39*310*311r`
WORD regex._regex_core.RegexFlag.WORD
builtins.int"builtins.int*36*37*38*39*310*311rZ
Xregex._regex_core.RegexFlag.X
builtins.int"builtins.int*36*37*38*39*310*311rf
VERBOSE#regex._regex_core.RegexFlag.VERBOSE
builtins.int"builtins.int*36*37*38*39*310*311ñ
Scannerregex._regex_core.Scanner"builtins.object*æ
__init__"regex._regex_core.Scanner.__init__"
None*ò
selfç
(regex._regex_core.Scanner[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex._regex_core.Scanner*£
lexiconï
NTypeAlias[builtins.list[Tuple[typing.AnyStr,CallableType[builtins.function]]]]§
Cbuiltins.list[Tuple[typing.AnyStr,CallableType[builtins.function]]]Õ
4Tuple[typing.AnyStr,CallableType[builtins.function]]F
typing.AnyStr"
builtins.object"builtins.object"builtins.objectK
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.list"regex._regex_core._Lexicon*)
flags
builtins.int"builtins.int z36z37z38z39z310z311*”
scanregex._regex_core.Scanner.scan"°
'Tuple[builtins.list[Any],typing.AnyStr],
builtins.list[Any]
Any"builtins.listF
typing.AnyStr"
builtins.object"builtins.object"builtins.object*ò
selfç
(regex._regex_core.Scanner[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex._regex_core.Scanner*R
stringF
typing.AnyStr"
builtins.object"builtins.object"builtins.objectz36z37z38z39z310z311Pj36j37j38j39j310j311rﬁ
lexicon!regex._regex_core.Scanner.lexiconï
NTypeAlias[builtins.list[Tuple[typing.AnyStr,CallableType[builtins.function]]]]§
Cbuiltins.list[Tuple[typing.AnyStr,CallableType[builtins.function]]]Õ
4Tuple[typing.AnyStr,CallableType[builtins.function]]F
typing.AnyStr"
builtins.object"builtins.object"builtins.objectK
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.list"regex._regex_core._Lexicon*36*37*38*39*310*311r 
scanner!regex._regex_core.Scanner.scannerÅ
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern*36*37*38*39*310*311•À
Patternregex.regex.Pattern"builtins.object*˜
flagsregex.regex.Pattern.flags"
builtins.int"builtins.int*å
selfÅ
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern0:property`z36z37z38z39z310z311*‹

groupindexregex.regex.Pattern.groupindex"w
)typing.Mapping[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"typing.Mapping*å
selfÅ
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern0:property`z36z37z38z39z310z311*˘
groupsregex.regex.Pattern.groups"
builtins.int"builtins.int*å
selfÅ
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern0:property`z36z37z38z39z310z311*•
patternregex.regex.Pattern.pattern"F
typing.AnyStr"
builtins.object"builtins.object"builtins.object*å
selfÅ
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern0:property`z36z37z38z39z310z311*◊
named_listsregex.regex.Pattern.named_lists"Ô
>typing.Mapping[builtins.str,builtins.frozenset[typing.AnyStr]]
builtins.str"builtins.str
!builtins.frozenset[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"builtins.frozenset"typing.Mapping*å
selfÅ
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern0:property`z36z37z38z39z310z311*â
__copy__regex.regex.Pattern.__copy__"Å
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern*¿
selfµ
regex.regex.Pattern.SelfÅ
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern"regex.regex.Patternz36z37z38z39z310z311*ë
__deepcopy__ regex.regex.Pattern.__deepcopy__"Å
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern*¿
selfµ
regex.regex.Pattern.SelfÅ
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern"regex.regex.Patternz36z37z38z39z310z311*ƒ
__class_getitem__%regex.regex.Pattern.__class_getitem__"(
types.GenericAlias"types.GenericAlias*∫
cls∞
(Type[regex.regex.Pattern[typing.AnyStr]]Å
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern*
item
Anypz39z310z3112±
searchregex.regex.Pattern.searchŸ
searchregex.regex.Pattern.search"ç
+Union[regex.regex.Match[builtins.str],None]R
regex.regex.Match[builtins.str]
builtins.str"builtins.str"regex.regex.Match
None*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX¶

searchregex.regex.Pattern.search"ï
-Union[regex.regex.Match[builtins.bytes],None]X
!regex.regex.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Match
None*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"36"372∏
searchregex.regex.Pattern.searchŸ
searchregex.regex.Pattern.search"ç
+Union[regex.regex.Match[builtins.str],None]R
regex.regex.Match[builtins.str]
builtins.str"builtins.str"regex.regex.Match
None*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX£
searchregex.regex.Pattern.search"ï
-Union[regex.regex.Match[builtins.bytes],None]X
!regex.regex.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Match
None*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"38"39"310"3112´
matchregex.regex.Pattern.match◊
matchregex.regex.Pattern.match"ç
+Union[regex.regex.Match[builtins.str],None]R
regex.regex.Match[builtins.str]
builtins.str"builtins.str"regex.regex.Match
None*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX§

matchregex.regex.Pattern.match"ï
-Union[regex.regex.Match[builtins.bytes],None]X
!regex.regex.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Match
None*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"36"372≤
matchregex.regex.Pattern.match◊
matchregex.regex.Pattern.match"ç
+Union[regex.regex.Match[builtins.str],None]R
regex.regex.Match[builtins.str]
builtins.str"builtins.str"regex.regex.Match
None*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX°
matchregex.regex.Pattern.match"ï
-Union[regex.regex.Match[builtins.bytes],None]X
!regex.regex.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Match
None*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"38"39"310"3112√
	fullmatchregex.regex.Pattern.fullmatchﬂ
	fullmatchregex.regex.Pattern.fullmatch"ç
+Union[regex.regex.Match[builtins.str],None]R
regex.regex.Match[builtins.str]
builtins.str"builtins.str"regex.regex.Match
None*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX¨

	fullmatchregex.regex.Pattern.fullmatch"ï
-Union[regex.regex.Match[builtins.bytes],None]X
!regex.regex.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Match
None*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"36"372 
	fullmatchregex.regex.Pattern.fullmatchﬂ
	fullmatchregex.regex.Pattern.fullmatch"ç
+Union[regex.regex.Match[builtins.str],None]R
regex.regex.Match[builtins.str]
builtins.str"builtins.str"regex.regex.Match
None*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX©
	fullmatchregex.regex.Pattern.fullmatch"ï
-Union[regex.regex.Match[builtins.bytes],None]X
!regex.regex.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Match
None*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"38"39"310"3112∏
splitregex.regex.Pattern.splitù
splitregex.regex.Pattern.split"{
&builtins.list[Union[builtins.str,Any]]B
Union[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.list*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*,
maxsplit
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXÎ	
splitregex.regex.Pattern.split"É
(builtins.list[Union[builtins.bytes,Any]]H
Union[builtins.bytes,Any] 
builtins.bytes"builtins.bytes
Any"builtins.list*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*,
maxsplit
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"36"372ø
splitregex.regex.Pattern.splitù
splitregex.regex.Pattern.split"{
&builtins.list[Union[builtins.str,Any]]B
Union[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.list*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*,
maxsplit
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXË

splitregex.regex.Pattern.split"É
(builtins.list[Union[builtins.bytes,Any]]H
Union[builtins.bytes,Any] 
builtins.bytes"builtins.bytes
Any"builtins.list*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*,
maxsplit
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"38"39"310"3112ﬂ
	splititerregex.regex.Pattern.splititer±
	splititerregex.regex.Pattern.splititer"
Any*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*,
maxsplit
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXˆ
	splititerregex.regex.Pattern.splititer"
Any*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*,
maxsplit
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"36"372Ê
	splititerregex.regex.Pattern.splititer±
	splititerregex.regex.Pattern.splititer"
Any*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*,
maxsplit
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXÛ	
	splititerregex.regex.Pattern.splititer"
Any*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*,
maxsplit
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"38"39"310"3112œ
findallregex.regex.Pattern.findall´
findallregex.regex.Pattern.findall",
builtins.list[Any]
Any"builtins.list*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int *0

overlapped
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX	
findallregex.regex.Pattern.findall",
builtins.list[Any]
Any"builtins.list*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int *0

overlapped
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"36"372÷
findallregex.regex.Pattern.findall´
findallregex.regex.Pattern.findall",
builtins.list[Any]
Any"builtins.list*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int *0

overlapped
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXÌ

findallregex.regex.Pattern.findall",
builtins.list[Any]
Any"builtins.list*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int *0

overlapped
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"38"39"310"3112ã
finditerregex.regex.Pattern.finditerà
finditerregex.regex.Pattern.finditer"
Any*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int *0

overlapped
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXÕ	
finditerregex.regex.Pattern.finditer"
Any*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int *0

overlapped
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"36"372í
finditerregex.regex.Pattern.finditerà
finditerregex.regex.Pattern.finditer"
Any*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int *0

overlapped
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX 

finditerregex.regex.Pattern.finditer"
Any*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int *0

overlapped
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"38"39"310"3112ò
subregex.regex.Pattern.sub∑
subregex.regex.Pattern.sub"
builtins.str"builtins.str*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*≠
repl¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXµ
subregex.regex.Pattern.sub" 
builtins.bytes"builtins.bytes*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*‚
repl◊
©Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],CallableType[builtins.function]]Ÿ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"36"372∞
subregex.regex.Pattern.sub∑
subregex.regex.Pattern.sub"
builtins.str"builtins.str*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*≠
repl¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX√
subregex.regex.Pattern.sub" 
builtins.bytes"builtins.bytes*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Û
replË
ΩUnion[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],CallableType[builtins.function]]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"38"39"310"3112¢
subfregex.regex.Pattern.subfª
subfregex.regex.Pattern.subf"
builtins.str"builtins.str*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*Ø
format¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXπ
subfregex.regex.Pattern.subf" 
builtins.bytes"builtins.bytes*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*‰
format◊
©Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],CallableType[builtins.function]]Ÿ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"36"372∫
subfregex.regex.Pattern.subfª
subfregex.regex.Pattern.subf"
builtins.str"builtins.str*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*Ø
format¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX«
subfregex.regex.Pattern.subf" 
builtins.bytes"builtins.bytes*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*ı
formatË
ΩUnion[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],CallableType[builtins.function]]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"38"39"310"3112®
subnregex.regex.Pattern.subn˝
subnregex.regex.Pattern.subn"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*≠
repl¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX˝
subnregex.regex.Pattern.subn"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*‚
repl◊
©Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],CallableType[builtins.function]]Ÿ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"36"372¿
subnregex.regex.Pattern.subn˝
subnregex.regex.Pattern.subn"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*≠
repl¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXã
subnregex.regex.Pattern.subn"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Û
replË
ΩUnion[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],CallableType[builtins.function]]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"38"39"310"3112≤
subfnregex.regex.Pattern.subfnÅ
subfnregex.regex.Pattern.subfn"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*Ø
format¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXÅ
subfnregex.regex.Pattern.subfn"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*‰
format◊
©Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],CallableType[builtins.function]]Ÿ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"36"372 
subfnregex.regex.Pattern.subfnÅ
subfnregex.regex.Pattern.subfn"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*Ø
format¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXè
subfnregex.regex.Pattern.subfn"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*ı
formatË
ΩUnion[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],CallableType[builtins.function]]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"38"39"310"3112¸	
scannerregex.regex.Pattern.scanner÷
scannerregex.regex.Pattern.scanner"
Any*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *0

overlapped
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX‡
scannerregex.regex.Pattern.scanner"
Any*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*,
string 
builtins.bytes"builtins.bytes*O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *0

overlapped
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"36"37"38"39"310"3118Pj36j37j38j39j310j311óê
Matchregex.regex.Match"builtins.object*Ï
posregex.regex.Match.pos"
builtins.int"builtins.int*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match0:property`z36z37z38z39z310z311*Ú
endposregex.regex.Match.endpos"
builtins.int"builtins.int*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match0:property`z36z37z38z39z310z311*†
	lastindexregex.regex.Match.lastindex"D
Union[builtins.int,None]
builtins.int"builtins.int
None*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match0:property`z36z37z38z39z310z311*†
	lastgroupregex.regex.Match.lastgroup"D
Union[builtins.str,None]
builtins.str"builtins.str
None*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match0:property`z36z37z38z39z310z311*ú
stringregex.regex.Match.string"F
typing.AnyStr"
builtins.object"builtins.object"builtins.object*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match0:property`z36z37z38z39z310z311*–
reregex.regex.Match.re"Å
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match0:property`z36z37z38z39z310z311*ˆ
partialregex.regex.Match.partial"
builtins.bool"builtins.bool*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match0:property`z36z37z38z39z310z311*˜
regsregex.regex.Match.regs"§
0builtins.tuple[Tuple[builtins.int,builtins.int]]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"builtins.tuple*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match0:property`z36z37z38z39z310z311*Ó
fuzzy_countsregex.regex.Match.fuzzy_counts"ã
-Tuple[builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match0:property`z36z37z38z39z310z311*ß
fuzzy_changesregex.regex.Match.fuzzy_changes"¬
ZTuple[builtins.list[builtins.int],builtins.list[builtins.int],builtins.list[builtins.int]]J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.listJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.listJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match0:property`z36z37z38z39z310z311*‰
expandregex.regex.Match.expand"F
typing.AnyStr"
builtins.object"builtins.object"builtins.object*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*T
templateF
typing.AnyStr"
builtins.object"builtins.object"builtins.objectz36z37z38z39z310z311*‰
expandfregex.regex.Match.expandf"F
typing.AnyStr"
builtins.object"builtins.object"builtins.object*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*R
formatF
typing.AnyStr"
builtins.object"builtins.object"builtins.objectz36z37z38z39z310z311*≥
capturesdictregex.regex.Match.capturesdict"ﬁ
8builtins.dict[builtins.str,builtins.list[typing.AnyStr]]
builtins.str"builtins.stru
builtins.list[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"builtins.list"builtins.dict*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Matchz36z37z38z39z310z311*ﬁ
detach_stringregex.regex.Match.detach_string"
None*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Matchz36z37z38z39z310z311*Ò
allcapturesregex.regex.Match.allcaptures"û
#Tuple[builtins.list[typing.AnyStr]]u
builtins.list[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"builtins.list*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Matchz36z37z38z39z310z311*¨
allspansregex.regex.Match.allspans"ﬂ
6Tuple[builtins.list[Tuple[builtins.int,builtins.int]]]¢
/builtins.list[Tuple[builtins.int,builtins.int]]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"builtins.list*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Matchz36z37z38z39z310z311*˘
__copy__regex.regex.Match.__copy__"}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*∑
self¨
regex.regex.Match.Self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match"regex.regex.Matchz36z37z38z39z310z311*Å
__deepcopy__regex.regex.Match.__deepcopy__"}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*∑
self¨
regex.regex.Match.Self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match"regex.regex.Matchz36z37z38z39z310z311*ª
__class_getitem__#regex.regex.Match.__class_getitem__"(
types.GenericAlias"types.GenericAlias*≥
cls©
&Type[regex.regex.Match[typing.AnyStr]]}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*
item
Anypz39z310z3112ß
groupregex.regex.Match.groupΩ
groupregex.regex.Match.group"F
typing.AnyStr"
builtins.object"builtins.object"builtins.object*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*;7
Literal[builtins.int]	
builtins.int"builtins.int 0:overloadXç
groupregex.regex.Match.group"m
Union[typing.AnyStr,Any]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object
Any*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*d`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str 0:overloadXö
groupregex.regex.Match.group"©
(builtins.tuple[Union[typing.AnyStr,Any]]m
Union[typing.AnyStr,Any]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object
Any"builtins.tuple*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*l
groups`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str0:overloadX"36"37"38"39"310"3112‘
groupsregex.regex.Match.groupsˇ
groupsregex.regex.Match.groups"©
(builtins.tuple[Union[typing.AnyStr,Any]]m
Union[typing.AnyStr,Any]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object
Any"builtins.tuple*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*
default
None 0:overloadXì
groupsregex.regex.Match.groups"Ä
3builtins.tuple[Union[typing.AnyStr,regex.regex._T]]∏
#Union[typing.AnyStr,regex.regex._T]F
typing.AnyStr"
builtins.object"builtins.object"builtins.objectG
regex.regex._T"
builtins.object"builtins.object"builtins.object"builtins.tuple*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*T
defaultG
regex.regex._T"
builtins.object"builtins.object"builtins.object0:overloadX"36"37"38"39"310"3112∏
	groupdictregex.regex.Match.groupdictÆ
	groupdictregex.regex.Match.groupdict"“
4builtins.dict[builtins.str,Union[typing.AnyStr,Any]]
builtins.str"builtins.strm
Union[typing.AnyStr,Any]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object
Any"builtins.dict*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*
default
None 0:overloadX¬
	groupdictregex.regex.Match.groupdict"©
?builtins.dict[builtins.str,Union[typing.AnyStr,regex.regex._T]]
builtins.str"builtins.str∏
#Union[typing.AnyStr,regex.regex._T]F
typing.AnyStr"
builtins.object"builtins.object"builtins.objectG
regex.regex._T"
builtins.object"builtins.object"builtins.object"builtins.dict*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*T
defaultG
regex.regex._T"
builtins.object"builtins.object"builtins.object0:overloadX"36"37"38"39"310"3112œ
spanregex.regex.Match.span˛
spanregex.regex.Match.span"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*d`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str 0:overloadXì
spanregex.regex.Match.span"§
0builtins.tuple[Tuple[builtins.int,builtins.int]]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"builtins.tuple*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*l
groups`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str0:overloadX"36"37"38"39"310"3112Í	
spansregex.regex.Match.spans√
spansregex.regex.Match.spans"¢
/builtins.list[Tuple[builtins.int,builtins.int]]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"builtins.list*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*d`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str 0:overloadXÁ
spansregex.regex.Match.spans"ˆ
?builtins.tuple[builtins.list[Tuple[builtins.int,builtins.int]]]¢
/builtins.list[Tuple[builtins.int,builtins.int]]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"builtins.list"builtins.tuple*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*l
groups`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str0:overloadX"36"37"38"39"310"3112∏
startregex.regex.Match.startº
startregex.regex.Match.start"
builtins.int"builtins.int*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*d`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str 0:overloadXº
startregex.regex.Match.start"L
builtins.tuple[builtins.int]
builtins.int"builtins.int"builtins.tuple*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*l
groups`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str0:overloadX"36"37"38"39"310"3112™
startsregex.regex.Match.startsÏ
startsregex.regex.Match.starts"J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*d`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str 0:overloadX¸
startsregex.regex.Match.starts"â
+builtins.tuple[builtins.list[builtins.int]]J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list"builtins.tuple*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*l
groups`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str0:overloadX"36"37"38"39"310"3112¨
endregex.regex.Match.end∏
endregex.regex.Match.end"
builtins.int"builtins.int*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*d`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str 0:overloadX∏
endregex.regex.Match.end"L
builtins.tuple[builtins.int]
builtins.int"builtins.int"builtins.tuple*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*l
groups`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str0:overloadX"36"37"38"39"310"3112û
endsregex.regex.Match.endsË
endsregex.regex.Match.ends"J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*d`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str 0:overloadX¯
endsregex.regex.Match.ends"â
+builtins.tuple[builtins.list[builtins.int]]J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list"builtins.tuple*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*l
groups`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str0:overloadX"36"37"38"39"310"3112ç	
capturesregex.regex.Match.capturesõ
capturesregex.regex.Match.captures"u
builtins.list[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"builtins.list*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*d`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str 0:overloadX¨
capturesregex.regex.Match.captures"µ
,builtins.tuple[builtins.list[typing.AnyStr]]u
builtins.list[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"builtins.list"builtins.tuple*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*l
groups`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str0:overloadX"36"37"38"39"310"3112ò
__getitem__regex.regex.Match.__getitem__æ
__getitem__regex.regex.Match.__getitem__"F
typing.AnyStr"
builtins.object"builtins.object"builtins.object*}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*97
Literal[builtins.int]	
builtins.int"builtins.int0:overloadXé
__getitem__regex.regex.Match.__getitem__"m
Union[typing.AnyStr,Any]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object
Any*}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str0:overloadX"36"37"38"39"310"3118Pj36j37j38j39j310j311ß
compileregex.regex.compile"Å
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern*ï
patterná
7Union[typing.AnyStr,regex.regex.Pattern[typing.AnyStr]]F
typing.AnyStr"
builtins.object"builtins.object"builtins.objectÅ
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern*)
flags
builtins.int"builtins.int *3
ignore_unused
builtins.bool"builtins.bool *\
cache_patternG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *
kwargs
Anyz36z37z38z39z310z311>
purgeregex.regex.purge"
Nonez36z37z38z39z310z311Ω
escaperegex.regex.escape"F
typing.AnyStr"
builtins.object"builtins.object"builtins.object*S
patternF
typing.AnyStr"
builtins.object"builtins.object"builtins.object*2
special_only
builtins.bool"builtins.bool *4
literal_spaces
builtins.bool"builtins.bool z36z37z38z39z310z311Å
templateregex.regex.template"Å
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern*ï
patterná
7Union[typing.AnyStr,regex.regex.Pattern[typing.AnyStr]]F
typing.AnyStr"
builtins.object"builtins.object"builtins.objectÅ
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern*)
flags
builtins.int"builtins.int z36z37z38z39z310z311"≈
searchregex.regex.search£
searchregex.regex.search"ç
+Union[regex.regex.Match[builtins.str],None]R
regex.regex.Match[builtins.str]
builtins.str"builtins.str"regex.regex.Match
None*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX¯
searchregex.regex.search"ï
-Union[regex.regex.Match[builtins.bytes],None]X
!regex.regex.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Match
None*À
patternΩ
9Union[builtins.bytes,regex.regex.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytes\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"36"37"Ã
searchregex.regex.search£
searchregex.regex.search"ç
+Union[regex.regex.Match[builtins.str],None]R
regex.regex.Match[builtins.str]
builtins.str"builtins.str"regex.regex.Match
None*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadXı
searchregex.regex.search"ï
-Union[regex.regex.Match[builtins.bytes],None]X
!regex.regex.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Match
None*À
patternΩ
9Union[builtins.bytes,regex.regex.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytes\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"38"39"310"311"ø
matchregex.regex.match°
matchregex.regex.match"ç
+Union[regex.regex.Match[builtins.str],None]R
regex.regex.Match[builtins.str]
builtins.str"builtins.str"regex.regex.Match
None*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadXˆ
matchregex.regex.match"ï
-Union[regex.regex.Match[builtins.bytes],None]X
!regex.regex.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Match
None*À
patternΩ
9Union[builtins.bytes,regex.regex.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytes\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"36"37"∆
matchregex.regex.match°
matchregex.regex.match"ç
+Union[regex.regex.Match[builtins.str],None]R
regex.regex.Match[builtins.str]
builtins.str"builtins.str"regex.regex.Match
None*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadXÛ
matchregex.regex.match"ï
-Union[regex.regex.Match[builtins.bytes],None]X
!regex.regex.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Match
None*À
patternΩ
9Union[builtins.bytes,regex.regex.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytes\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"38"39"310"311"◊
	fullmatchregex.regex.fullmatch©
	fullmatchregex.regex.fullmatch"ç
+Union[regex.regex.Match[builtins.str],None]R
regex.regex.Match[builtins.str]
builtins.str"builtins.str"regex.regex.Match
None*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX˛
	fullmatchregex.regex.fullmatch"ï
-Union[regex.regex.Match[builtins.bytes],None]X
!regex.regex.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Match
None*À
patternΩ
9Union[builtins.bytes,regex.regex.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytes\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"36"37"ﬁ
	fullmatchregex.regex.fullmatch©
	fullmatchregex.regex.fullmatch"ç
+Union[regex.regex.Match[builtins.str],None]R
regex.regex.Match[builtins.str]
builtins.str"builtins.str"regex.regex.Match
None*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX˚
	fullmatchregex.regex.fullmatch"ï
-Union[regex.regex.Match[builtins.bytes],None]X
!regex.regex.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Match
None*À
patternΩ
9Union[builtins.bytes,regex.regex.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytes\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"38"39"310"311"˝
splitregex.regex.splitË
splitregex.regex.split"{
&builtins.list[Union[builtins.str,Any]]B
Union[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.list*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*,
maxsplit
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadXÌ
splitregex.regex.split"É
(builtins.list[Union[builtins.bytes,Any]]H
Union[builtins.bytes,Any] 
builtins.bytes"builtins.bytes
Any"builtins.list*˙
patternÏ
≠Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],regex.regex.Pattern[builtins.bytes]]Ÿ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*,
maxsplit
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"36"37"ï
splitregex.regex.splitË
splitregex.regex.split"{
&builtins.list[Union[builtins.str,Any]]B
Union[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.list*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*,
maxsplit
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX˚
splitregex.regex.split"É
(builtins.list[Union[builtins.bytes,Any]]H
Union[builtins.bytes,Any] 
builtins.bytes"builtins.bytes
Any"builtins.list*ã	
pattern˝
¡Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],regex.regex.Pattern[builtins.bytes]]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*,
maxsplit
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"38"39"310"311"§
	splititerregex.regex.splititer¸
	splititerregex.regex.splititer"
Any*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*,
maxsplit
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX¯
	splititerregex.regex.splititer"
Any*˙
patternÏ
≠Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],regex.regex.Pattern[builtins.bytes]]Ÿ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*,
maxsplit
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"36"37"º
	splititerregex.regex.splititer¸
	splititerregex.regex.splititer"
Any*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*,
maxsplit
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadXÜ
	splititerregex.regex.splititer"
Any*ã	
pattern˝
¡Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],regex.regex.Pattern[builtins.bytes]]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*,
maxsplit
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"38"39"310"311"¥
findallregex.regex.findall∆
findallregex.regex.findall",
builtins.list[Any]
Any"builtins.list*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *0

overlapped
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX¬
findallregex.regex.findall",
builtins.list[Any]
Any"builtins.list*˙
patternÏ
≠Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],regex.regex.Pattern[builtins.bytes]]Ÿ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *0

overlapped
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"36"37"Ã
findallregex.regex.findall∆
findallregex.regex.findall",
builtins.list[Any]
Any"builtins.list*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *0

overlapped
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX–
findallregex.regex.findall",
builtins.list[Any]
Any"builtins.list*ã	
pattern˝
¡Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],regex.regex.Pattern[builtins.bytes]]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *0

overlapped
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"38"39"310"311"Œ
finditerregex.regex.finditer“
finditerregex.regex.finditer"
Any*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *0

overlapped
builtins.bool"builtins.bool *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadXŒ
finditerregex.regex.finditer"
Any*˙
patternÏ
≠Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],regex.regex.Pattern[builtins.bytes]]Ÿ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *0

overlapped
builtins.bool"builtins.bool *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"36"37"Ê
finditerregex.regex.finditer“
finditerregex.regex.finditer"
Any*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *0

overlapped
builtins.bool"builtins.bool *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX‹
finditerregex.regex.finditer"
Any*ã	
pattern˝
¡Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],regex.regex.Pattern[builtins.bytes]]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *0

overlapped
builtins.bool"builtins.bool *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"38"39"310"311"á"
subregex.regex.sub◊
subregex.regex.sub"
builtins.str"builtins.str*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*≠
repl¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadXå
subregex.regex.sub" 
builtins.bytes"builtins.bytes*˙
patternÏ
≠Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],regex.regex.Pattern[builtins.bytes]]Ÿ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*‚
repl◊
©Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],CallableType[builtins.function]]Ÿ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"36"37"∞%
subregex.regex.sub◊
subregex.regex.sub"
builtins.str"builtins.str*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*≠
repl¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX´
subregex.regex.sub" 
builtins.bytes"builtins.bytes*ã	
pattern˝
¡Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],regex.regex.Pattern[builtins.bytes]]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Û
replË
ΩUnion[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],CallableType[builtins.function]]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"38"39"310"311"ë"
subfregex.regex.subf€
subfregex.regex.subf"
builtins.str"builtins.str*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*Ø
format¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadXê
subfregex.regex.subf" 
builtins.bytes"builtins.bytes*˙
patternÏ
≠Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],regex.regex.Pattern[builtins.bytes]]Ÿ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*‰
format◊
©Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],CallableType[builtins.function]]Ÿ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"36"37"∫%
subfregex.regex.subf€
subfregex.regex.subf"
builtins.str"builtins.str*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*Ø
format¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadXØ
subfregex.regex.subf" 
builtins.bytes"builtins.bytes*ã	
pattern˝
¡Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],regex.regex.Pattern[builtins.bytes]]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*ı
formatË
ΩUnion[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],CallableType[builtins.function]]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"38"39"310"311"ó#
subnregex.regex.subnù
subnregex.regex.subn"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*≠
repl¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX‘
subnregex.regex.subn"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*˙
patternÏ
≠Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],regex.regex.Pattern[builtins.bytes]]Ÿ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*‚
repl◊
©Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],CallableType[builtins.function]]Ÿ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"36"37"¿&
subnregex.regex.subnù
subnregex.regex.subn"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*≠
repl¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadXÛ
subnregex.regex.subn"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*ã	
pattern˝
¡Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],regex.regex.Pattern[builtins.bytes]]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Û
replË
ΩUnion[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],CallableType[builtins.function]]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"38"39"310"311"°#
subfnregex.regex.subfn°
subfnregex.regex.subfn"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*Ø
format¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadXÿ
subfnregex.regex.subfn"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*˙
patternÏ
≠Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],regex.regex.Pattern[builtins.bytes]]Ÿ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*‰
format◊
©Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],CallableType[builtins.function]]Ÿ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"36"37" &
subfnregex.regex.subfn°
subfnregex.regex.subfn"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*Ø
format¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX˜
subfnregex.regex.subfn"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*ã	
pattern˝
¡Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],regex.regex.Pattern[builtins.bytes]]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*ı
formatË
ΩUnion[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],CallableType[builtins.function]]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"38"39"310"311"å
	cache_allregex.regex.cache_allg
	cache_allregex.regex.cache_all"
None*+
value
builtins.bool"builtins.bool 0:overloadXe
	cache_allregex.regex.cache_all"
builtins.bool"builtins.bool*
value
None0:overloadX"36"37"38"39"310"311*Ä
__path__regex.__path__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*36*37*38*39*310*311*õ
__annotations__regex.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*P
Aregex._regex_core.A
builtins.int"builtins.int*36*37*38*39*310*311*X
ASCIIregex._regex_core.ASCII
builtins.int"builtins.int*36*37*38*39*310*311*P
Bregex._regex_core.B
builtins.int"builtins.int*36*37*38*39*310*311*`
	BESTMATCHregex._regex_core.BESTMATCH
builtins.int"builtins.int*36*37*38*39*310*311*P
Dregex._regex_core.D
builtins.int"builtins.int*36*37*38*39*310*311*X
DEBUGregex._regex_core.DEBUG
builtins.int"builtins.int*36*37*38*39*310*311*P
Eregex._regex_core.E
builtins.int"builtins.int*36*37*38*39*310*311*f
ENHANCEMATCHregex._regex_core.ENHANCEMATCH
builtins.int"builtins.int*36*37*38*39*310*311*P
Fregex._regex_core.F
builtins.int"builtins.int*36*37*38*39*310*311*^
FULLCASEregex._regex_core.FULLCASE
builtins.int"builtins.int*36*37*38*39*310*311*P
Iregex._regex_core.I
builtins.int"builtins.int*36*37*38*39*310*311*b

IGNORECASEregex._regex_core.IGNORECASE
builtins.int"builtins.int*36*37*38*39*310*311*P
Lregex._regex_core.L
builtins.int"builtins.int*36*37*38*39*310*311*Z
LOCALEregex._regex_core.LOCALE
builtins.int"builtins.int*36*37*38*39*310*311*P
Mregex._regex_core.M
builtins.int"builtins.int*36*37*38*39*310*311*`
	MULTILINEregex._regex_core.MULTILINE
builtins.int"builtins.int*36*37*38*39*310*311*P
Pregex._regex_core.P
builtins.int"builtins.int*36*37*38*39*310*311*X
POSIXregex._regex_core.POSIX
builtins.int"builtins.int*36*37*38*39*310*311*P
Rregex._regex_core.R
builtins.int"builtins.int*36*37*38*39*310*311*\
REVERSEregex._regex_core.REVERSE
builtins.int"builtins.int*36*37*38*39*310*311*P
Tregex._regex_core.T
builtins.int"builtins.int*36*37*38*39*310*311*^
TEMPLATEregex._regex_core.TEMPLATE
builtins.int"builtins.int*36*37*38*39*310*311*P
Sregex._regex_core.S
builtins.int"builtins.int*36*37*38*39*310*311*Z
DOTALLregex._regex_core.DOTALL
builtins.int"builtins.int*36*37*38*39*310*311*P
Uregex._regex_core.U
builtins.int"builtins.int*36*37*38*39*310*311*\
UNICODEregex._regex_core.UNICODE
builtins.int"builtins.int*36*37*38*39*310*311*R
V0regex._regex_core.V0
builtins.int"builtins.int*36*37*38*39*310*311*^
VERSION0regex._regex_core.VERSION0
builtins.int"builtins.int*36*37*38*39*310*311*R
V1regex._regex_core.V1
builtins.int"builtins.int*36*37*38*39*310*311*^
VERSION1regex._regex_core.VERSION1
builtins.int"builtins.int*36*37*38*39*310*311*P
Wregex._regex_core.W
builtins.int"builtins.int*36*37*38*39*310*311*V
WORDregex._regex_core.WORD
builtins.int"builtins.int*36*37*38*39*310*311*P
Xregex._regex_core.X
builtins.int"builtins.int*36*37*38*39*310*311*\
VERBOSEregex._regex_core.VERBOSE
builtins.int"builtins.int*36*37*38*39*310*311*l
DEFAULT_VERSION!regex._regex_core.DEFAULT_VERSION
builtins.int"builtins.int*36*37*38*39*310*311*Å
Regexregex.regex.RegexK
CallableType[builtins.function]&
builtins.function"builtins.function*36*37*38*39*310*311