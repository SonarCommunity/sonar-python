
regexÔ
errorregex._regex_core.error"builtins.Exception*î
__init__ regex._regex_core.error.__init__"
None*<
self2
regex._regex_core.error"regex._regex_core.error*)
message
builtins.str"builtins.str*~
patterno
Union[typing.AnyStr,None]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object
None *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313¬
	RegexFlagregex._regex_core.RegexFlag"enum.IntFlagHj36j37j38j39j310j311j312j313rd
Aregex._regex_core.RegexFlag.A
builtins.int"builtins.int*36*37*38*39*310*311*312*313rl
ASCII!regex._regex_core.RegexFlag.ASCII
builtins.int"builtins.int*36*37*38*39*310*311*312*313rd
Bregex._regex_core.RegexFlag.B
builtins.int"builtins.int*36*37*38*39*310*311*312*313rt
	BESTMATCH%regex._regex_core.RegexFlag.BESTMATCH
builtins.int"builtins.int*36*37*38*39*310*311*312*313rd
Dregex._regex_core.RegexFlag.D
builtins.int"builtins.int*36*37*38*39*310*311*312*313rl
DEBUG!regex._regex_core.RegexFlag.DEBUG
builtins.int"builtins.int*36*37*38*39*310*311*312*313rd
Eregex._regex_core.RegexFlag.E
builtins.int"builtins.int*36*37*38*39*310*311*312*313rz
ENHANCEMATCH(regex._regex_core.RegexFlag.ENHANCEMATCH
builtins.int"builtins.int*36*37*38*39*310*311*312*313rd
Fregex._regex_core.RegexFlag.F
builtins.int"builtins.int*36*37*38*39*310*311*312*313rr
FULLCASE$regex._regex_core.RegexFlag.FULLCASE
builtins.int"builtins.int*36*37*38*39*310*311*312*313rd
Iregex._regex_core.RegexFlag.I
builtins.int"builtins.int*36*37*38*39*310*311*312*313rv

IGNORECASE&regex._regex_core.RegexFlag.IGNORECASE
builtins.int"builtins.int*36*37*38*39*310*311*312*313rd
Lregex._regex_core.RegexFlag.L
builtins.int"builtins.int*36*37*38*39*310*311*312*313rn
LOCALE"regex._regex_core.RegexFlag.LOCALE
builtins.int"builtins.int*36*37*38*39*310*311*312*313rd
Mregex._regex_core.RegexFlag.M
builtins.int"builtins.int*36*37*38*39*310*311*312*313rt
	MULTILINE%regex._regex_core.RegexFlag.MULTILINE
builtins.int"builtins.int*36*37*38*39*310*311*312*313rd
Pregex._regex_core.RegexFlag.P
builtins.int"builtins.int*36*37*38*39*310*311*312*313rl
POSIX!regex._regex_core.RegexFlag.POSIX
builtins.int"builtins.int*36*37*38*39*310*311*312*313rd
Rregex._regex_core.RegexFlag.R
builtins.int"builtins.int*36*37*38*39*310*311*312*313rp
REVERSE#regex._regex_core.RegexFlag.REVERSE
builtins.int"builtins.int*36*37*38*39*310*311*312*313rd
Tregex._regex_core.RegexFlag.T
builtins.int"builtins.int*36*37*38*39*310*311*312*313rr
TEMPLATE$regex._regex_core.RegexFlag.TEMPLATE
builtins.int"builtins.int*36*37*38*39*310*311*312*313rd
Sregex._regex_core.RegexFlag.S
builtins.int"builtins.int*36*37*38*39*310*311*312*313rn
DOTALL"regex._regex_core.RegexFlag.DOTALL
builtins.int"builtins.int*36*37*38*39*310*311*312*313rd
Uregex._regex_core.RegexFlag.U
builtins.int"builtins.int*36*37*38*39*310*311*312*313rp
UNICODE#regex._regex_core.RegexFlag.UNICODE
builtins.int"builtins.int*36*37*38*39*310*311*312*313rf
V0regex._regex_core.RegexFlag.V0
builtins.int"builtins.int*36*37*38*39*310*311*312*313rr
VERSION0$regex._regex_core.RegexFlag.VERSION0
builtins.int"builtins.int*36*37*38*39*310*311*312*313rf
V1regex._regex_core.RegexFlag.V1
builtins.int"builtins.int*36*37*38*39*310*311*312*313rr
VERSION1$regex._regex_core.RegexFlag.VERSION1
builtins.int"builtins.int*36*37*38*39*310*311*312*313rd
Wregex._regex_core.RegexFlag.W
builtins.int"builtins.int*36*37*38*39*310*311*312*313rj
WORD regex._regex_core.RegexFlag.WORD
builtins.int"builtins.int*36*37*38*39*310*311*312*313rd
Xregex._regex_core.RegexFlag.X
builtins.int"builtins.int*36*37*38*39*310*311*312*313rp
VERBOSE#regex._regex_core.RegexFlag.VERBOSE
builtins.int"builtins.int*36*37*38*39*310*311*312*313»
Scannerregex._regex_core.Scanner"builtins.object*»
__init__"regex._regex_core.Scanner.__init__"
None*ò
selfç
(regex._regex_core.Scanner[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex._regex_core.Scanner*£
lexiconï
NTypeAlias[builtins.list[Tuple[typing.AnyStr,CallableType[builtins.function]]]]§
Cbuiltins.list[Tuple[typing.AnyStr,CallableType[builtins.function]]]Õ
4Tuple[typing.AnyStr,CallableType[builtins.function]]F
typing.AnyStr"
builtins.object"builtins.object"builtins.objectK
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.list"regex._regex_core._Lexicon*)
flags
builtins.int"builtins.int z36z37z38z39z310z311z312z313*›
scanregex._regex_core.Scanner.scan"°
'Tuple[builtins.list[Any],typing.AnyStr],
builtins.list[Any]
Any"builtins.listF
typing.AnyStr"
builtins.object"builtins.object"builtins.object*ò
selfç
(regex._regex_core.Scanner[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex._regex_core.Scanner*R
stringF
typing.AnyStr"
builtins.object"builtins.object"builtins.objectz36z37z38z39z310z311z312z313Pj36j37j38j39j310j311j312j313rË
lexicon!regex._regex_core.Scanner.lexiconï
NTypeAlias[builtins.list[Tuple[typing.AnyStr,CallableType[builtins.function]]]]§
Cbuiltins.list[Tuple[typing.AnyStr,CallableType[builtins.function]]]Õ
4Tuple[typing.AnyStr,CallableType[builtins.function]]F
typing.AnyStr"
builtins.object"builtins.object"builtins.objectK
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.list"regex._regex_core._Lexicon*36*37*38*39*310*311*312*313r‘
scanner!regex._regex_core.Scanner.scannerÅ
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern*36*37*38*39*310*311*312*313†·
Patternregex.regex.Pattern"builtins.object*Å
flagsregex.regex.Pattern.flags"
builtins.int"builtins.int*å
selfÅ
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern0:property`z36z37z38z39z310z311z312z313*Ê

groupindexregex.regex.Pattern.groupindex"w
)typing.Mapping[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"typing.Mapping*å
selfÅ
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern0:property`z36z37z38z39z310z311z312z313*É
groupsregex.regex.Pattern.groups"
builtins.int"builtins.int*å
selfÅ
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern0:property`z36z37z38z39z310z311z312z313*Ø
patternregex.regex.Pattern.pattern"F
typing.AnyStr"
builtins.object"builtins.object"builtins.object*å
selfÅ
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern0:property`z36z37z38z39z310z311z312z313*·
named_listsregex.regex.Pattern.named_lists"Ô
>typing.Mapping[builtins.str,builtins.frozenset[typing.AnyStr]]
builtins.str"builtins.str
!builtins.frozenset[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"builtins.frozenset"typing.Mapping*å
selfÅ
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern0:property`z36z37z38z39z310z311z312z313*´
__copy__regex.regex.Pattern.__copy__"µ
regex.regex.Pattern.SelfÅ
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern"regex.regex.Pattern*¿
selfµ
regex.regex.Pattern.SelfÅ
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern"regex.regex.Patternz36z37*ã
__copy__regex.regex.Pattern.__copy__"Å
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern*¿
selfµ
regex.regex.Pattern.SelfÅ
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern"regex.regex.Patternz38z39z310z311z312z313*≥
__deepcopy__ regex.regex.Pattern.__deepcopy__"µ
regex.regex.Pattern.SelfÅ
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern"regex.regex.Pattern*¿
selfµ
regex.regex.Pattern.SelfÅ
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern"regex.regex.Patternz36z37*ì
__deepcopy__ regex.regex.Pattern.__deepcopy__"Å
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern*¿
selfµ
regex.regex.Pattern.SelfÅ
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern"regex.regex.Patternz38z39z310z311z312z313*≈
__class_getitem__%regex.regex.Pattern.__class_getitem__"(
types.GenericAlias"types.GenericAlias*π∂
(Type[regex.regex.Pattern[typing.AnyStr]]Å
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern"type*	
Anypz39z310z311z312z3132Ø
searchregex.regex.Pattern.searchÿ
searchregex.regex.Pattern.search"ç
+Union[regex.regex.Match[builtins.str],None]R
regex.regex.Match[builtins.str]
builtins.str"builtins.str"regex.regex.Match
None*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *-
partial
builtins.bool"builtins.bool *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX•
searchregex.regex.Pattern.search"ï
-Union[regex.regex.Match[builtins.bytes],None]X
!regex.regex.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Match
None*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *-
partial
builtins.bool"builtins.bool *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"36"372¿
searchregex.regex.Pattern.searchÿ
searchregex.regex.Pattern.search"ç
+Union[regex.regex.Match[builtins.str],None]R
regex.regex.Match[builtins.str]
builtins.str"builtins.str"regex.regex.Match
None*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *-
partial
builtins.bool"builtins.bool *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX¢
searchregex.regex.Pattern.search"ï
-Union[regex.regex.Match[builtins.bytes],None]X
!regex.regex.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Match
None*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *-
partial
builtins.bool"builtins.bool *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"38"39"310"311"312"3132©
matchregex.regex.Pattern.match÷
matchregex.regex.Pattern.match"ç
+Union[regex.regex.Match[builtins.str],None]R
regex.regex.Match[builtins.str]
builtins.str"builtins.str"regex.regex.Match
None*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *-
partial
builtins.bool"builtins.bool *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX£
matchregex.regex.Pattern.match"ï
-Union[regex.regex.Match[builtins.bytes],None]X
!regex.regex.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Match
None*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *-
partial
builtins.bool"builtins.bool *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"36"372∫
matchregex.regex.Pattern.match÷
matchregex.regex.Pattern.match"ç
+Union[regex.regex.Match[builtins.str],None]R
regex.regex.Match[builtins.str]
builtins.str"builtins.str"regex.regex.Match
None*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *-
partial
builtins.bool"builtins.bool *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX†
matchregex.regex.Pattern.match"ï
-Union[regex.regex.Match[builtins.bytes],None]X
!regex.regex.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Match
None*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *-
partial
builtins.bool"builtins.bool *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"38"39"310"311"312"3132¡
	fullmatchregex.regex.Pattern.fullmatchﬁ
	fullmatchregex.regex.Pattern.fullmatch"ç
+Union[regex.regex.Match[builtins.str],None]R
regex.regex.Match[builtins.str]
builtins.str"builtins.str"regex.regex.Match
None*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *-
partial
builtins.bool"builtins.bool *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX´
	fullmatchregex.regex.Pattern.fullmatch"ï
-Union[regex.regex.Match[builtins.bytes],None]X
!regex.regex.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Match
None*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *-
partial
builtins.bool"builtins.bool *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"36"372“
	fullmatchregex.regex.Pattern.fullmatchﬁ
	fullmatchregex.regex.Pattern.fullmatch"ç
+Union[regex.regex.Match[builtins.str],None]R
regex.regex.Match[builtins.str]
builtins.str"builtins.str"regex.regex.Match
None*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *-
partial
builtins.bool"builtins.bool *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX®
	fullmatchregex.regex.Pattern.fullmatch"ï
-Union[regex.regex.Match[builtins.bytes],None]X
!regex.regex.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Match
None*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *-
partial
builtins.bool"builtins.bool *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"38"39"310"311"312"3132∏
splitregex.regex.Pattern.splitù
splitregex.regex.Pattern.split"{
&builtins.list[Union[builtins.str,Any]]B
Union[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.list*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*,
maxsplit
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXÎ	
splitregex.regex.Pattern.split"É
(builtins.list[Union[builtins.bytes,Any]]H
Union[builtins.bytes,Any] 
builtins.bytes"builtins.bytes
Any"builtins.list*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*,
maxsplit
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"36"372…
splitregex.regex.Pattern.splitù
splitregex.regex.Pattern.split"{
&builtins.list[Union[builtins.str,Any]]B
Union[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.list*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*,
maxsplit
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXË

splitregex.regex.Pattern.split"É
(builtins.list[Union[builtins.bytes,Any]]H
Union[builtins.bytes,Any] 
builtins.bytes"builtins.bytes
Any"builtins.list*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*,
maxsplit
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"38"39"310"311"312"3132ﬂ
	splititerregex.regex.Pattern.splititer±
	splititerregex.regex.Pattern.splititer"
Any*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*,
maxsplit
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXˆ
	splititerregex.regex.Pattern.splititer"
Any*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*,
maxsplit
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"36"372
	splititerregex.regex.Pattern.splititer±
	splititerregex.regex.Pattern.splititer"
Any*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*,
maxsplit
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXÛ	
	splititerregex.regex.Pattern.splititer"
Any*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*,
maxsplit
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"38"39"310"311"312"3132Ô
findallregex.regex.Pattern.findall˚
findallregex.regex.Pattern.findall",
builtins.list[Any]
Any"builtins.list*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *0

overlapped
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX¿

findallregex.regex.Pattern.findall",
builtins.list[Any]
Any"builtins.list*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *0

overlapped
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"36"372Ä
findallregex.regex.Pattern.findall˚
findallregex.regex.Pattern.findall",
builtins.list[Any]
Any"builtins.list*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *0

overlapped
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXΩ
findallregex.regex.Pattern.findall",
builtins.list[Any]
Any"builtins.list*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *0

overlapped
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"38"39"310"311"312"3132â
finditerregex.regex.Pattern.finditerá
finditerregex.regex.Pattern.finditer"
Any*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *0

overlapped
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *-
partial
builtins.bool"builtins.bool *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXÃ

finditerregex.regex.Pattern.finditer"
Any*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *0

overlapped
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *-
partial
builtins.bool"builtins.bool *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"36"372ö
finditerregex.regex.Pattern.finditerá
finditerregex.regex.Pattern.finditer"
Any*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *0

overlapped
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *-
partial
builtins.bool"builtins.bool *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX…
finditerregex.regex.Pattern.finditer"
Any*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *0

overlapped
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *-
partial
builtins.bool"builtins.bool *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"38"39"310"311"312"3132¬
subregex.regex.Pattern.subå
subregex.regex.Pattern.sub"
builtins.str"builtins.str*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*≠
repl¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXä
subregex.regex.Pattern.sub" 
builtins.bytes"builtins.bytes*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*‚
repl◊
©Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],CallableType[builtins.function]]Ÿ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"36"372‰
subregex.regex.Pattern.subå
subregex.regex.Pattern.sub"
builtins.str"builtins.str*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*≠
repl¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXò
subregex.regex.Pattern.sub" 
builtins.bytes"builtins.bytes*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Û
replË
ΩUnion[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],CallableType[builtins.function]]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"38"39"310"311"312"3132Ã
subfregex.regex.Pattern.subfê
subfregex.regex.Pattern.subf"
builtins.str"builtins.str*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*Ø
format¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXé
subfregex.regex.Pattern.subf" 
builtins.bytes"builtins.bytes*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*‰
format◊
©Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],CallableType[builtins.function]]Ÿ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"36"372Ó
subfregex.regex.Pattern.subfê
subfregex.regex.Pattern.subf"
builtins.str"builtins.str*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*Ø
format¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXú
subfregex.regex.Pattern.subf" 
builtins.bytes"builtins.bytes*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*ı
formatË
ΩUnion[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],CallableType[builtins.function]]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"38"39"310"311"312"3132“
subnregex.regex.Pattern.subn“
subnregex.regex.Pattern.subn"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*≠
repl¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX“
subnregex.regex.Pattern.subn"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*‚
repl◊
©Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],CallableType[builtins.function]]Ÿ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"36"372Ù
subnregex.regex.Pattern.subn“
subnregex.regex.Pattern.subn"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*≠
repl¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX‡
subnregex.regex.Pattern.subn"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Û
replË
ΩUnion[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],CallableType[builtins.function]]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"38"39"310"311"312"3132‹
subfnregex.regex.Pattern.subfn÷
subfnregex.regex.Pattern.subfn"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*Ø
format¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX÷
subfnregex.regex.Pattern.subfn"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*‰
format◊
©Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],CallableType[builtins.function]]Ÿ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"36"372˛
subfnregex.regex.Pattern.subfn÷
subfnregex.regex.Pattern.subfn"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*Ø
format¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX‰
subfnregex.regex.Pattern.subfn"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*ı
formatË
ΩUnion[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],CallableType[builtins.function]]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"38"39"310"311"312"3132‰

scannerregex.regex.Pattern.scannerÖ
scannerregex.regex.Pattern.scanner"
Any*`
selfV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *0

overlapped
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *-
partial
builtins.bool"builtins.bool *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXè
scannerregex.regex.Pattern.scanner"
Any*f
self\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*,
string 
builtins.bytes"builtins.bytes*O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *0

overlapped
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *-
partial
builtins.bool"builtins.bool *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"36"37"38"39"310"311"312"3138Pj36j37j38j39j310j311j312j313Ìß
Matchregex.regex.Match"builtins.object*ˆ
posregex.regex.Match.pos"
builtins.int"builtins.int*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match0:property`z36z37z38z39z310z311z312z313*¸
endposregex.regex.Match.endpos"
builtins.int"builtins.int*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match0:property`z36z37z38z39z310z311z312z313*™
	lastindexregex.regex.Match.lastindex"D
Union[builtins.int,None]
builtins.int"builtins.int
None*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match0:property`z36z37z38z39z310z311z312z313*™
	lastgroupregex.regex.Match.lastgroup"D
Union[builtins.str,None]
builtins.str"builtins.str
None*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match0:property`z36z37z38z39z310z311z312z313*¶
stringregex.regex.Match.string"F
typing.AnyStr"
builtins.object"builtins.object"builtins.object*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match0:property`z36z37z38z39z310z311z312z313*⁄
reregex.regex.Match.re"Å
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match0:property`z36z37z38z39z310z311z312z313*Ä
partialregex.regex.Match.partial"
builtins.bool"builtins.bool*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match0:property`z36z37z38z39z310z311z312z313*Å
regsregex.regex.Match.regs"§
0builtins.tuple[Tuple[builtins.int,builtins.int]]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"builtins.tuple*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match0:property`z36z37z38z39z310z311z312z313*¯
fuzzy_countsregex.regex.Match.fuzzy_counts"ã
-Tuple[builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match0:property`z36z37z38z39z310z311z312z313*±
fuzzy_changesregex.regex.Match.fuzzy_changes"¬
ZTuple[builtins.list[builtins.int],builtins.list[builtins.int],builtins.list[builtins.int]]J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.listJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.listJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match0:property`z36z37z38z39z310z311z312z313*Ó
expandregex.regex.Match.expand"F
typing.AnyStr"
builtins.object"builtins.object"builtins.object*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*T
templateF
typing.AnyStr"
builtins.object"builtins.object"builtins.objectz36z37z38z39z310z311z312z313*Ó
expandfregex.regex.Match.expandf"F
typing.AnyStr"
builtins.object"builtins.object"builtins.object*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*R
formatF
typing.AnyStr"
builtins.object"builtins.object"builtins.objectz36z37z38z39z310z311z312z313*Ω
capturesdictregex.regex.Match.capturesdict"ﬁ
8builtins.dict[builtins.str,builtins.list[typing.AnyStr]]
builtins.str"builtins.stru
builtins.list[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"builtins.list"builtins.dict*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Matchz36z37z38z39z310z311z312z313*Ë
detach_stringregex.regex.Match.detach_string"
None*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Matchz36z37z38z39z310z311z312z313*˚
allcapturesregex.regex.Match.allcaptures"û
#Tuple[builtins.list[typing.AnyStr]]u
builtins.list[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"builtins.list*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Matchz36z37z38z39z310z311z312z313*∂
allspansregex.regex.Match.allspans"ﬂ
6Tuple[builtins.list[Tuple[builtins.int,builtins.int]]]¢
/builtins.list[Tuple[builtins.int,builtins.int]]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"builtins.list*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Matchz36z37z38z39z310z311z312z313*ó
__copy__regex.regex.Match.__copy__"¨
regex.regex.Match.Self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match"regex.regex.Match*∑
self¨
regex.regex.Match.Self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match"regex.regex.Matchz36z37*˚
__copy__regex.regex.Match.__copy__"}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*∑
self¨
regex.regex.Match.Self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match"regex.regex.Matchz38z39z310z311z312z313*ü
__deepcopy__regex.regex.Match.__deepcopy__"¨
regex.regex.Match.Self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match"regex.regex.Match*∑
self¨
regex.regex.Match.Self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match"regex.regex.Matchz36z37*É
__deepcopy__regex.regex.Match.__deepcopy__"}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*∑
self¨
regex.regex.Match.Self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match"regex.regex.Matchz38z39z310z311z312z313*º
__class_getitem__#regex.regex.Match.__class_getitem__"(
types.GenericAlias"types.GenericAlias*≤Ø
&Type[regex.regex.Match[typing.AnyStr]]}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match"type*	
Anypz39z310z311z312z3132 

groupregex.regex.Match.groupÑ
groupregex.regex.Match.group"F
typing.AnyStr"
builtins.object"builtins.object"builtins.object*}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*
Any 0:overloadXÑ
groupregex.regex.Match.group"m
Union[typing.AnyStr,Any]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object
Any*}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*d`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str 0:overloadXë
groupregex.regex.Match.group"©
(builtins.tuple[Union[typing.AnyStr,Any]]m
Union[typing.AnyStr,Any]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object
Any"builtins.tuple*}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*l
groups`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str0:overloadX"36"372é
groupregex.regex.Match.group¥
groupregex.regex.Match.group"F
typing.AnyStr"
builtins.object"builtins.object"builtins.object*}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*;7
Literal[builtins.int]	
builtins.int"builtins.int 0:overloadXÑ
groupregex.regex.Match.group"m
Union[typing.AnyStr,Any]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object
Any*}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*d`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str 0:overloadXë
groupregex.regex.Match.group"©
(builtins.tuple[Union[typing.AnyStr,Any]]m
Union[typing.AnyStr,Any]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object
Any"builtins.tuple*}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*l
groups`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str0:overloadX"38"39"310"311"312"3132ﬁ
groupsregex.regex.Match.groupsˇ
groupsregex.regex.Match.groups"©
(builtins.tuple[Union[typing.AnyStr,Any]]m
Union[typing.AnyStr,Any]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object
Any"builtins.tuple*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*
default
None 0:overloadXì
groupsregex.regex.Match.groups"Ä
3builtins.tuple[Union[typing.AnyStr,regex.regex._T]]∏
#Union[typing.AnyStr,regex.regex._T]F
typing.AnyStr"
builtins.object"builtins.object"builtins.objectG
regex.regex._T"
builtins.object"builtins.object"builtins.object"builtins.tuple*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*T
defaultG
regex.regex._T"
builtins.object"builtins.object"builtins.object0:overloadX"36"37"38"39"310"311"312"3132¬
	groupdictregex.regex.Match.groupdictÆ
	groupdictregex.regex.Match.groupdict"“
4builtins.dict[builtins.str,Union[typing.AnyStr,Any]]
builtins.str"builtins.strm
Union[typing.AnyStr,Any]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object
Any"builtins.dict*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*
default
None 0:overloadX¬
	groupdictregex.regex.Match.groupdict"©
?builtins.dict[builtins.str,Union[typing.AnyStr,regex.regex._T]]
builtins.str"builtins.str∏
#Union[typing.AnyStr,regex.regex._T]F
typing.AnyStr"
builtins.object"builtins.object"builtins.objectG
regex.regex._T"
builtins.object"builtins.object"builtins.object"builtins.dict*á
self}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*T
defaultG
regex.regex._T"
builtins.object"builtins.object"builtins.object0:overloadX"36"37"38"39"310"311"312"3132«
spanregex.regex.Match.spanı
spanregex.regex.Match.span"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*d`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str 0:overloadXä
spanregex.regex.Match.span"§
0builtins.tuple[Tuple[builtins.int,builtins.int]]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"builtins.tuple*}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*l
groups`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str0:overloadX"36"37"38"39"310"311"312"3132‚	
spansregex.regex.Match.spans∫
spansregex.regex.Match.spans"¢
/builtins.list[Tuple[builtins.int,builtins.int]]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"builtins.list*}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*d`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str 0:overloadXﬁ
spansregex.regex.Match.spans"ˆ
?builtins.tuple[builtins.list[Tuple[builtins.int,builtins.int]]]¢
/builtins.list[Tuple[builtins.int,builtins.int]]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"builtins.list"builtins.tuple*}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*l
groups`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str0:overloadX"36"37"38"39"310"311"312"3132∞
startregex.regex.Match.start≥
startregex.regex.Match.start"
builtins.int"builtins.int*}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*d`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str 0:overloadX≥
startregex.regex.Match.start"L
builtins.tuple[builtins.int]
builtins.int"builtins.int"builtins.tuple*}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*l
groups`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str0:overloadX"36"37"38"39"310"311"312"3132¢
startsregex.regex.Match.starts„
startsregex.regex.Match.starts"J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*d`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str 0:overloadXÛ
startsregex.regex.Match.starts"â
+builtins.tuple[builtins.list[builtins.int]]J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list"builtins.tuple*}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*l
groups`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str0:overloadX"36"37"38"39"310"311"312"3132§
endregex.regex.Match.endØ
endregex.regex.Match.end"
builtins.int"builtins.int*}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*d`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str 0:overloadXØ
endregex.regex.Match.end"L
builtins.tuple[builtins.int]
builtins.int"builtins.int"builtins.tuple*}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*l
groups`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str0:overloadX"36"37"38"39"310"311"312"3132ñ
endsregex.regex.Match.endsﬂ
endsregex.regex.Match.ends"J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*d`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str 0:overloadXÔ
endsregex.regex.Match.ends"â
+builtins.tuple[builtins.list[builtins.int]]J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list"builtins.tuple*}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*l
groups`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str0:overloadX"36"37"38"39"310"311"312"3132Ö	
capturesregex.regex.Match.capturesí
capturesregex.regex.Match.captures"u
builtins.list[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"builtins.list*}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*d`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str 0:overloadX£
capturesregex.regex.Match.captures"µ
,builtins.tuple[builtins.list[typing.AnyStr]]u
builtins.list[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"builtins.list"builtins.tuple*}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*l
groups`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str0:overloadX"36"37"38"39"310"311"312"3132÷
__getitem__regex.regex.Match.__getitem__é
__getitem__regex.regex.Match.__getitem__"F
typing.AnyStr"
builtins.object"builtins.object"builtins.object*}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*	
Any0:overloadXé
__getitem__regex.regex.Match.__getitem__"m
Union[typing.AnyStr,Any]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object
Any*}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str0:overloadX"36"372ö
__getitem__regex.regex.Match.__getitem__æ
__getitem__regex.regex.Match.__getitem__"F
typing.AnyStr"
builtins.object"builtins.object"builtins.object*}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*97
Literal[builtins.int]	
builtins.int"builtins.int0:overloadXé
__getitem__regex.regex.Match.__getitem__"m
Union[typing.AnyStr,Any]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object
Any*}
 regex.regex.Match[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Match*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str0:overloadX"38"39"310"311"312"3138Pj36j37j38j39j310j311j312j313±
compileregex.regex.compile"Å
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern*ï
patterná
7Union[typing.AnyStr,regex.regex.Pattern[typing.AnyStr]]F
typing.AnyStr"
builtins.object"builtins.object"builtins.objectÅ
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern*)
flags
builtins.int"builtins.int *3
ignore_unused
builtins.bool"builtins.bool *\
cache_patternG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *
kwargs
Anyz36z37z38z39z310z311z312z313H
purgeregex.regex.purge"
Nonez36z37z38z39z310z311z312z313«
escaperegex.regex.escape"F
typing.AnyStr"
builtins.object"builtins.object"builtins.object*S
patternF
typing.AnyStr"
builtins.object"builtins.object"builtins.object*2
special_only
builtins.bool"builtins.bool *4
literal_spaces
builtins.bool"builtins.bool z36z37z38z39z310z311z312z313ã
templateregex.regex.template"Å
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern*ï
patterná
7Union[typing.AnyStr,regex.regex.Pattern[typing.AnyStr]]F
typing.AnyStr"
builtins.object"builtins.object"builtins.objectÅ
"regex.regex.Pattern[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"regex.regex.Pattern*)
flags
builtins.int"builtins.int z36z37z38z39z310z311z312z313"≈
searchregex.regex.search£
searchregex.regex.search"ç
+Union[regex.regex.Match[builtins.str],None]R
regex.regex.Match[builtins.str]
builtins.str"builtins.str"regex.regex.Match
None*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX¯
searchregex.regex.search"ï
-Union[regex.regex.Match[builtins.bytes],None]X
!regex.regex.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Match
None*À
patternΩ
9Union[builtins.bytes,regex.regex.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytes\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"36"37"÷
searchregex.regex.search£
searchregex.regex.search"ç
+Union[regex.regex.Match[builtins.str],None]R
regex.regex.Match[builtins.str]
builtins.str"builtins.str"regex.regex.Match
None*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadXı
searchregex.regex.search"ï
-Union[regex.regex.Match[builtins.bytes],None]X
!regex.regex.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Match
None*À
patternΩ
9Union[builtins.bytes,regex.regex.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytes\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"38"39"310"311"312"313"ø
matchregex.regex.match°
matchregex.regex.match"ç
+Union[regex.regex.Match[builtins.str],None]R
regex.regex.Match[builtins.str]
builtins.str"builtins.str"regex.regex.Match
None*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadXˆ
matchregex.regex.match"ï
-Union[regex.regex.Match[builtins.bytes],None]X
!regex.regex.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Match
None*À
patternΩ
9Union[builtins.bytes,regex.regex.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytes\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"36"37"–
matchregex.regex.match°
matchregex.regex.match"ç
+Union[regex.regex.Match[builtins.str],None]R
regex.regex.Match[builtins.str]
builtins.str"builtins.str"regex.regex.Match
None*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadXÛ
matchregex.regex.match"ï
-Union[regex.regex.Match[builtins.bytes],None]X
!regex.regex.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Match
None*À
patternΩ
9Union[builtins.bytes,regex.regex.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytes\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"38"39"310"311"312"313"◊
	fullmatchregex.regex.fullmatch©
	fullmatchregex.regex.fullmatch"ç
+Union[regex.regex.Match[builtins.str],None]R
regex.regex.Match[builtins.str]
builtins.str"builtins.str"regex.regex.Match
None*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX˛
	fullmatchregex.regex.fullmatch"ï
-Union[regex.regex.Match[builtins.bytes],None]X
!regex.regex.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Match
None*À
patternΩ
9Union[builtins.bytes,regex.regex.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytes\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"36"37"Ë
	fullmatchregex.regex.fullmatch©
	fullmatchregex.regex.fullmatch"ç
+Union[regex.regex.Match[builtins.str],None]R
regex.regex.Match[builtins.str]
builtins.str"builtins.str"regex.regex.Match
None*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX˚
	fullmatchregex.regex.fullmatch"ï
-Union[regex.regex.Match[builtins.bytes],None]X
!regex.regex.Match[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Match
None*À
patternΩ
9Union[builtins.bytes,regex.regex.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytes\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"38"39"310"311"312"313"Œ
splitregex.regex.splitË
splitregex.regex.split"{
&builtins.list[Union[builtins.str,Any]]B
Union[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.list*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*,
maxsplit
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadXæ
splitregex.regex.split"É
(builtins.list[Union[builtins.bytes,Any]]H
Union[builtins.bytes,Any] 
builtins.bytes"builtins.bytes
Any"builtins.list*À
patternΩ
9Union[builtins.bytes,regex.regex.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytes\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*,
maxsplit
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"36"37"ﬂ
splitregex.regex.splitË
splitregex.regex.split"{
&builtins.list[Union[builtins.str,Any]]B
Union[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.list*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*,
maxsplit
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadXª
splitregex.regex.split"É
(builtins.list[Union[builtins.bytes,Any]]H
Union[builtins.bytes,Any] 
builtins.bytes"builtins.bytes
Any"builtins.list*À
patternΩ
9Union[builtins.bytes,regex.regex.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytes\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*,
maxsplit
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"38"39"310"311"312"313"ı
	splititerregex.regex.splititer¸
	splititerregex.regex.splititer"
Any*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*,
maxsplit
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX…

	splititerregex.regex.splititer"
Any*À
patternΩ
9Union[builtins.bytes,regex.regex.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytes\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*,
maxsplit
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"36"37"Ü
	splititerregex.regex.splititer¸
	splititerregex.regex.splititer"
Any*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*,
maxsplit
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX∆
	splititerregex.regex.splititer"
Any*À
patternΩ
9Union[builtins.bytes,regex.regex.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytes\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*,
maxsplit
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"38"39"310"311"312"313"Ö
findallregex.regex.findall∆
findallregex.regex.findall",
builtins.list[Any]
Any"builtins.list*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *0

overlapped
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadXì
findallregex.regex.findall",
builtins.list[Any]
Any"builtins.list*À
patternΩ
9Union[builtins.bytes,regex.regex.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytes\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *0

overlapped
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"36"37"ñ
findallregex.regex.findall∆
findallregex.regex.findall",
builtins.list[Any]
Any"builtins.list*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *0

overlapped
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadXê
findallregex.regex.findall",
builtins.list[Any]
Any"builtins.list*À
patternΩ
9Union[builtins.bytes,regex.regex.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytes\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *0

overlapped
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"38"39"310"311"312"313"ü
finditerregex.regex.finditer“
finditerregex.regex.finditer"
Any*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *0

overlapped
builtins.bool"builtins.bool *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadXü
finditerregex.regex.finditer"
Any*À
patternΩ
9Union[builtins.bytes,regex.regex.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytes\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *0

overlapped
builtins.bool"builtins.bool *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"36"37"∞
finditerregex.regex.finditer“
finditerregex.regex.finditer"
Any*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*(
string
builtins.str"builtins.str*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *0

overlapped
builtins.bool"builtins.bool *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadXú
finditerregex.regex.finditer"
Any*À
patternΩ
9Union[builtins.bytes,regex.regex.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytes\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *0

overlapped
builtins.bool"builtins.bool *-
partial
builtins.bool"builtins.bool *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"38"39"310"311"312"313"ÿ
subregex.regex.sub◊
subregex.regex.sub"
builtins.str"builtins.str*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*≠
repl¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX›
subregex.regex.sub" 
builtins.bytes"builtins.bytes*À
patternΩ
9Union[builtins.bytes,regex.regex.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytes\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*‚
repl◊
©Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],CallableType[builtins.function]]Ÿ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"36"37"˙
subregex.regex.sub◊
subregex.regex.sub"
builtins.str"builtins.str*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*≠
repl¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadXÎ
subregex.regex.sub" 
builtins.bytes"builtins.bytes*À
patternΩ
9Union[builtins.bytes,regex.regex.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytes\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Û
replË
ΩUnion[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],CallableType[builtins.function]]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"38"39"310"311"312"313"‚
subfregex.regex.subf€
subfregex.regex.subf"
builtins.str"builtins.str*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*Ø
format¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX·
subfregex.regex.subf" 
builtins.bytes"builtins.bytes*À
patternΩ
9Union[builtins.bytes,regex.regex.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytes\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*‰
format◊
©Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],CallableType[builtins.function]]Ÿ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"36"37"Ñ
subfregex.regex.subf€
subfregex.regex.subf"
builtins.str"builtins.str*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*Ø
format¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadXÔ
subfregex.regex.subf" 
builtins.bytes"builtins.bytes*À
patternΩ
9Union[builtins.bytes,regex.regex.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytes\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*ı
formatË
ΩUnion[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],CallableType[builtins.function]]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"38"39"310"311"312"313"Ë
subnregex.regex.subnù
subnregex.regex.subn"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*≠
repl¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX•
subnregex.regex.subn"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*À
patternΩ
9Union[builtins.bytes,regex.regex.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytes\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*‚
repl◊
©Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],CallableType[builtins.function]]Ÿ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"36"37"ä
subnregex.regex.subnù
subnregex.regex.subn"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*≠
repl¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX≥
subnregex.regex.subn"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*À
patternΩ
9Union[builtins.bytes,regex.regex.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytes\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*Û
replË
ΩUnion[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],CallableType[builtins.function]]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"38"39"310"311"312"313"Ú
subfnregex.regex.subfn°
subfnregex.regex.subfn"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*Ø
format¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX©
subfnregex.regex.subfn"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*À
patternΩ
9Union[builtins.bytes,regex.regex.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytes\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*‰
format◊
©Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],CallableType[builtins.function]]Ÿ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*Ê
stringŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"36"37"î
subfnregex.regex.subfn°
subfnregex.regex.subfn"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*Ω
patternØ
5Union[builtins.str,regex.regex.Pattern[builtins.str]]
builtins.str"builtins.strV
!regex.regex.Pattern[builtins.str]
builtins.str"builtins.str"regex.regex.Pattern*Ø
format¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*(
string
builtins.str"builtins.str*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX∑
subfnregex.regex.subfn"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*À
patternΩ
9Union[builtins.bytes,regex.regex.Pattern[builtins.bytes]] 
builtins.bytes"builtins.bytes\
#regex.regex.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"regex.regex.Pattern*ı
formatË
ΩUnion[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],CallableType[builtins.function]]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBufferK
CallableType[builtins.function]&
builtins.function"builtins.function*„
string÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
count
builtins.int"builtins.int *)
flags
builtins.int"builtins.int *O
posD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
endposD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y

concurrentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *3
ignore_unused
builtins.bool"builtins.bool *
kwargs
Any0:overloadX"38"39"310"311"312"313"ñ
	cache_allregex.regex.cache_allg
	cache_allregex.regex.cache_all"
None*+
value
builtins.bool"builtins.bool 0:overloadXe
	cache_allregex.regex.cache_all"
builtins.bool"builtins.bool*
value
None0:overloadX"36"37"38"39"310"311"312"313*ä
__path__regex.__path__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*36*37*38*39*310*311*312*313*•
__annotations__regex.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313*x
Aregex._regex_core.A:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*Ä
ASCIIregex._regex_core.ASCII:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*x
Bregex._regex_core.B:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*à
	BESTMATCHregex._regex_core.BESTMATCH:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*x
Dregex._regex_core.D:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*Ä
DEBUGregex._regex_core.DEBUG:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*x
Eregex._regex_core.E:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*é
ENHANCEMATCHregex._regex_core.ENHANCEMATCH:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*x
Fregex._regex_core.F:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*Ü
FULLCASEregex._regex_core.FULLCASE:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*x
Iregex._regex_core.I:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*ä

IGNORECASEregex._regex_core.IGNORECASE:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*x
Lregex._regex_core.L:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*Ç
LOCALEregex._regex_core.LOCALE:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*x
Mregex._regex_core.M:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*à
	MULTILINEregex._regex_core.MULTILINE:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*x
Pregex._regex_core.P:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*Ä
POSIXregex._regex_core.POSIX:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*x
Rregex._regex_core.R:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*Ñ
REVERSEregex._regex_core.REVERSE:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*x
Tregex._regex_core.T:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*Ü
TEMPLATEregex._regex_core.TEMPLATE:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*x
Sregex._regex_core.S:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*Ç
DOTALLregex._regex_core.DOTALL:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*x
Uregex._regex_core.U:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*Ñ
UNICODEregex._regex_core.UNICODE:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*z
V0regex._regex_core.V0:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*Ü
VERSION0regex._regex_core.VERSION0:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*z
V1regex._regex_core.V1:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*Ü
VERSION1regex._regex_core.VERSION1:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*x
Wregex._regex_core.W:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*~
WORDregex._regex_core.WORD:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*x
Xregex._regex_core.X:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*Ñ
VERBOSEregex._regex_core.VERBOSE:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*î
DEFAULT_VERSION!regex._regex_core.DEFAULT_VERSION:
regex._regex_core.RegexFlag"regex._regex_core.RegexFlag*36*37*38*39*310*311*312*313*ã
Regexregex.regex.RegexK
CallableType[builtins.function]&
builtins.function"builtins.function*36*37*38*39*310*311*312*313