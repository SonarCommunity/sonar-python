
+sqlalchemy.dialects.postgresql.pypostgresql¢
	PGNumeric5sqlalchemy.dialects.postgresql.pypostgresql.PGNumeric"sqlalchemy.sql.sqltypes.Numeric*‡
bind_processorDsqlalchemy.dialects.postgresql.pypostgresql.PGNumeric.bind_processor*
self*
dialectz36z37z38z39z310z311*˜
result_processorFsqlalchemy.dialects.postgresql.pypostgresql.PGNumeric.result_processor*
self*
dialect*
coltypez36z37z38z39z310z311j36j37j38j39j310j311À
PGExecutionContext_pypostgresqlKsqlalchemy.dialects.postgresql.pypostgresql.PGExecutionContext_pypostgresql"6sqlalchemy.dialects.postgresql.base.PGExecutionContextj36j37j38j39j310j311…
PGDialect_pypostgresqlBsqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql"-sqlalchemy.dialects.postgresql.base.PGDialect*…
dbapiHsqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql.dbapi*
cls0:classmethodpz36z37z38z39z310z311*¾
dbapi_exception_translation_mapbsqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql.dbapi_exception_translation_map*
self0:memoized_propertyz36z37z38z39z310z311*š
create_connect_argsVsqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql.create_connect_args*
self*
urlz36z37z38z39z310z311*¨
is_disconnectPsqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql.is_disconnect*
self*
e*

connection*

cursorz36z37z38z39z310z311j36j37j38j39j310j311r‹
driverIsqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql.driver
builtins.str"builtins.str*36*37*38*39*310*311r±
supports_statement_cache[sqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql.supports_statement_cache
builtins.bool"builtins.bool*36*37*38*39*310*311r·
supports_unicode_statements^sqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql.supports_unicode_statements
builtins.bool"builtins.bool*36*37*38*39*310*311r­
supports_unicode_bindsYsqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql.supports_unicode_binds
builtins.bool"builtins.bool*36*37*38*39*310*311r’
description_encodingWsqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql.description_encoding
Any*36*37*38*39*310*311r£
default_paramstyleUsqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql.default_paramstyle
builtins.str"builtins.str*36*37*38*39*310*311r­
supports_sane_rowcountYsqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql.supports_sane_rowcount
builtins.bool"builtins.bool*36*37*38*39*310*311r¹
supports_sane_multi_rowcount_sqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql.supports_sane_multi_rowcount
builtins.bool"builtins.bool*36*37*38*39*310*311rz
colspecsKsqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql.colspecs
Any*36*37*38*39*310*311*Á
__annotations__;sqlalchemy.dialects.postgresql.pypostgresql.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311