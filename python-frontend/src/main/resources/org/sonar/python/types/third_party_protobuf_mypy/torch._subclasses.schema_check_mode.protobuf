
#torch._subclasses.schema_check_modeÈ
Mutation,torch._subclasses.schema_check_mode.Mutation"builtins.tuple*µ
_replace5torch._subclasses.schema_check_mode.Mutation._replace"Z
0torch._subclasses.schema_check_mode.Mutation._NT$
Tuple[Any,Any]
Any
Any*e
_selfZ
0torch._subclasses.schema_check_mode.Mutation._NT$
Tuple[Any,Any]
Any
Any*
op_name
Any *
arg_name
Any *ò
__new__4torch._subclasses.schema_check_mode.Mutation.__new__"Z
0torch._subclasses.schema_check_mode.Mutation._NT$
Tuple[Any,Any]
Any
Any*§
_clsœ
6Type[torch._subclasses.schema_check_mode.Mutation._NT]Z
0torch._subclasses.schema_check_mode.Mutation._NT$
Tuple[Any,Any]
Any
Any"type*
op_name
Any*
arg_name
Any*ÿ
_asdict4torch._subclasses.schema_check_mode.Mutation._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*e
_selfZ
0torch._subclasses.schema_check_mode.Mutation._NT$
Tuple[Any,Any]
Any
Any*º
_make2torch._subclasses.schema_check_mode.Mutation._make"Z
0torch._subclasses.schema_check_mode.Mutation._NT$
Tuple[Any,Any]
Any
Any*§
_clsœ
6Type[torch._subclasses.schema_check_mode.Mutation._NT]Z
0torch._subclasses.schema_check_mode.Mutation._NT$
Tuple[Any,Any]
Any
Any"type*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodprH
op_name4torch._subclasses.schema_check_mode.Mutation.op_name
AnyrJ
arg_name5torch._subclasses.schema_check_mode.Mutation.arg_name
Anyr¡
_fields4torch._subclasses.schema_check_mode.Mutation._fields`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.strr¢
_field_types9torch._subclasses.schema_check_mode.Mutation._field_typesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictr¨
_field_defaults<torch._subclasses.schema_check_mode.Mutation._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictr]
_source4torch._subclasses.schema_check_mode.Mutation._source
builtins.str"builtins.strr¨
__annotations__<torch._subclasses.schema_check_mode.Mutation.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictß
Aliasing,torch._subclasses.schema_check_mode.Aliasing"builtins.tuple*í
_replace5torch._subclasses.schema_check_mode.Aliasing._replace"g
0torch._subclasses.schema_check_mode.Aliasing._NT1
Tuple[Any,Any,Any]
Any
Any
Any*r
_selfg
0torch._subclasses.schema_check_mode.Aliasing._NT1
Tuple[Any,Any,Any]
Any
Any
Any*
op_name
Any *
arg_name
Any *
output_number
Any *¨
__new__4torch._subclasses.schema_check_mode.Aliasing.__new__"g
0torch._subclasses.schema_check_mode.Aliasing._NT1
Tuple[Any,Any,Any]
Any
Any
Any*´
_cls©
6Type[torch._subclasses.schema_check_mode.Aliasing._NT]g
0torch._subclasses.schema_check_mode.Aliasing._NT1
Tuple[Any,Any,Any]
Any
Any
Any"type*
op_name
Any*
arg_name
Any*
output_number
Any*Œ
_asdict4torch._subclasses.schema_check_mode.Aliasing._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*r
_selfg
0torch._subclasses.schema_check_mode.Aliasing._NT1
Tuple[Any,Any,Any]
Any
Any
Any*Ô
_make2torch._subclasses.schema_check_mode.Aliasing._make"g
0torch._subclasses.schema_check_mode.Aliasing._NT1
Tuple[Any,Any,Any]
Any
Any
Any*´
_cls©
6Type[torch._subclasses.schema_check_mode.Aliasing._NT]g
0torch._subclasses.schema_check_mode.Aliasing._NT1
Tuple[Any,Any,Any]
Any
Any
Any"type*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodprH
op_name4torch._subclasses.schema_check_mode.Aliasing.op_name
AnyrJ
arg_name5torch._subclasses.schema_check_mode.Aliasing.arg_name
AnyrT
output_number:torch._subclasses.schema_check_mode.Aliasing.output_number
AnyrÍ
_fields4torch._subclasses.schema_check_mode.Aliasing._fields‹
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strr¢
_field_types9torch._subclasses.schema_check_mode.Aliasing._field_typesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictr¨
_field_defaults<torch._subclasses.schema_check_mode.Aliasing._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictr]
_source4torch._subclasses.schema_check_mode.Aliasing._source
builtins.str"builtins.strr¨
__annotations__<torch._subclasses.schema_check_mode.Aliasing.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictƒ
SchemaCheckMode3torch._subclasses.schema_check_mode.SchemaCheckMode".torch.utils._python_dispatch.TorchDispatchMode*R
__init__<torch._subclasses.schema_check_mode.SchemaCheckMode.__init__*
self*X
reset_cache?torch._subclasses.schema_check_mode.SchemaCheckMode.reset_cache*
self*X
display_ops?torch._subclasses.schema_check_mode.SchemaCheckMode.display_ops*
self*•
__torch_dispatch__Ftorch._subclasses.schema_check_mode.SchemaCheckMode.__torch_dispatch__*
self*
func*	
types*

args *
kwargs rG
ops7torch._subclasses.schema_check_mode.SchemaCheckMode.ops
AnyrO
mutated;torch._subclasses.schema_check_mode.SchemaCheckMode.mutated
AnyrQ
aliasing<torch._subclasses.schema_check_mode.SchemaCheckMode.aliasing
Anyb
is_iterable_of_tensors:torch._subclasses.schema_check_mode.is_iterable_of_tensors*
iterableJ
clone_inputs0torch._subclasses.schema_check_mode.clone_inputs*
args*Ÿ
__annotations__3torch._subclasses.schema_check_mode.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
pytreetorch.utils._pytree *M
SchemaArgument2torch._subclasses.schema_check_mode.SchemaArgument
Any*K
SchemaArgType1torch._subclasses.schema_check_mode.SchemaArgType
Any*E

SchemaInfo.torch._subclasses.schema_check_mode.SchemaInfo
Any