
urllib3.poolmanager¢
PoolManagerurllib3.poolmanager.PoolManager"urllib3.request.RequestMethods*ß
__init__(urllib3.poolmanager.PoolManager.__init__"
None*L
selfB
urllib3.poolmanager.PoolManager"urllib3.poolmanager.PoolManager*
	num_pools
Any *
headers
Any *
connection_pool_kw
Any*@
	__enter__)urllib3.poolmanager.PoolManager.__enter__*
self*ª
__exit__(urllib3.poolmanager.PoolManager.__exit__":
Literal[builtins.bool]	
builtins.bool"builtins.bool*J
selfB
urllib3.poolmanager.PoolManager"urllib3.poolmanager.PoolManager*—
exc_typeŠ
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*m
exc_valb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*c
exc_tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None*8
clear%urllib3.poolmanager.PoolManager.clear*
self*z
connection_from_host4urllib3.poolmanager.PoolManager.connection_from_host*
self*
host*

port *
scheme *]
connection_from_url3urllib3.poolmanager.PoolManager.connection_from_url*
self*
url*¦
urlopen'urllib3.poolmanager.PoolManager.urlopen*
self*

method*
url*

body *
headers *
encode_multipart *
multipart_boundary *
kwr7
proxy%urllib3.poolmanager.PoolManager.proxy
AnyrQ
connection_pool_kw2urllib3.poolmanager.PoolManager.connection_pool_kw
Anyr7
pools%urllib3.poolmanager.PoolManager.pools
Any—
ProxyManager urllib3.poolmanager.ProxyManager"urllib3.poolmanager.PoolManager*˜
__init__)urllib3.poolmanager.ProxyManager.__init__"
None*N
selfD
 urllib3.poolmanager.ProxyManager" urllib3.poolmanager.ProxyManager*
	proxy_url
Any*
	num_pools
Any *
headers
Any *
proxy_headers
Any *
connection_pool_kw
Any*{
connection_from_host5urllib3.poolmanager.ProxyManager.connection_from_host*
self*
host*

port *
scheme *§
urlopen(urllib3.poolmanager.ProxyManager.urlopen*
self*

method*
url*

body *
headers *
encode_multipart *
multipart_boundary *
kwr8
proxy&urllib3.poolmanager.ProxyManager.proxy
AnyrH
proxy_headers.urllib3.poolmanager.ProxyManager.proxy_headers
AnyE
proxy_from_url"urllib3.poolmanager.proxy_from_url*
url*
kw