
requests.utils:
dict_to_sequencerequests.utils.dict_to_sequence*
d,
	super_lenrequests.utils.super_len*
o¢
get_netrc_authrequests.utils.get_netrc_auth"ú
,Union[Tuple[builtins.str,builtins.str],None]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
None*
url
UnboundType[_Uri]*2
raise_errors
builtins.bool"builtins.bool 8
guess_filenamerequests.utils.guess_filename*
objE
extract_zipped_paths#requests.utils.extract_zipped_paths*
path»
atomic_openrequests.utils.atomic_open"Ö
6contextlib._GeneratorContextManager[io.BufferedWriter]&
io.BufferedWriter"io.BufferedWriter"#contextlib._GeneratorContextManager*
filename
Any@
from_key_val_list requests.utils.from_key_val_list*	
value<
to_key_val_listrequests.utils.to_key_val_list*	
value@
parse_list_header requests.utils.parse_list_header*	
value@
parse_dict_header requests.utils.parse_dict_header*	
valueã
unquote_header_value#requests.utils.unquote_header_value"
Any*
value
Any*1
is_filename
builtins.bool"builtins.bool A
dict_from_cookiejar"requests.utils.dict_from_cookiejar*
cjV
add_dict_to_cookiejar$requests.utils.add_dict_to_cookiejar*
cj*
cookie_dictT
get_encodings_from_content)requests.utils.get_encodings_from_content*
contentR
get_encoding_from_headers(requests.utils.get_encoding_from_headers*
headersd
stream_decode_response_unicode-requests.utils.stream_decode_response_unicode*
iterator*
rõ
iter_slicesrequests.utils.iter_slices"n
(typing.Generator[builtins.str,None,None]
builtins.str"builtins.str
None
None"typing.Generator*(
string
builtins.str"builtins.str*V
slice_lengthD
Union[builtins.int,None]
builtins.int"builtins.int
NoneL
get_unicode_from_response(requests.utils.get_unicode_from_response*
r|
unquote_unreserved!requests.utils.unquote_unreserved"
builtins.str"builtins.str*%
uri
builtins.str"builtins.strn
requote_urirequests.utils.requote_uri"
builtins.str"builtins.str*%
uri
builtins.str"builtins.str§
address_in_network!requests.utils.address_in_network"
builtins.bool"builtins.bool*$
ip
builtins.str"builtins.str*%
net
builtins.str"builtins.stru
dotted_netmaskrequests.utils.dotted_netmask"
builtins.str"builtins.str*&
mask
builtins.int"builtins.int~
is_ipv4_addressrequests.utils.is_ipv4_address"
builtins.bool"builtins.bool*+
	string_ip
builtins.str"builtins.str
is_valid_cidrrequests.utils.is_valid_cidr"
builtins.bool"builtins.bool*0
string_network
builtins.str"builtins.str∆
set_environrequests.utils.set_environ"Z
)contextlib._GeneratorContextManager[None]
None"#contextlib._GeneratorContextManager**
env_name
builtins.str"builtins.str*
value
Noneñ
should_bypass_proxies$requests.utils.should_bypass_proxies"
builtins.bool"builtins.bool*
url
UnboundType[_Uri]*ñ
no_proxyá
)Union[typing.Iterable[builtins.str],None]N
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable
NoneØ
get_environ_proxies"requests.utils.get_environ_proxies"9
builtins.dict[Any,Any]
Any
Any"builtins.dict*
url
UnboundType[_Uri]*ò
no_proxyá
)Union[typing.Iterable[builtins.str],None]N
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable
None —
select_proxyrequests.utils.select_proxy"
Any*
url
UnboundType[_Uri]*{
proxiesn
#Union[typing.Mapping[Any,Any],None];
typing.Mapping[Any,Any]
Any
Any"typing.Mapping
NoneÉ
resolve_proxiesrequests.utils.resolve_proxies"
Any*»
request∫
>Union[requests.models.Request,requests.models.PreparedRequest]2
requests.models.Request"requests.models.RequestB
requests.models.PreparedRequest"requests.models.PreparedRequest* 
proxiesº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None*/
	trust_env
builtins.bool"builtins.bool 
default_user_agent!requests.utils.default_user_agent"
builtins.str"builtins.str*(
name
builtins.str"builtins.str ±
default_headersrequests.utils.default_headers"~
5requests.structures.CaseInsensitiveDict[builtins.str]
builtins.str"builtins.str"'requests.structures.CaseInsensitiveDict¢
parse_header_links!requests.utils.parse_header_links"ø
7builtins.list[builtins.dict[builtins.str,builtins.str]]u
(builtins.dict[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.dict"builtins.list*'
value
builtins.str"builtins.str9
guess_json_utfrequests.utils.guess_json_utf*
data\
prepend_scheme_if_needed'requests.utils.prepend_scheme_if_needed*
url*

new_scheme∑
get_auth_from_url requests.utils.get_auth_from_url"`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*
url
UnboundType[_Uri]O
to_native_stringrequests.utils.to_native_string*

string*
encoding V
urldefragauthrequests.utils.urldefragauth"
Any*
url
UnboundType[_Uri]ç
rewind_bodyrequests.utils.rewind_body"
None*X
prepared_requestB
requests.models.PreparedRequest"requests.models.PreparedRequest°
check_header_validity$requests.utils.check_header_validity"
None*X
headerL
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*8
StrOrBytesPathrequests.utils.StrOrBytesPath
Any*7
_Urirequests.utils._Uri
UnboundType[TypeAlias]*Ü
cookiejar_from_dict"requests.utils.cookiejar_from_dictK
CallableType[builtins.function]&
builtins.function"builtins.function*ã
NETRC_FILESrequests.utils.NETRC_FILES`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*H
DEFAULT_CA_BUNDLE_PATH%requests.utils.DEFAULT_CA_BUNDLE_PATH
Any*§
DEFAULT_PORTSrequests.utils.DEFAULT_PORTSu
(builtins.dict[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"builtins.dict*_
DEFAULT_ACCEPT_ENCODING&requests.utils.DEFAULT_ACCEPT_ENCODING
builtins.str"builtins.str*Ö
UNRESERVED_SETrequests.utils.UNRESERVED_SETT
 builtins.frozenset[builtins.str]
builtins.str"builtins.str"builtins.frozenset