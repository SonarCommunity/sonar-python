
pycocotools.cocoI
_Imagepycocotools.coco._Image"typing._TypedDictj36j37j38j39j310E
_RLEpycocotools.coco._RLE"typing._TypedDictj36j37j38j39j310S
_Annotationpycocotools.coco._Annotation"typing._TypedDictj36j37j38j39j310W
_AnnotationGpycocotools.coco._AnnotationG"typing._TypedDictPj36j37j38j39j310O
	_Categorypycocotools.coco._Category"typing._TypedDictj36j37j38j39j310M
_Datasetpycocotools.coco._Dataset"typing._TypedDictj36j37j38j39j310≥=
COCOpycocotools.coco.COCO"builtins.object*å
__init__pycocotools.coco.COCO.__init__"
None*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*Ü
annotation_fileo
%Union[builtins.str,pathlib.Path,None]
builtins.str"builtins.str
pathlib.Path"pathlib.Path
None z36z37z38z39z310*â
createIndex!pycocotools.coco.COCO.createIndex"
None*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCOz36z37z38z39z310*{
infopycocotools.coco.COCO.info"
None*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCOz36z37z38z39z310*˙
	getAnnIdspycocotools.coco.COCO.getAnnIds"J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*∏
imgIds©
3Union[typing.Collection[builtins.int],builtins.int]R
typing.Collection[builtins.int]
builtins.int"builtins.int"typing.Collection
builtins.int"builtins.int *∏
catIds©
3Union[typing.Collection[builtins.int],builtins.int]R
typing.Collection[builtins.int]
builtins.int"builtins.int"typing.Collection
builtins.int"builtins.int *c
areaRngT
typing.Sequence[builtins.float] 
builtins.float"builtins.float"typing.Sequence *V
iscrowdG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None z36z37z38z39z310*¯
	getCatIdspycocotools.coco.COCO.getCatIds"J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*∏
catNms©
3Union[typing.Collection[builtins.str],builtins.str]R
typing.Collection[builtins.str]
builtins.str"builtins.str"typing.Collection
builtins.str"builtins.str *∏
supNms©
3Union[typing.Collection[builtins.str],builtins.str]R
typing.Collection[builtins.str]
builtins.str"builtins.str"typing.Collection
builtins.str"builtins.str *∏
catIds©
3Union[typing.Collection[builtins.int],builtins.int]R
typing.Collection[builtins.int]
builtins.int"builtins.int"typing.Collection
builtins.int"builtins.int z36z37z38z39z310*±
	getImgIdspycocotools.coco.COCO.getImgIds"J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*∏
imgIds©
3Union[typing.Collection[builtins.int],builtins.int]R
typing.Collection[builtins.int]
builtins.int"builtins.int"typing.Collection
builtins.int"builtins.int *¨
catIdsù
/Union[builtins.list[builtins.int],builtins.int]J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list
builtins.int"builtins.int z36z37z38z39z310*Æ
loadAnnspycocotools.coco.COCO.loadAnns"{
#builtins.list[TypeAlias[TypedDict]]E
TypeAlias[TypedDict]
	TypedDict"pycocotools.coco._Annotation"builtins.list*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*µ
ids©
3Union[typing.Collection[builtins.int],builtins.int]R
typing.Collection[builtins.int]
builtins.int"builtins.int"typing.Collection
builtins.int"builtins.int z36z37z38z39z310*¨
loadCatspycocotools.coco.COCO.loadCats"y
#builtins.list[TypeAlias[TypedDict]]C
TypeAlias[TypedDict]
	TypedDict"pycocotools.coco._Category"builtins.list*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*µ
ids©
3Union[typing.Collection[builtins.int],builtins.int]R
typing.Collection[builtins.int]
builtins.int"builtins.int"typing.Collection
builtins.int"builtins.int z36z37z38z39z310*©
loadImgspycocotools.coco.COCO.loadImgs"v
#builtins.list[TypeAlias[TypedDict]]@
TypeAlias[TypedDict]
	TypedDict"pycocotools.coco._Image"builtins.list*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*µ
ids©
3Union[typing.Collection[builtins.int],builtins.int]R
typing.Collection[builtins.int]
builtins.int"builtins.int"typing.Collection
builtins.int"builtins.int z36z37z38z39z310*¿
showAnnspycocotools.coco.COCO.showAnns"
None*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*â
anns
%typing.Sequence[TypeAlias[TypedDict]]E
TypeAlias[TypedDict]
	TypedDict"pycocotools.coco._Annotation"typing.Sequence*/
	draw_bbox
builtins.bool"builtins.bool z36z37z38z39z310*“
loadRespycocotools.coco.COCO.loadRes".
pycocotools.coco.COCO"pycocotools.coco.COCO*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*)
resFile
builtins.str"builtins.strz36z37z38z39z310*ô
downloadpycocotools.coco.COCO.download"h
!Union[Literal[builtins.int],None]7
Literal[builtins.int]	
builtins.int"builtins.int
None*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*R
tarDirD
Union[builtins.str,None]
builtins.str"builtins.str
None *`
imgIdsR
typing.Collection[builtins.int]
builtins.int"builtins.int"typing.Collection z36z37z38z39z310*Ö
loadNumpyAnnotations*pycocotools.coco.COCO.loadNumpyAnnotations"{
#builtins.list[TypeAlias[TypedDict]]E
TypeAlias[TypedDict]
	TypedDict"pycocotools.coco._Annotation"builtins.list*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*u
datak
TypeAlias[TypeAlias[Any]]1
TypeAlias[Any]
Any"_typeshed.Incomplete"pycocotools.coco._NDArrayz36z37z38z39z310*∏
	annToMaskpycocotools.coco.COCO.annToMask"k
TypeAlias[TypeAlias[Any]]1
TypeAlias[Any]
Any"_typeshed.Incomplete"pycocotools.coco._NDArray*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*N
annE
TypeAlias[TypedDict]
	TypedDict"pycocotools.coco._Annotationz36z37z38z39z3102’
annToRLEpycocotools.coco.COCO.annToRLEÉ
annToRLEpycocotools.coco.COCO.annToRLE">
TypeAlias[TypedDict]
	TypedDict"pycocotools.coco._RLE*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*O
annF
TypeAlias[TypedDict]
	TypedDict"pycocotools.coco._AnnotationG0:overloadXÖ
annToRLEpycocotools.coco.COCO.annToRLE"@
TypeAlias[TypedDict]
	TypedDict"pycocotools._EncodedRLE*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*O
annF
TypeAlias[TypedDict]
	TypedDict"pycocotools.coco._AnnotationG0:overloadXÖ
annToRLEpycocotools.coco.COCO.annToRLE"@
TypeAlias[TypedDict]
	TypedDict"pycocotools._EncodedRLE*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*O
annF
TypeAlias[TypedDict]
	TypedDict"pycocotools.coco._AnnotationG0:overloadX"36"37"38"39"310j36j37j38j39j310r‡
annspycocotools.coco.COCO.anns¶
0builtins.dict[builtins.int,TypeAlias[TypedDict]]
builtins.int"builtins.intE
TypeAlias[TypedDict]
	TypedDict"pycocotools.coco._Annotation"builtins.dict*36*37*38*39*310rÅ
datasetpycocotools.coco.COCO.datasetB
TypeAlias[TypedDict]
	TypedDict"pycocotools.coco._Dataset*36*37*38*39*310rﬁ
catspycocotools.coco.COCO.cats§
0builtins.dict[builtins.int,TypeAlias[TypedDict]]
builtins.int"builtins.intC
TypeAlias[TypedDict]
	TypedDict"pycocotools.coco._Category"builtins.dict*36*37*38*39*310r€
imgspycocotools.coco.COCO.imgs°
0builtins.dict[builtins.int,TypeAlias[TypedDict]]
builtins.int"builtins.int@
TypeAlias[TypedDict]
	TypedDict"pycocotools.coco._Image"builtins.dict*36*37*38*39*310rØ
	imgToAnnspycocotools.coco.COCO.imgToAnnsÎ
?builtins.dict[builtins.int,builtins.list[TypeAlias[TypedDict]]]
builtins.int"builtins.int{
#builtins.list[TypeAlias[TypedDict]]E
TypeAlias[TypedDict]
	TypedDict"pycocotools.coco._Annotation"builtins.list"builtins.dict*36*37*38*39*310rˆ
	catToImgspycocotools.coco.COCO.catToImgs≤
7builtins.dict[builtins.int,builtins.list[builtins.int]]
builtins.int"builtins.intJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list"builtins.dict*36*37*38*39*310*°
__annotations__ pycocotools.coco.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*y
PYTHON_VERSIONpycocotools.coco.PYTHON_VERSION1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310