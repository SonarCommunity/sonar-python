
pycocotools.cocoˆ
_Imagepycocotools.coco._Image"builtins.objectj36j37rF
idpycocotools.coco._Image.id
builtins.int"builtins.int*36*37rL
widthpycocotools.coco._Image.width
builtins.int"builtins.int*36*37rN
heightpycocotools.coco._Image.height
builtins.int"builtins.int*36*37rT
	file_name!pycocotools.coco._Image.file_name
builtins.str"builtins.str*36*37P
_Imagepycocotools.coco._Image"typing._TypedDictj38j39j310j311j312j313™
_RLEpycocotools.coco._RLE"builtins.objectj36j37rv
sizepycocotools.coco._RLE.sizeJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*36*37rz
countspycocotools.coco._RLE.countsJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*36*37L
_RLEpycocotools.coco._RLE"typing._TypedDictj38j39j310j311j312j313é	
_Annotationpycocotools.coco._Annotation"builtins.objectj36j37rK
idpycocotools.coco._Annotation.id
builtins.int"builtins.int*36*37rW
image_id%pycocotools.coco._Annotation.image_id
builtins.int"builtins.int*36*37r]
category_id(pycocotools.coco._Annotation.category_id
builtins.int"builtins.int*36*37rê
segmentation)pycocotools.coco._Annotation.segmentationÃ
lUnion[TypeAlias[builtins.list[builtins.list[builtins.float]]],pycocotools.coco._RLE,pycocotools._EncodedRLE]ı
7TypeAlias[builtins.list[builtins.list[builtins.float]]]è
,builtins.list[builtins.list[builtins.float]]P
builtins.list[builtins.float] 
builtins.float"builtins.float"builtins.list"builtins.list"&pycocotools.coco._TPolygonSegmentation.
pycocotools.coco._RLE"pycocotools.coco._RLE2
pycocotools._EncodedRLE"pycocotools._EncodedRLE*36*37rS
area!pycocotools.coco._Annotation.area 
builtins.float"builtins.float*36*37rÉ
bbox!pycocotools.coco._Annotation.bboxP
builtins.list[builtins.float] 
builtins.float"builtins.float"builtins.list*36*37rU
iscrowd$pycocotools.coco._Annotation.iscrowd
builtins.int"builtins.int*36*37Z
_Annotationpycocotools.coco._Annotation"typing._TypedDictj38j39j310j311j312j313õ
_AnnotationGpycocotools.coco._AnnotationG"builtins.objectPj36j37rL
id pycocotools.coco._AnnotationG.id
builtins.int"builtins.int*36*37rX
image_id&pycocotools.coco._AnnotationG.image_id
builtins.int"builtins.int*36*37r^
category_id)pycocotools.coco._AnnotationG.category_id
builtins.int"builtins.int*36*37rì
segmentation*pycocotools.coco._AnnotationG.segmentationO
pycocotools.coco._TSeg"
builtins.object"builtins.object"builtins.object*36*37rT
area"pycocotools.coco._AnnotationG.area 
builtins.float"builtins.float*36*37rÑ
bbox"pycocotools.coco._AnnotationG.bboxP
builtins.list[builtins.float] 
builtins.float"builtins.float"builtins.list*36*37rV
iscrowd%pycocotools.coco._AnnotationG.iscrowd
builtins.int"builtins.int*36*37^
_AnnotationGpycocotools.coco._AnnotationG"typing._TypedDictPj38j39j310j311j312j313ª
	_Categorypycocotools.coco._Category"builtins.objectj36j37rI
idpycocotools.coco._Category.id
builtins.int"builtins.int*36*37rM
namepycocotools.coco._Category.name
builtins.str"builtins.str*36*37r_
supercategory(pycocotools.coco._Category.supercategory
builtins.str"builtins.str*36*37V
	_Categorypycocotools.coco._Category"typing._TypedDictj38j39j310j311j312j313Œ
_Datasetpycocotools.coco._Dataset"builtins.objectj36j37rü
images pycocotools.coco._Dataset.imagesk
&builtins.list[pycocotools.coco._Image]2
pycocotools.coco._Image"pycocotools.coco._Image"builtins.list*36*37r∏
annotations%pycocotools.coco._Dataset.annotationsz
+builtins.list[pycocotools.coco._Annotation]<
pycocotools.coco._Annotation"pycocotools.coco._Annotation"builtins.list*36*37r∞

categories$pycocotools.coco._Dataset.categoriest
)builtins.list[pycocotools.coco._Category]8
pycocotools.coco._Category"pycocotools.coco._Category"builtins.list*36*37T
_Datasetpycocotools.coco._Dataset"typing._TypedDictj38j39j310j311j312j313›d
COCOpycocotools.coco.COCO"builtins.object*õ
__init__pycocotools.coco.COCO.__init__"
None*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*Ü
annotation_fileo
%Union[builtins.str,pathlib.Path,None]
builtins.str"builtins.str
pathlib.Path"pathlib.Path
None z36z37z38z39z310z311z312z313*ò
createIndex!pycocotools.coco.COCO.createIndex"
None*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCOz36z37z38z39z310z311z312z313*ä
infopycocotools.coco.COCO.info"
None*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCOz36z37z38z39z310z311z312z313*â
	getAnnIdspycocotools.coco.COCO.getAnnIds"J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*∏
imgIds©
3Union[typing.Collection[builtins.int],builtins.int]R
typing.Collection[builtins.int]
builtins.int"builtins.int"typing.Collection
builtins.int"builtins.int *∏
catIds©
3Union[typing.Collection[builtins.int],builtins.int]R
typing.Collection[builtins.int]
builtins.int"builtins.int"typing.Collection
builtins.int"builtins.int *c
areaRngT
typing.Sequence[builtins.float] 
builtins.float"builtins.float"typing.Sequence *V
iscrowdG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None z36z37z38z39z310z311z312z313*á
	getCatIdspycocotools.coco.COCO.getCatIds"J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*∏
catNms©
3Union[typing.Collection[builtins.str],builtins.str]R
typing.Collection[builtins.str]
builtins.str"builtins.str"typing.Collection
builtins.str"builtins.str *∏
supNms©
3Union[typing.Collection[builtins.str],builtins.str]R
typing.Collection[builtins.str]
builtins.str"builtins.str"typing.Collection
builtins.str"builtins.str *∏
catIds©
3Union[typing.Collection[builtins.int],builtins.int]R
typing.Collection[builtins.int]
builtins.int"builtins.int"typing.Collection
builtins.int"builtins.int z36z37z38z39z310z311z312z313*¿
	getImgIdspycocotools.coco.COCO.getImgIds"J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*∏
imgIds©
3Union[typing.Collection[builtins.int],builtins.int]R
typing.Collection[builtins.int]
builtins.int"builtins.int"typing.Collection
builtins.int"builtins.int *¨
catIdsù
/Union[builtins.list[builtins.int],builtins.int]J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list
builtins.int"builtins.int z36z37z38z39z310z311z312z313*†
loadAnnspycocotools.coco.COCO.loadAnns"z
+builtins.list[pycocotools.coco._Annotation]<
pycocotools.coco._Annotation"pycocotools.coco._Annotation"builtins.list*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*µ
ids©
3Union[typing.Collection[builtins.int],builtins.int]R
typing.Collection[builtins.int]
builtins.int"builtins.int"typing.Collection
builtins.int"builtins.int z36z37*µ
loadAnnspycocotools.coco.COCO.loadAnns"{
#builtins.list[TypeAlias[TypedDict]]E
TypeAlias[TypedDict]
	TypedDict"pycocotools.coco._Annotation"builtins.list*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*µ
ids©
3Union[typing.Collection[builtins.int],builtins.int]R
typing.Collection[builtins.int]
builtins.int"builtins.int"typing.Collection
builtins.int"builtins.int z38z39z310z311z312z313*ö
loadCatspycocotools.coco.COCO.loadCats"t
)builtins.list[pycocotools.coco._Category]8
pycocotools.coco._Category"pycocotools.coco._Category"builtins.list*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*µ
ids©
3Union[typing.Collection[builtins.int],builtins.int]R
typing.Collection[builtins.int]
builtins.int"builtins.int"typing.Collection
builtins.int"builtins.int z36z37*≥
loadCatspycocotools.coco.COCO.loadCats"y
#builtins.list[TypeAlias[TypedDict]]C
TypeAlias[TypedDict]
	TypedDict"pycocotools.coco._Category"builtins.list*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*µ
ids©
3Union[typing.Collection[builtins.int],builtins.int]R
typing.Collection[builtins.int]
builtins.int"builtins.int"typing.Collection
builtins.int"builtins.int z38z39z310z311z312z313*ë
loadImgspycocotools.coco.COCO.loadImgs"k
&builtins.list[pycocotools.coco._Image]2
pycocotools.coco._Image"pycocotools.coco._Image"builtins.list*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*µ
ids©
3Union[typing.Collection[builtins.int],builtins.int]R
typing.Collection[builtins.int]
builtins.int"builtins.int"typing.Collection
builtins.int"builtins.int z36z37*∞
loadImgspycocotools.coco.COCO.loadImgs"v
#builtins.list[TypeAlias[TypedDict]]@
TypeAlias[TypedDict]
	TypedDict"pycocotools.coco._Image"builtins.list*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*µ
ids©
3Union[typing.Collection[builtins.int],builtins.int]R
typing.Collection[builtins.int]
builtins.int"builtins.int"typing.Collection
builtins.int"builtins.int z38z39z310z311z312z313*≤
showAnnspycocotools.coco.COCO.showAnns"
None*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*à
anns~
-typing.Sequence[pycocotools.coco._Annotation]<
pycocotools.coco._Annotation"pycocotools.coco._Annotation"typing.Sequence*/
	draw_bbox
builtins.bool"builtins.bool z36z37*«
showAnnspycocotools.coco.COCO.showAnns"
None*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*â
anns
%typing.Sequence[TypeAlias[TypedDict]]E
TypeAlias[TypedDict]
	TypedDict"pycocotools.coco._Annotation"typing.Sequence*/
	draw_bbox
builtins.bool"builtins.bool z38z39z310z311z312z313*·
loadRespycocotools.coco.COCO.loadRes".
pycocotools.coco.COCO"pycocotools.coco.COCO*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*)
resFile
builtins.str"builtins.strz36z37z38z39z310z311z312z313* 
downloadpycocotools.coco.COCO.download"&
Union[Any,None]
Any
None*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*R
tarDirD
Union[builtins.str,None]
builtins.str"builtins.str
None *`
imgIdsR
typing.Collection[builtins.int]
builtins.int"builtins.int"typing.Collection z36z37*†
downloadpycocotools.coco.COCO.download"h
!Union[Literal[builtins.int],None]7
Literal[builtins.int]	
builtins.int"builtins.int
None*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*R
tarDirD
Union[builtins.str,None]
builtins.str"builtins.str
None *`
imgIdsR
typing.Collection[builtins.int]
builtins.int"builtins.int"typing.Collection z38z39z310z311z312z313*˜
loadNumpyAnnotations*pycocotools.coco.COCO.loadNumpyAnnotations"z
+builtins.list[pycocotools.coco._Annotation]<
pycocotools.coco._Annotation"pycocotools.coco._Annotation"builtins.list*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*u
datak
TypeAlias[TypeAlias[Any]]1
TypeAlias[Any]
Any"_typeshed.Incomplete"pycocotools.coco._NDArrayz36z37*å
loadNumpyAnnotations*pycocotools.coco.COCO.loadNumpyAnnotations"{
#builtins.list[TypeAlias[TypedDict]]E
TypeAlias[TypedDict]
	TypedDict"pycocotools.coco._Annotation"builtins.list*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*u
datak
TypeAlias[TypeAlias[Any]]1
TypeAlias[Any]
Any"_typeshed.Incomplete"pycocotools.coco._NDArrayz38z39z310z311z312z313*¢
	annToMaskpycocotools.coco.COCO.annToMask"k
TypeAlias[TypeAlias[Any]]1
TypeAlias[Any]
Any"_typeshed.Incomplete"pycocotools.coco._NDArray*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*E
ann<
pycocotools.coco._Annotation"pycocotools.coco._Annotationz36z37*ø
	annToMaskpycocotools.coco.COCO.annToMask"k
TypeAlias[TypeAlias[Any]]1
TypeAlias[Any]
Any"_typeshed.Incomplete"pycocotools.coco._NDArray*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*N
annE
TypeAlias[TypedDict]
	TypedDict"pycocotools.coco._Annotationz38z39z310z311z312z3132œ	
annToRLEpycocotools.coco.COCO.annToRLE¥
annToRLEpycocotools.coco.COCO.annToRLE".
pycocotools.coco._RLE"pycocotools.coco._RLE*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*è
annÖ
4pycocotools.coco._AnnotationG[pycocotools.coco._RLE].
pycocotools.coco._RLE"pycocotools.coco._RLE"pycocotools.coco._AnnotationG0:overloadXæ
annToRLEpycocotools.coco.COCO.annToRLE"2
pycocotools._EncodedRLE"pycocotools._EncodedRLE*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*ï
annã
6pycocotools.coco._AnnotationG[pycocotools._EncodedRLE]2
pycocotools._EncodedRLE"pycocotools._EncodedRLE"pycocotools.coco._AnnotationG0:overloadX¢
annToRLEpycocotools.coco.COCO.annToRLE"2
pycocotools._EncodedRLE"pycocotools._EncodedRLE*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*˘
annÔ
Vpycocotools.coco._AnnotationG[TypeAlias[builtins.list[builtins.list[builtins.float]]]]ı
7TypeAlias[builtins.list[builtins.list[builtins.float]]]è
,builtins.list[builtins.list[builtins.float]]P
builtins.list[builtins.float] 
builtins.float"builtins.float"builtins.list"builtins.list"&pycocotools.coco._TPolygonSegmentation"pycocotools.coco._AnnotationG0:overloadX"36"372‹
annToRLEpycocotools.coco.COCO.annToRLEÉ
annToRLEpycocotools.coco.COCO.annToRLE">
TypeAlias[TypedDict]
	TypedDict"pycocotools.coco._RLE*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*O
annF
TypeAlias[TypedDict]
	TypedDict"pycocotools.coco._AnnotationG0:overloadXÖ
annToRLEpycocotools.coco.COCO.annToRLE"@
TypeAlias[TypedDict]
	TypedDict"pycocotools._EncodedRLE*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*O
annF
TypeAlias[TypedDict]
	TypedDict"pycocotools.coco._AnnotationG0:overloadXÖ
annToRLEpycocotools.coco.COCO.annToRLE"@
TypeAlias[TypedDict]
	TypedDict"pycocotools._EncodedRLE*8
self.
pycocotools.coco.COCO"pycocotools.coco.COCO*O
annF
TypeAlias[TypedDict]
	TypedDict"pycocotools.coco._AnnotationG0:overloadX"38"39"310"311"312"313j36j37j38j39j310j311j312j313r“
annspycocotools.coco.COCO.anns•
8builtins.dict[builtins.int,pycocotools.coco._Annotation]
builtins.int"builtins.int<
pycocotools.coco._Annotation"pycocotools.coco._Annotation"builtins.dict*36*37rÁ
annspycocotools.coco.COCO.anns¶
0builtins.dict[builtins.int,TypeAlias[TypedDict]]
builtins.int"builtins.intE
TypeAlias[TypedDict]
	TypedDict"pycocotools.coco._Annotation"builtins.dict*38*39*310*311*312*313rh
datasetpycocotools.coco.COCO.dataset6
pycocotools.coco._Dataset"pycocotools.coco._Dataset*36*37rà
datasetpycocotools.coco.COCO.datasetB
TypeAlias[TypedDict]
	TypedDict"pycocotools.coco._Dataset*38*39*310*311*312*313rÃ
catspycocotools.coco.COCO.catsü
6builtins.dict[builtins.int,pycocotools.coco._Category]
builtins.int"builtins.int8
pycocotools.coco._Category"pycocotools.coco._Category"builtins.dict*36*37rÂ
catspycocotools.coco.COCO.cats§
0builtins.dict[builtins.int,TypeAlias[TypedDict]]
builtins.int"builtins.intC
TypeAlias[TypedDict]
	TypedDict"pycocotools.coco._Category"builtins.dict*38*39*310*311*312*313r√
imgspycocotools.coco.COCO.imgsñ
3builtins.dict[builtins.int,pycocotools.coco._Image]
builtins.int"builtins.int2
pycocotools.coco._Image"pycocotools.coco._Image"builtins.dict*36*37r‚
imgspycocotools.coco.COCO.imgs°
0builtins.dict[builtins.int,TypeAlias[TypedDict]]
builtins.int"builtins.int@
TypeAlias[TypedDict]
	TypedDict"pycocotools.coco._Image"builtins.dict*38*39*310*311*312*313r©
	imgToAnnspycocotools.coco.COCO.imgToAnnsÚ
Gbuiltins.dict[builtins.int,builtins.list[pycocotools.coco._Annotation]]
builtins.int"builtins.intz
+builtins.list[pycocotools.coco._Annotation]<
pycocotools.coco._Annotation"pycocotools.coco._Annotation"builtins.list"builtins.dict*36*37r∂
	imgToAnnspycocotools.coco.COCO.imgToAnnsÎ
?builtins.dict[builtins.int,builtins.list[TypeAlias[TypedDict]]]
builtins.int"builtins.int{
#builtins.list[TypeAlias[TypedDict]]E
TypeAlias[TypedDict]
	TypedDict"pycocotools.coco._Annotation"builtins.list"builtins.dict*38*39*310*311*312*313rÖ
	catToImgspycocotools.coco.COCO.catToImgs≤
7builtins.dict[builtins.int,builtins.list[builtins.int]]
builtins.int"builtins.intJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list"builtins.dict*36*37*38*39*310*311*312*313*∞
__annotations__ pycocotools.coco.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313*4
Literalpycocotools.coco.Literal
Any*36*37*8
	TypedDictpycocotools.coco.TypedDict
Any*36*37*à
PYTHON_VERSIONpycocotools.coco.PYTHON_VERSION1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313