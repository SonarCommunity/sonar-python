

subprocess
subprocess’
CalledProcessErrorsubprocess.CalledProcessError"builtins.Exception*builtins.BaseException2Ô
__init__&subprocess.CalledProcessError.__init__"
None*H
self>
subprocess.CalledProcessError"subprocess.CalledProcessError*,

returncode
builtins.int"builtins.int*‡
cmd÷
ÇTypeAlias[Union[TypeAlias[Union[builtins.str,builtins.unicode]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.unicode]]]]]ª
wUnion[TypeAlias[Union[builtins.str,builtins.unicode]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.unicode]]]]≤
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"subprocess._TXTà
@typing.Sequence[TypeAlias[Union[builtins.str,builtins.unicode]]]≤
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"subprocess._TXT"typing.Sequence"subprocess._CMD*R
outputD
Union[builtins.str,None]
builtins.str"builtins.str
None z27r27ë
CalledProcessErrorsubprocess.CalledProcessError"subprocess.SubprocessError*builtins.Exception*builtins.BaseException2ƒ
__init__&subprocess.CalledProcessError.__init__"
None*H
self>
subprocess.CalledProcessError"subprocess.CalledProcessError*,

returncode
builtins.int"builtins.int*ı
cmdÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*É
outputu
'Union[builtins.bytes,builtins.str,None] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None *É
stderru
'Union[builtins.bytes,builtins.str,None] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None z35z36z372∏
__init__&subprocess.CalledProcessError.__init__"
None*H
self>
subprocess.CalledProcessError"subprocess.CalledProcessError*,

returncode
builtins.int"builtins.int*Ì
cmd„
ÍTypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]‡	
ﬂUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*É
outputu
'Union[builtins.bytes,builtins.str,None] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None *É
stderru
'Union[builtins.bytes,builtins.str,None] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None z38z39r35r36r37r38r39êò
Popensubprocess.Popen"builtins.object2ô
__new__subprocess.Popen.__new__"P
subprocess.Popen[builtins.str]
builtins.str"builtins.str"subprocess.Popen*z
clsq
%Type[subprocess.Popen[subprocess._T]]F
subprocess.Popen[subprocess._T]
subprocess._T"subprocess.Popen*·
args÷
ÇTypeAlias[Union[TypeAlias[Union[builtins.str,builtins.unicode]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.unicode]]]]]ª
wUnion[TypeAlias[Union[builtins.str,builtins.unicode]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.unicode]]]]≤
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"subprocess._TXTà
@typing.Sequence[TypeAlias[Union[builtins.str,builtins.unicode]]]≤
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"subprocess._TXT"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *ç

executable{
)Union[builtins.str,builtins.unicode,None]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode
None *Ü
stdiny
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stdouty
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stderry
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Ü
cwd{
)Union[builtins.str,builtins.unicode,None]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode
None *∏
env¨
©Union[typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.unicode]]],typing.Mapping[builtins.unicode,TypeAlias[Union[builtins.str,builtins.unicode]]],None]±
Ltyping.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.unicode]]]
builtins.str"builtins.str≤
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"subprocess._TXT"typing.MappingΩ
Ptyping.Mapping[builtins.unicode,TypeAlias[Union[builtins.str,builtins.unicode]]]$
builtins.unicode"builtins.unicode≤
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"subprocess._TXT"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *9
startupinfo&
Union[Any,None]
Any
None *1
creationflags
builtins.int"builtins.int z272π
pollsubprocess.Popen.poll"D
Union[builtins.int,None]
builtins.int"builtins.int
None*P
selfF
subprocess.Popen[subprocess._T]
subprocess._T"subprocess.Popenz272…
pollsubprocess.Popen.poll"D
Union[builtins.int,None]
builtins.int"builtins.int
None*P
selfF
subprocess.Popen[typing.AnyStr]
typing.AnyStr"subprocess.Popenz35z36z37z38z392ë
waitsubprocess.Popen.wait"
builtins.int"builtins.int*P
selfF
subprocess.Popen[subprocess._T]
subprocess._T"subprocess.Popenz272À
waitsubprocess.Popen.wait"
builtins.int"builtins.int*P
selfF
subprocess.Popen[typing.AnyStr]
typing.AnyStr"subprocess.Popen*Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Y
endtimeJ
Union[builtins.float,None] 
builtins.float"builtins.float
None z35z362Ù
waitsubprocess.Popen.wait"
builtins.int"builtins.int*P
selfF
subprocess.Popen[typing.AnyStr]
typing.AnyStr"subprocess.Popen*Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None z37z38z392Ó
communicatesubprocess.Popen.communicate"`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*P
selfF
subprocess.Popen[subprocess._T]
subprocess._T"subprocess.Popen*à
input{
)Union[builtins.str,builtins.unicode,None]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode
None z272É
communicatesubprocess.Popen.communicate"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*P
selfF
subprocess.Popen[typing.AnyStr]
typing.AnyStr"subprocess.Popen*G
input:
Union[typing.AnyStr,None]
typing.AnyStr
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None z35z36z37z38z392µ
send_signalsubprocess.Popen.send_signal"
None*P
selfF
subprocess.Popen[subprocess._T]
subprocess._T"subprocess.Popen*(
signal
builtins.int"builtins.intz272¬
send_signalsubprocess.Popen.send_signal"
None*P
selfF
subprocess.Popen[typing.AnyStr]
typing.AnyStr"subprocess.Popen*%
sig
builtins.int"builtins.intz35z36z37z38z392á
	terminatesubprocess.Popen.terminate"
None*P
selfF
subprocess.Popen[subprocess._T]
subprocess._T"subprocess.Popenz272ó
	terminatesubprocess.Popen.terminate"
None*P
selfF
subprocess.Popen[typing.AnyStr]
typing.AnyStr"subprocess.Popenz35z36z37z38z392}
killsubprocess.Popen.kill"
None*P
selfF
subprocess.Popen[subprocess._T]
subprocess._T"subprocess.Popenz272ç
killsubprocess.Popen.kill"
None*P
selfF
subprocess.Popen[typing.AnyStr]
typing.AnyStr"subprocess.Popenz35z36z37z38z392i
	__enter__subprocess.Popen.__enter__"
subprocess._S*
self
subprocess._Sz35z36z37z38z392˛
__exit__subprocess.Popen.__exit__"
None*N
selfF
subprocess.Popen[typing.AnyStr]
typing.AnyStr"subprocess.Popen*ì
typeä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*k
valueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*f
	tracebackY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Nonez35z36z37z38z392ˆ
__class_getitem__"subprocess.Popen.__class_getitem__"(
types.GenericAlias"types.GenericAlias*z
clsq
%Type[subprocess.Popen[typing.AnyStr]]F
subprocess.Popen[typing.AnyStr]
typing.AnyStr"subprocess.Popen*
item
Anypz39:πÜ
__new__subprocess.Popen.__new__ﬂ
__new__subprocess.Popen.__new__"P
subprocess.Popen[builtins.str]
builtins.str"builtins.str"subprocess.Popen*z
clsq
%Type[subprocess.Popen[typing.AnyStr]]F
subprocess.Popen[typing.AnyStr]
typing.AnyStr"subprocess.Popen*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *Ü
stdiny
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stdouty
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stderry
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *9
startupinfo&
Union[Any,None]
Any
None *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any **
encoding
builtins.str"builtins.str*R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadXﬂ
__new__subprocess.Popen.__new__"P
subprocess.Popen[builtins.str]
builtins.str"builtins.str"subprocess.Popen*z
clsq
%Type[subprocess.Popen[typing.AnyStr]]F
subprocess.Popen[typing.AnyStr]
typing.AnyStr"subprocess.Popen*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *Ü
stdiny
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stdouty
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stderry
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *9
startupinfo&
Union[Any,None]
Any
None *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *(
errors
builtins.str"builtins.str0:overloadX£
__new__subprocess.Popen.__new__"P
subprocess.Popen[builtins.str]
builtins.str"builtins.str"subprocess.Popen*z
clsq
%Type[subprocess.Popen[typing.AnyStr]]F
subprocess.Popen[typing.AnyStr]
typing.AnyStr"subprocess.Popen*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *Ü
stdiny
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stdouty
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stderry
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *R
universal_newlines:
Literal[builtins.bool]	
builtins.bool"builtins.bool*9
startupinfo&
Union[Any,None]
Any
None *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX≥
__new__subprocess.Popen.__new__"V
 subprocess.Popen[builtins.bytes] 
builtins.bytes"builtins.bytes"subprocess.Popen*z
clsq
%Type[subprocess.Popen[typing.AnyStr]]F
subprocess.Popen[typing.AnyStr]
typing.AnyStr"subprocess.Popen*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *Ü
stdiny
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stdouty
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stderry
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *T
universal_newlines:
Literal[builtins.bool]	
builtins.bool"builtins.bool *9
startupinfo&
Union[Any,None]
Any
None *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *
encoding
None *
errors
None 0:overloadXÎ
__new__subprocess.Popen.__new__"2
subprocess.Popen[Any]
Any"subprocess.Popen*z
clsq
%Type[subprocess.Popen[typing.AnyStr]]F
subprocess.Popen[typing.AnyStr]
typing.AnyStr"subprocess.Popen*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *Ü
stdiny
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stdouty
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stderry
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *9
startupinfo&
Union[Any,None]
Any
None *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX"35"36:’•
__new__subprocess.Popen.__new__¥
__new__subprocess.Popen.__new__"P
subprocess.Popen[builtins.str]
builtins.str"builtins.str"subprocess.Popen*z
clsq
%Type[subprocess.Popen[typing.AnyStr]]F
subprocess.Popen[typing.AnyStr]
typing.AnyStr"subprocess.Popen*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *Ü
stdiny
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stdouty
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stderry
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *9
startupinfo&
Union[Any,None]
Any
None *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *S
textG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None **
encoding
builtins.str"builtins.str*R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX¥
__new__subprocess.Popen.__new__"P
subprocess.Popen[builtins.str]
builtins.str"builtins.str"subprocess.Popen*z
clsq
%Type[subprocess.Popen[typing.AnyStr]]F
subprocess.Popen[typing.AnyStr]
typing.AnyStr"subprocess.Popen*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *Ü
stdiny
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stdouty
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stderry
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *9
startupinfo&
Union[Any,None]
Any
None *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *S
textG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *(
errors
builtins.str"builtins.str0:overloadX¯
__new__subprocess.Popen.__new__"P
subprocess.Popen[builtins.str]
builtins.str"builtins.str"subprocess.Popen*z
clsq
%Type[subprocess.Popen[typing.AnyStr]]F
subprocess.Popen[typing.AnyStr]
typing.AnyStr"subprocess.Popen*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *Ü
stdiny
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stdouty
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stderry
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *R
universal_newlines:
Literal[builtins.bool]	
builtins.bool"builtins.bool*9
startupinfo&
Union[Any,None]
Any
None *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *S
textG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadXœ
__new__subprocess.Popen.__new__"P
subprocess.Popen[builtins.str]
builtins.str"builtins.str"subprocess.Popen*z
clsq
%Type[subprocess.Popen[typing.AnyStr]]F
subprocess.Popen[typing.AnyStr]
typing.AnyStr"subprocess.Popen*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *Ü
stdiny
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stdouty
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stderry
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *9
startupinfo&
Union[Any,None]
Any
None *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *D
text:
Literal[builtins.bool]	
builtins.bool"builtins.bool*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX≠
__new__subprocess.Popen.__new__"V
 subprocess.Popen[builtins.bytes] 
builtins.bytes"builtins.bytes"subprocess.Popen*z
clsq
%Type[subprocess.Popen[typing.AnyStr]]F
subprocess.Popen[typing.AnyStr]
typing.AnyStr"subprocess.Popen*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *Ü
stdiny
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stdouty
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stderry
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *T
universal_newlines:
Literal[builtins.bool]	
builtins.bool"builtins.bool *9
startupinfo&
Union[Any,None]
Any
None *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *x
textl
"Union[None,Literal[builtins.bool]]
None:
Literal[builtins.bool]	
builtins.bool"builtins.bool *
encoding
None *
errors
None 0:overloadX¿
__new__subprocess.Popen.__new__"2
subprocess.Popen[Any]
Any"subprocess.Popen*z
clsq
%Type[subprocess.Popen[typing.AnyStr]]F
subprocess.Popen[typing.AnyStr]
typing.AnyStr"subprocess.Popen*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *Ü
stdiny
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stdouty
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stderry
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *9
startupinfo&
Union[Any,None]
Any
None *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *S
textG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX"37:©∑
__new__subprocess.Popen.__new__¨
__new__subprocess.Popen.__new__"P
subprocess.Popen[builtins.str]
builtins.str"builtins.str"subprocess.Popen*z
clsq
%Type[subprocess.Popen[typing.AnyStr]]F
subprocess.Popen[typing.AnyStr]
typing.AnyStr"subprocess.Popen*Ó
args„
ÍTypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]‡	
ﬂUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *Ü
stdiny
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stdouty
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stderry
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *9
startupinfo&
Union[Any,None]
Any
None *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *S
textG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None **
encoding
builtins.str"builtins.str*R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX¨
__new__subprocess.Popen.__new__"P
subprocess.Popen[builtins.str]
builtins.str"builtins.str"subprocess.Popen*z
clsq
%Type[subprocess.Popen[typing.AnyStr]]F
subprocess.Popen[typing.AnyStr]
typing.AnyStr"subprocess.Popen*Ó
args„
ÍTypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]‡	
ﬂUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *Ü
stdiny
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stdouty
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stderry
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *9
startupinfo&
Union[Any,None]
Any
None *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *S
textG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *(
errors
builtins.str"builtins.str0:overloadX
__new__subprocess.Popen.__new__"P
subprocess.Popen[builtins.str]
builtins.str"builtins.str"subprocess.Popen*z
clsq
%Type[subprocess.Popen[typing.AnyStr]]F
subprocess.Popen[typing.AnyStr]
typing.AnyStr"subprocess.Popen*Ó
args„
ÍTypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]‡	
ﬂUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *Ü
stdiny
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stdouty
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stderry
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *R
universal_newlines:
Literal[builtins.bool]	
builtins.bool"builtins.bool*9
startupinfo&
Union[Any,None]
Any
None *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *S
textG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX«
__new__subprocess.Popen.__new__"P
subprocess.Popen[builtins.str]
builtins.str"builtins.str"subprocess.Popen*z
clsq
%Type[subprocess.Popen[typing.AnyStr]]F
subprocess.Popen[typing.AnyStr]
typing.AnyStr"subprocess.Popen*Ó
args„
ÍTypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]‡	
ﬂUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *Ü
stdiny
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stdouty
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stderry
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *9
startupinfo&
Union[Any,None]
Any
None *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *D
text:
Literal[builtins.bool]	
builtins.bool"builtins.bool*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX•
__new__subprocess.Popen.__new__"V
 subprocess.Popen[builtins.bytes] 
builtins.bytes"builtins.bytes"subprocess.Popen*z
clsq
%Type[subprocess.Popen[typing.AnyStr]]F
subprocess.Popen[typing.AnyStr]
typing.AnyStr"subprocess.Popen*Ó
args„
ÍTypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]‡	
ﬂUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *Ü
stdiny
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stdouty
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stderry
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *T
universal_newlines:
Literal[builtins.bool]	
builtins.bool"builtins.bool *9
startupinfo&
Union[Any,None]
Any
None *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *x
textl
"Union[None,Literal[builtins.bool]]
None:
Literal[builtins.bool]	
builtins.bool"builtins.bool *
encoding
None *
errors
None 0:overloadX∏
__new__subprocess.Popen.__new__"2
subprocess.Popen[Any]
Any"subprocess.Popen*z
clsq
%Type[subprocess.Popen[typing.AnyStr]]F
subprocess.Popen[typing.AnyStr]
typing.AnyStr"subprocess.Popen*Ó
args„
ÍTypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]‡	
ﬂUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *Ü
stdiny
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stdouty
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *á
stderry
'Union[builtins.int,typing.IO[Any],None]
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO
None *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *9
startupinfo&
Union[Any,None]
Any
None *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *S
textG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX"38"39Xr27r35r36r37r38r39í
CompletedProcesssubprocess.CompletedProcess"builtins.object2È
__init__$subprocess.CompletedProcess.__init__"
None*f
self\
*subprocess.CompletedProcess[subprocess._T]
subprocess._T"subprocess.CompletedProcess*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*,

returncode
builtins.int"builtins.int*H
stdout:
Union[subprocess._T,None]
subprocess._T
None *H
stderr:
Union[subprocess._T,None]
subprocess._T
None z35z36z372›
__init__$subprocess.CompletedProcess.__init__"
None*f
self\
*subprocess.CompletedProcess[subprocess._T]
subprocess._T"subprocess.CompletedProcess*Ó
args„
ÍTypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]‡	
ﬂUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*,

returncode
builtins.int"builtins.int*H
stdout:
Union[subprocess._T,None]
subprocess._T
None *H
stderr:
Union[subprocess._T,None]
subprocess._T
None z38z392∆
check_returncode,subprocess.CompletedProcess.check_returncode"
None*f
self\
*subprocess.CompletedProcess[subprocess._T]
subprocess._T"subprocess.CompletedProcessz35z36z37z38z392§
__class_getitem__-subprocess.CompletedProcess.__class_getitem__"(
types.GenericAlias"types.GenericAlias*ú
clsí
0Type[subprocess.CompletedProcess[subprocess._T]]\
*subprocess.CompletedProcess[subprocess._T]
subprocess._T"subprocess.CompletedProcess*
item
Anypz39Xr35r36r37r38r39m
SubprocessErrorsubprocess.SubprocessError"builtins.Exception*builtins.BaseExceptionr35r36r37r38r39Û
TimeoutExpiredsubprocess.TimeoutExpired"subprocess.SubprocessError*builtins.Exception*builtins.BaseException2π
__init__"subprocess.TimeoutExpired.__init__"
None*@
self6
subprocess.TimeoutExpired"subprocess.TimeoutExpired*ı
cmdÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*-
timeout 
builtins.float"builtins.float*É
outputu
'Union[builtins.bytes,builtins.str,None] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None *É
stderru
'Union[builtins.bytes,builtins.str,None] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None z35z36z372≠
__init__"subprocess.TimeoutExpired.__init__"
None*@
self6
subprocess.TimeoutExpired"subprocess.TimeoutExpired*Ì
cmd„
ÍTypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]‡	
ﬂUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*-
timeout 
builtins.float"builtins.float*É
outputu
'Union[builtins.bytes,builtins.str,None] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None *É
stderru
'Union[builtins.bytes,builtins.str,None] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None z38z39r35r36r37r38r39Ñ
STARTUPINFOsubprocess.STARTUPINFO"builtins.object2∑
__init__subprocess.STARTUPINFO.__init__"
None*:
self0
subprocess.STARTUPINFO"subprocess.STARTUPINFO*+
dwFlags
builtins.int"builtins.int *7
	hStdInput&
Union[Any,None]
Any
None *8

hStdOutput&
Union[Any,None]
Any
None *7
	hStdError&
Union[Any,None]
Any
None */
wShowWindow
builtins.int"builtins.int *≠
lpAttributeListï
,Union[typing.Mapping[builtins.str,Any],None]Y
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping
None z37z38z39r35r36r37r38r39"ö
callsubprocess.call"
builtins.int"builtins.int*·
args÷
ÇTypeAlias[Union[TypeAlias[Union[builtins.str,builtins.unicode]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.unicode]]]]]ª
wUnion[TypeAlias[Union[builtins.str,builtins.unicode]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.unicode]]]]≤
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"subprocess._TXTà
@typing.Sequence[TypeAlias[Union[builtins.str,builtins.unicode]]]≤
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"subprocess._TXT"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *≈

executable≤
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"subprocess._TXT *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stdout√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *]

preexec_fnK
CallableType[builtins.function]&
builtins.function"builtins.function */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Ü
cwd{
)Union[builtins.str,builtins.unicode,None]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode
None *∏
env¨
©Union[typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.unicode]]],typing.Mapping[builtins.unicode,TypeAlias[Union[builtins.str,builtins.unicode]]],None]±
Ltyping.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.unicode]]]
builtins.str"builtins.str≤
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"subprocess._TXT"typing.MappingΩ
Ptyping.Mapping[builtins.unicode,TypeAlias[Union[builtins.str,builtins.unicode]]]$
builtins.unicode"builtins.unicode≤
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"subprocess._TXT"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int z27"æ
callsubprocess.call"
builtins.int"builtins.int*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stdout√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None z35z36z37"≤
callsubprocess.call"
builtins.int"builtins.int*Ó
args„
ÍTypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]‡	
ﬂUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stdout√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None z38z39"¶

check_callsubprocess.check_call"
builtins.int"builtins.int*·
args÷
ÇTypeAlias[Union[TypeAlias[Union[builtins.str,builtins.unicode]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.unicode]]]]]ª
wUnion[TypeAlias[Union[builtins.str,builtins.unicode]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.unicode]]]]≤
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"subprocess._TXTà
@typing.Sequence[TypeAlias[Union[builtins.str,builtins.unicode]]]≤
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"subprocess._TXT"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *≈

executable≤
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"subprocess._TXT *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stdout√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *]

preexec_fnK
CallableType[builtins.function]&
builtins.function"builtins.function */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Ü
cwd{
)Union[builtins.str,builtins.unicode,None]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode
None *∏
env¨
©Union[typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.unicode]]],typing.Mapping[builtins.unicode,TypeAlias[Union[builtins.str,builtins.unicode]]],None]±
Ltyping.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.unicode]]]
builtins.str"builtins.str≤
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"subprocess._TXT"typing.MappingΩ
Ptyping.Mapping[builtins.unicode,TypeAlias[Union[builtins.str,builtins.unicode]]]$
builtins.unicode"builtins.unicode≤
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"subprocess._TXT"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int z27"ø

check_callsubprocess.check_call"
builtins.int"builtins.int*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *…

executable∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stdout√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None z35z36z37"≥

check_callsubprocess.check_call"
builtins.int"builtins.int*Ó
args„
ÍTypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]‡	
ﬂUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *…

executable∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stdout√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None z38z39"’
check_outputsubprocess.check_output"
builtins.str"builtins.str*·
args÷
ÇTypeAlias[Union[TypeAlias[Union[builtins.str,builtins.unicode]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.unicode]]]]]ª
wUnion[TypeAlias[Union[builtins.str,builtins.unicode]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.unicode]]]]≤
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"subprocess._TXTà
@typing.Sequence[TypeAlias[Union[builtins.str,builtins.unicode]]]≤
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"subprocess._TXT"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *≈

executable≤
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"subprocess._TXT *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *]

preexec_fnK
CallableType[builtins.function]&
builtins.function"builtins.function */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Ü
cwd{
)Union[builtins.str,builtins.unicode,None]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode
None *∏
env¨
©Union[typing.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.unicode]]],typing.Mapping[builtins.unicode,TypeAlias[Union[builtins.str,builtins.unicode]]],None]±
Ltyping.Mapping[builtins.str,TypeAlias[Union[builtins.str,builtins.unicode]]]
builtins.str"builtins.str≤
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"subprocess._TXT"typing.MappingΩ
Ptyping.Mapping[builtins.unicode,TypeAlias[Union[builtins.str,builtins.unicode]]]$
builtins.unicode"builtins.unicode≤
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"subprocess._TXT"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int z27"∂
list2cmdlinesubprocess.list2cmdline"
builtins.str"builtins.str*W
seqN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequencez27z35z36z37z38z39"⁄
getstatusoutputsubprocess.getstatusoutput"`
 Tuple[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*¥
cmd™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXTz35z36z37z38z39"ä
	getoutputsubprocess.getoutput"
builtins.str"builtins.str*¥
cmd™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXTz35z36z37z38z39*∞í
runsubprocess.runà
runsubprocess.run"f
)subprocess.CompletedProcess[builtins.str]
builtins.str"builtins.str"subprocess.CompletedProcess*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stdout√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *+
check
builtins.bool"builtins.bool **
encoding
builtins.str"builtins.str*R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
inputD
Union[builtins.str,None]
builtins.str"builtins.str
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXà
runsubprocess.run"f
)subprocess.CompletedProcess[builtins.str]
builtins.str"builtins.str"subprocess.CompletedProcess*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stdout√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *+
check
builtins.bool"builtins.bool *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *(
errors
builtins.str"builtins.str*Q
inputD
Union[builtins.str,None]
builtins.str"builtins.str
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXÃ
runsubprocess.run"f
)subprocess.CompletedProcess[builtins.str]
builtins.str"builtins.str"subprocess.CompletedProcess*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stdout√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *R
universal_newlines:
Literal[builtins.bool]	
builtins.bool"builtins.bool*
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *+
check
builtins.bool"builtins.bool *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
inputD
Union[builtins.str,None]
builtins.str"builtins.str
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX‚
runsubprocess.run"l
+subprocess.CompletedProcess[builtins.bytes] 
builtins.bytes"builtins.bytes"subprocess.CompletedProcess*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stdout√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *T
universal_newlines:
Literal[builtins.bool]	
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *+
check
builtins.bool"builtins.bool *
encoding
None *
errors
None *W
inputJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX∆
runsubprocess.run"H
 subprocess.CompletedProcess[Any]
Any"subprocess.CompletedProcess*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stdout√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *+
check
builtins.bool"builtins.bool *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *Ç
inputu
'Union[builtins.bytes,builtins.str,None] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"35"36*π∂
runsubprocess.runÆ
runsubprocess.run"f
)subprocess.CompletedProcess[builtins.str]
builtins.str"builtins.str"subprocess.CompletedProcess*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stdout√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *4
capture_output
builtins.bool"builtins.bool *+
check
builtins.bool"builtins.bool *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
inputD
Union[builtins.str,None]
builtins.str"builtins.str
None *D
text:
Literal[builtins.bool]	
builtins.bool"builtins.bool*Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXì
runsubprocess.run"f
)subprocess.CompletedProcess[builtins.str]
builtins.str"builtins.str"subprocess.CompletedProcess*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stdout√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *4
capture_output
builtins.bool"builtins.bool *+
check
builtins.bool"builtins.bool **
encoding
builtins.str"builtins.str*R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
inputD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
textG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXì
runsubprocess.run"f
)subprocess.CompletedProcess[builtins.str]
builtins.str"builtins.str"subprocess.CompletedProcess*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stdout√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *4
capture_output
builtins.bool"builtins.bool *+
check
builtins.bool"builtins.bool *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *(
errors
builtins.str"builtins.str*Q
inputD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
textG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX◊
runsubprocess.run"f
)subprocess.CompletedProcess[builtins.str]
builtins.str"builtins.str"subprocess.CompletedProcess*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stdout√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *R
universal_newlines:
Literal[builtins.bool]	
builtins.bool"builtins.bool*
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *4
capture_output
builtins.bool"builtins.bool *+
check
builtins.bool"builtins.bool *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
inputD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
textG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXí
runsubprocess.run"l
+subprocess.CompletedProcess[builtins.bytes] 
builtins.bytes"builtins.bytes"subprocess.CompletedProcess*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stdout√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *T
universal_newlines:
Literal[builtins.bool]	
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *4
capture_output
builtins.bool"builtins.bool *+
check
builtins.bool"builtins.bool *
encoding
None *
errors
None *W
inputJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None *x
textl
"Union[None,Literal[builtins.bool]]
None:
Literal[builtins.bool]	
builtins.bool"builtins.bool *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX—
runsubprocess.run"H
 subprocess.CompletedProcess[Any]
Any"subprocess.CompletedProcess*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stdout√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *4
capture_output
builtins.bool"builtins.bool *+
check
builtins.bool"builtins.bool *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *Ç
inputu
'Union[builtins.bytes,builtins.str,None] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None *S
textG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"37*ç»
runsubprocess.run¶!
runsubprocess.run"f
)subprocess.CompletedProcess[builtins.str]
builtins.str"builtins.str"subprocess.CompletedProcess*Ó
args„
ÍTypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]‡	
ﬂUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stdout√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *4
capture_output
builtins.bool"builtins.bool *+
check
builtins.bool"builtins.bool *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
inputD
Union[builtins.str,None]
builtins.str"builtins.str
None *D
text:
Literal[builtins.bool]	
builtins.bool"builtins.bool*Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXã!
runsubprocess.run"f
)subprocess.CompletedProcess[builtins.str]
builtins.str"builtins.str"subprocess.CompletedProcess*Ó
args„
ÍTypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]‡	
ﬂUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stdout√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *4
capture_output
builtins.bool"builtins.bool *+
check
builtins.bool"builtins.bool **
encoding
builtins.str"builtins.str*R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
inputD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
textG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXã!
runsubprocess.run"f
)subprocess.CompletedProcess[builtins.str]
builtins.str"builtins.str"subprocess.CompletedProcess*Ó
args„
ÍTypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]‡	
ﬂUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stdout√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *4
capture_output
builtins.bool"builtins.bool *+
check
builtins.bool"builtins.bool *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *(
errors
builtins.str"builtins.str*Q
inputD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
textG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXœ!
runsubprocess.run"f
)subprocess.CompletedProcess[builtins.str]
builtins.str"builtins.str"subprocess.CompletedProcess*Ó
args„
ÍTypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]‡	
ﬂUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stdout√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *R
universal_newlines:
Literal[builtins.bool]	
builtins.bool"builtins.bool*
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *4
capture_output
builtins.bool"builtins.bool *+
check
builtins.bool"builtins.bool *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
inputD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
textG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadXä!
runsubprocess.run"l
+subprocess.CompletedProcess[builtins.bytes] 
builtins.bytes"builtins.bytes"subprocess.CompletedProcess*Ó
args„
ÍTypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]‡	
ﬂUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stdout√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *T
universal_newlines:
Literal[builtins.bool]	
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *4
capture_output
builtins.bool"builtins.bool *+
check
builtins.bool"builtins.bool *
encoding
None *
errors
None *W
inputJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None *x
textl
"Union[None,Literal[builtins.bool]]
None:
Literal[builtins.bool]	
builtins.bool"builtins.bool *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX…!
runsubprocess.run"H
 subprocess.CompletedProcess[Any]
Any"subprocess.CompletedProcess*Ó
args„
ÍTypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]‡	
ﬂUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stdout√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *4
capture_output
builtins.bool"builtins.bool *+
check
builtins.bool"builtins.bool *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *Ç
inputu
'Union[builtins.bytes,builtins.str,None] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None *S
textG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"38"39*Èá
check_outputsubprocess.check_outputÄ
check_outputsubprocess.check_output"
builtins.str"builtins.str*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Ç
inputu
'Union[builtins.bytes,builtins.str,None] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None **
encoding
builtins.str"builtins.str*R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadXÄ
check_outputsubprocess.check_output"
builtins.str"builtins.str*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Ç
inputu
'Union[builtins.bytes,builtins.str,None] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *(
errors
builtins.str"builtins.str0:overloadXƒ
check_outputsubprocess.check_output"
builtins.str"builtins.str*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *R
universal_newlines:
Literal[builtins.bool]	
builtins.bool"builtins.bool*Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Ç
inputu
'Union[builtins.bytes,builtins.str,None] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX“
check_outputsubprocess.check_output" 
builtins.bytes"builtins.bytes*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *T
universal_newlines:
Literal[builtins.bool]	
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Ç
inputu
'Union[builtins.bytes,builtins.str,None] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None *
encoding
None *
errors
None 0:overloadXï
check_outputsubprocess.check_output"
Any*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Ç
inputu
'Union[builtins.bytes,builtins.str,None] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX"35"36*¶ß
check_outputsubprocess.check_output
check_outputsubprocess.check_output"
builtins.str"builtins.str*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Ç
inputu
'Union[builtins.bytes,builtins.str,None] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *D
text:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadX’
check_outputsubprocess.check_output"
builtins.str"builtins.str*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Ç
inputu
'Union[builtins.bytes,builtins.str,None] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None **
encoding
builtins.str"builtins.str*R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
textG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None 0:overloadX’
check_outputsubprocess.check_output"
builtins.str"builtins.str*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Ç
inputu
'Union[builtins.bytes,builtins.str,None] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *(
errors
builtins.str"builtins.str*S
textG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None 0:overloadXô
check_outputsubprocess.check_output"
builtins.str"builtins.str*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *R
universal_newlines:
Literal[builtins.bool]	
builtins.bool"builtins.bool*
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Ç
inputu
'Union[builtins.bytes,builtins.str,None] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
textG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None 0:overloadXÃ
check_outputsubprocess.check_output" 
builtins.bytes"builtins.bytes*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *T
universal_newlines:
Literal[builtins.bool]	
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Ç
inputu
'Union[builtins.bytes,builtins.str,None] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None *
encoding
None *
errors
None *x
textl
"Union[None,Literal[builtins.bool]]
None:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadXÍ
check_outputsubprocess.check_output"
Any*ˆ
argsÎ
¥TypeAlias[Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]û
©Union[TypeAlias[Union[builtins.bytes,builtins.str]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]™
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"subprocess._TXT¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Ç
inputu
'Union[builtins.bytes,builtins.str,None] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
textG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None 0:overloadX"37*˙∏
check_outputsubprocess.check_outputË
check_outputsubprocess.check_output"
builtins.str"builtins.str*Ó
args„
ÍTypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]‡	
ﬂUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Ç
inputu
'Union[builtins.bytes,builtins.str,None] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *D
text:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadXÕ
check_outputsubprocess.check_output"
builtins.str"builtins.str*Ó
args„
ÍTypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]‡	
ﬂUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Ç
inputu
'Union[builtins.bytes,builtins.str,None] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None **
encoding
builtins.str"builtins.str*R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
textG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None 0:overloadXÕ
check_outputsubprocess.check_output"
builtins.str"builtins.str*Ó
args„
ÍTypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]‡	
ﬂUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Ç
inputu
'Union[builtins.bytes,builtins.str,None] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *(
errors
builtins.str"builtins.str*S
textG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None 0:overloadXë
check_outputsubprocess.check_output"
builtins.str"builtins.str*Ó
args„
ÍTypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]‡	
ﬂUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *R
universal_newlines:
Literal[builtins.bool]	
builtins.bool"builtins.bool*
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Ç
inputu
'Union[builtins.bytes,builtins.str,None] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
textG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None 0:overloadXƒ
check_outputsubprocess.check_output" 
builtins.bytes"builtins.bytes*Ó
args„
ÍTypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]‡	
ﬂUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *T
universal_newlines:
Literal[builtins.bool]	
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Ç
inputu
'Union[builtins.bytes,builtins.str,None] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None *
encoding
None *
errors
None *x
textl
"Union[None,Literal[builtins.bool]]
None:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadX‚
check_outputsubprocess.check_output"
Any*Ó
args„
ÍTypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]]‡	
ﬂUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath¿
ttyping.Sequence[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"typing.Sequence"subprocess._CMD*+
bufsize
builtins.int"builtins.int *‘

executable¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *—
stdin√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *“
stderr√
2TypeAlias[Union[None,builtins.int,typing.IO[Any]]]y
'Union[None,builtins.int,typing.IO[Any]]
None
builtins.int"builtins.int$
typing.IO[Any]
Any"	typing.IO"subprocess._FILE *ô

preexec_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None */
	close_fds
builtins.bool"builtins.bool *+
shell
builtins.bool"builtins.bool *Õ
cwd¡
]Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes],None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None *»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *8
universal_newlines
builtins.bool"builtins.bool *
startupinfo
Any *1
creationflags
builtins.int"builtins.int *5
restore_signals
builtins.bool"builtins.bool *7
start_new_session
builtins.bool"builtins.bool *
pass_fds
Any *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Ç
inputu
'Union[builtins.bytes,builtins.str,None] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
textG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None 0:overloadX"38"39