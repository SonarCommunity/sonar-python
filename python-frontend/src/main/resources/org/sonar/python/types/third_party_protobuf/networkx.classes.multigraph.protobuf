
networkx.classes.multigraphÄ8

MultiGraph&networkx.classes.multigraph.MultiGraph"networkx.classes.graph.Graph*®
__init__/networkx.classes.multigraph.MultiGraph.__init__"
None*–
self≈
Dnetworkx.classes.multigraph.MultiGraph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"&networkx.classes.multigraph.MultiGraph*v
incoming_graph_data[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *_
multigraph_inputG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *
attr
Anyz36z37z38z39z310z311z312z313*§
adj*networkx.classes.multigraph.MultiGraph.adj"Ç
ìnetworkx.classes.coreviews.MultiAdjacencyView[networkx.classes.graph._Node,networkx.classes.graph._Node,builtins.dict[builtins.str,TypeAlias[Any]]]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.HashableU
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashableå
*builtins.dict[builtins.str,TypeAlias[Any]]
builtins.str"builtins.str1
TypeAlias[Any]
Any"_typeshed.Incomplete"builtins.dict"-networkx.classes.coreviews.MultiAdjacencyView*–
self≈
Dnetworkx.classes.multigraph.MultiGraph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"&networkx.classes.multigraph.MultiGraph0:cached_propertyz36z37*∫
adj*networkx.classes.multigraph.MultiGraph.adj"Ç
ìnetworkx.classes.coreviews.MultiAdjacencyView[networkx.classes.graph._Node,networkx.classes.graph._Node,builtins.dict[builtins.str,TypeAlias[Any]]]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.HashableU
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashableå
*builtins.dict[builtins.str,TypeAlias[Any]]
builtins.str"builtins.str1
TypeAlias[Any]
Any"_typeshed.Incomplete"builtins.dict"-networkx.classes.coreviews.MultiAdjacencyView*–
self≈
Dnetworkx.classes.multigraph.MultiGraph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"&networkx.classes.multigraph.MultiGraph0:cached_property`z38z39z310z311z312z313*î
new_edge_key3networkx.classes.multigraph.MultiGraph.new_edge_key"
builtins.int"builtins.int*–
self≈
Dnetworkx.classes.multigraph.MultiGraph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"&networkx.classes.multigraph.MultiGraph*\
uU
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable*\
vU
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashablez36z37z38z39z310z311z312z313*Ë
add_edge/networkx.classes.multigraph.MultiGraph.add_edge"
Any*–
self≈
Dnetworkx.classes.multigraph.MultiGraph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"&networkx.classes.multigraph.MultiGraph*

u_for_edge
Any*

v_for_edge
Any*f
key[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
attr
Anyz36z37z38z39z310z311z312z313*…
remove_edge2networkx.classes.multigraph.MultiGraph.remove_edge"
Any*–
self≈
Dnetworkx.classes.multigraph.MultiGraph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"&networkx.classes.multigraph.MultiGraph*
u
Any*
v
Any*f
key[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z36z37z38z39z310z311z312z313*√
has_edge/networkx.classes.multigraph.MultiGraph.has_edge"
Any*–
self≈
Dnetworkx.classes.multigraph.MultiGraph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"&networkx.classes.multigraph.MultiGraph*
u
Any*
v
Any*f
key[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z36z37z38z39z310z311z312z313*π
get_edge_data4networkx.classes.multigraph.MultiGraph.get_edge_data"
Any*–
self≈
Dnetworkx.classes.multigraph.MultiGraph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"&networkx.classes.multigraph.MultiGraph*
u
Any*
v
Any*f
key[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *j
default[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z36z37z38z39z310z311z312z313*°
copy+networkx.classes.multigraph.MultiGraph.copy"≈
Dnetworkx.classes.multigraph.MultiGraph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"&networkx.classes.multigraph.MultiGraph*–
self≈
Dnetworkx.classes.multigraph.MultiGraph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"&networkx.classes.multigraph.MultiGraph*-
as_view
builtins.bool"builtins.bool z36z37z38z39z310z311z312z313*∑
to_directed2networkx.classes.multigraph.MultiGraph.to_directed"Õ
Hnetworkx.classes.multidigraph.MultiDiGraph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"*networkx.classes.multidigraph.MultiDiGraph*–
self≈
Dnetworkx.classes.multigraph.MultiGraph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"&networkx.classes.multigraph.MultiGraph*-
as_view
builtins.bool"builtins.bool z36z37z38z39z310z311z312z313*≥
to_undirected4networkx.classes.multigraph.MultiGraph.to_undirected"≈
Dnetworkx.classes.multigraph.MultiGraph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"&networkx.classes.multigraph.MultiGraph*–
self≈
Dnetworkx.classes.multigraph.MultiGraph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"&networkx.classes.multigraph.MultiGraph*-
as_view
builtins.bool"builtins.bool z36z37z38z39z310z311z312z313*í
number_of_edges6networkx.classes.multigraph.MultiGraph.number_of_edges"
builtins.int"builtins.int*–
self≈
Dnetworkx.classes.multigraph.MultiGraph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"&networkx.classes.multigraph.MultiGraph*ó
uç
(Union[networkx.classes.graph._Node,None]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable
None *ó
vç
(Union[networkx.classes.graph._Node,None]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable
None z36z37z38z39z310z311z312z313Pj36j37j38j39j310j311j312j313*ª
__annotations__+networkx.classes.multigraph.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313*O
cached_property+networkx.classes.multigraph.cached_property
Any*36*37