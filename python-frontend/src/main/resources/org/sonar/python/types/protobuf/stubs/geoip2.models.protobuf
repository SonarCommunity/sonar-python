
geoip2.modelsí
Mappingtyping.Mapping"typing.Collection*Â
__getitem__typing.Mapping.__getitem__"
typing._VT_co*e
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*
k

typing._KT0:abstractmethod@z35z36z37z38z39z310*≥
itemstyping.Mapping.items"ë
3typing.AbstractSet[Tuple[typing._KT,typing._VT_co]]F
Tuple[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.AbstractSet*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz35z36z37z38z39z310*„
keystyping.Mapping.keys"D
typing.AbstractSet[typing._KT]

typing._KT"typing.AbstractSet*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz35z36z37z38z39z310*Î
valuestyping.Mapping.values"H
 typing.ValuesView[typing._VT_co]
typing._VT_co"typing.ValuesView*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz35z36z37z38z39z310*Ù
__contains__typing.Mapping.__contains__"
builtins.bool"builtins.bool*e
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*'
o"
builtins.object"builtins.objectz35z36z37z38z39z3102ﬂ
gettyping.Mapping.getÂ
gettyping.Mapping.get":
Union[typing._VT_co,None]
typing._VT_co
None*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*
key

typing._KT0:overloadX¬
gettyping.Mapping.get"D
Union[typing._VT_co,typing._T]
typing._VT_co
	typing._T*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*
key

typing._KT*Q
defaultD
Union[typing._VT_co,typing._T]
typing._VT_co
	typing._T0:overloadX"35"36"37"38"39"310Pj35j36j37j38j39j310¬
Sequencetyping.Sequence"typing.Collection"typing.Reversible*å
indextyping.Sequence.index"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
value
Any*)
start
builtins.int"builtins.int *(
stop
builtins.int"builtins.int z35z36z37z38z39z310*∑
counttyping.Sequence.count"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
value
Anyz35z36z37z38z39z310*⁄
__contains__typing.Sequence.__contains__"
builtins.bool"builtins.bool*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*'
x"
builtins.object"builtins.objectz35z36z37z38z39z310*Õ
__iter__typing.Sequence.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez35z36z37z38z39z310*’
__reversed__typing.Sequence.__reversed__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez35z36z37z38z39z3102ï
__getitem__typing.Sequence.__getitem__À
__getitem__typing.Sequence.__getitem__"
typing._T_co*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*!
i
builtins.int"builtins.int0:overload:abstractmethod@XÅ
__getitem__typing.Sequence.__getitem__"B
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*%
s 
builtins.slice"builtins.slice0:overload:abstractmethod@X"35"36"37"38"39"310Pj35j36j37j38j39j310ê
SimpleEqualitygeoip2.mixins.SimpleEquality"builtins.object*Ÿ
__eq__#geoip2.mixins.SimpleEquality.__eq__"
builtins.bool"builtins.bool*D
self<
geoip2.mixins.SimpleEquality"geoip2.mixins.SimpleEquality*+
other"
builtins.object"builtins.objectz35z36z37z38z39z310*Ÿ
__ne__#geoip2.mixins.SimpleEquality.__ne__"
builtins.bool"builtins.bool*D
self<
geoip2.mixins.SimpleEquality"geoip2.mixins.SimpleEquality*+
other"
builtins.object"builtins.objectz35z36z37z38z39z310j35j36j37j38j39j310Å
Countrygeoip2.models.Country"geoip2.mixins.SimpleEquality*Ω
__init__geoip2.models.Country.__init__"
None*8
self.
geoip2.models.Country"geoip2.models.Country*∆
raw_response≥
HTypeAlias[typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]]»
=typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]
builtins.str"builtins.strY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"typing.Mapping"geoip2.models._RawResponse*Í
locales⁄
4TypeAlias[Union[typing.Sequence[builtins.str],None]]á
)Union[typing.Sequence[builtins.str],None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
None"geoip2.models._Locales z35z36z37z38z39z310j35j36j37j38j39j310rN
	continentgeoip2.models.Country.continent
Any*35*36*37*38*39*310rJ
countrygeoip2.models.Country.country
Any*35*36*37*38*39*310r`
registered_country(geoip2.models.Country.registered_country
Any*35*36*37*38*39*310rb
represented_country)geoip2.models.Country.represented_country
Any*35*36*37*38*39*310rJ
maxmindgeoip2.models.Country.maxmind
Any*35*36*37*38*39*310rH
traitsgeoip2.models.Country.traits
Any*35*36*37*38*39*310rÔ
rawgeoip2.models.Country.raw≥
HTypeAlias[typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]]»
=typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]
builtins.str"builtins.strY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"typing.Mapping"geoip2.models._RawResponse*35*36*37*38*39*310©
Citygeoip2.models.City"geoip2.models.Country*¥
__init__geoip2.models.City.__init__"
None*2
self(
geoip2.models.City"geoip2.models.City*∆
raw_response≥
HTypeAlias[typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]]»
=typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]
builtins.str"builtins.strY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"typing.Mapping"geoip2.models._RawResponse*Í
locales⁄
4TypeAlias[Union[typing.Sequence[builtins.str],None]]á
)Union[typing.Sequence[builtins.str],None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
None"geoip2.models._Locales z35z36z37z38z39z310j35j36j37j38j39j310rA
citygeoip2.models.City.city
Any*35*36*37*38*39*310rI
locationgeoip2.models.City.location
Any*35*36*37*38*39*310rE
postalgeoip2.models.City.postal
Any*35*36*37*38*39*310rQ
subdivisionsgeoip2.models.City.subdivisions
Any*35*36*37*38*39*310O
Insightsgeoip2.models.Insights"geoip2.models.Cityj35j36j37j38j39j310S

Enterprisegeoip2.models.Enterprise"geoip2.models.Cityj35j36j37j38j39j310_
SimpleModelgeoip2.models.SimpleModel"geoip2.mixins.SimpleEqualityj35j36j37j38j39j310ï
AnonymousIPgeoip2.models.AnonymousIP"geoip2.models.SimpleModel*”
__init__"geoip2.models.AnonymousIP.__init__"
None*@
self6
geoip2.models.AnonymousIP"geoip2.models.AnonymousIP*Ω
raw≥
HTypeAlias[typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]]»
=typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]
builtins.str"builtins.strY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"typing.Mapping"geoip2.models._RawResponsez35z36z37z38z39z310j35j36j37j38j39j310ro
is_anonymous&geoip2.models.AnonymousIP.is_anonymous
builtins.bool"builtins.bool*35*36*37*38*39*310rw
is_anonymous_vpn*geoip2.models.AnonymousIP.is_anonymous_vpn
builtins.bool"builtins.bool*35*36*37*38*39*310r}
is_hosting_provider-geoip2.models.AnonymousIP.is_hosting_provider
builtins.bool"builtins.bool*35*36*37*38*39*310ru
is_public_proxy)geoip2.models.AnonymousIP.is_public_proxy
builtins.bool"builtins.bool*35*36*37*38*39*310rw
is_tor_exit_node*geoip2.models.AnonymousIP.is_tor_exit_node
builtins.bool"builtins.bool*35*36*37*38*39*310rë

ip_address$geoip2.models.AnonymousIP.ip_addressD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310rÛ
rawgeoip2.models.AnonymousIP.raw≥
HTypeAlias[typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]]»
=typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]
builtins.str"builtins.strY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"typing.Mapping"geoip2.models._RawResponse*35*36*37*38*39*310‡

ASNgeoip2.models.ASN"geoip2.models.SimpleModel*ª
__init__geoip2.models.ASN.__init__"
None*0
self&
geoip2.models.ASN"geoip2.models.ASN*Ω
raw≥
HTypeAlias[typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]]»
=typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]
builtins.str"builtins.strY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"typing.Mapping"geoip2.models._RawResponsez35z36z37z38z39z310j35j36j37j38j39j310r•
autonomous_system_number*geoip2.models.ASN.autonomous_system_numberD
Union[builtins.int,None]
builtins.int"builtins.int
None*35*36*37*38*39*310r±
autonomous_system_organization0geoip2.models.ASN.autonomous_system_organizationD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310râ

ip_addressgeoip2.models.ASN.ip_addressD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310rÎ
rawgeoip2.models.ASN.raw≥
HTypeAlias[typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]]»
=typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]
builtins.str"builtins.strY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"typing.Mapping"geoip2.models._RawResponse*35*36*37*38*39*310Ú	
ConnectionTypegeoip2.models.ConnectionType"geoip2.models.SimpleModel*‹
__init__%geoip2.models.ConnectionType.__init__"
None*F
self<
geoip2.models.ConnectionType"geoip2.models.ConnectionType*Ω
raw≥
HTypeAlias[typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]]»
=typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]
builtins.str"builtins.strY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"typing.Mapping"geoip2.models._RawResponsez35z36z37z38z39z310j35j36j37j38j39j310rû
connection_type,geoip2.models.ConnectionType.connection_typeD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310rî

ip_address'geoip2.models.ConnectionType.ip_addressD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310rˆ
raw geoip2.models.ConnectionType.raw≥
HTypeAlias[typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]]»
=typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]
builtins.str"builtins.strY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"typing.Mapping"geoip2.models._RawResponse*35*36*37*38*39*310Ø
Domaingeoip2.models.Domain"geoip2.models.SimpleModel*ƒ
__init__geoip2.models.Domain.__init__"
None*6
self,
geoip2.models.Domain"geoip2.models.Domain*Ω
raw≥
HTypeAlias[typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]]»
=typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]
builtins.str"builtins.strY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"typing.Mapping"geoip2.models._RawResponsez35z36z37z38z39z310j35j36j37j38j39j310rÑ
domaingeoip2.models.Domain.domainD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310rå

ip_addressgeoip2.models.Domain.ip_addressD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310r~
rawgeoip2.models.Domain.rawD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310è
ISPgeoip2.models.ISP"geoip2.models.ASN*ª
__init__geoip2.models.ISP.__init__"
None*0
self&
geoip2.models.ISP"geoip2.models.ISP*Ω
raw≥
HTypeAlias[typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]]»
=typing.Mapping[builtins.str,typing.Mapping[builtins.str,Any]]
builtins.str"builtins.strY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping"typing.Mapping"geoip2.models._RawResponsez35z36z37z38z39z310j35j36j37j38j39j310r{
ispgeoip2.models.ISP.ispD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310rç
organizationgeoip2.models.ISP.organizationD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310*N
Any
typing.Any"
builtins.object"builtins.object*35*36*37*38*39*310*`
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*4
recordsgeoip2.records *35*36*37*38*39*310