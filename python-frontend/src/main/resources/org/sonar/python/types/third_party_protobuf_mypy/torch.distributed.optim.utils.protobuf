
torch.distributed.optim.utilsh
register_functional_optim7torch.distributed.optim.utils.register_functional_optim*
key*	
optim¦
as_functional_optim1torch.distributed.optim.utils.as_functional_optim"
Any*+
	optim_cls
	Type[Any]
Any"type*
args
Any*
kwargs
Any»
_create_functional_optim6torch.distributed.optim.utils._create_functional_optim"
Any*6
functional_optim_cls
	Type[Any]
Any"type*
args
Any*
kwargs
Any*™
__annotations__-torch.distributed.optim.utils.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*Ç
functional_optim_map2torch.distributed.optim.utils.functional_optim_map{
*builtins.dict[builtins.type,builtins.type]
builtins.type"builtins.type
builtins.type"builtins.type"builtins.dict