
pandas.core.reshape.encoding∂
get_dummies(pandas.core.reshape.encoding.get_dummies":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*Î
data‡
ëUnion[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],pandas.core.frame.DataFrame,pandas.core.series.Series[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLike:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrameD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*≤
prefix£
lUnion[builtins.str,typing.Iterable[builtins.str],builtins.dict[pandas._typing.HashableT1,builtins.str],None]
builtins.str"builtins.strN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable∏
5builtins.dict[pandas._typing.HashableT1,builtins.str]R
pandas._typing.HashableT1"
typing.Hashable"typing.Hashable"typing.Hashable
builtins.str"builtins.str"builtins.dict
None *.

prefix_sep
builtins.str"builtins.str *.
dummy_na
builtins.bool"builtins.bool *‚
columns“
4Union[builtins.list[pandas._typing.HashableT2],None]ç
(builtins.list[pandas._typing.HashableT2]R
pandas._typing.HashableT2"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list
None *,
sparse
builtins.bool"builtins.bool *0

drop_first
builtins.bool"builtins.bool *¯

dtypeÍ

“Union[TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],None]Ü	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]¢
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtypeç
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]‡
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype4
Type[builtins.str]
builtins.str"builtins.str@
Type[builtins.complex]$
builtins.complex"builtins.complex7
Type[builtins.bool]
builtins.bool"builtins.bool=
Type[builtins.object]"
builtins.object"builtins.object"pandas._typing.NpDtype"pandas._typing.Dtype
None °
from_dummies)pandas.core.reshape.encoding.from_dummies":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
data:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*O
sepD
Union[builtins.str,None]
builtins.str"builtins.str
None *í
default_category˘
GUnion[typing.Hashable,builtins.dict[builtins.str,typing.Hashable],None]"
typing.Hashable"typing.Hashable~
+builtins.dict[builtins.str,typing.Hashable]
builtins.str"builtins.str"
typing.Hashable"typing.Hashable"builtins.dict
None *ò
__annotations__,pandas.core.reshape.encoding.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict