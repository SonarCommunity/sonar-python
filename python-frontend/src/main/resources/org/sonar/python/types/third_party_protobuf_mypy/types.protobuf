
typesZ
_Celltypes._Cell"builtins.objectr3
cell_contentstypes._Cell.cell_contents
Any˚
FunctionTypetypes.FunctionType"builtins.object*ˇ
__init__types.FunctionType.__init__"
None*2
self(
types.FunctionType"types.FunctionType**
code 
types.CodeType"types.CodeType*d
globalsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *†
argdefsê
+Union[builtins.tuple[builtins.object],None]U
builtins.tuple[builtins.object]"
builtins.object"builtins.object"builtins.tuple
None *ê
closureÄ
'Union[builtins.tuple[types._Cell],None]I
builtins.tuple[types._Cell]
types._Cell"types._Cell"builtins.tuple
None *å
__call__types.FunctionType.__call__"
Any*2
self(
types.FunctionType"types.FunctionType*
args
Any*
kwargs
Any*™
__get__types.FunctionType.__get__"$
types.MethodType"types.MethodType*2
self(
types.FunctionType"types.FunctionType*V
objM
Union[builtins.object,None]"
builtins.object"builtins.object
None*Q
typeG
Union[builtins.type,None]
builtins.type"builtins.type
Noner∞
__closure__types.FunctionType.__closure__Ä
'Union[builtins.tuple[types._Cell],None]I
builtins.tuple[types._Cell]
types._Cell"types._Cell"builtins.tuple
NonerI
__code__types.FunctionType.__code__ 
types.CodeType"types.CodeTyperé
__defaults__types.FunctionType.__defaults__]
Union[builtins.tuple[Any],None].
builtins.tuple[Any]
Any"builtins.tuple
NonerÄ
__dict__types.FunctionType.__dict__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictrÜ
__globals__types.FunctionType.__globals__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictrM
__qualname__types.FunctionType.__qualname__
builtins.str"builtins.strré
__annotations__"types.FunctionType.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictrå
__kwdefaults__!types.FunctionType.__kwdefaults__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictÏ
CodeTypetypes.CodeType"builtins.object*˛
__init__types.CodeType.__init__"
None**
self 
types.CodeType"types.CodeType**
argcount
builtins.int"builtins.int*1
posonlyargcount
builtins.int"builtins.int*0
kwonlyargcount
builtins.int"builtins.int*)
nlocals
builtins.int"builtins.int*+
	stacksize
builtins.int"builtins.int*'
flags
builtins.int"builtins.int*0

codestring 
builtins.bytes"builtins.bytes*=
	constants.
builtins.tuple[Any]
Any"builtins.tuple*W
namesL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*Z
varnamesL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple**
filename
builtins.str"builtins.str*&
name
builtins.str"builtins.str*-
firstlineno
builtins.int"builtins.int*,
lnotab 
builtins.bytes"builtins.bytes*\
freevarsL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple *\
cellvarsL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple *◊
replacetypes.CodeType.replace" 
types.CodeType"types.CodeType**
self 
types.CodeType"types.CodeType*/
co_argcount
builtins.int"builtins.int *6
co_posonlyargcount
builtins.int"builtins.int *5
co_kwonlyargcount
builtins.int"builtins.int *.

co_nlocals
builtins.int"builtins.int *0
co_stacksize
builtins.int"builtins.int *,
co_flags
builtins.int"builtins.int *2
co_firstlineno
builtins.int"builtins.int */
co_code 
builtins.bytes"builtins.bytes *?
	co_consts.
builtins.tuple[Any]
Any"builtins.tuple *\
co_namesL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple *_
co_varnamesL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple *_
co_freevarsL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple *_
co_cellvarsL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple */
co_filename
builtins.str"builtins.str *+
co_name
builtins.str"builtins.str *1
	co_lnotab 
builtins.bytes"builtins.bytes rG
co_argcounttypes.CodeType.co_argcount
builtins.int"builtins.intrU
co_posonlyargcount!types.CodeType.co_posonlyargcount
builtins.int"builtins.intrS
co_kwonlyargcount types.CodeType.co_kwonlyargcount
builtins.int"builtins.intrE

co_nlocalstypes.CodeType.co_nlocals
builtins.int"builtins.intrI
co_stacksizetypes.CodeType.co_stacksize
builtins.int"builtins.intrA
co_flagstypes.CodeType.co_flags
builtins.int"builtins.intrC
co_codetypes.CodeType.co_code 
builtins.bytes"builtins.bytesrU
	co_conststypes.CodeType.co_consts.
builtins.tuple[Any]
Any"builtins.tuplerq
co_namestypes.CodeType.co_namesL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuplerw
co_varnamestypes.CodeType.co_varnamesL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuplerG
co_filenametypes.CodeType.co_filename
builtins.str"builtins.strr?
co_nametypes.CodeType.co_name
builtins.str"builtins.strrM
co_firstlinenotypes.CodeType.co_firstlineno
builtins.int"builtins.intrG
	co_lnotabtypes.CodeType.co_lnotab 
builtins.bytes"builtins.bytesrw
co_freevarstypes.CodeType.co_freevarsL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuplerw
co_cellvarstypes.CodeType.co_cellvarsL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tupleÅ	
MappingProxyTypetypes.MappingProxyType"typing.Mapping*Ü
__init__types.MappingProxyType.__init__"
None*m
selfc
+types.MappingProxyType[types._KT,types._VT]
	types._KT
	types._VT"types.MappingProxyType*`
mappingS
#typing.Mapping[types._KT,types._VT]
	types._KT
	types._VT"typing.Mapping*¡
__getitem__"types.MappingProxyType.__getitem__"
	types._VT*k
selfc
+types.MappingProxyType[types._KT,types._VT]
	types._KT
	types._VT"types.MappingProxyType*
k
	types._KT*÷
__iter__types.MappingProxyType.__iter__"<
typing.Iterator[types._KT]
	types._KT"typing.Iterator*k
selfc
+types.MappingProxyType[types._KT,types._VT]
	types._KT
	types._VT"types.MappingProxyType*¥
__len__types.MappingProxyType.__len__"
builtins.int"builtins.int*k
selfc
+types.MappingProxyType[types._KT,types._VT]
	types._KT
	types._VT"types.MappingProxyType*Â
copytypes.MappingProxyType.copy"Q
"builtins.dict[types._KT,types._VT]
	types._KT
	types._VT"builtins.dict*m
selfc
+types.MappingProxyType[types._KT,types._VT]
	types._KT
	types._VT"types.MappingProxyTypeP´
SimpleNamespacetypes.SimpleNamespace"builtins.object*É
__init__types.SimpleNamespace.__init__"
None*8
self.
types.SimpleNamespace"types.SimpleNamespace*
kwargs
Any*°
__getattribute__&types.SimpleNamespace.__getattribute__"
Any*6
self.
types.SimpleNamespace"types.SimpleNamespace*$
name
builtins.str"builtins.str*™
__setattr__!types.SimpleNamespace.__setattr__"
None*6
self.
types.SimpleNamespace"types.SimpleNamespace*$
name
builtins.str"builtins.str*
value
Any*ò
__delattr__!types.SimpleNamespace.__delattr__"
None*6
self.
types.SimpleNamespace"types.SimpleNamespace*$
name
builtins.str"builtins.str”

ModuleTypetypes.ModuleType"builtins.object*ÿ
__init__types.ModuleType.__init__"
None*.
self$
types.ModuleType"types.ModuleType*&
name
builtins.str"builtins.str*O
docD
Union[builtins.str,None]
builtins.str"builtins.str
None r~
__dict__types.ModuleType.__dict__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictr¢

__loader__types.ModuleType.__loader__w
)Union[importlib.abc._LoaderProtocol,None]>
importlib.abc._LoaderProtocol"importlib.abc._LoaderProtocol
Noner°
__spec__types.ModuleType.__spec__z
*Union[importlib.machinery.ModuleSpec,None]@
importlib.machinery.ModuleSpec"importlib.machinery.ModuleSpec
Noneä
GeneratorTypetypes.GeneratorType"builtins.object*à
__iter__types.GeneratorType.__iter__"*
types.GeneratorType"types.GeneratorType*2
self*
types.GeneratorType"types.GeneratorType*g
__next__types.GeneratorType.__next__"
Any*4
self*
types.GeneratorType"types.GeneratorType*b
closetypes.GeneratorType.close"
None*4
self*
types.GeneratorType"types.GeneratorType*q
sendtypes.GeneratorType.send"
Any*4
self*
types.GeneratorType"types.GeneratorType*
__arg
Any2ì
throwtypes.GeneratorType.throw«
throwtypes.GeneratorType.throw"
Any*4
self*
types.GeneratorType"types.GeneratorType*[
__typR
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException*ì
__valá
-Union[builtins.BaseException,builtins.object]0
builtins.BaseException"builtins.BaseException"
builtins.object"builtins.object *c
__tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None 0:overloadX§
throwtypes.GeneratorType.throw"
Any*4
self*
types.GeneratorType"types.GeneratorType*9
__typ0
builtins.BaseException"builtins.BaseException*
__val
None *c
__tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None 0:overloadXrH
gi_codetypes.GeneratorType.gi_code 
types.CodeType"types.CodeTyperL
gi_frametypes.GeneratorType.gi_frame"
types.FrameType"types.FrameTyperL

gi_runningtypes.GeneratorType.gi_running
builtins.bool"builtins.boolrã
gi_yieldfrom types.GeneratorType.gi_yieldfromY
Union[types.GeneratorType,None]*
types.GeneratorType"types.GeneratorType
NoneÖ
AsyncGeneratorTypetypes.AsyncGeneratorType"builtins.object*ä
	__aiter__"types.AsyncGeneratorType.__aiter__"‘
Gtyping.Awaitable[types.AsyncGeneratorType[types._T_co,types._T_contra]]w
5types.AsyncGeneratorType[types._T_co,types._T_contra]
types._T_co
types._T_contra"types.AsyncGeneratorType"typing.Awaitable*Å
selfw
5types.AsyncGeneratorType[types._T_co,types._T_contra]
types._T_co
types._T_contra"types.AsyncGeneratorType*˜
	__anext__"types.AsyncGeneratorType.__anext__"B
typing.Awaitable[types._T_co]
types._T_co"typing.Awaitable*Å
selfw
5types.AsyncGeneratorType[types._T_co,types._T_contra]
types._T_co
types._T_contra"types.AsyncGeneratorType*ç
asendtypes.AsyncGeneratorType.asend"B
typing.Awaitable[types._T_co]
types._T_co"typing.Awaitable*Å
selfw
5types.AsyncGeneratorType[types._T_co,types._T_contra]
types._T_co
types._T_contra"types.AsyncGeneratorType*
__val
types._T_contra*„
aclosetypes.AsyncGeneratorType.aclose"4
typing.Awaitable[None]
None"typing.Awaitable*Å
selfw
5types.AsyncGeneratorType[types._T_co,types._T_contra]
types._T_co
types._T_contra"types.AsyncGeneratorType2∫
athrowtypes.AsyncGeneratorType.athrow◊
athrowtypes.AsyncGeneratorType.athrow"B
typing.Awaitable[types._T_co]
types._T_co"typing.Awaitable*Å
selfw
5types.AsyncGeneratorType[types._T_co,types._T_contra]
types._T_co
types._T_contra"types.AsyncGeneratorType*[
__typR
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException*ì
__valá
-Union[builtins.BaseException,builtins.object]0
builtins.BaseException"builtins.BaseException"
builtins.object"builtins.object *c
__tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None 0:overloadX¥
athrowtypes.AsyncGeneratorType.athrow"B
typing.Awaitable[types._T_co]
types._T_co"typing.Awaitable*Å
selfw
5types.AsyncGeneratorType[types._T_co,types._T_contra]
types._T_co
types._T_contra"types.AsyncGeneratorType*9
__typ0
builtins.BaseException"builtins.BaseException*
__val
None *c
__tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None 0:overloadXPrí
ag_await!types.AsyncGeneratorType.ag_awaitc
!Union[typing.Awaitable[Any],None]2
typing.Awaitable[Any]
Any"typing.Awaitable
NonerQ
ag_frame!types.AsyncGeneratorType.ag_frame"
types.FrameType"types.FrameTyperQ

ag_running#types.AsyncGeneratorType.ag_running
builtins.bool"builtins.boolrM
ag_code types.AsyncGeneratorType.ag_code 
types.CodeType"types.CodeType⁄

CoroutineTypetypes.CoroutineType"builtins.object*b
closetypes.CoroutineType.close"
None*4
self*
types.CoroutineType"types.CoroutineType*q
sendtypes.CoroutineType.send"
Any*4
self*
types.CoroutineType"types.CoroutineType*
__arg
Any2ì
throwtypes.CoroutineType.throw«
throwtypes.CoroutineType.throw"
Any*4
self*
types.CoroutineType"types.CoroutineType*[
__typR
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException*ì
__valá
-Union[builtins.BaseException,builtins.object]0
builtins.BaseException"builtins.BaseException"
builtins.object"builtins.object *c
__tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None 0:overloadX§
throwtypes.CoroutineType.throw"
Any*4
self*
types.CoroutineType"types.CoroutineType*9
__typ0
builtins.BaseException"builtins.BaseException*
__val
None *c
__tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None 0:overloadXrP
cr_awaittypes.CoroutineType.cr_await&
Union[Any,None]
Any
NonerH
cr_codetypes.CoroutineType.cr_code 
types.CodeType"types.CodeTyperL
cr_frametypes.CoroutineType.cr_frame"
types.FrameType"types.FrameTyperL

cr_runningtypes.CoroutineType.cr_running
builtins.bool"builtins.boolá
_StaticFunctionTypetypes._StaticFunctionType"builtins.object*√
__get__!types._StaticFunctionType.__get__"(
types.FunctionType"types.FunctionType*@
self6
types._StaticFunctionType"types._StaticFunctionType*V
objM
Union[builtins.object,None]"
builtins.object"builtins.object
None*Q
typeG
Union[builtins.type,None]
builtins.type"builtins.type
Noneï

MethodTypetypes.MethodType"builtins.object*„
__init__types.MethodType.__init__"
None*.
self$
types.MethodType"types.MethodType*U
funcK
CallableType[builtins.function]&
builtins.function"builtins.function*+
obj"
builtins.object"builtins.object*Ü
__call__types.MethodType.__call__"
Any*.
self$
types.MethodType"types.MethodType*
args
Any*
kwargs
Anyr]
__func__types.MethodType.__func__6
types._StaticFunctionType"types._StaticFunctionTyperI
__self__types.MethodType.__self__"
builtins.object"builtins.objectrK
__qualname__types.MethodType.__qualname__
builtins.str"builtins.str„
BuiltinFunctionTypetypes.BuiltinFunctionType"builtins.object*°
__call__"types.BuiltinFunctionType.__call__"
Any*@
self6
types.BuiltinFunctionType"types.BuiltinFunctionType*
args
Any*
kwargs
Anyr•
__self__"types.BuiltinFunctionType.__self__u
'Union[builtins.object,types.ModuleType]"
builtins.object"builtins.object$
types.ModuleType"types.ModuleTyperT
__qualname__&types.BuiltinFunctionType.__qualname__
builtins.str"builtins.strﬂ
WrapperDescriptorTypetypes.WrapperDescriptorType"builtins.object*ß
__call__$types.WrapperDescriptorType.__call__"
Any*D
self:
types.WrapperDescriptorType"types.WrapperDescriptorType*
args
Any*
kwargs
Any*ª
__get__#types.WrapperDescriptorType.__get__"
Any*D
self:
types.WrapperDescriptorType"types.WrapperDescriptorType*
obj
Any**
type
builtins.type"builtins.type rV
__qualname__(types.WrapperDescriptorType.__qualname__
builtins.str"builtins.strrX
__objclass__(types.WrapperDescriptorType.__objclass__
builtins.type"builtins.typeâ
MethodWrapperTypetypes.MethodWrapperType"builtins.object*õ
__call__ types.MethodWrapperType.__call__"
Any*<
self2
types.MethodWrapperType"types.MethodWrapperType*
args
Any*
kwargs
Any*ñ
__eq__types.MethodWrapperType.__eq__"
builtins.bool"builtins.bool*:
self2
types.MethodWrapperType"types.MethodWrapperType*
other
Any*ñ
__ne__types.MethodWrapperType.__ne__"
builtins.bool"builtins.bool*:
self2
types.MethodWrapperType"types.MethodWrapperType*
other
AnyrP
__self__ types.MethodWrapperType.__self__"
builtins.object"builtins.objectrR
__qualname__$types.MethodWrapperType.__qualname__
builtins.str"builtins.strrT
__objclass__$types.MethodWrapperType.__objclass__
builtins.type"builtins.type’
MethodDescriptorTypetypes.MethodDescriptorType"builtins.object*§
__call__#types.MethodDescriptorType.__call__"
Any*B
self8
types.MethodDescriptorType"types.MethodDescriptorType*
args
Any*
kwargs
Any*∏
__get__"types.MethodDescriptorType.__get__"
Any*B
self8
types.MethodDescriptorType"types.MethodDescriptorType*
obj
Any**
type
builtins.type"builtins.type rU
__qualname__'types.MethodDescriptorType.__qualname__
builtins.str"builtins.strrW
__objclass__'types.MethodDescriptorType.__objclass__
builtins.type"builtins.typeá
ClassMethodDescriptorTypetypes.ClassMethodDescriptorType"builtins.object*≥
__call__(types.ClassMethodDescriptorType.__call__"
Any*L
selfB
types.ClassMethodDescriptorType"types.ClassMethodDescriptorType*
args
Any*
kwargs
Any*«
__get__'types.ClassMethodDescriptorType.__get__"
Any*L
selfB
types.ClassMethodDescriptorType"types.ClassMethodDescriptorType*
obj
Any**
type
builtins.type"builtins.type rZ
__qualname__,types.ClassMethodDescriptorType.__qualname__
builtins.str"builtins.strr\
__objclass__,types.ClassMethodDescriptorType.__objclass__
builtins.type"builtins.type∆
TracebackTypetypes.TracebackType"builtins.object*€
__init__types.TracebackType.__init__"
None*4
self*
types.TracebackType"types.TracebackType*f
tb_nextY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None*0
tb_frame"
types.FrameType"types.FrameType**
tb_lasti
builtins.int"builtins.int*+
	tb_lineno
builtins.int"builtins.int*ê
tb_frametypes.TracebackType.tb_frame""
types.FrameType"types.FrameType*4
self*
types.TracebackType"types.TracebackType0:property`*ä
tb_lastitypes.TracebackType.tb_lasti"
builtins.int"builtins.int*4
self*
types.TracebackType"types.TracebackType0:property`*å
	tb_linenotypes.TracebackType.tb_lineno"
builtins.int"builtins.int*4
self*
types.TracebackType"types.TracebackType0:property`rÅ
tb_nexttypes.TracebackType.tb_nextY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Noneñ	
	FrameTypetypes.FrameType"builtins.object*V
cleartypes.FrameType.clear"
None*,
self"
types.FrameType"types.FrameTypero
f_backtypes.FrameType.f_backM
Union[types.FrameType,None]"
types.FrameType"types.FrameType
NonerÅ

f_builtinstypes.FrameType.f_builtinsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictrB
f_codetypes.FrameType.f_code 
types.CodeType"types.CodeTyper
	f_globalstypes.FrameType.f_globalsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictr@
f_lastitypes.FrameType.f_lasti
builtins.int"builtins.intrB
f_linenotypes.FrameType.f_lineno
builtins.int"builtins.intr}
f_localstypes.FrameType.f_localsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictr´
f_tracetypes.FrameType.f_traceÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
NonerN
f_trace_linestypes.FrameType.f_trace_lines
builtins.bool"builtins.boolrR
f_trace_opcodestypes.FrameType.f_trace_opcodes
builtins.bool"builtins.boolñ
GetSetDescriptorTypetypes.GetSetDescriptorType"builtins.object*∏
__get__"types.GetSetDescriptorType.__get__"
Any*B
self8
types.GetSetDescriptorType"types.GetSetDescriptorType*
__obj
Any**
__type
builtins.type"builtins.type *¶
__set__"types.GetSetDescriptorType.__set__"
None*B
self8
types.GetSetDescriptorType"types.GetSetDescriptorType*

__instance
Any*
__value
Any*ì

__delete__%types.GetSetDescriptorType.__delete__"
None*B
self8
types.GetSetDescriptorType"types.GetSetDescriptorType*
obj
AnyrW
__objclass__'types.GetSetDescriptorType.__objclass__
builtins.type"builtins.typeñ
MemberDescriptorTypetypes.MemberDescriptorType"builtins.object*∏
__get__"types.MemberDescriptorType.__get__"
Any*B
self8
types.MemberDescriptorType"types.MemberDescriptorType*
__obj
Any**
__type
builtins.type"builtins.type *¶
__set__"types.MemberDescriptorType.__set__"
None*B
self8
types.MemberDescriptorType"types.MemberDescriptorType*

__instance
Any*
__value
Any*ì

__delete__%types.MemberDescriptorType.__delete__"
None*B
self8
types.MemberDescriptorType"types.MemberDescriptorType*
obj
AnyrW
__objclass__'types.MemberDescriptorType.__objclass__
builtins.type"builtins.typeá
	new_classtypes.new_class"
builtins.type"builtins.type*&
name
builtins.str"builtins.str*d
basesW
 typing.Iterable[builtins.object]"
builtins.object"builtins.object"typing.Iterable *ü
kwdsí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *ò
	exec_bodyÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None ∏
resolve_basestypes.resolve_bases".
builtins.tuple[Any]
Any"builtins.tuple*b
basesW
 typing.Iterable[builtins.object]"
builtins.object"builtins.object"typing.Iterable˘
prepare_classtypes.prepare_class"™
TTuple[builtins.type,builtins.dict[builtins.str,Any],builtins.dict[builtins.str,Any]]
builtins.type"builtins.typeW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*&
name
builtins.str"builtins.str*\
basesO
builtins.tuple[builtins.type]
builtins.type"builtins.type"builtins.tuple *ü
kwdsí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None ü
	coroutinetypes.coroutine"*
types.CoroutineType"types.CoroutineType*U
funcK
CallableType[builtins.function]&
builtins.function"builtins.function