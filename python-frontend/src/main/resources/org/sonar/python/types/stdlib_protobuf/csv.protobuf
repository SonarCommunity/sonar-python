
csvK
Error
_csv.Error"builtins.Exceptionj36j37j38j39j310j311j312j313›
Dialectcsv.Dialect"builtins.object*t
__init__csv.Dialect.__init__"
None*$
self
csv.Dialect"csv.Dialectz36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rd
	delimitercsv.Dialect.delimiter
builtins.str"builtins.str*36*37*38*39*310*311*312*313rå
	quotecharcsv.Dialect.quotecharD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310*311*312*313ré

escapecharcsv.Dialect.escapecharD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310*311*312*313rj
doublequotecsv.Dialect.doublequote
builtins.bool"builtins.bool*36*37*38*39*310*311*312*313rt
skipinitialspacecsv.Dialect.skipinitialspace
builtins.bool"builtins.bool*36*37*38*39*310*311*312*313rn
lineterminatorcsv.Dialect.lineterminator
builtins.str"builtins.str*36*37*38*39*310*311*312*313r`
quotingcsv.Dialect.quoting
builtins.int"builtins.int*36*37*38*39*310*311*312*313r`
strictcsv.Dialect.strict
builtins.bool"builtins.bool*36*37*38*39*310*311*312*313C
excel	csv.excel"csv.Dialectj36j37j38j39j310j311j312j313I
	excel_tabcsv.excel_tab"	csv.excelj36j37j38j39j310j311j312j313Q
unix_dialectcsv.unix_dialect"csv.Dialectj36j37j38j39j310j311j312j313À*

DictReadercsv.DictReader"builtins.object*Ù
__iter__csv.DictReader.__iter__"í
csv.DictReader.Selfi
csv.DictReader[csv._T]?
csv._T"
builtins.object"builtins.object"builtins.object"csv.DictReader"csv.DictReader*ïí
csv.DictReader.Selfi
csv.DictReader[csv._T]?
csv._T"
builtins.object"builtins.object"builtins.object"csv.DictReader"csv.DictReaderz36z37z38z39z310z311z312z313*≠
__next__csv.DictReader.__next__"Ó
8builtins.dict[Union[csv._T,Any],Union[builtins.str,Any]]_
Union[csv._T,Any]?
csv._T"
builtins.object"builtins.object"builtins.object
AnyB
Union[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*s
selfi
csv.DictReader[csv._T]?
csv._T"
builtins.object"builtins.object"builtins.object"csv.DictReaderz36z37z38z39z310z311z312z313*ç
__class_getitem__ csv.DictReader.__class_getitem__"(
types.GenericAlias"types.GenericAlias*îë
Type[csv.DictReader[csv._T]]i
csv.DictReader[csv._T]?
csv._T"
builtins.object"builtins.object"builtins.object"csv.DictReader"type*	
Anypz312z3132‹
__init__csv.DictReader.__init__€
__init__csv.DictReader.__init__"
None*s
selfi
csv.DictReader[csv._T]?
csv._T"
builtins.object"builtins.object"builtins.object"csv.DictReader*U
fN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable*{

fieldnamesk
typing.Sequence[csv._T]?
csv._T"
builtins.object"builtins.object"builtins.object"typing.Sequence*p
restkeya
Union[csv._T,None]?
csv._T"
builtins.object"builtins.object"builtins.object
None *`
restvalQ
Union[builtins.str,Any,None]
builtins.str"builtins.str
Any
None *®
dialectò
\TypeAlias[Union[builtins.str,_csv.Dialect,csv.Dialect,Type[_csv.Dialect],Type[csv.Dialect]]]¢
QUnion[builtins.str,_csv.Dialect,csv.Dialect,Type[_csv.Dialect],Type[csv.Dialect]]
builtins.str"builtins.str
_csv.Dialect"_csv.Dialect
csv.Dialect"csv.Dialect:
Type[_csv.Dialect]
_csv.Dialect"_csv.Dialect"type7
Type[csv.Dialect]
csv.Dialect"csv.Dialect"type"_csv._DialectLike *-
	delimiter
builtins.str"builtins.str *U
	quotecharD
Union[builtins.str,None]
builtins.str"builtins.str
None *V

escapecharD
Union[builtins.str,None]
builtins.str"builtins.str
None *1
doublequote
builtins.bool"builtins.bool *6
skipinitialspace
builtins.bool"builtins.bool *2
lineterminator
builtins.str"builtins.str *+
quoting
builtins.int"builtins.int *,
strict
builtins.bool"builtins.bool 0:overloadX¥
__init__csv.DictReader.__init__"
None*V
selfL
csv.DictReader[builtins.str]
builtins.str"builtins.str"csv.DictReader*U
fN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable*ö

fieldnamesá
)Union[typing.Sequence[builtins.str],None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
None *S
restkeyD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
restvalD
Union[builtins.str,None]
builtins.str"builtins.str
None *®
dialectò
\TypeAlias[Union[builtins.str,_csv.Dialect,csv.Dialect,Type[_csv.Dialect],Type[csv.Dialect]]]¢
QUnion[builtins.str,_csv.Dialect,csv.Dialect,Type[_csv.Dialect],Type[csv.Dialect]]
builtins.str"builtins.str
_csv.Dialect"_csv.Dialect
csv.Dialect"csv.Dialect:
Type[_csv.Dialect]
_csv.Dialect"_csv.Dialect"type7
Type[csv.Dialect]
csv.Dialect"csv.Dialect"type"_csv._DialectLike *-
	delimiter
builtins.str"builtins.str *U
	quotecharD
Union[builtins.str,None]
builtins.str"builtins.str
None *V

escapecharD
Union[builtins.str,None]
builtins.str"builtins.str
None *1
doublequote
builtins.bool"builtins.bool *6
skipinitialspace
builtins.bool"builtins.bool *2
lineterminator
builtins.str"builtins.str *+
quoting
builtins.int"builtins.int *,
strict
builtins.bool"builtins.bool 0:overloadX"36"37"38"39"310"311"312"313Pj36j37j38j39j310j311j312j313rÏ

fieldnamescsv.DictReader.fieldnamesû
#Union[typing.Sequence[csv._T],None]k
typing.Sequence[csv._T]?
csv._T"
builtins.object"builtins.object"builtins.object"typing.Sequence
None*36*37*38*39*310*311*312*313r®
restkeycsv.DictReader.restkeya
Union[csv._T,None]?
csv._T"
builtins.object"builtins.object"builtins.object
None*36*37*38*39*310*311*312*313rò
restvalcsv.DictReader.restvalQ
Union[builtins.str,Any,None]
builtins.str"builtins.str
Any
None*36*37*38*39*310*311*312*313ra
readercsv.DictReader.reader
_csv._reader"_csv._reader*36*37*38*39*310*311*312*313r‡
dialectcsv.DictReader.dialectò
\TypeAlias[Union[builtins.str,_csv.Dialect,csv.Dialect,Type[_csv.Dialect],Type[csv.Dialect]]]¢
QUnion[builtins.str,_csv.Dialect,csv.Dialect,Type[_csv.Dialect],Type[csv.Dialect]]
builtins.str"builtins.str
_csv.Dialect"_csv.Dialect
csv.Dialect"csv.Dialect:
Type[_csv.Dialect]
_csv.Dialect"_csv.Dialect"type7
Type[csv.Dialect]
csv.Dialect"csv.Dialect"type"_csv._DialectLike*36*37*38*39*310*311*312*313re
line_numcsv.DictReader.line_num
builtins.int"builtins.int*36*37*38*39*310*311*312*313À

DictWritercsv.DictWriter"builtins.object*®
__init__csv.DictWriter.__init__"
None*s
selfi
csv.DictWriter[csv._T]?
csv._T"
builtins.object"builtins.object"builtins.object"csv.DictWriter*e
f^
%_typeshed.SupportsWrite[builtins.str]
builtins.str"builtins.str"_typeshed.SupportsWrite*

fieldnameso
typing.Collection[csv._T]?
csv._T"
builtins.object"builtins.object"builtins.object"typing.Collection*5
restval&
Union[Any,None]
Any
None *Ω
extrasaction®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *®
dialectò
\TypeAlias[Union[builtins.str,_csv.Dialect,csv.Dialect,Type[_csv.Dialect],Type[csv.Dialect]]]¢
QUnion[builtins.str,_csv.Dialect,csv.Dialect,Type[_csv.Dialect],Type[csv.Dialect]]
builtins.str"builtins.str
_csv.Dialect"_csv.Dialect
csv.Dialect"csv.Dialect:
Type[_csv.Dialect]
_csv.Dialect"_csv.Dialect"type7
Type[csv.Dialect]
csv.Dialect"csv.Dialect"type"_csv._DialectLike *-
	delimiter
builtins.str"builtins.str *U
	quotecharD
Union[builtins.str,None]
builtins.str"builtins.str
None *V

escapecharD
Union[builtins.str,None]
builtins.str"builtins.str
None *1
doublequote
builtins.bool"builtins.bool *6
skipinitialspace
builtins.bool"builtins.bool *2
lineterminator
builtins.str"builtins.str *+
quoting
builtins.int"builtins.int *,
strict
builtins.bool"builtins.bool z36z37z38z39z310z311z312z313*À
writeheadercsv.DictWriter.writeheader"
Any*s
selfi
csv.DictWriter[csv._T]?
csv._T"
builtins.object"builtins.object"builtins.object"csv.DictWriterz36z37z38z39z310z311z312z313*À
writerowcsv.DictWriter.writerow"
Any*s
selfi
csv.DictWriter[csv._T]?
csv._T"
builtins.object"builtins.object"builtins.object"csv.DictWriter*É
rowdictv
typing.Mapping[csv._T,Any]?
csv._T"
builtins.object"builtins.object"builtins.object
Any"typing.Mappingz36z37z38z39z310z311z312z313*ê
	writerowscsv.DictWriter.writerows"
None*s
selfi
csv.DictWriter[csv._T]?
csv._T"
builtins.object"builtins.object"builtins.object"csv.DictWriter*≈
rowdicts∂
+typing.Iterable[typing.Mapping[csv._T,Any]]v
typing.Mapping[csv._T,Any]?
csv._T"
builtins.object"builtins.object"builtins.object
Any"typing.Mapping"typing.Iterablez36z37z38z39z310z311z312z313*ç
__class_getitem__ csv.DictWriter.__class_getitem__"(
types.GenericAlias"types.GenericAlias*îë
Type[csv.DictWriter[csv._T]]i
csv.DictWriter[csv._T]?
csv._T"
builtins.object"builtins.object"builtins.object"csv.DictWriter"type*	
Anypz312z313Pj36j37j38j39j310j311j312j313rº

fieldnamescsv.DictWriter.fieldnameso
typing.Collection[csv._T]?
csv._T"
builtins.object"builtins.object"builtins.object"typing.Collection*36*37*38*39*310*311*312*313rm
restvalcsv.DictWriter.restval&
Union[Any,None]
Any
None*36*37*38*39*310*311*312*313r˙
extrasactioncsv.DictWriter.extrasaction®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*36*37*38*39*310*311*312*313ra
writercsv.DictWriter.writer
_csv._writer"_csv._writer*36*37*38*39*310*311*312*313Ω
Sniffercsv.Sniffer"builtins.object*ü
sniffcsv.Sniffer.sniff"7
Type[csv.Dialect]
csv.Dialect"csv.Dialect"type*$
self
csv.Sniffer"csv.Sniffer*(
sample
builtins.str"builtins.str*V

delimitersD
Union[builtins.str,None]
builtins.str"builtins.str
None z36z37z38z39z310z311z312z313*∏

has_headercsv.Sniffer.has_header"
builtins.bool"builtins.bool*$
self
csv.Sniffer"csv.Sniffer*(
sample
builtins.str"builtins.strz36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rí
	preferredcsv.Sniffer.preferredJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*36*37*38*39*310*311*312*313ö
field_size_limit_csv.field_size_limit"
builtins.int"builtins.int*-
	new_limit
builtins.int"builtins.int z36z37z38z39z310z311z312z313â
get_dialect_csv.get_dialect"
_csv.Dialect"_csv.Dialect*&
name
builtins.str"builtins.strz36z37z38z39z310z311z312z313ì
list_dialects_csv.list_dialects"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listz36z37z38z39z310z311z312z313∑
reader_csv.reader"
_csv._reader"_csv._reader*[
csvfileN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable*®
dialectò
\TypeAlias[Union[builtins.str,_csv.Dialect,csv.Dialect,Type[_csv.Dialect],Type[csv.Dialect]]]¢
QUnion[builtins.str,_csv.Dialect,csv.Dialect,Type[_csv.Dialect],Type[csv.Dialect]]
builtins.str"builtins.str
_csv.Dialect"_csv.Dialect
csv.Dialect"csv.Dialect:
Type[_csv.Dialect]
_csv.Dialect"_csv.Dialect"type7
Type[csv.Dialect]
csv.Dialect"csv.Dialect"type"_csv._DialectLike *-
	delimiter
builtins.str"builtins.str *U
	quotecharD
Union[builtins.str,None]
builtins.str"builtins.str
None *V

escapecharD
Union[builtins.str,None]
builtins.str"builtins.str
None *1
doublequote
builtins.bool"builtins.bool *6
skipinitialspace
builtins.bool"builtins.bool *2
lineterminator
builtins.str"builtins.str *+
quoting
builtins.int"builtins.int *,
strict
builtins.bool"builtins.bool z36z37z38z39z310z311z312z313¢
register_dialect_csv.register_dialect"
None*&
name
builtins.str"builtins.str*I
dialect:
Type[_csv.Dialect]
_csv.Dialect"_csv.Dialect"type *-
	delimiter
builtins.str"builtins.str *U
	quotecharD
Union[builtins.str,None]
builtins.str"builtins.str
None *V

escapecharD
Union[builtins.str,None]
builtins.str"builtins.str
None *1
doublequote
builtins.bool"builtins.bool *6
skipinitialspace
builtins.bool"builtins.bool *2
lineterminator
builtins.str"builtins.str *+
quoting
builtins.int"builtins.int *,
strict
builtins.bool"builtins.bool z36z37z38z39z310z311z312z313É
unregister_dialect_csv.unregister_dialect"
None*&
name
builtins.str"builtins.strz36z37z38z39z310z311z312z313«
writer_csv.writer"
_csv._writer"_csv._writer*k
csvfile^
%_typeshed.SupportsWrite[builtins.str]
builtins.str"builtins.str"_typeshed.SupportsWrite*®
dialectò
\TypeAlias[Union[builtins.str,_csv.Dialect,csv.Dialect,Type[_csv.Dialect],Type[csv.Dialect]]]¢
QUnion[builtins.str,_csv.Dialect,csv.Dialect,Type[_csv.Dialect],Type[csv.Dialect]]
builtins.str"builtins.str
_csv.Dialect"_csv.Dialect
csv.Dialect"csv.Dialect:
Type[_csv.Dialect]
_csv.Dialect"_csv.Dialect"type7
Type[csv.Dialect]
csv.Dialect"csv.Dialect"type"_csv._DialectLike *-
	delimiter
builtins.str"builtins.str *U
	quotecharD
Union[builtins.str,None]
builtins.str"builtins.str
None *V

escapecharD
Union[builtins.str,None]
builtins.str"builtins.str
None *1
doublequote
builtins.bool"builtins.bool *6
skipinitialspace
builtins.bool"builtins.bool *2
lineterminator
builtins.str"builtins.str *+
quoting
builtins.int"builtins.int *,
strict
builtins.bool"builtins.bool z36z37z38z39z310z311z312z313*£
__annotations__csv.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313*]
	QUOTE_ALL_csv.QUOTE_ALL
builtins.int"builtins.int*36*37*38*39*310*311*312*313*e
QUOTE_MINIMAL_csv.QUOTE_MINIMAL
builtins.int"builtins.int*36*37*38*39*310*311*312*313*_

QUOTE_NONE_csv.QUOTE_NONE
builtins.int"builtins.int*36*37*38*39*310*311*312*313*k
QUOTE_NONNUMERIC_csv.QUOTE_NONNUMERIC
builtins.int"builtins.int*36*37*38*39*310*311*312*313*a
__version___csv.__version__
builtins.str"builtins.str*36*37*38*39*310*311*312*313*Ü
__all__csv.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*36*37*38*39*310*311*312*313*K
QUOTE_NOTNULL_csv.QUOTE_NOTNULL
builtins.int"builtins.int*312*313*K
QUOTE_STRINGS_csv.QUOTE_STRINGS
builtins.int"builtins.int*312*313