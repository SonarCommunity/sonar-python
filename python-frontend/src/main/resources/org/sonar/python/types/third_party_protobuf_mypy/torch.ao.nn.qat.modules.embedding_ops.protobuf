
%torch.ao.nn.qat.modules.embedding_ops“

	Embedding/torch.ao.nn.qat.modules.embedding_ops.Embedding"!torch.nn.modules.sparse.Embedding*€
__init__8torch.ao.nn.qat.modules.embedding_ops.Embedding.__init__"
None*l
selfb
/torch.ao.nn.qat.modules.embedding_ops.Embedding"/torch.ao.nn.qat.modules.embedding_ops.Embedding*
num_embeddings
Any*
embedding_dim
Any*
padding_idx
Any *
max_norm
Any *
	norm_type
Any *!
scale_grad_by_freq
Any *
sparse
Any *
_weight
Any *
device
Any *
dtype
Any *
qconfig
Any *Ú
forward7torch.ao.nn.qat.modules.embedding_ops.Embedding.forward",
torch._tensor.Tensor"torch._tensor.Tensor*l
selfb
/torch.ao.nn.qat.modules.embedding_ops.Embedding"/torch.ao.nn.qat.modules.embedding_ops.Embedding*
input
Any*ç

from_float:torch.ao.nn.qat.modules.embedding_ops.Embedding.from_float*
cls*
mod* 
use_precomputed_fake_quant 0:classmethodp*N
to_float8torch.ao.nn.qat.modules.embedding_ops.Embedding.to_float*
selfrè
_FLOAT_MODULE=torch.ao.nn.qat.modules.embedding_ops.Embedding._FLOAT_MODULE?
CallableType[builtins.type]
builtins.type"builtins.typerK
qconfig7torch.ao.nn.qat.modules.embedding_ops.Embedding.qconfig
Anyr_
weight_fake_quantAtorch.ao.nn.qat.modules.embedding_ops.Embedding.weight_fake_quant
Any
EmbeddingBag2torch.ao.nn.qat.modules.embedding_ops.EmbeddingBag"$torch.nn.modules.sparse.EmbeddingBag*ù
__init__;torch.ao.nn.qat.modules.embedding_ops.EmbeddingBag.__init__"
None*r
selfh
2torch.ao.nn.qat.modules.embedding_ops.EmbeddingBag"2torch.ao.nn.qat.modules.embedding_ops.EmbeddingBag*
num_embeddings
Any*
embedding_dim
Any*
max_norm
Any *
	norm_type
Any *!
scale_grad_by_freq
Any *
mode
Any *
sparse
Any *
_weight
Any *"
include_last_offset
Any *
padding_idx
Any *
qconfig
Any *
device
Any *
dtype
Any *∂
forward:torch.ao.nn.qat.modules.embedding_ops.EmbeddingBag.forward",
torch._tensor.Tensor"torch._tensor.Tensor*r
selfh
2torch.ao.nn.qat.modules.embedding_ops.EmbeddingBag"2torch.ao.nn.qat.modules.embedding_ops.EmbeddingBag*
input
Any*
offsets
Any *!
per_sample_weights
Any *ê

from_float=torch.ao.nn.qat.modules.embedding_ops.EmbeddingBag.from_float*
cls*
mod* 
use_precomputed_fake_quant 0:classmethodp*Q
to_float;torch.ao.nn.qat.modules.embedding_ops.EmbeddingBag.to_float*
selfrí
_FLOAT_MODULE@torch.ao.nn.qat.modules.embedding_ops.EmbeddingBag._FLOAT_MODULE?
CallableType[builtins.type]
builtins.type"builtins.typerN
qconfig:torch.ao.nn.qat.modules.embedding_ops.EmbeddingBag.qconfig
Anyrb
weight_fake_quantDtorch.ao.nn.qat.modules.embedding_ops.EmbeddingBag.weight_fake_quant
Any*°
__annotations__5torch.ao.nn.qat.modules.embedding_ops.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
nntorch.nn *
Ftorch.nn.functional *Ñ
__all__-torch.ao.nn.qat.modules.embedding_ops.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list