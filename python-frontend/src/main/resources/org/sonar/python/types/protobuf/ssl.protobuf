
sslsslç
SSLErrorssl.SSLError"builtins.OSError*builtins.EnvironmentError*builtins.StandardError*builtins.Exception*builtins.BaseExceptionr27j
SSLErrorssl.SSLError"builtins.OSError*builtins.Exception*builtins.BaseExceptionr35r36r37r38r39Ø
SSLZeroReturnErrorssl.SSLZeroReturnError"ssl.SSLError*builtins.OSError*builtins.EnvironmentError*builtins.StandardError*builtins.Exception*builtins.BaseExceptionr27å
SSLZeroReturnErrorssl.SSLZeroReturnError"ssl.SSLError*builtins.OSError*builtins.Exception*builtins.BaseExceptionr35r36r37r38r39´
SSLWantReadErrorssl.SSLWantReadError"ssl.SSLError*builtins.OSError*builtins.EnvironmentError*builtins.StandardError*builtins.Exception*builtins.BaseExceptionr27à
SSLWantReadErrorssl.SSLWantReadError"ssl.SSLError*builtins.OSError*builtins.Exception*builtins.BaseExceptionr35r36r37r38r39≠
SSLWantWriteErrorssl.SSLWantWriteError"ssl.SSLError*builtins.OSError*builtins.EnvironmentError*builtins.StandardError*builtins.Exception*builtins.BaseExceptionr27ä
SSLWantWriteErrorssl.SSLWantWriteError"ssl.SSLError*builtins.OSError*builtins.Exception*builtins.BaseExceptionr35r36r37r38r39©
SSLSyscallErrorssl.SSLSyscallError"ssl.SSLError*builtins.OSError*builtins.EnvironmentError*builtins.StandardError*builtins.Exception*builtins.BaseExceptionr27Ü
SSLSyscallErrorssl.SSLSyscallError"ssl.SSLError*builtins.OSError*builtins.Exception*builtins.BaseExceptionr35r36r37r38r39°
SSLEOFErrorssl.SSLEOFError"ssl.SSLError*builtins.OSError*builtins.EnvironmentError*builtins.StandardError*builtins.Exception*builtins.BaseExceptionr27~
SSLEOFErrorssl.SSLEOFError"ssl.SSLError*builtins.OSError*builtins.Exception*builtins.BaseExceptionr35r36r37r38r39Ö
CertificateErrorssl.CertificateError"builtins.ValueError*builtins.StandardError*builtins.Exception*builtins.BaseExceptionr27q
CertificateErrorssl.CertificateError"builtins.ValueError*builtins.Exception*builtins.BaseExceptionr35r36¡
DefaultVerifyPathsssl.DefaultVerifyPaths"builtins.tuple*typing.Sequence*typing.Iterable*typing.Container*typing.Reversible2™
_replacessl.DefaultVerifyPaths._replace"
ssl.DefaultVerifyPaths._NT*)
_self
ssl.DefaultVerifyPaths._NT**
cafile
builtins.str"builtins.str **
capath
builtins.str"builtins.str *6
openssl_cafile_env
builtins.str"builtins.str *2
openssl_cafile
builtins.str"builtins.str *6
openssl_capath_env
builtins.str"builtins.str *2
openssl_capath
builtins.str"builtins.str z272¡
__new__ssl.DefaultVerifyPaths.__new__"
ssl.DefaultVerifyPaths._NT*N
_clsD
 Type[ssl.DefaultVerifyPaths._NT]
ssl.DefaultVerifyPaths._NT*(
cafile
builtins.str"builtins.str*(
capath
builtins.str"builtins.str*4
openssl_cafile_env
builtins.str"builtins.str*0
openssl_cafile
builtins.str"builtins.str*4
openssl_capath_env
builtins.str"builtins.str*0
openssl_capath
builtins.str"builtins.strz272±
_asdictssl.DefaultVerifyPaths._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*)
_self
ssl.DefaultVerifyPaths._NTz272í
_makessl.DefaultVerifyPaths._make"
ssl.DefaultVerifyPaths._NT*N
_clsD
 Type[ssl.DefaultVerifyPaths._NT]
ssl.DefaultVerifyPaths._NT*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpz27r27§
DefaultVerifyPathsssl.DefaultVerifyPaths"builtins.tuple*typing.Sequence*typing.Collection*typing.Reversible*typing.Iterable*typing.Container2∫
_replacessl.DefaultVerifyPaths._replace"
ssl.DefaultVerifyPaths._NT*)
_self
ssl.DefaultVerifyPaths._NT**
cafile
builtins.str"builtins.str **
capath
builtins.str"builtins.str *6
openssl_cafile_env
builtins.str"builtins.str *2
openssl_cafile
builtins.str"builtins.str *6
openssl_capath_env
builtins.str"builtins.str *2
openssl_capath
builtins.str"builtins.str z35z36z37z38z392—
__new__ssl.DefaultVerifyPaths.__new__"
ssl.DefaultVerifyPaths._NT*N
_clsD
 Type[ssl.DefaultVerifyPaths._NT]
ssl.DefaultVerifyPaths._NT*(
cafile
builtins.str"builtins.str*(
capath
builtins.str"builtins.str*4
openssl_cafile_env
builtins.str"builtins.str*0
openssl_cafile
builtins.str"builtins.str*4
openssl_capath_env
builtins.str"builtins.str*0
openssl_capath
builtins.str"builtins.strz35z36z37z38z392¡
_asdictssl.DefaultVerifyPaths._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*)
_self
ssl.DefaultVerifyPaths._NTz35z36z37z38z392¢
_makessl.DefaultVerifyPaths._make"
ssl.DefaultVerifyPaths._NT*N
_clsD
 Type[ssl.DefaultVerifyPaths._NT]
ssl.DefaultVerifyPaths._NT*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpz35z36z37z38z39r35r36r37r38r39⁄
_ASN1Objectssl._ASN1Object"builtins.tuple*typing.Sequence*typing.Iterable*typing.Container*typing.Reversible2î
_replacessl._ASN1Object._replace"
ssl._ASN1Object._NT*"
_self
ssl._ASN1Object._NT*'
nid
builtins.int"builtins.int *-
	shortname
builtins.str"builtins.str *,
longname
builtins.str"builtins.str *'
oid
builtins.str"builtins.str z272®
__new__ssl._ASN1Object.__new__"
ssl._ASN1Object._NT*@
_cls6
Type[ssl._ASN1Object._NT]
ssl._ASN1Object._NT*%
nid
builtins.int"builtins.int*+
	shortname
builtins.str"builtins.str**
longname
builtins.str"builtins.str*%
oid
builtins.str"builtins.strz272£
_asdictssl._ASN1Object._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*"
_self
ssl._ASN1Object._NTz272ˆ
_makessl._ASN1Object._make"
ssl._ASN1Object._NT*@
_cls6
Type[ssl._ASN1Object._NT]
ssl._ASN1Object._NT*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpz27r27Ω	
_ASN1Objectssl._ASN1Object"builtins.tuple*typing.Sequence*typing.Collection*typing.Reversible*typing.Iterable*typing.Container2§
_replacessl._ASN1Object._replace"
ssl._ASN1Object._NT*"
_self
ssl._ASN1Object._NT*'
nid
builtins.int"builtins.int *-
	shortname
builtins.str"builtins.str *,
longname
builtins.str"builtins.str *'
oid
builtins.str"builtins.str z35z36z37z38z392∏
__new__ssl._ASN1Object.__new__"
ssl._ASN1Object._NT*@
_cls6
Type[ssl._ASN1Object._NT]
ssl._ASN1Object._NT*%
nid
builtins.int"builtins.int*+
	shortname
builtins.str"builtins.str**
longname
builtins.str"builtins.str*%
oid
builtins.str"builtins.strz35z36z37z38z392≥
_asdictssl._ASN1Object._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*"
_self
ssl._ASN1Object._NTz35z36z37z38z392Ü
_makessl._ASN1Object._make"
ssl._ASN1Object._NT*@
_cls6
Type[ssl._ASN1Object._NT]
ssl._ASN1Object._NT*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpz35z36z37z38z39r35r36r37r38r39Ç
Purposessl.Purpose"ssl._ASN1Object*builtins.tuple*typing.Sequence*typing.Iterable*typing.Container*typing.Reversibler27≤
Purposessl.Purpose"ssl._ASN1Object"	enum.Enum*builtins.tuple*typing.Sequence*typing.Collection*typing.Reversible*typing.Iterable*typing.ContainerPr35r36r37r38r39µU
	SSLSocketssl.SSLSocket"socket.socket2˘

__init__ssl.SSLSocket.__init__"
None*(
self
ssl.SSLSocket"ssl.SSLSocket*S
sockG
Union[socket.socket,None]
socket.socket"socket.socket
None *S
keyfileD
Union[builtins.str,None]
builtins.str"builtins.str
None *T
certfileD
Union[builtins.str,None]
builtins.str"builtins.str
None *1
server_side
builtins.bool"builtins.bool *-
	cert_reqs
builtins.int"builtins.int */
ssl_version
builtins.int"builtins.int *T
ca_certsD
Union[builtins.str,None]
builtins.str"builtins.str
None *=
do_handshake_on_connect
builtins.bool"builtins.bool **
family
builtins.int"builtins.int *(
type
builtins.int"builtins.int *)
proto
builtins.int"builtins.int *R
filenoD
Union[builtins.int,None]
builtins.int"builtins.int
None *:
suppress_ragged_eofs
builtins.bool"builtins.bool *ù
npn_protocolsá
)Union[typing.Iterable[builtins.str],None]N
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable
None *S
ciphersD
Union[builtins.str,None]
builtins.str"builtins.str
None *[
server_hostnameD
Union[builtins.str,None]
builtins.str"builtins.str
None *Z
_contextJ
Union[ssl.SSLContext,None] 
ssl.SSLContext"ssl.SSLContext
None *6
_session&
Union[Any,None]
Any
None z272ì
connectssl.SSLSocket.connect"
None*(
self
ssl.SSLSocket"ssl.SSLSocket*∏
addr≠
FUnion[TypeAlias[Union[builtins.tuple[Any],builtins.str]],builtins.str]¬
2TypeAlias[Union[builtins.tuple[Any],builtins.str]]y
'Union[builtins.tuple[Any],builtins.str].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str"socket._Address
builtins.str"builtins.strz272≠

connect_exssl.SSLSocket.connect_ex"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*∏
addr≠
FUnion[TypeAlias[Union[builtins.tuple[Any],builtins.str]],builtins.str]¬
2TypeAlias[Union[builtins.tuple[Any],builtins.str]]y
'Union[builtins.tuple[Any],builtins.str].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str"socket._Address
builtins.str"builtins.strz272Ω
recvssl.SSLSocket.recv"
builtins.str"builtins.str*(
self
ssl.SSLSocket"ssl.SSLSocket**
buflen
builtins.int"builtins.int *)
flags
builtins.int"builtins.int z272⁄
	recv_intossl.SSLSocket.recv_into"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*Ë
buffer€
8TypeAlias[Union[builtins.bytearray,builtins.memoryview]]á
-Union[builtins.bytearray,builtins.memoryview](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview"socket._WriteBuffer*R
nbytesD
Union[builtins.int,None]
builtins.int"builtins.int
None *)
flags
builtins.int"builtins.int z272û
recvfromssl.SSLSocket.recvfrom"u
"Tuple[builtins.str,TypeAlias[Any]]
builtins.str"builtins.str/
TypeAlias[Any]
Any"socket._RetAddress*(
self
ssl.SSLSocket"ssl.SSLSocket**
buflen
builtins.int"builtins.int *)
flags
builtins.int"builtins.int z272ª
recvfrom_intossl.SSLSocket.recvfrom_into"u
"Tuple[builtins.int,TypeAlias[Any]]
builtins.int"builtins.int/
TypeAlias[Any]
Any"socket._RetAddress*(
self
ssl.SSLSocket"ssl.SSLSocket*Ë
buffer€
8TypeAlias[Union[builtins.bytearray,builtins.memoryview]]á
-Union[builtins.bytearray,builtins.memoryview](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview"socket._WriteBuffer*R
nbytesD
Union[builtins.int,None]
builtins.int"builtins.int
None *)
flags
builtins.int"builtins.int z272ı
readssl.SSLSocket.read"
builtins.str"builtins.str*(
self
ssl.SSLSocket"ssl.SSLSocket*'
len
builtins.int"builtins.int *d
bufferV
Union[builtins.bytearray,None](
builtins.bytearray"builtins.bytearray
None z272ê
writessl.SSLSocket.write"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*&
data
builtins.str"builtins.strz272è
do_handshakessl.SSLSocket.do_handshake"
None*(
self
ssl.SSLSocket"ssl.SSLSocket*+
block
builtins.bool"builtins.bool z272§
cipherssl.SSLSocket.cipher"’
9Union[Tuple[builtins.str,builtins.str,builtins.int],None]ã
-Tuple[builtins.str,builtins.str,builtins.int]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.int
None*(
self
ssl.SSLSocket"ssl.SSLSocketz272ú
compressionssl.SSLSocket.compression"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLSocket"ssl.SSLSocketz272Ÿ
get_channel_binding!ssl.SSLSocket.get_channel_binding"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLSocket"ssl.SSLSocket*+
cb_type
builtins.str"builtins.str z272≤
selected_alpn_protocol$ssl.SSLSocket.selected_alpn_protocol"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLSocket"ssl.SSLSocketz272∞
selected_npn_protocol#ssl.SSLSocket.selected_npn_protocol"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLSocket"ssl.SSLSocketz272∆
acceptssl.SSLSocket.accept"x
#Tuple[ssl.SSLSocket,TypeAlias[Any]]
ssl.SSLSocket"ssl.SSLSocket/
TypeAlias[Any]
Any"socket._RetAddress*(
self
ssl.SSLSocket"ssl.SSLSocketz272l
unwrapssl.SSLSocket.unwrap"
socket.socket"socket.socket*(
self
ssl.SSLSocket"ssl.SSLSocketz272î
versionssl.SSLSocket.version"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLSocket"ssl.SSLSocketz272l
pendingssl.SSLSocket.pending"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocketz27:ï
sendtossl.SSLSocket.sendtoı
sendtossl.SSLSocket.sendto"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*&
data
builtins.str"builtins.str*÷
flags_or_addr¬
2TypeAlias[Union[builtins.tuple[Any],builtins.str]]y
'Union[builtins.tuple[Any],builtins.str].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str"socket._Address0:overloadX¯
sendtossl.SSLSocket.sendto"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*&
data
builtins.str"builtins.str*¡
flags_or_addr≠
FUnion[builtins.int,TypeAlias[Union[builtins.tuple[Any],builtins.str]]]
builtins.int"builtins.int¬
2TypeAlias[Union[builtins.tuple[Any],builtins.str]]y
'Union[builtins.tuple[Any],builtins.str].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str"socket._Address*ï
addrà
,Union[builtins.tuple[Any],builtins.str,None].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str
None 0:overloadX"27:Ã
getpeercertssl.SSLSocket.getpeercertá
getpeercertssl.SSLSocket.getpeercert"’

ŒUnion[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],None]ı
¬builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]
builtins.str"builtins.strÄ
¶Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]
builtins.str"builtins.stræ
VTypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]”
Kbuiltins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]Û
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.tuple"ssl._PCTRTTTÛ
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.dict
None*(
self
ssl.SSLSocket"ssl.SSLSocket*M
binary_form:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadXÛ
getpeercertssl.SSLSocket.getpeercert"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLSocket"ssl.SSLSocket*K
binary_form:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadXù
getpeercertssl.SSLSocket.getpeercert"â
ÒTypeAlias[Union[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]],builtins.str,None]]˙
ÊUnion[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]],builtins.str,None]‰

ÕTypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]]ı
¬builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]
builtins.str"builtins.strÄ
¶Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]
builtins.str"builtins.stræ
VTypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]”
Kbuiltins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]Û
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.tuple"ssl._PCTRTTTÛ
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.dict"ssl._PeerCertRetDictType
builtins.str"builtins.str
None"ssl._PeerCertRetType*(
self
ssl.SSLSocket"ssl.SSLSocket*/
binary_form
builtins.bool"builtins.bool0:overloadX"27r27†p
	SSLSocketssl.SSLSocket"socket.socket*_socket.socket2˝

__init__ssl.SSLSocket.__init__"
None*(
self
ssl.SSLSocket"ssl.SSLSocket*S
sockG
Union[socket.socket,None]
socket.socket"socket.socket
None *S
keyfileD
Union[builtins.str,None]
builtins.str"builtins.str
None *T
certfileD
Union[builtins.str,None]
builtins.str"builtins.str
None *1
server_side
builtins.bool"builtins.bool *-
	cert_reqs
builtins.int"builtins.int */
ssl_version
builtins.int"builtins.int *T
ca_certsD
Union[builtins.str,None]
builtins.str"builtins.str
None *=
do_handshake_on_connect
builtins.bool"builtins.bool **
family
builtins.int"builtins.int *(
type
builtins.int"builtins.int *)
proto
builtins.int"builtins.int *R
filenoD
Union[builtins.int,None]
builtins.int"builtins.int
None *:
suppress_ragged_eofs
builtins.bool"builtins.bool *ù
npn_protocolsá
)Union[typing.Iterable[builtins.str],None]N
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable
None *S
ciphersD
Union[builtins.str,None]
builtins.str"builtins.str
None *[
server_hostnameD
Union[builtins.str,None]
builtins.str"builtins.str
None *Z
_contextJ
Union[ssl.SSLContext,None] 
ssl.SSLContext"ssl.SSLContext
None *6
_session&
Union[Any,None]
Any
None z35z362ä
__init__ssl.SSLSocket.__init__"
None*(
self
ssl.SSLSocket"ssl.SSLSocket*
args
Any*
kwargs
Anyz37z38z392™
connectssl.SSLSocket.connect"
None*(
self
ssl.SSLSocket"ssl.SSLSocket*ø
addr¥
HUnion[TypeAlias[Union[builtins.tuple[Any],builtins.str]],builtins.bytes]√
2TypeAlias[Union[builtins.tuple[Any],builtins.str]]y
'Union[builtins.tuple[Any],builtins.str].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str"_socket._Address 
builtins.bytes"builtins.bytesz35z36z37z38z392ƒ

connect_exssl.SSLSocket.connect_ex"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*ø
addr¥
HUnion[TypeAlias[Union[builtins.tuple[Any],builtins.str]],builtins.bytes]√
2TypeAlias[Union[builtins.tuple[Any],builtins.str]]y
'Union[builtins.tuple[Any],builtins.str].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str"_socket._Address 
builtins.bytes"builtins.bytesz35z36z37z38z392—
recvssl.SSLSocket.recv" 
builtins.bytes"builtins.bytes*(
self
ssl.SSLSocket"ssl.SSLSocket**
buflen
builtins.int"builtins.int *)
flags
builtins.int"builtins.int z35z36z37z38z392Ë
	recv_intossl.SSLSocket.recv_into"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*Ê
bufferŸ
STypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]‰
HUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap"_typeshed.WriteableBuffer*R
nbytesD
Union[builtins.int,None]
builtins.int"builtins.int
None *)
flags
builtins.int"builtins.int z35z36z37z38z392µ
recvfromssl.SSLSocket.recvfrom"|
$Tuple[builtins.bytes,TypeAlias[Any]] 
builtins.bytes"builtins.bytes0
TypeAlias[Any]
Any"_socket._RetAddress*(
self
ssl.SSLSocket"ssl.SSLSocket**
buflen
builtins.int"builtins.int *)
flags
builtins.int"builtins.int z35z36z37z38z392 
recvfrom_intossl.SSLSocket.recvfrom_into"v
"Tuple[builtins.int,TypeAlias[Any]]
builtins.int"builtins.int0
TypeAlias[Any]
Any"_socket._RetAddress*(
self
ssl.SSLSocket"ssl.SSLSocket*Ê
bufferŸ
STypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]‰
HUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap"_typeshed.WriteableBuffer*R
nbytesD
Union[builtins.int,None]
builtins.int"builtins.int
None *)
flags
builtins.int"builtins.int z35z36z37z38z392«
sendssl.SSLSocket.send"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*£
dataò
bTypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]ï
WUnion[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap] 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap"_typeshed.ReadableBuffer*)
flags
builtins.int"builtins.int z35z36z37z38z392π
sendallssl.SSLSocket.sendall"
None*(
self
ssl.SSLSocket"ssl.SSLSocket*£
dataò
bTypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]ï
WUnion[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap] 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap"_typeshed.ReadableBuffer*)
flags
builtins.int"builtins.int z35z36z37z38z392ë
shutdownssl.SSLSocket.shutdown"
None*(
self
ssl.SSLSocket"ssl.SSLSocket*%
how
builtins.int"builtins.intz35z36z37z38z392â
readssl.SSLSocket.read" 
builtins.bytes"builtins.bytes*(
self
ssl.SSLSocket"ssl.SSLSocket*'
len
builtins.int"builtins.int *d
bufferV
Union[builtins.bytearray,None](
builtins.bytearray"builtins.bytearray
None z35z36z37z38z392§
writessl.SSLSocket.write"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket**
data 
builtins.bytes"builtins.bytesz35z36z37z38z392ü
do_handshakessl.SSLSocket.do_handshake"
None*(
self
ssl.SSLSocket"ssl.SSLSocket*+
block
builtins.bool"builtins.bool z35z36z37z38z392¥
cipherssl.SSLSocket.cipher"’
9Union[Tuple[builtins.str,builtins.str,builtins.int],None]ã
-Tuple[builtins.str,builtins.str,builtins.int]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.int
None*(
self
ssl.SSLSocket"ssl.SSLSocketz35z36z37z38z392£
shared_ciphersssl.SSLSocket.shared_ciphers"¥
HUnion[builtins.list[Tuple[builtins.str,builtins.str,builtins.int]],None]€
<builtins.list[Tuple[builtins.str,builtins.str,builtins.int]]ã
-Tuple[builtins.str,builtins.str,builtins.int]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.int"builtins.list
None*(
self
ssl.SSLSocket"ssl.SSLSocketz35z36z37z38z392¨
compressionssl.SSLSocket.compression"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLSocket"ssl.SSLSocketz35z36z37z38z392Ô
get_channel_binding!ssl.SSLSocket.get_channel_binding"J
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None*(
self
ssl.SSLSocket"ssl.SSLSocket*+
cb_type
builtins.str"builtins.str z35z36z37z38z392¬
selected_alpn_protocol$ssl.SSLSocket.selected_alpn_protocol"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLSocket"ssl.SSLSocketz35z36z37z38z392¿
selected_npn_protocol#ssl.SSLSocket.selected_npn_protocol"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLSocket"ssl.SSLSocketz35z36z37z38z392◊
acceptssl.SSLSocket.accept"y
#Tuple[ssl.SSLSocket,TypeAlias[Any]]
ssl.SSLSocket"ssl.SSLSocket0
TypeAlias[Any]
Any"_socket._RetAddress*(
self
ssl.SSLSocket"ssl.SSLSocketz35z36z37z38z392|
unwrapssl.SSLSocket.unwrap"
socket.socket"socket.socket*(
self
ssl.SSLSocket"ssl.SSLSocketz35z36z37z38z392§
versionssl.SSLSocket.version"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLSocket"ssl.SSLSocketz35z36z37z38z392|
pendingssl.SSLSocket.pending"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocketz35z36z37z38z392Ü
verify_client_post_handshake*ssl.SSLSocket.verify_client_post_handshake"
None*(
self
ssl.SSLSocket"ssl.SSLSocketz38z39:£
sendtossl.SSLSocket.sendtoÙ
sendtossl.SSLSocket.sendto"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*£
dataò
bTypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]ï
WUnion[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap] 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap"_typeshed.ReadableBuffer*◊
flags_or_addr√
2TypeAlias[Union[builtins.tuple[Any],builtins.str]]y
'Union[builtins.tuple[Any],builtins.str].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str"_socket._Address0:overloadX˜
sendtossl.SSLSocket.sendto"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*£
dataò
bTypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]ï
WUnion[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap] 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap"_typeshed.ReadableBuffer*¬
flags_or_addrÆ
FUnion[builtins.int,TypeAlias[Union[builtins.tuple[Any],builtins.str]]]
builtins.int"builtins.int√
2TypeAlias[Union[builtins.tuple[Any],builtins.str]]y
'Union[builtins.tuple[Any],builtins.str].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str"_socket._Address*ï
addrà
,Union[builtins.tuple[Any],builtins.str,None].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str
None 0:overloadX"35"36"37"38"39:Í
getpeercertssl.SSLSocket.getpeercertá
getpeercertssl.SSLSocket.getpeercert"’

ŒUnion[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],None]ı
¬builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]
builtins.str"builtins.strÄ
¶Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]
builtins.str"builtins.stræ
VTypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]”
Kbuiltins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]Û
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.tuple"ssl._PCTRTTTÛ
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.dict
None*(
self
ssl.SSLSocket"ssl.SSLSocket*M
binary_form:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadX˘
getpeercertssl.SSLSocket.getpeercert"J
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None*(
self
ssl.SSLSocket"ssl.SSLSocket*K
binary_form:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadX•
getpeercertssl.SSLSocket.getpeercert"ë
ÛTypeAlias[Union[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]],builtins.bytes,None]]Ä
ËUnion[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]],builtins.bytes,None]‰

ÕTypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]]ı
¬builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]
builtins.str"builtins.strÄ
¶Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]
builtins.str"builtins.stræ
VTypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]”
Kbuiltins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]Û
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.tuple"ssl._PCTRTTTÛ
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.dict"ssl._PeerCertRetDictType 
builtins.bytes"builtins.bytes
None"ssl._PeerCertRetType*(
self
ssl.SSLSocket"ssl.SSLSocket*/
binary_form
builtins.bool"builtins.bool0:overloadX"35"36"37"38"39r35r36r37r38r39ºZ

SSLContextssl.SSLContext"builtins.object2‡
__new__ssl.SSLContext.__new__" 
ssl.SSLContext"ssl.SSLContext*C
cls:
Type[ssl.SSLContext] 
ssl.SSLContext"ssl.SSLContext**
protocol
builtins.int"builtins.int*
args
Any*
kwargs
Anyz272Ú
__new__ssl.SSLContext.__new__" 
ssl.SSLContext"ssl.SSLContext*C
cls:
Type[ssl.SSLContext] 
ssl.SSLContext"ssl.SSLContext*,
protocol
builtins.int"builtins.int *
args
Any*
kwargs
Anyz35z36z37z38z392ì
protocolssl.SSLContext.protocol"
builtins.int"builtins.int**
self 
ssl.SSLContext"ssl.SSLContext0:property`z27z35z36z37z38z392â
__init__ssl.SSLContext.__init__"
None**
self 
ssl.SSLContext"ssl.SSLContext**
protocol
builtins.int"builtins.intz272õ
__init__ssl.SSLContext.__init__"
None**
self 
ssl.SSLContext"ssl.SSLContext*,
protocol
builtins.int"builtins.int z35z36z37z38z392Ó
cert_store_statsssl.SSLContext.cert_store_stats"u
(builtins.dict[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"builtins.dict**
self 
ssl.SSLContext"ssl.SSLContextz27z35z36z37z38z392
load_cert_chainssl.SSLContext.load_cert_chain"
None**
self 
ssl.SSLContext"ssl.SSLContext*2
certfile$
builtins.unicode"builtins.unicode*_
keyfileP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None *Ì
password‹
EUnion[CallableType[builtins.function],builtins.str,builtins.str,None]K
CallableType[builtins.function]&
builtins.function"builtins.function
builtins.str"builtins.str
builtins.str"builtins.str
None z272•
load_cert_chainssl.SSLContext.load_cert_chain"
None**
self 
ssl.SSLContext"ssl.SSLContext*¯
certfileÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*∂
keyfile¶
2Union[builtins.str,os.PathLike[builtins.str],None]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
None *Û
password‚
GUnion[CallableType[builtins.function],builtins.str,builtins.bytes,None]K
CallableType[builtins.function]&
builtins.function"builtins.function
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
None z35z36z37z38z392Œ
load_default_certs!ssl.SSLContext.load_default_certs"
None**
self 
ssl.SSLContext"ssl.SSLContext*∆
purpose∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str z27z35z36z37z38z392√
load_verify_locations$ssl.SSLContext.load_verify_locations"
None**
self 
ssl.SSLContext"ssl.SSLContext*^
cafileP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None *^
capathP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None *â
cadata{
)Union[builtins.unicode,builtins.str,None]$
builtins.unicode"builtins.unicode
builtins.str"builtins.str
None z272˝
load_verify_locations$ssl.SSLContext.load_verify_locations"
None**
self 
ssl.SSLContext"ssl.SSLContext*µ
cafile¶
2Union[builtins.str,os.PathLike[builtins.str],None]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
None *µ
capath¶
2Union[builtins.str,os.PathLike[builtins.str],None]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
None *É
cadatau
'Union[builtins.str,builtins.bytes,None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
None z35z36z37z38z392π
get_ca_certsssl.SSLContext.get_ca_certs"®
ˇUnion[builtins.list[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]]],builtins.list[builtins.str]]’
‹builtins.list[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]]]‰

ÕTypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]]ı
¬builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]
builtins.str"builtins.strÄ
¶Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]
builtins.str"builtins.stræ
VTypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]”
Kbuiltins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]Û
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.tuple"ssl._PCTRTTTÛ
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.dict"ssl._PeerCertRetDictType"builtins.listJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list**
self 
ssl.SSLContext"ssl.SSLContext*1
binary_form
builtins.bool"builtins.bool z272—
get_ca_certsssl.SSLContext.get_ca_certs"∞
ÅUnion[builtins.list[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]]],builtins.list[builtins.bytes]]’
‹builtins.list[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]]]‰

ÕTypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]]ı
¬builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]
builtins.str"builtins.strÄ
¶Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]
builtins.str"builtins.stræ
VTypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]”
Kbuiltins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]Û
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.tuple"ssl._PCTRTTTÛ
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.dict"ssl._PeerCertRetDictType"builtins.listP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list**
self 
ssl.SSLContext"ssl.SSLContext*1
binary_form
builtins.bool"builtins.bool z35z36z37z38z392ë
set_default_verify_paths'ssl.SSLContext.set_default_verify_paths"
None**
self 
ssl.SSLContext"ssl.SSLContextz27z35z36z37z38z392•
set_ciphersssl.SSLContext.set_ciphers"
None**
self 
ssl.SSLContext"ssl.SSLContext*,
__cipherlist
builtins.str"builtins.strz27z35z36z37z38z392È
set_alpn_protocols!ssl.SSLContext.set_alpn_protocols"
None**
self 
ssl.SSLContext"ssl.SSLContext*b
alpn_protocolsN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterablez27z35z36z37z38z392Ê
set_npn_protocols ssl.SSLContext.set_npn_protocols"
None**
self 
ssl.SSLContext"ssl.SSLContext*a
npn_protocolsN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterablez27z35z36z37z38z392ô
set_servername_callback&ssl.SSLContext.set_servername_callback"
None**
self 
ssl.SSLContext"ssl.SSLContext*ì
__methodÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
Nonez27z35z362ß
set_servername_callback&ssl.SSLContext.set_servername_callback"
None**
self 
ssl.SSLContext"ssl.SSLContext*°
server_name_callbackÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
Nonez37z38z392•
load_dh_paramsssl.SSLContext.load_dh_params"
None**
self 
ssl.SSLContext"ssl.SSLContext*&
__path
builtins.str"builtins.strz27z35z36z37z38z392•
set_ecdh_curvessl.SSLContext.set_ecdh_curve"
None**
self 
ssl.SSLContext"ssl.SSLContext*&
__name
builtins.str"builtins.strz27z35z36z37z38z392Æ
wrap_socketssl.SSLContext.wrap_socket"
ssl.SSLSocket"ssl.SSLSocket**
self 
ssl.SSLContext"ssl.SSLContext*(
sock
socket.socket"socket.socket*1
server_side
builtins.bool"builtins.bool *=
do_handshake_on_connect
builtins.bool"builtins.bool *:
suppress_ragged_eofs
builtins.bool"builtins.bool *[
server_hostnameD
Union[builtins.str,None]
builtins.str"builtins.str
None z272ô
wrap_socketssl.SSLContext.wrap_socket"
ssl.SSLSocket"ssl.SSLSocket**
self 
ssl.SSLContext"ssl.SSLContext*(
sock
socket.socket"socket.socket*1
server_side
builtins.bool"builtins.bool *=
do_handshake_on_connect
builtins.bool"builtins.bool *:
suppress_ragged_eofs
builtins.bool"builtins.bool *[
server_hostnameD
Union[builtins.str,None]
builtins.str"builtins.str
None *Y
sessionJ
Union[ssl.SSLSession,None] 
ssl.SSLSession"ssl.SSLSession
None z35z36z37z38z392Ë
session_statsssl.SSLContext.session_stats"u
(builtins.dict[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"builtins.dict**
self 
ssl.SSLContext"ssl.SSLContextz27z35z36z37z38z392 
wrap_biossl.SSLContext.wrap_bio"
ssl.SSLObject"ssl.SSLObject**
self 
ssl.SSLContext"ssl.SSLContext*,
incoming
ssl.MemoryBIO"ssl.MemoryBIO*,
outgoing
ssl.MemoryBIO"ssl.MemoryBIO*1
server_side
builtins.bool"builtins.bool *[
server_hostnameD
Union[builtins.str,None]
builtins.str"builtins.str
None *Y
sessionJ
Union[ssl.SSLSession,None] 
ssl.SSLSession"ssl.SSLSession
None z35z36z37z38z39r27r35r36r37r38r39^
Optionsssl.Options"enum.IntFlag*builtins.int*	enum.Flag*	enum.EnumPr35r36r37r38r39Æ7
	SSLObjectssl.SSLObject"builtins.object2Ø
__init__ssl.SSLObject.__init__"
None*(
self
ssl.SSLObject"ssl.SSLObject*
sslobj
Any*Ç
owneru
'Union[ssl.SSLSocket,ssl.SSLObject,None]
ssl.SSLSocket"ssl.SSLSocket
ssl.SSLObject"ssl.SSLObject
None *5
session&
Union[Any,None]
Any
None z35z362ä
__init__ssl.SSLObject.__init__"
None*(
self
ssl.SSLObject"ssl.SSLObject*
args
Any*
kwargs
Anyz37z38z392â
readssl.SSLObject.read" 
builtins.bytes"builtins.bytes*(
self
ssl.SSLObject"ssl.SSLObject*'
len
builtins.int"builtins.int *d
bufferV
Union[builtins.bytearray,None](
builtins.bytearray"builtins.bytearray
None z35z36z37z38z392§
writessl.SSLObject.write"
builtins.int"builtins.int*(
self
ssl.SSLObject"ssl.SSLObject**
data 
builtins.bytes"builtins.bytesz35z36z37z38z392¬
selected_alpn_protocol$ssl.SSLObject.selected_alpn_protocol"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLObject"ssl.SSLObjectz35z36z37z38z392¿
selected_npn_protocol#ssl.SSLObject.selected_npn_protocol"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLObject"ssl.SSLObjectz35z36z37z38z392¥
cipherssl.SSLObject.cipher"’
9Union[Tuple[builtins.str,builtins.str,builtins.int],None]ã
-Tuple[builtins.str,builtins.str,builtins.int]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.int
None*(
self
ssl.SSLObject"ssl.SSLObjectz35z36z37z38z392£
shared_ciphersssl.SSLObject.shared_ciphers"¥
HUnion[builtins.list[Tuple[builtins.str,builtins.str,builtins.int]],None]€
<builtins.list[Tuple[builtins.str,builtins.str,builtins.int]]ã
-Tuple[builtins.str,builtins.str,builtins.int]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.int"builtins.list
None*(
self
ssl.SSLObject"ssl.SSLObjectz35z36z37z38z392¨
compressionssl.SSLObject.compression"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLObject"ssl.SSLObjectz35z36z37z38z392|
pendingssl.SSLObject.pending"
builtins.int"builtins.int*(
self
ssl.SSLObject"ssl.SSLObjectz35z36z37z38z392r
do_handshakessl.SSLObject.do_handshake"
None*(
self
ssl.SSLObject"ssl.SSLObjectz35z36z37z38z392f
unwrapssl.SSLObject.unwrap"
None*(
self
ssl.SSLObject"ssl.SSLObjectz35z36z37z38z392§
versionssl.SSLObject.version"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLObject"ssl.SSLObjectz35z36z37z38z392Ô
get_channel_binding!ssl.SSLObject.get_channel_binding"J
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None*(
self
ssl.SSLObject"ssl.SSLObject*+
cb_type
builtins.str"builtins.str z35z36z37z38z392Ü
verify_client_post_handshake*ssl.SSLObject.verify_client_post_handshake"
None*(
self
ssl.SSLObject"ssl.SSLObjectz38z39:Í
getpeercertssl.SSLObject.getpeercertá
getpeercertssl.SSLObject.getpeercert"’

ŒUnion[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],None]ı
¬builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]
builtins.str"builtins.strÄ
¶Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]
builtins.str"builtins.stræ
VTypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]”
Kbuiltins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]Û
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.tuple"ssl._PCTRTTTÛ
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.dict
None*(
self
ssl.SSLObject"ssl.SSLObject*M
binary_form:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadX˘
getpeercertssl.SSLObject.getpeercert"J
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None*(
self
ssl.SSLObject"ssl.SSLObject*K
binary_form:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadX•
getpeercertssl.SSLObject.getpeercert"ë
ÛTypeAlias[Union[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]],builtins.bytes,None]]Ä
ËUnion[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]],builtins.bytes,None]‰

ÕTypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]]ı
¬builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]
builtins.str"builtins.strÄ
¶Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]
builtins.str"builtins.stræ
VTypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]”
Kbuiltins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]Û
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.tuple"ssl._PCTRTTTÛ
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.dict"ssl._PeerCertRetDictType 
builtins.bytes"builtins.bytes
None"ssl._PeerCertRetType*(
self
ssl.SSLObject"ssl.SSLObject*/
binary_form
builtins.bool"builtins.bool0:overloadX"35"36"37"38"39r35r36r37r38r39˙
	MemoryBIOssl.MemoryBIO"builtins.object2§
readssl.MemoryBIO.read" 
builtins.bytes"builtins.bytes*(
self
ssl.MemoryBIO"ssl.MemoryBIO*(
__size
builtins.int"builtins.int z35z36z37z38z392£
writessl.MemoryBIO.write"
builtins.int"builtins.int*(
self
ssl.MemoryBIO"ssl.MemoryBIO*)
__buf 
builtins.bytes"builtins.bytesz35z36z37z38z392l
	write_eofssl.MemoryBIO.write_eof"
None*(
self
ssl.MemoryBIO"ssl.MemoryBIOz35z36z37z38z39r35r36r37r38r39A

SSLSessionssl.SSLSession"builtins.objectr35r36r37r38r39f
VerifyFlagsssl.VerifyFlags"enum.IntFlag*builtins.int*	enum.Flag*	enum.EnumPr35r36r37r38r39Y

VerifyModessl.VerifyMode"enum.IntEnum*builtins.int*	enum.EnumPr35r36r37r38r39•
SSLCertVerificationErrorssl.SSLCertVerificationError"ssl.SSLError"builtins.ValueError*builtins.OSError*builtins.Exception*builtins.BaseExceptionr37r38r39Q

TLSVersionssl.TLSVersion"enum.IntEnum*builtins.int*	enum.EnumPr37r38r39"‰
wrap_socketssl.wrap_socket"
ssl.SSLSocket"ssl.SSLSocket*(
sock
socket.socket"socket.socket*S
keyfileD
Union[builtins.str,None]
builtins.str"builtins.str
None *T
certfileD
Union[builtins.str,None]
builtins.str"builtins.str
None *1
server_side
builtins.bool"builtins.bool *-
	cert_reqs
builtins.int"builtins.int */
ssl_version
builtins.int"builtins.int *T
ca_certsD
Union[builtins.str,None]
builtins.str"builtins.str
None *=
do_handshake_on_connect
builtins.bool"builtins.bool *:
suppress_ragged_eofs
builtins.bool"builtins.bool *S
ciphersD
Union[builtins.str,None]
builtins.str"builtins.str
None z27z35z36z37z38z39"¶
create_default_contextssl.create_default_context" 
ssl.SSLContext"ssl.SSLContext*
purpose
Any *R
cafileD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
capathD
Union[builtins.str,None]
builtins.str"builtins.str
None *â
cadata{
)Union[builtins.unicode,builtins.str,None]$
builtins.unicode"builtins.unicode
builtins.str"builtins.str
None z27"∞
create_default_contextssl.create_default_context" 
ssl.SSLContext"ssl.SSLContext*
purpose
Any *R
cafileD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
capathD
Union[builtins.str,None]
builtins.str"builtins.str
None *É
cadatau
'Union[builtins.str,builtins.bytes,None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
None z35z36z37z38z39"î
_create_unverified_contextssl._create_unverified_context" 
ssl.SSLContext"ssl.SSLContext*,
protocol
builtins.int"builtins.int *U
	cert_reqsD
Union[builtins.int,None]
builtins.int"builtins.int
None *4
check_hostname
builtins.bool"builtins.bool *
purpose
Any *T
certfileD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
keyfileD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
cafileD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
capathD
Union[builtins.str,None]
builtins.str"builtins.str
None *â
cadata{
)Union[builtins.unicode,builtins.str,None]$
builtins.unicode"builtins.unicode
builtins.str"builtins.str
None z27"í
_create_unverified_contextssl._create_unverified_context" 
ssl.SSLContext"ssl.SSLContext*,
protocol
builtins.int"builtins.int *U
	cert_reqsD
Union[builtins.int,None]
builtins.int"builtins.int
None *4
check_hostname
builtins.bool"builtins.bool *
purpose
Any *T
certfileD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
keyfileD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
cafileD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
capathD
Union[builtins.str,None]
builtins.str"builtins.str
None *É
cadatau
'Union[builtins.str,builtins.bytes,None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
None z35z36"Ó
_create_unverified_contextssl._create_unverified_context" 
ssl.SSLContext"ssl.SSLContext*,
protocol
builtins.int"builtins.int *-
	cert_reqs
builtins.int"builtins.int *4
check_hostname
builtins.bool"builtins.bool *
purpose
Any *T
certfileD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
keyfileD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
cafileD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
capathD
Union[builtins.str,None]
builtins.str"builtins.str
None *É
cadatau
'Union[builtins.str,builtins.bytes,None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
None z37z38z39"V
RAND_statusssl.RAND_status"
builtins.bool"builtins.boolz27z35z36z37z38z39"b
RAND_egdssl.RAND_egd"
None*&
path
builtins.str"builtins.strz27z35z36z37z38z39"z
RAND_addssl.RAND_add"
None*#
__s
builtins.str"builtins.str*-
	__entropy 
builtins.float"builtins.floatz27"é
RAND_addssl.RAND_add"
None*'
__s 
builtins.bytes"builtins.bytes*-
	__entropy 
builtins.float"builtins.floatz35z36z37z38z39"ı
match_hostnamessl.match_hostname"
None*î
certâ
ÒTypeAlias[Union[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]],builtins.str,None]]˙
ÊUnion[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]],builtins.str,None]‰

ÕTypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]]ı
¬builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]
builtins.str"builtins.strÄ
¶Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]
builtins.str"builtins.stræ
VTypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]”
Kbuiltins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]Û
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.tuple"ssl._PCTRTTTÛ
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.dict"ssl._PeerCertRetDictType
builtins.str"builtins.str
None"ssl._PeerCertRetType**
hostname
builtins.str"builtins.strz27"ç
match_hostnamessl.match_hostname"
None*ú
certë
ÛTypeAlias[Union[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]],builtins.bytes,None]]Ä
ËUnion[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]],builtins.bytes,None]‰

ÕTypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]]ı
¬builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]
builtins.str"builtins.strÄ
¶Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]
builtins.str"builtins.stræ
VTypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]”
Kbuiltins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]Û
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.tuple"ssl._PCTRTTTÛ
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.dict"ssl._PeerCertRetDictType 
builtins.bytes"builtins.bytes
None"ssl._PeerCertRetType**
hostname
builtins.str"builtins.strz35z36z37z38z39"ì
cert_time_to_secondsssl.cert_time_to_seconds"
builtins.int"builtins.int*+
	cert_time
builtins.str"builtins.strz27z35z36z37z38z39"›
get_server_certificatessl.get_server_certificate"
builtins.str"builtins.str*j
addr`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*/
ssl_version
builtins.int"builtins.int *T
ca_certsD
Union[builtins.str,None]
builtins.str"builtins.str
None z27z35z36z37z38z39"Ñ
DER_cert_to_PEM_certssl.DER_cert_to_PEM_cert"
builtins.str"builtins.str*0
der_cert_bytes
builtins.str"builtins.strz27"ò
DER_cert_to_PEM_certssl.DER_cert_to_PEM_cert"
builtins.str"builtins.str*4
der_cert_bytes 
builtins.bytes"builtins.bytesz35z36z37z38z39"Ö
PEM_cert_to_DER_certssl.PEM_cert_to_DER_cert"
builtins.str"builtins.str*1
pem_cert_string
builtins.str"builtins.strz27"ô
PEM_cert_to_DER_certssl.PEM_cert_to_DER_cert" 
builtins.bytes"builtins.bytes*1
pem_cert_string
builtins.str"builtins.strz35z36z37z38z39"ﬂ
get_default_verify_pathsssl.get_default_verify_paths"å
TTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strz27z35z36z37z38z39"Ö
enum_certificatesssl.enum_certificates"¶
jTypeAlias[builtins.list[Tuple[builtins.str,builtins.str,Union[builtins.set[builtins.str],builtins.bool]]]]£
_builtins.list[Tuple[builtins.str,builtins.str,Union[builtins.set[builtins.str],builtins.bool]]]∞
PTuple[builtins.str,builtins.str,Union[builtins.set[builtins.str],builtins.bool]]
builtins.str"builtins.str
builtins.str"builtins.strù
/Union[builtins.set[builtins.str],builtins.bool]H
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.set
builtins.bool"builtins.bool"builtins.list"ssl._EnumRetType*,

store_name
builtins.str"builtins.strz27"ü
enum_certificatesssl.enum_certificates"∞
lTypeAlias[builtins.list[Tuple[builtins.bytes,builtins.str,Union[builtins.set[builtins.str],builtins.bool]]]]´
abuiltins.list[Tuple[builtins.bytes,builtins.str,Union[builtins.set[builtins.str],builtins.bool]]]∂
RTuple[builtins.bytes,builtins.str,Union[builtins.set[builtins.str],builtins.bool]] 
builtins.bytes"builtins.bytes
builtins.str"builtins.strù
/Union[builtins.set[builtins.str],builtins.bool]H
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.set
builtins.bool"builtins.bool"builtins.list"ssl._EnumRetType*,

store_name
builtins.str"builtins.strz35z36z37z38z39"ı
	enum_crlsssl.enum_crls"¶
jTypeAlias[builtins.list[Tuple[builtins.str,builtins.str,Union[builtins.set[builtins.str],builtins.bool]]]]£
_builtins.list[Tuple[builtins.str,builtins.str,Union[builtins.set[builtins.str],builtins.bool]]]∞
PTuple[builtins.str,builtins.str,Union[builtins.set[builtins.str],builtins.bool]]
builtins.str"builtins.str
builtins.str"builtins.strù
/Union[builtins.set[builtins.str],builtins.bool]H
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.set
builtins.bool"builtins.bool"builtins.list"ssl._EnumRetType*,

store_name
builtins.str"builtins.strz27"è
	enum_crlsssl.enum_crls"∞
lTypeAlias[builtins.list[Tuple[builtins.bytes,builtins.str,Union[builtins.set[builtins.str],builtins.bool]]]]´
abuiltins.list[Tuple[builtins.bytes,builtins.str,Union[builtins.set[builtins.str],builtins.bool]]]∂
RTuple[builtins.bytes,builtins.str,Union[builtins.set[builtins.str],builtins.bool]] 
builtins.bytes"builtins.bytes
builtins.str"builtins.strù
/Union[builtins.set[builtins.str],builtins.bool]H
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.set
builtins.bool"builtins.bool"builtins.list"ssl._EnumRetType*,

store_name
builtins.str"builtins.strz35z36z37z38z39"ë
get_protocol_namessl.get_protocol_name"
builtins.str"builtins.str*/
protocol_code
builtins.int"builtins.intz27z35z36z37z38z39"y

RAND_bytesssl.RAND_bytes" 
builtins.bytes"builtins.bytes*%
__num
builtins.int"builtins.intz35z36z37z38z39"–
RAND_pseudo_bytesssl.RAND_pseudo_bytes"i
#Tuple[builtins.bytes,builtins.bool] 
builtins.bytes"builtins.bytes
builtins.bool"builtins.bool*%
__num
builtins.int"builtins.intz35z36z37z38z39