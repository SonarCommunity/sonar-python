
contextvars±

ContextVarcontextvars.ContextVar"builtins.object*à
__init__contextvars.ContextVar.__init__"
None*^
selfT
&contextvars.ContextVar[contextvars._T]
contextvars._T"contextvars.ContextVar*&
name
builtins.str"builtins.str*!
default
contextvars._T *¯
namecontextvars.ContextVar.name"
builtins.str"builtins.str*^
selfT
&contextvars.ContextVar[contextvars._T]
contextvars._T"contextvars.ContextVar0:property`*ì
setcontextvars.ContextVar.set"J
!contextvars.Token[contextvars._T]
contextvars._T"contextvars.Token*^
selfT
&contextvars.ContextVar[contextvars._T]
contextvars._T"contextvars.ContextVar*
value
contextvars._T*æ
resetcontextvars.ContextVar.reset"
None*^
selfT
&contextvars.ContextVar[contextvars._T]
contextvars._T"contextvars.ContextVar*U
tokenJ
!contextvars.Token[contextvars._T]
contextvars._T"contextvars.Token2Š
getcontextvars.ContextVar.get£
getcontextvars.ContextVar.get"
contextvars._T*^
selfT
&contextvars.ContextVar[contextvars._T]
contextvars._T"contextvars.ContextVar0:overloadXÀ
getcontextvars.ContextVar.get"P
$Union[contextvars._D,contextvars._T]
contextvars._D
contextvars._T*^
selfT
&contextvars.ContextVar[contextvars._T]
contextvars._T"contextvars.ContextVar*]
defaultP
$Union[contextvars._D,contextvars._T]
contextvars._D
contextvars._T0:overloadXPè
Tokencontextvars.Token"builtins.object*Ö
varcontextvars.Token.var"T
&contextvars.ContextVar[contextvars._T]
contextvars._T"contextvars.ContextVar*T
selfJ
!contextvars.Token[contextvars._T]
contextvars._T"contextvars.Token0:property`*•
	old_valuecontextvars.Token.old_value"
Any*T
selfJ
!contextvars.Token[contextvars._T]
contextvars._T"contextvars.Token0:property`PrH
MISSINGcontextvars.Token.MISSING"
builtins.object"builtins.objectý
Contextcontextvars.Context"typing.Mapping*h
__init__contextvars.Context.__init__"
None*4
self*
contextvars.Context"contextvars.Context*ë
runcontextvars.Context.run"
contextvars._T*4
self*
contextvars.Context"contextvars.Context*Y
callableK
CallableType[builtins.function]&
builtins.function"builtins.function*
args
Any*
kwargs
Any*‚
copycontextvars.Context.copy"*
contextvars.Context"contextvars.Context*4
self*
contextvars.Context"contextvars.Context*²
__getitem__contextvars.Context.__getitem__"
Any*2
self*
contextvars.Context"contextvars.Context*E
key>
contextvars.ContextVar[Any]
Any"contextvars.ContextVar*Ý
__iter__contextvars.Context.__iter__"
,typing.Iterator[contextvars.ContextVar[Any]]>
contextvars.ContextVar[Any]
Any"contextvars.ContextVar"typing.Iterator*2
self*
contextvars.Context"contextvars.Context*x
__len__contextvars.Context.__len__"
builtins.int"builtins.int*2
self*
contextvars.Context"contextvars.Context2à
getcontextvars.Context.getÓ
getcontextvars.Context.get"&
Union[Any,None]
Any
None*4
self*
contextvars.Context"contextvars.Context*G
__key>
contextvars.ContextVar[Any]
Any"contextvars.ContextVar0:overloadXé
getcontextvars.Context.get"
Any*4
self*
contextvars.Context"contextvars.Context*G
__key>
contextvars.ContextVar[Any]
Any"contextvars.ContextVar*3
	__default&
Union[Any,None]
Any
None0:overloadXT
copy_contextcontextvars.copy_context"*
contextvars.Context"contextvars.Context