
torch._higher_order_ops.effects•
_EffectType+torch._higher_order_ops.effects._EffectType"	enum.EnumHr\
ORDERED3torch._higher_order_ops.effects._EffectType.ORDERED
builtins.str"builtins.strÍ
WithEffects+torch._higher_order_ops.effects.WithEffects"torch._ops.HigherOrderOperator*J
__init__4torch._higher_order_ops.effects.WithEffects.__init__*
self*¡
__call__4torch._higher_order_ops.effects.WithEffects.__call__".
builtins.tuple[Any]
Any"builtins.tuple*d
selfZ
+torch._higher_order_ops.effects.WithEffects"+torch._higher_order_ops.effects.WithEffects*
token
Any*6
op.
torch._ops.OpOverload"torch._ops.OpOverload*8
args.
builtins.tuple[Any]
Any"builtins.tuple*c
kwargsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict˘
_register_effectful_op6torch._higher_order_ops.effects._register_effectful_op"
Any*6
op.
torch._ops.OpOverload"torch._ops.OpOverload*f
effectZ
+torch._higher_order_ops.effects._EffectType"+torch._higher_order_ops.effects._EffectType}
has_aliasing,torch._higher_order_ops.effects.has_aliasing"
Any*6
op.
torch._ops.OpOverload"torch._ops.OpOverloadì
has_effects+torch._higher_order_ops.effects.has_effects"
builtins.bool"builtins.bool*
op
Any*
args
Any*
kwargs
Anyù
get_effect_key.torch._higher_order_ops.effects.get_effect_key"°
7Union[torch._higher_order_ops.effects._EffectType,None]Z
+torch._higher_order_ops.effects._EffectType"+torch._higher_order_ops.effects._EffectType
None*
op
Any*
args
Any*
kwargs
Any’
handle_effects.torch._higher_order_ops.effects.handle_effects"
Any*9
allow_token_discovery
builtins.bool"builtins.bool*˜
tokensÍ
Obuiltins.dict[torch._higher_order_ops.effects._EffectType,torch._tensor.Tensor]Z
+torch._higher_order_ops.effects._EffectType"+torch._higher_order_ops.effects._EffectType,
torch._tensor.Tensor"torch._tensor.Tensor"builtins.dict*6
op.
torch._ops.OpOverload"torch._ops.OpOverload*8
args.
builtins.tuple[Any]
Any"builtins.tuple*c
kwargsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*õ
__annotations__/torch._higher_order_ops.effects.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
pytreetorch.utils._pytree *¨
SIDE_EFFECTS,torch._higher_order_ops.effects.SIDE_EFFECTSÌ
Pbuiltins.dict[torch._ops.OpOverload,torch._higher_order_ops.effects._EffectType].
torch._ops.OpOverload"torch._ops.OpOverloadZ
+torch._higher_order_ops.effects._EffectType"+torch._higher_order_ops.effects._EffectType"builtins.dict*ò
with_effects,torch._higher_order_ops.effects.with_effectsZ
+torch._higher_order_ops.effects.WithEffects"+torch._higher_order_ops.effects.WithEffects