
4torch._functorch._aot_autograd.input_output_analysisœ
remove_dupe_metadataItorch._functorch._aot_autograd.input_output_analysis.remove_dupe_metadata"x
:torch._functorch._aot_autograd.schemas.ViewAndMutationMeta":torch._functorch._aot_autograd.schemas.ViewAndMutationMeta*
mx
:torch._functorch._aot_autograd.schemas.ViewAndMutationMeta":torch._functorch._aot_autograd.schemas.ViewAndMutationMeta*`
keep_arg_maskM
builtins.list[builtins.bool]
builtins.bool"builtins.bool"builtins.list*\
add_dupe_mapJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.listð
create_synthetic_base_metadataStorch._functorch._aot_autograd.input_output_analysis.create_synthetic_base_metadata"§
]Tuple[torch._functorch._aot_autograd.schemas.ViewAndMutationMeta,builtins.list[builtins.int]]x
:torch._functorch._aot_autograd.schemas.ViewAndMutationMeta":torch._functorch._aot_autograd.schemas.ViewAndMutationMetaJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*
mx
:torch._functorch._aot_autograd.schemas.ViewAndMutationMeta":torch._functorch._aot_autograd.schemas.ViewAndMutationMeta*Ñ
synthetic_base_info·
Kbuiltins.list[Union[builtins.int,Tuple[builtins.int,torch._tensor.Tensor]]]Ø
<Union[builtins.int,Tuple[builtins.int,torch._tensor.Tensor]]
builtins.int"builtins.intx
(Tuple[builtins.int,torch._tensor.Tensor]
builtins.int"builtins.int,
torch._tensor.Tensor"torch._tensor.Tensor"builtins.list*<

outer_args,
builtins.list[Any]
Any"builtins.list*<

inner_args,
builtins.list[Any]
Any"builtins.listj
_get_last_mem_addressJtorch._functorch._aot_autograd.input_output_analysis._get_last_mem_address*
x‹
"_tensors_definitely_do_not_overlapWtorch._functorch._aot_autograd.input_output_analysis._tensors_definitely_do_not_overlap*
x*
y˜
compute_overlapping_inputsOtorch._functorch._aot_autograd.input_output_analysis.compute_overlapping_inputs*

fwd_inputs*
aliased_input_indicese
_graph_input_namesGtorch._functorch._aot_autograd.input_output_analysis._graph_input_names*
gmg
_graph_output_namesHtorch._functorch._aot_autograd.input_output_analysis._graph_output_names*
gmá	
create_graph_signatureKtorch._functorch._aot_autograd.input_output_analysis.create_graph_signature"n
5torch._functorch._aot_autograd.schemas.GraphSignature"5torch._functorch._aot_autograd.schemas.GraphSignature*P
fx_gF
!torch.fx.graph_module.GraphModule"!torch.fx.graph_module.GraphModule*‰
fw_metadatax
:torch._functorch._aot_autograd.schemas.ViewAndMutationMeta":torch._functorch._aot_autograd.schemas.ViewAndMutationMeta*I
in_spec<
torch.utils._pytree.TreeSpec"torch.utils._pytree.TreeSpec*J
out_spec<
torch.utils._pytree.TreeSpec"torch.utils._pytree.TreeSpec*v
user_args_flatb
#builtins.list[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"builtins.list*
params_and_buffers_flatb
#builtins.list[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"builtins.list*[
param_namesJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*\
buffer_namesJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*/
trace_joint
builtins.bool"builtins.bool*Z
num_user_fw_outsD
Union[builtins.int,None]
builtins.int"builtins.int
None*T

loss_indexD
Union[builtins.int,None]
builtins.int"builtins.int
None*°
__annotations__Dtorch._functorch._aot_autograd.input_output_analysis.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
pytreetorch.utils._pytree *Œ
zip8torch._functorch._aot_autograd.input_output_analysis.zipK
CallableType[builtins.function]&
builtins.function"builtins.function