
requests.cookies‹

MockRequestrequests.cookies.MockRequest"builtins.object*™
__init__%requests.cookies.MockRequest.__init__"
None*F
self<
requests.cookies.MockRequest"requests.cookies.MockRequest*
request
Any*;
get_type%requests.cookies.MockRequest.get_type*
self*;
get_host%requests.cookies.MockRequest.get_host*
self*Q
get_origin_req_host0requests.cookies.MockRequest.get_origin_req_host*
self*C
get_full_url)requests.cookies.MockRequest.get_full_url*
self*I
is_unverifiable,requests.cookies.MockRequest.is_unverifiable*
self*I

has_header'requests.cookies.MockRequest.has_header*
self*
name*X

get_header'requests.cookies.MockRequest.get_header*
self*
name*
default *Q

add_header'requests.cookies.MockRequest.add_header*
self*
key*
val*n
add_unredirected_header4requests.cookies.MockRequest.add_unredirected_header*
self*
name*	
value*I
get_new_headers,requests.cookies.MockRequest.get_new_headers*
self*Q
unverifiable)requests.cookies.MockRequest.unverifiable*
self0:property`*W
origin_req_host,requests.cookies.MockRequest.origin_req_host*
self0:property`*A
host!requests.cookies.MockRequest.host*
self0:property`r2
type!requests.cookies.MockRequest.type
Anyß
MockResponserequests.cookies.MockResponse"builtins.object*œ
__init__&requests.cookies.MockResponse.__init__"
None*H
self>
requests.cookies.MockResponse"requests.cookies.MockResponse*
headers
Any*4
info"requests.cookies.MockResponse.info*
self*J

getheaders(requests.cookies.MockResponse.getheaders*
self*
nameR
CookieConflictError$requests.cookies.CookieConflictError"builtins.RuntimeErrorê
RequestsCookieJar"requests.cookies.RequestsCookieJar"http.cookiejar.CookieJar"typing.MutableMapping*j
get&requests.cookies.RequestsCookieJar.get*
self*
name*
default *
domain *

path *X
set&requests.cookies.RequestsCookieJar.set*
self*
name*	
value*

kwargs*A
iterkeys+requests.cookies.RequestsCookieJar.iterkeys*
self*9
keys'requests.cookies.RequestsCookieJar.keys*
self*E

itervalues-requests.cookies.RequestsCookieJar.itervalues*
self*=
values)requests.cookies.RequestsCookieJar.values*
self*C
	iteritems,requests.cookies.RequestsCookieJar.iteritems*
self*;
items(requests.cookies.RequestsCookieJar.items*
self*I
list_domains/requests.cookies.RequestsCookieJar.list_domains*
self*E

list_paths-requests.cookies.RequestsCookieJar.list_paths*
self*Q
multiple_domains3requests.cookies.RequestsCookieJar.multiple_domains*
self*[
get_dict+requests.cookies.RequestsCookieJar.get_dict*
self*
domain *

path *Q
__getitem__.requests.cookies.RequestsCookieJar.__getitem__*
self*
name*¼
__setitem__.requests.cookies.RequestsCookieJar.__setitem__"
None*P
selfH
"requests.cookies.RequestsCookieJar""requests.cookies.RequestsCookieJar*
name
Any*
value
Any*ª
__delitem__.requests.cookies.RequestsCookieJar.__delitem__"
None*P
selfH
"requests.cookies.RequestsCookieJar""requests.cookies.RequestsCookieJar*
name
Any*g

set_cookie-requests.cookies.RequestsCookieJar.set_cookie*
self*

cookie*
args*

kwargs*H
update)requests.cookies.RequestsCookieJar.update*
self*	
other*9
copy'requests.cookies.RequestsCookieJar.copy*
self*E

get_policy-requests.cookies.RequestsCookieJar.get_policy*
selfe
extract_cookies_to_jar'requests.cookies.extract_cookies_to_jar*
jar*
request*
responseM
get_cookie_header"requests.cookies.get_cookie_header*
jar*
requestr
remove_cookie_by_name&requests.cookies.remove_cookie_by_name*
	cookiejar*
name*
domain *

path P
create_cookierequests.cookies.create_cookie*
name*	
value*

kwargsA
morsel_to_cookie!requests.cookies.morsel_to_cookie*

morseln
cookiejar_from_dict$requests.cookies.cookiejar_from_dict*
cookie_dict*
	cookiejar *
	overwrite K
merge_cookiesrequests.cookies.merge_cookies*
	cookiejar*
cookies