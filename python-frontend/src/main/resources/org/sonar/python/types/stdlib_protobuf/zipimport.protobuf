
	zipimportd
ZipImportErrorzipimport.ZipImportError"builtins.ImportErrorj36j37j38j39j310j311j312j313Ž
zipimporterzipimport.zipimporter"builtins.object*Â
__init__zipimport.zipimporter.__init__"
None*8
self.
zipimport.zipimporter"zipimport.zipimporter*Á
path¶
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]²
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz36z37z38z39*ð
find_loader!zipimport.zipimporter.find_loader"õ
DTuple[Union[zipimport.zipimporter,None],builtins.list[builtins.str]]_
!Union[zipimport.zipimporter,None].
zipimport.zipimporter"zipimport.zipimporter
NoneJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*8
self.
zipimport.zipimporter"zipimport.zipimporter**
fullname
builtins.str"builtins.str*P
pathD
Union[builtins.str,None]
builtins.str"builtins.str
None z36z37z38z39*Ù
find_module!zipimport.zipimporter.find_module"_
!Union[zipimport.zipimporter,None].
zipimport.zipimporter"zipimport.zipimporter
None*8
self.
zipimport.zipimporter"zipimport.zipimporter**
fullname
builtins.str"builtins.str*P
pathD
Union[builtins.str,None]
builtins.str"builtins.str
None z36z37z38z39*Â
get_codezipimport.zipimporter.get_code" 
types.CodeType"types.CodeType*8
self.
zipimport.zipimporter"zipimport.zipimporter**
fullname
builtins.str"builtins.strz36z37z38z39*Â
get_datazipimport.zipimporter.get_data" 
builtins.bytes"builtins.bytes*8
self.
zipimport.zipimporter"zipimport.zipimporter**
pathname
builtins.str"builtins.strz36z37z38z39*Æ
get_filename"zipimport.zipimporter.get_filename"
builtins.str"builtins.str*8
self.
zipimport.zipimporter"zipimport.zipimporter**
fullname
builtins.str"builtins.strz36z37z38z39*¬
get_resource_reader)zipimport.zipimporter.get_resource_reader"t
(Union[importlib.abc.ResourceReader,None]<
importlib.abc.ResourceReader"importlib.abc.ResourceReader
None*8
self.
zipimport.zipimporter"zipimport.zipimporter**
fullname
builtins.str"builtins.strz36z37z38z39*ê

get_source zipimport.zipimporter.get_source"D
Union[builtins.str,None]
builtins.str"builtins.str
None*8
self.
zipimport.zipimporter"zipimport.zipimporter**
fullname
builtins.str"builtins.strz36z37z38z39*Ä

is_package zipimport.zipimporter.is_package"
builtins.bool"builtins.bool*8
self.
zipimport.zipimporter"zipimport.zipimporter**
fullname
builtins.str"builtins.strz36z37z38z39*Î
load_module!zipimport.zipimporter.load_module"$
types.ModuleType"types.ModuleType*8
self.
zipimport.zipimporter"zipimport.zipimporter**
fullname
builtins.str"builtins.str0z36z37z38z39j36j37j38j39rV
archivezipimport.zipimporter.archive
builtins.str"builtins.str*36*37*38*39rT
prefixzipimport.zipimporter.prefix
builtins.str"builtins.str*36*37*38*39Š"
zipimporterzipimport.zipimporter"(_frozen_importlib_external._LoaderBasics*·
__init__zipimport.zipimporter.__init__"
None*8
self.
zipimport.zipimporter"zipimport.zipimporter*Á
path¶
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]²
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz310*¥
__init__zipimport.zipimporter.__init__"
None*8
self.
zipimport.zipimporter"zipimport.zipimporter*&
path
builtins.str"builtins.strz311z312z313*ê
find_loader!zipimport.zipimporter.find_loader"õ
DTuple[Union[zipimport.zipimporter,None],builtins.list[builtins.str]]_
!Union[zipimport.zipimporter,None].
zipimport.zipimporter"zipimport.zipimporter
NoneJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*8
self.
zipimport.zipimporter"zipimport.zipimporter**
fullname
builtins.str"builtins.str*P
pathD
Union[builtins.str,None]
builtins.str"builtins.str
None z310z311*Ó
find_module!zipimport.zipimporter.find_module"_
!Union[zipimport.zipimporter,None].
zipimport.zipimporter"zipimport.zipimporter
None*8
self.
zipimport.zipimporter"zipimport.zipimporter**
fullname
builtins.str"builtins.str*P
pathD
Union[builtins.str,None]
builtins.str"builtins.str
None z310z311*Æ
get_codezipimport.zipimporter.get_code" 
types.CodeType"types.CodeType*8
self.
zipimport.zipimporter"zipimport.zipimporter**
fullname
builtins.str"builtins.strz310z311z312z313*Æ
get_datazipimport.zipimporter.get_data" 
builtins.bytes"builtins.bytes*8
self.
zipimport.zipimporter"zipimport.zipimporter**
pathname
builtins.str"builtins.strz310z311z312z313*Ê
get_filename"zipimport.zipimporter.get_filename"
builtins.str"builtins.str*8
self.
zipimport.zipimporter"zipimport.zipimporter**
fullname
builtins.str"builtins.strz310z311z312z313*°
get_resource_reader)zipimport.zipimporter.get_resource_reader"t
(Union[importlib.abc.ResourceReader,None]<
importlib.abc.ResourceReader"importlib.abc.ResourceReader
None*8
self.
zipimport.zipimporter"zipimport.zipimporter**
fullname
builtins.str"builtins.strz310z311z312z313*î

get_source zipimport.zipimporter.get_source"D
Union[builtins.str,None]
builtins.str"builtins.str
None*8
self.
zipimport.zipimporter"zipimport.zipimporter**
fullname
builtins.str"builtins.strz310z311z312z313*È

is_package zipimport.zipimporter.is_package"
builtins.bool"builtins.bool*8
self.
zipimport.zipimporter"zipimport.zipimporter**
fullname
builtins.str"builtins.strz310z311z312z313*Ò
load_module!zipimport.zipimporter.load_module"$
types.ModuleType"types.ModuleType*8
self.
zipimport.zipimporter"zipimport.zipimporter**
fullname
builtins.str"builtins.str0z310z311z312z313*º
exec_module!zipimport.zipimporter.exec_module"
None*8
self.
zipimport.zipimporter"zipimport.zipimporter*0
module$
types.ModuleType"types.ModuleTypez310z311z312z313*Ô
create_module#zipimport.zipimporter.create_module"
None*8
self.
zipimport.zipimporter"zipimport.zipimporter*F
spec<
_frozen_importlib.ModuleSpec"_frozen_importlib.ModuleSpecz310z311z312z313*ü
	find_speczipimport.zipimporter.find_spec"t
(Union[_frozen_importlib.ModuleSpec,None]<
_frozen_importlib.ModuleSpec"_frozen_importlib.ModuleSpec
None*8
self.
zipimport.zipimporter"zipimport.zipimporter**
fullname
builtins.str"builtins.str*^
targetP
Union[types.ModuleType,None]$
types.ModuleType"types.ModuleType
None z310z311z312z313*”
invalidate_caches'zipimport.zipimporter.invalidate_caches"
None*8
self.
zipimport.zipimporter"zipimport.zipimporterz310z311z312z313j310j311j312j313rZ
archivezipimport.zipimporter.archive
builtins.str"builtins.str*310*311*312*313rX
prefixzipimport.zipimporter.prefix
builtins.str"builtins.str*310*311*312*313*©
__annotations__zipimport.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313*Œ
__all__zipimport.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*36*37*38*39*310*311*312*313