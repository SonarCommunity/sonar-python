
pygit2.filter¬

Filterpygit2.filter.Filter"builtins.object*’
nattrspygit2.filter.Filter.nattrs"
builtins.int"builtins.int*[
clsR
Type[pygit2.filter.Filter],
pygit2.filter.Filter"pygit2.filter.Filter"type0:classmethodpz36z37z38z39z310z311z312z313*‡
checkpygit2.filter.Filter.check"
None*6
self,
pygit2.filter.Filter"pygit2.filter.Filter*C
src:
pygit2._pygit2.FilterSource"pygit2._pygit2.FilterSource*è
attr_values~
'builtins.list[Union[builtins.str,None]]D
Union[builtins.str,None]
builtins.str"builtins.str
None"builtins.listz36z37z38z39z310z311z312z313*◊
writepygit2.filter.Filter.write"
None*6
self,
pygit2.filter.Filter"pygit2.filter.Filter**
data 
builtins.bytes"builtins.bytes*C
src:
pygit2._pygit2.FilterSource"pygit2._pygit2.FilterSource*[

write_nextK
CallableType[builtins.function]&
builtins.function"builtins.functionz36z37z38z39z310z311z312z313*Ê
closepygit2.filter.Filter.close"
None*6
self,
pygit2.filter.Filter"pygit2.filter.Filter*[

write_nextK
CallableType[builtins.function]&
builtins.function"builtins.functionz36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313ro

attributespygit2.filter.Filter.attributes
builtins.str"builtins.str*36*37*38*39*310*311*312*313*≠
__annotations__pygit2.filter.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313