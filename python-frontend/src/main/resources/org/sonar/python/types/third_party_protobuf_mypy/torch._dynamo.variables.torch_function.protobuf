
&torch._dynamo.variables.torch_functionì
TensorWithTFOverrideVariableCtorch._dynamo.variables.torch_function.TensorWithTFOverrideVariable"-torch._dynamo.variables.tensor.TensorVariable*x
__init__Ltorch._dynamo.variables.torch_function.TensorWithTFOverrideVariable.__init__*
self*
args*

kwargs*¿
from_tensor_varStorch._dynamo.variables.torch_function.TensorWithTFOverrideVariable.from_tensor_var*
cls*
tx*

tensor_var*

class_type*
torch_function_fn0:classmethodp*v
install_globalRtorch._dynamo.variables.torch_function.TensorWithTFOverrideVariable.install_global*
self*
tx*h
python_typeOtorch._dynamo.variables.torch_function.TensorWithTFOverrideVariable.python_type*
self*v
class_type_varRtorch._dynamo.variables.torch_function.TensorWithTFOverrideVariable.class_type_var*
self*
tx*Œ
global_mangled_class_name]torch._dynamo.variables.torch_function.TensorWithTFOverrideVariable.global_mangled_class_name*
self*
tx*z
var_getattrOtorch._dynamo.variables.torch_function.TensorWithTFOverrideVariable.var_getattr*
self*
tx*
name*©
call_torch_functionWtorch._dynamo.variables.torch_function.TensorWithTFOverrideVariable.call_torch_function*
self*
tx*
fn*	
types*
args*

kwargs*•
call_methodOtorch._dynamo.variables.torch_function.TensorWithTFOverrideVariable.call_method"\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker*•
selfŠ
Ctorch._dynamo.variables.torch_function.TensorWithTFOverrideVariable"Ctorch._dynamo.variables.torch_function.TensorWithTFOverrideVariable*
tx
Any*
name
Any*µ
argsª
;builtins.list[torch._dynamo.variables.base.VariableTracker]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.list*â
kwargsÕ
Hbuiltins.dict[builtins.str,torch._dynamo.variables.base.VariableTracker]
builtins.str"builtins.str\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.dictrs
torch_function_fnUtorch._dynamo.variables.torch_function.TensorWithTFOverrideVariable.torch_function_fn
Any[
_get_all_args4torch._dynamo.variables.torch_function._get_all_args*
args*

kwargsL
_flatten_vts3torch._dynamo.variables.torch_function._flatten_vts*
vtsX
_get_subclass_type9torch._dynamo.variables.torch_function._get_subclass_type*
varh
_get_subclass_type_var=torch._dynamo.variables.torch_function._get_subclass_type_var*
tx*
varj
_is_attr_overidden9torch._dynamo.variables.torch_function._is_attr_overidden*
tx*
var*
name³
call_torch_function:torch._dynamo.variables.torch_function.call_torch_function*
tx*
torch_function_type*
torch_function_var*
fn*	
types*
args*

kwargsx
build_torch_function_fn>torch._dynamo.variables.torch_function.build_torch_function_fn*
tx*	
value*

source
can_dispatch_torch_functionBtorch._dynamo.variables.torch_function.can_dispatch_torch_function*
tx*
args*

kwargs
dispatch_torch_function>torch._dynamo.variables.torch_function.dispatch_torch_function*
tx*
fn*
args*

kwargs*¢
__annotations__6torch._dynamo.variables.torch_function.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
pytreetorch.utils._pytree *q
banned_attrs3torch._dynamo.variables.torch_function.banned_attrs,
builtins.list[Any]
Any"builtins.list