
astastëí
NodeVisitorast.NodeVisitor"builtins.object2ç
visitast.NodeVisitor.visit"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.AST"_ast.ASTz27z35z36z37z38z392ù
generic_visitast.NodeVisitor.generic_visit"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.AST"_ast.ASTz27z35z36z37z38z392ù
visit_Moduleast.NodeVisitor.visit_Module"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*$
node
_ast.Module"_ast.Modulez35z36z37z38z392±
visit_Interactive!ast.NodeVisitor.visit_Interactive"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*.
node$
_ast.Interactive"_ast.Interactivez35z36z37z38z392≠
visit_Expression ast.NodeVisitor.visit_Expression"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*,
node"
_ast.Expression"_ast.Expressionz35z36z37z38z392±
visit_FunctionDef!ast.NodeVisitor.visit_FunctionDef"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*.
node$
_ast.FunctionDef"_ast.FunctionDefz35z36z37z38z392≈
visit_AsyncFunctionDef&ast.NodeVisitor.visit_AsyncFunctionDef"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*8
node.
_ast.AsyncFunctionDef"_ast.AsyncFunctionDefz35z36z37z38z392•
visit_ClassDefast.NodeVisitor.visit_ClassDef"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*(
node
_ast.ClassDef"_ast.ClassDefz35z36z37z38z392ù
visit_Returnast.NodeVisitor.visit_Return"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*$
node
_ast.Return"_ast.Returnz35z36z37z38z392ù
visit_Deleteast.NodeVisitor.visit_Delete"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*$
node
_ast.Delete"_ast.Deletez35z36z37z38z392ù
visit_Assignast.NodeVisitor.visit_Assign"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*$
node
_ast.Assign"_ast.Assignz35z36z37z38z392©
visit_AugAssignast.NodeVisitor.visit_AugAssign"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor**
node 
_ast.AugAssign"_ast.AugAssignz35z36z37z38z392©
visit_AnnAssignast.NodeVisitor.visit_AnnAssign"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor**
node 
_ast.AnnAssign"_ast.AnnAssignz35z36z37z38z392ë
	visit_Forast.NodeVisitor.visit_For"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.For"_ast.Forz35z36z37z38z392•
visit_AsyncForast.NodeVisitor.visit_AsyncFor"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*(
node
_ast.AsyncFor"_ast.AsyncForz35z36z37z38z392ô
visit_Whileast.NodeVisitor.visit_While"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.While"
_ast.Whilez35z36z37z38z392ç
visit_Ifast.NodeVisitor.visit_If"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.If"_ast.Ifz35z36z37z38z392ï

visit_Withast.NodeVisitor.visit_With"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor* 
node
	_ast.With"	_ast.Withz35z36z37z38z392©
visit_AsyncWithast.NodeVisitor.visit_AsyncWith"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor**
node 
_ast.AsyncWith"_ast.AsyncWithz35z36z37z38z392ô
visit_Raiseast.NodeVisitor.visit_Raise"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.Raise"
_ast.Raisez35z36z37z38z392ë
	visit_Tryast.NodeVisitor.visit_Try"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Try"_ast.Tryz35z36z37z38z392ù
visit_Assertast.NodeVisitor.visit_Assert"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*$
node
_ast.Assert"_ast.Assertz35z36z37z38z392ù
visit_Importast.NodeVisitor.visit_Import"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*$
node
_ast.Import"_ast.Importz35z36z37z38z392≠
visit_ImportFrom ast.NodeVisitor.visit_ImportFrom"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*,
node"
_ast.ImportFrom"_ast.ImportFromz35z36z37z38z392ù
visit_Globalast.NodeVisitor.visit_Global"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*$
node
_ast.Global"_ast.Globalz35z36z37z38z392•
visit_Nonlocalast.NodeVisitor.visit_Nonlocal"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*(
node
_ast.Nonlocal"_ast.Nonlocalz35z36z37z38z392ï

visit_Exprast.NodeVisitor.visit_Expr"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor* 
node
	_ast.Expr"	_ast.Exprz35z36z37z38z392ï

visit_Passast.NodeVisitor.visit_Pass"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor* 
node
	_ast.Pass"	_ast.Passz35z36z37z38z392ô
visit_Breakast.NodeVisitor.visit_Break"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.Break"
_ast.Breakz35z36z37z38z392•
visit_Continueast.NodeVisitor.visit_Continue"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*(
node
_ast.Continue"_ast.Continuez35z36z37z38z392ô
visit_Sliceast.NodeVisitor.visit_Slice"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.Slice"
_ast.Slicez35z36z37z38z392ù
visit_BoolOpast.NodeVisitor.visit_BoolOp"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*$
node
_ast.BoolOp"_ast.BoolOpz35z36z37z38z392ô
visit_BinOpast.NodeVisitor.visit_BinOp"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.BinOp"
_ast.BinOpz35z36z37z38z392°
visit_UnaryOpast.NodeVisitor.visit_UnaryOp"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*&
node
_ast.UnaryOp"_ast.UnaryOpz35z36z37z38z392ù
visit_Lambdaast.NodeVisitor.visit_Lambda"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*$
node
_ast.Lambda"_ast.Lambdaz35z36z37z38z392ô
visit_IfExpast.NodeVisitor.visit_IfExp"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.IfExp"
_ast.IfExpz35z36z37z38z392ï

visit_Dictast.NodeVisitor.visit_Dict"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor* 
node
	_ast.Dict"	_ast.Dictz35z36z37z38z392ë
	visit_Setast.NodeVisitor.visit_Set"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Set"_ast.Setz35z36z37z38z392•
visit_ListCompast.NodeVisitor.visit_ListComp"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*(
node
_ast.ListComp"_ast.ListCompz35z36z37z38z392°
visit_SetCompast.NodeVisitor.visit_SetComp"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*&
node
_ast.SetComp"_ast.SetCompz35z36z37z38z392•
visit_DictCompast.NodeVisitor.visit_DictComp"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*(
node
_ast.DictComp"_ast.DictCompz35z36z37z38z392µ
visit_GeneratorExp"ast.NodeVisitor.visit_GeneratorExp"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*0
node&
_ast.GeneratorExp"_ast.GeneratorExpz35z36z37z38z392ô
visit_Awaitast.NodeVisitor.visit_Await"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.Await"
_ast.Awaitz35z36z37z38z392ô
visit_Yieldast.NodeVisitor.visit_Yield"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.Yield"
_ast.Yieldz35z36z37z38z392©
visit_YieldFromast.NodeVisitor.visit_YieldFrom"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor**
node 
_ast.YieldFrom"_ast.YieldFromz35z36z37z38z392°
visit_Compareast.NodeVisitor.visit_Compare"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*&
node
_ast.Compare"_ast.Comparez35z36z37z38z392ï

visit_Callast.NodeVisitor.visit_Call"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor* 
node
	_ast.Call"	_ast.Callz35z36z37z38z392Ω
visit_FormattedValue$ast.NodeVisitor.visit_FormattedValue"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*4
node*
_ast.FormattedValue"_ast.FormattedValuez35z36z37z38z392©
visit_JoinedStrast.NodeVisitor.visit_JoinedStr"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor**
node 
_ast.JoinedStr"_ast.JoinedStrz35z36z37z38z392•
visit_Constantast.NodeVisitor.visit_Constant"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*(
node
_ast.Constant"_ast.Constantz35z36z37z38z392©
visit_Attributeast.NodeVisitor.visit_Attribute"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor**
node 
_ast.Attribute"_ast.Attributez35z36z37z38z392©
visit_Subscriptast.NodeVisitor.visit_Subscript"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor**
node 
_ast.Subscript"_ast.Subscriptz35z36z37z38z392°
visit_Starredast.NodeVisitor.visit_Starred"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*&
node
_ast.Starred"_ast.Starredz35z36z37z38z392ï

visit_Nameast.NodeVisitor.visit_Name"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor* 
node
	_ast.Name"	_ast.Namez35z36z37z38z392ï

visit_Listast.NodeVisitor.visit_List"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor* 
node
	_ast.List"	_ast.Listz35z36z37z38z392ô
visit_Tupleast.NodeVisitor.visit_Tuple"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.Tuple"
_ast.Tuplez35z36z37z38z392ë
	visit_Delast.NodeVisitor.visit_Del"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Del"_ast.Delz35z36z37z38z392ï

visit_Loadast.NodeVisitor.visit_Load"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor* 
node
	_ast.Load"	_ast.Loadz35z36z37z38z392ô
visit_Storeast.NodeVisitor.visit_Store"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.Store"
_ast.Storez35z36z37z38z392ë
	visit_Andast.NodeVisitor.visit_And"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.And"_ast.Andz35z36z37z38z392ç
visit_Orast.NodeVisitor.visit_Or"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Or"_ast.Orz35z36z37z38z392ë
	visit_Addast.NodeVisitor.visit_Add"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Add"_ast.Addz35z36z37z38z392ù
visit_BitAndast.NodeVisitor.visit_BitAnd"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*$
node
_ast.BitAnd"_ast.BitAndz35z36z37z38z392ô
visit_BitOrast.NodeVisitor.visit_BitOr"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.BitOr"
_ast.BitOrz35z36z37z38z392ù
visit_BitXorast.NodeVisitor.visit_BitXor"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*$
node
_ast.BitXor"_ast.BitXorz35z36z37z38z392ë
	visit_Divast.NodeVisitor.visit_Div"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Div"_ast.Divz35z36z37z38z392•
visit_FloorDivast.NodeVisitor.visit_FloorDiv"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*(
node
_ast.FloorDiv"_ast.FloorDivz35z36z37z38z392ù
visit_LShiftast.NodeVisitor.visit_LShift"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*$
node
_ast.LShift"_ast.LShiftz35z36z37z38z392ë
	visit_Modast.NodeVisitor.visit_Mod"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Mod"_ast.Modz35z36z37z38z392ï

visit_Multast.NodeVisitor.visit_Mult"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor* 
node
	_ast.Mult"	_ast.Multz35z36z37z38z392°
visit_MatMultast.NodeVisitor.visit_MatMult"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*&
node
_ast.MatMult"_ast.MatMultz35z36z37z38z392ë
	visit_Powast.NodeVisitor.visit_Pow"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Pow"_ast.Powz35z36z37z38z392ù
visit_RShiftast.NodeVisitor.visit_RShift"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*$
node
_ast.RShift"_ast.RShiftz35z36z37z38z392ë
	visit_Subast.NodeVisitor.visit_Sub"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Sub"_ast.Subz35z36z37z38z392ù
visit_Invertast.NodeVisitor.visit_Invert"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*$
node
_ast.Invert"_ast.Invertz35z36z37z38z392ë
	visit_Notast.NodeVisitor.visit_Not"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Not"_ast.Notz35z36z37z38z392ï

visit_UAddast.NodeVisitor.visit_UAdd"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor* 
node
	_ast.UAdd"	_ast.UAddz35z36z37z38z392ï

visit_USubast.NodeVisitor.visit_USub"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor* 
node
	_ast.USub"	_ast.USubz35z36z37z38z392ç
visit_Eqast.NodeVisitor.visit_Eq"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Eq"_ast.Eqz35z36z37z38z392ç
visit_Gtast.NodeVisitor.visit_Gt"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Gt"_ast.Gtz35z36z37z38z392ë
	visit_GtEast.NodeVisitor.visit_GtE"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.GtE"_ast.GtEz35z36z37z38z392ç
visit_Inast.NodeVisitor.visit_In"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.In"_ast.Inz35z36z37z38z392ç
visit_Isast.NodeVisitor.visit_Is"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Is"_ast.Isz35z36z37z38z392ô
visit_IsNotast.NodeVisitor.visit_IsNot"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.IsNot"
_ast.IsNotz35z36z37z38z392ç
visit_Ltast.NodeVisitor.visit_Lt"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Lt"_ast.Ltz35z36z37z38z392ë
	visit_LtEast.NodeVisitor.visit_LtE"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.LtE"_ast.LtEz35z36z37z38z392ô
visit_NotEqast.NodeVisitor.visit_NotEq"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.NotEq"
_ast.NotEqz35z36z37z38z392ô
visit_NotInast.NodeVisitor.visit_NotIn"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.NotIn"
_ast.NotInz35z36z37z38z392π
visit_comprehension#ast.NodeVisitor.visit_comprehension"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*2
node(
_ast.comprehension"_ast.comprehensionz35z36z37z38z392π
visit_ExceptHandler#ast.NodeVisitor.visit_ExceptHandler"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*2
node(
_ast.ExceptHandler"_ast.ExceptHandlerz35z36z37z38z392©
visit_argumentsast.NodeVisitor.visit_arguments"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor**
node 
_ast.arguments"_ast.argumentsz35z36z37z38z392ë
	visit_argast.NodeVisitor.visit_arg"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.arg"_ast.argz35z36z37z38z392°
visit_keywordast.NodeVisitor.visit_keyword"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*&
node
_ast.keyword"_ast.keywordz35z36z37z38z392ô
visit_aliasast.NodeVisitor.visit_alias"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.alias"
_ast.aliasz35z36z37z38z392•
visit_withitemast.NodeVisitor.visit_withitem"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*(
node
_ast.withitem"_ast.withitemz35z36z37z38z392°
visit_ExtSliceast.NodeVisitor.visit_ExtSlice"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*(
node
_ast.ExtSlice"_ast.ExtSlicez35z36z37z382ì
visit_ExtSliceast.NodeVisitor.visit_ExtSlice"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*&
node
ast.ExtSlice"ast.ExtSlicez392ï
visit_Indexast.NodeVisitor.visit_Index"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.Index"
_ast.Indexz35z36z37z382á
visit_Indexast.NodeVisitor.visit_Index"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor* 
node
	ast.Index"	ast.Indexz392ï
visit_Suiteast.NodeVisitor.visit_Suite"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.Suite"
_ast.Suitez35z36z37z382á
visit_Suiteast.NodeVisitor.visit_Suite"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor* 
node
	ast.Suite"	ast.Suitez392ù
visit_AugLoadast.NodeVisitor.visit_AugLoad"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*&
node
_ast.AugLoad"_ast.AugLoadz35z36z37z382è
visit_AugLoadast.NodeVisitor.visit_AugLoad"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*$
node
ast.AugLoad"ast.AugLoadz392°
visit_AugStoreast.NodeVisitor.visit_AugStore"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*(
node
_ast.AugStore"_ast.AugStorez35z36z37z382ì
visit_AugStoreast.NodeVisitor.visit_AugStore"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*&
node
ast.AugStore"ast.AugStorez392ï
visit_Paramast.NodeVisitor.visit_Param"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.Param"
_ast.Paramz35z36z37z382á
visit_Paramast.NodeVisitor.visit_Param"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor* 
node
	ast.Param"	ast.Paramz392â
	visit_Numast.NodeVisitor.visit_Num"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Num"_ast.Numz35z36z372É
	visit_Numast.NodeVisitor.visit_Num"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
ast.Num"ast.Numz38z392â
	visit_Strast.NodeVisitor.visit_Str"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
_ast.Str"_ast.Strz35z36z372É
	visit_Strast.NodeVisitor.visit_Str"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*
node
ast.Str"ast.Strz38z392ë
visit_Bytesast.NodeVisitor.visit_Bytes"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*"
node

_ast.Bytes"
_ast.Bytesz35z36z372ã
visit_Bytesast.NodeVisitor.visit_Bytes"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor* 
node
	ast.Bytes"	ast.Bytesz38z392≠
visit_NameConstant"ast.NodeVisitor.visit_NameConstant"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*0
node&
_ast.NameConstant"_ast.NameConstantz35z36z372ß
visit_NameConstant"ast.NodeVisitor.visit_NameConstant"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*.
node$
ast.NameConstant"ast.NameConstantz38z392ù
visit_Ellipsisast.NodeVisitor.visit_Ellipsis"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*(
node
_ast.Ellipsis"_ast.Ellipsisz35z36z372ó
visit_Ellipsisast.NodeVisitor.visit_Ellipsis"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor*&
node
ast.Ellipsis"ast.Ellipsisz38z392ù
visit_NamedExprast.NodeVisitor.visit_NamedExpr"
Any*,
self"
ast.NodeVisitor"ast.NodeVisitor**
node 
_ast.NamedExpr"_ast.NamedExprz38z39r27r35r36r37r38r39Õ
NodeTransformerast.NodeTransformer"ast.NodeVisitor2∆
generic_visit!ast.NodeTransformer.generic_visit"8
Union[_ast.AST,None]
_ast.AST"_ast.AST
None*4
self*
ast.NodeTransformer"ast.NodeTransformer*
node
_ast.AST"_ast.ASTz272≤
generic_visit!ast.NodeTransformer.generic_visit"
_ast.AST"_ast.AST*4
self*
ast.NodeTransformer"ast.NodeTransformer*
node
_ast.AST"_ast.ASTz35z36z37z38z39r27r35r36r37r38r39:
Numast.Num"_ast.Constant*	_ast.expr*_ast.ASTr38r39:
Strast.Str"_ast.Constant*	_ast.expr*_ast.ASTr38r39>
Bytes	ast.Bytes"_ast.Constant*	_ast.expr*_ast.ASTr38r39L
NameConstantast.NameConstant"_ast.Constant*	_ast.expr*_ast.ASTr38r39D
Ellipsisast.Ellipsis"_ast.Constant*	_ast.expr*_ast.ASTr38r39 
slice	ast.slice"_ast.ASTr391
ExtSliceast.ExtSlice"	ast.slice*_ast.ASTr39+
Index	ast.Index"	ast.slice*_ast.ASTr39*
Suite	ast.Suite"_ast.mod*_ast.ASTr397
AugLoadast.AugLoad"_ast.expr_context*_ast.ASTr399
AugStoreast.AugStore"_ast.expr_context*_ast.ASTr393
Param	ast.Param"_ast.expr_context*_ast.ASTr39"§
parse	ast.parse"
_ast.Module"_ast.Module*x
sourcel
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode*|
filenamel
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode *x
model
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode z27"Ñ
copy_locationast.copy_location"
_ast.AST"_ast.AST*"
new_node
_ast.AST"_ast.AST*"
old_node
_ast.AST"_ast.ASTz27"Ä
copy_locationast.copy_location"

ast._T*
new_node

ast._T*"
old_node
_ast.AST"_ast.ASTz35z36z37z38z39"”
dumpast.dump"
builtins.str"builtins.str*
node
_ast.AST"_ast.AST*5
annotate_fields
builtins.bool"builtins.bool *8
include_attributes
builtins.bool"builtins.bool z27z35z36z37z38"¬
dumpast.dump"
builtins.str"builtins.str*
node
_ast.AST"_ast.AST*5
annotate_fields
builtins.bool"builtins.bool *8
include_attributes
builtins.bool"builtins.bool *}
indento
%Union[builtins.int,builtins.str,None]
builtins.int"builtins.int
builtins.str"builtins.str
None z39"l
fix_missing_locationsast.fix_missing_locations"
_ast.AST"_ast.AST*
node
_ast.AST"_ast.ASTz27"h
fix_missing_locationsast.fix_missing_locations"

ast._T*
node

ast._Tz35z36z37z38z39"ë
get_docstringast.get_docstring"
builtins.str"builtins.str*
node
_ast.AST"_ast.AST*+
clean
builtins.bool"builtins.bool z27"…
get_docstringast.get_docstring"D
Union[builtins.str,None]
builtins.str"builtins.str
None*
node
_ast.AST"_ast.AST*+
clean
builtins.bool"builtins.bool z35z36z37z38z39"â
increment_linenoast.increment_lineno"
_ast.AST"_ast.AST*
node
_ast.AST"_ast.AST*%
n
builtins.int"builtins.int z27"Ö
increment_linenoast.increment_lineno"

ast._T*
node

ast._T*%
n
builtins.int"builtins.int z35z36z37z38z39"§
iter_child_nodesast.iter_child_nodes"B
typing.Iterator[_ast.AST]
_ast.AST"_ast.AST"typing.Iterator*
node
_ast.AST"_ast.ASTz27z35z36z37z38z39"◊
iter_fieldsast.iter_fields"
(typing.Iterator[Tuple[builtins.str,Any]]B
Tuple[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Iterator*
node
_ast.AST"_ast.ASTz27z35z36z37z38z39"–
literal_evalast.literal_eval"
Any*†
node_or_stringã
-Union[builtins.str,builtins.unicode,_ast.AST]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode
_ast.AST"_ast.ASTz27"ß
literal_evalast.literal_eval"
Any*h
node_or_stringT
Union[builtins.str,_ast.AST]
builtins.str"builtins.str
_ast.AST"_ast.ASTz35z36z37z38z39"å
walkast.walk"B
typing.Iterator[_ast.AST]
_ast.AST"_ast.AST"typing.Iterator*
node
_ast.AST"_ast.ASTz27z35z36z37z38z39"Ú
get_source_segmentast.get_source_segment"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
source
builtins.str"builtins.str*
node
_ast.AST"_ast.AST*,
padded
builtins.bool"builtins.bool z38z39"[
unparseast.unparse"
builtins.str"builtins.str*!
ast_obj
_ast.AST"_ast.ASTz39*›
parse	ast.parseÌ
parse	ast.parse"
_ast.Module"_ast.Module*r
sourcef
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes*v
filenamef
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes *C
mode7
Literal[builtins.str]	
builtins.str"builtins.str 0:overloadXÃ
parse	ast.parse"
_ast.AST"_ast.AST*r
sourcef
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes*v
filenamef
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes *(
mode
builtins.str"builtins.str 0:overloadX"35"36"37*á

parse	ast.parseÑ
parse	ast.parse"
_ast.Module"_ast.Module*r
sourcef
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes*v
filenamef
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes *C
mode7
Literal[builtins.str]	
builtins.str"builtins.str *3
type_comments
builtins.bool"builtins.bool *ﬂ
feature_version«
9Union[None,builtins.int,Tuple[builtins.int,builtins.int]]
None
builtins.int"builtins.int`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int 0:overloadX„
parse	ast.parse"
_ast.AST"_ast.AST*r
sourcef
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes*v
filenamef
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes *(
mode
builtins.str"builtins.str *3
type_comments
builtins.bool"builtins.bool *ﬂ
feature_version«
9Union[None,builtins.int,Tuple[builtins.int,builtins.int]]
None
builtins.int"builtins.int`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int 0:overloadX"38"39