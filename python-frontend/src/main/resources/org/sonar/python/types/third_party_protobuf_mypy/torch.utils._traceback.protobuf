
torch.utils._traceback«
CapturedTraceback(torch.utils._traceback.CapturedTraceback"builtins.object*[
__init__1torch.utils._traceback.CapturedTraceback.__init__*
self*
tb*

skip *E
cleanup0torch.utils._traceback.CapturedTraceback.cleanup*
self*E
summary0torch.utils._traceback.CapturedTraceback.summary*
self*O
__getstate__5torch.utils._traceback.CapturedTraceback.__getstate__*
self*r
extract0torch.utils._traceback.CapturedTraceback.extract*
script *	
cpp *

skip 0:staticmethodh*C
format/torch.utils._traceback.CapturedTraceback.format*
self*\

format_all3torch.utils._traceback.CapturedTraceback.format_all*
tbs0:staticmethodhr‹
	__slots__2torch.utils._traceback.CapturedTraceback.__slots__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listr:
tb+torch.utils._traceback.CapturedTraceback.tb
Anyr>
skip-torch.utils._traceback.CapturedTraceback.skip
AnyO
shorten_filename'torch.utils._traceback.shorten_filename*
fn*

base V
format_frame#torch.utils._traceback.format_frame*	
frame*

base *

line O
format_traceback_short-torch.utils._traceback.format_traceback_short*
tbY
_extract_symbolized_tb-torch.utils._traceback._extract_symbolized_tb*
tb*
skip*’
__annotations__&torch.utils._traceback.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*

osos 