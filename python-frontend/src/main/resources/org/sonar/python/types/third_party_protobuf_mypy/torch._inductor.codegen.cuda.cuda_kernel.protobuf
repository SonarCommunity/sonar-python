
(torch._inductor.codegen.cuda.cuda_kernelˆ

CUDAKernel3torch._inductor.codegen.cuda.cuda_kernel.CUDAKernel"%torch._inductor.codegen.common.Kernelrã
	overrides=torch._inductor.codegen.cuda.cuda_kernel.CUDAKernel.overrides?
CallableType[builtins.type]
builtins.type"builtins.type⁄)
CUDATemplateKernel;torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel"3torch._inductor.codegen.cuda.cuda_kernel.CUDAKernel*k
__init__Dtorch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel.__init__*
self*
kernel_name*ﬂ
arg_nameDtorch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel.arg_name"D
Union[builtins.str,None]
builtins.str"builtins.str
None*Ñ
selfz
;torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel";torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel*@
node6
torch._inductor.ir.IRNode"torch._inductor.ir.IRNode*√
check_not_nullJtorch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel.check_not_null"
builtins.str"builtins.str*Ñ
selfz
;torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel";torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel*@
node6
torch._inductor.ir.IRNode"torch._inductor.ir.IRNode*¡

def_kernelFtorch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel.def_kernel"
builtins.str"builtins.str*Ñ
selfz
;torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel";torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel*}
inputsq
(builtins.list[torch._inductor.ir.IRNode]6
torch._inductor.ir.IRNode"torch._inductor.ir.IRNode"builtins.list*~
outputsq
(builtins.list[torch._inductor.ir.IRNode]6
torch._inductor.ir.IRNode"torch._inductor.ir.IRNode"builtins.list*-
	names_str
builtins.str"builtins.str *ó
input_reorderÅ
'Union[builtins.list[builtins.int],None]J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list
None *È
call_kernelGtorch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel.call_kernel"
None*Ñ
selfz
;torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel";torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel*&
name
builtins.str"builtins.str*X
nodeN
%torch._inductor.ir.CUDATemplateBuffer"%torch._inductor.ir.CUDATemplateBuffer*Ÿ
dtypeAtorch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel.dtype"D
Union[builtins.str,None]
builtins.str"builtins.str
None*Ñ
selfz
;torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel";torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel*@
node6
torch._inductor.ir.IRNode"torch._inductor.ir.IRNode*á
cutlass_dtypeItorch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel.cutlass_dtype"D
Union[builtins.str,None]
builtins.str"builtins.str
None*Ñ
selfz
;torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel";torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel*@
node6
torch._inductor.ir.IRNode"torch._inductor.ir.IRNode*
default_dtype
Any *»
max_valid_indexKtorch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel.max_valid_index"
Any*Ñ
selfz
;torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel";torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel*@
node6
torch._inductor.ir.IRNode"torch._inductor.ir.IRNode*
default
Any *≥
offsetBtorch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel.offset"
builtins.str"builtins.str*Ñ
selfz
;torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel";torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel*@
node6
torch._inductor.ir.IRNode"torch._inductor.ir.IRNode*≠
ptr?torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel.ptr"
builtins.str"builtins.str*Ñ
selfz
;torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel";torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel*@
node6
torch._inductor.ir.IRNode"torch._inductor.ir.IRNode*Ë
size@torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel.size"
builtins.str"builtins.str*Ñ
selfz
;torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel";torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel*@
node6
torch._inductor.ir.IRNode"torch._inductor.ir.IRNode*-
start_index
builtins.int"builtins.int*U
	end_indexD
Union[builtins.int,None]
builtins.int"builtins.int
None *1
default_value
builtins.int"builtins.int *è
strideBtorch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel.stride"
builtins.str"builtins.str*Ñ
selfz
;torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel";torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel*@
node6
torch._inductor.ir.IRNode"torch._inductor.ir.IRNode*'
index
builtins.int"builtins.int*1
default_value
builtins.int"builtins.int *Ç
row_or_column_stridePtorch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel.row_or_column_stride"
builtins.str"builtins.str*Ñ
selfz
;torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel";torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel*@
node6
torch._inductor.ir.IRNode"torch._inductor.ir.IRNode*1
default_value
builtins.int"builtins.int r|
_EXTRA_CPP_ARGSKtorch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel._EXTRA_CPP_ARGS
builtins.str"builtins.strrı
named_nodesGtorch._inductor.codegen.cuda.cuda_kernel.CUDATemplateKernel.named_nodesú
5builtins.dict[builtins.str,torch._inductor.ir.IRNode]
builtins.str"builtins.str6
torch._inductor.ir.IRNode"torch._inductor.ir.IRNode"builtins.dict£;
CUDATemplateCaller;torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateCaller"torch._inductor.ir.ChoiceCaller*Ω
__init__Dtorch._inductor.codegen.cuda.cuda_kernel.CUDATemplateCaller.__init__"
None*Ñ
selfz
;torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateCaller";torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateCaller*&
name
builtins.str"builtins.str**
category
builtins.str"builtins.str*Ç
input_nodesq
(builtins.list[torch._inductor.ir.Buffer]6
torch._inductor.ir.Buffer"torch._inductor.ir.Buffer"builtins.list*B
layout6
torch._inductor.ir.Layout"torch._inductor.ir.Layout*c
make_kernel_renderK
CallableType[builtins.function]&
builtins.function"builtins.function*y
bmreqn
5torch._inductor.autotune_process.CUDABenchmarkRequest"5torch._inductor.autotune_process.CUDABenchmarkRequest*Ä
templater
7torch._inductor.codegen.cuda.cuda_template.CUDATemplate"7torch._inductor.codegen.cuda.cuda_template.CUDATemplate*Ÿ
info_kwargs«
€Union[builtins.dict[builtins.str,Union[TypeAlias[Union[builtins.int,builtins.float,builtins.bool,builtins.str,builtins.list[Union[builtins.int,builtins.str,builtins.float,builtins.bool]]]],builtins.list[Unknown]]],None]⁄	
œbuiltins.dict[builtins.str,Union[TypeAlias[Union[builtins.int,builtins.float,builtins.bool,builtins.str,builtins.list[Union[builtins.int,builtins.str,builtins.float,builtins.bool]]]],builtins.list[Unknown]]]
builtins.str"builtins.strÿ
≥Union[TypeAlias[Union[builtins.int,builtins.float,builtins.bool,builtins.str,builtins.list[Union[builtins.int,builtins.str,builtins.float,builtins.bool]]]],builtins.list[Unknown]]Ú
ïTypeAlias[Union[builtins.int,builtins.float,builtins.bool,builtins.str,builtins.list[Union[builtins.int,builtins.str,builtins.float,builtins.bool]]]]Ø
äUnion[builtins.int,builtins.float,builtins.bool,builtins.str,builtins.list[Union[builtins.int,builtins.str,builtins.float,builtins.bool]]]
builtins.int"builtins.int 
builtins.float"builtins.float
builtins.bool"builtins.bool
builtins.str"builtins.strü
Lbuiltins.list[Union[builtins.int,builtins.str,builtins.float,builtins.bool]]ø
=Union[builtins.int,builtins.str,builtins.float,builtins.bool]
builtins.int"builtins.int
builtins.str"builtins.str 
builtins.float"builtins.float
builtins.bool"builtins.bool"builtins.list"$torch._inductor.ir.PrimitiveInfoType)
builtins.list[Unknown] "builtins.list"builtins.dict
None*Â

precompileFtorch._inductor.codegen.cuda.cuda_kernel.CUDATemplateCaller.precompile"
None*Ñ
selfz
;torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateCaller";torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateCaller*†
	benchmarkEtorch._inductor.codegen.cuda.cuda_kernel.CUDATemplateCaller.benchmark" 
builtins.float"builtins.float*Ñ
selfz
;torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateCaller";torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateCaller*
args
Any*
out
Any*P
__str__Ctorch._inductor.codegen.cuda.cuda_kernel.CUDATemplateCaller.__str__* *˜
	call_nameEtorch._inductor.codegen.cuda.cuda_kernel.CUDATemplateCaller.call_name"
builtins.str"builtins.str*Ñ
selfz
;torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateCaller";torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateCaller*ı
hash_keyDtorch._inductor.codegen.cuda.cuda_kernel.CUDATemplateCaller.hash_key"
builtins.str"builtins.str*Ñ
selfz
;torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateCaller";torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateCaller*∂
	info_dictEtorch._inductor.codegen.cuda.cuda_kernel.CUDATemplateCaller.info_dict"⁄	
œbuiltins.dict[builtins.str,Union[TypeAlias[Union[builtins.int,builtins.float,builtins.bool,builtins.str,builtins.list[Union[builtins.int,builtins.str,builtins.float,builtins.bool]]]],builtins.list[Unknown]]]
builtins.str"builtins.strÿ
≥Union[TypeAlias[Union[builtins.int,builtins.float,builtins.bool,builtins.str,builtins.list[Union[builtins.int,builtins.str,builtins.float,builtins.bool]]]],builtins.list[Unknown]]Ú
ïTypeAlias[Union[builtins.int,builtins.float,builtins.bool,builtins.str,builtins.list[Union[builtins.int,builtins.str,builtins.float,builtins.bool]]]]Ø
äUnion[builtins.int,builtins.float,builtins.bool,builtins.str,builtins.list[Union[builtins.int,builtins.str,builtins.float,builtins.bool]]]
builtins.int"builtins.int 
builtins.float"builtins.float
builtins.bool"builtins.bool
builtins.str"builtins.strü
Lbuiltins.list[Union[builtins.int,builtins.str,builtins.float,builtins.bool]]ø
=Union[builtins.int,builtins.str,builtins.float,builtins.bool]
builtins.int"builtins.int
builtins.str"builtins.str 
builtins.float"builtins.float
builtins.bool"builtins.bool"builtins.list"$torch._inductor.ir.PrimitiveInfoType)
builtins.list[Unknown] "builtins.list"builtins.dict*Ñ
selfz
;torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateCaller";torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateCaller*õ
output_nodeGtorch._inductor.codegen.cuda.cuda_kernel.CUDATemplateCaller.output_node"<
torch._inductor.ir.TensorBox"torch._inductor.ir.TensorBox*Ñ
selfz
;torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateCaller";torch._inductor.codegen.cuda.cuda_kernel.CUDATemplateCallerrn
categoryDtorch._inductor.codegen.cuda.cuda_kernel.CUDATemplateCaller.category
builtins.str"builtins.strr±
make_kernel_renderNtorch._inductor.codegen.cuda.cuda_kernel.CUDATemplateCaller.make_kernel_renderK
CallableType[builtins.function]&
builtins.function"builtins.functionr∫
bmreqAtorch._inductor.codegen.cuda.cuda_kernel.CUDATemplateCaller.bmreqn
5torch._inductor.autotune_process.CUDABenchmarkRequest"5torch._inductor.autotune_process.CUDABenchmarkRequestrƒ
templateDtorch._inductor.codegen.cuda.cuda_kernel.CUDATemplateCaller.templater
7torch._inductor.codegen.cuda.cuda_template.CUDATemplate"7torch._inductor.codegen.cuda.cuda_template.CUDATemplater†
info_kwargsGtorch._inductor.codegen.cuda.cuda_kernel.CUDATemplateCaller.info_kwargs«
€Union[builtins.dict[builtins.str,Union[TypeAlias[Union[builtins.int,builtins.float,builtins.bool,builtins.str,builtins.list[Union[builtins.int,builtins.str,builtins.float,builtins.bool]]]],builtins.list[Unknown]]],None]⁄	
œbuiltins.dict[builtins.str,Union[TypeAlias[Union[builtins.int,builtins.float,builtins.bool,builtins.str,builtins.list[Union[builtins.int,builtins.str,builtins.float,builtins.bool]]]],builtins.list[Unknown]]]
builtins.str"builtins.strÿ
≥Union[TypeAlias[Union[builtins.int,builtins.float,builtins.bool,builtins.str,builtins.list[Union[builtins.int,builtins.str,builtins.float,builtins.bool]]]],builtins.list[Unknown]]Ú
ïTypeAlias[Union[builtins.int,builtins.float,builtins.bool,builtins.str,builtins.list[Union[builtins.int,builtins.str,builtins.float,builtins.bool]]]]Ø
äUnion[builtins.int,builtins.float,builtins.bool,builtins.str,builtins.list[Union[builtins.int,builtins.str,builtins.float,builtins.bool]]]
builtins.int"builtins.int 
builtins.float"builtins.float
builtins.bool"builtins.bool
builtins.str"builtins.strü
Lbuiltins.list[Union[builtins.int,builtins.str,builtins.float,builtins.bool]]ø
=Union[builtins.int,builtins.str,builtins.float,builtins.bool]
builtins.int"builtins.int
builtins.str"builtins.str 
builtins.float"builtins.float
builtins.bool"builtins.bool"builtins.list"$torch._inductor.ir.PrimitiveInfoType)
builtins.list[Unknown] "builtins.list"builtins.dict
None¿
_normalize_idx7torch._inductor.codegen.cuda.cuda_kernel._normalize_idx"
builtins.int"builtins.int*'
index
builtins.int"builtins.int*.
total_length
builtins.int"builtins.int*§
__annotations__8torch._inductor.codegen.cuda.cuda_kernel.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*U
log,torch._inductor.codegen.cuda.cuda_kernel.log 
logging.Logger"logging.Logger*Ñ
cexpr.torch._inductor.codegen.cuda.cuda_kernel.cexprK
CallableType[builtins.function]&
builtins.function"builtins.function