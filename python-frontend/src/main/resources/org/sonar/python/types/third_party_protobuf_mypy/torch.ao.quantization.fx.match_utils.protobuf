
$torch.ao.quantization.fx.match_utilso
	_is_match.torch.ao.quantization.fx.match_utils._is_match*
modules*
node*
pattern*
max_uses ¥3
_find_matches2torch.ao.quantization.fx.match_utils._find_matches"é
Åbuiltins.dict[builtins.str,TypeAlias[Tuple[torch.fx.node.Node,builtins.list[torch.fx.node.Node],Union[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]],Tuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]],Any,None],torch.ao.quantization.fx.quantize_handler.QuantizeHandler]]]
builtins.str"builtins.str⁄
ÂTypeAlias[Tuple[torch.fx.node.Node,builtins.list[torch.fx.node.Node],Union[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]],Tuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]],Any,None],torch.ao.quantization.fx.quantize_handler.QuantizeHandler]]∫
⁄Tuple[torch.fx.node.Node,builtins.list[torch.fx.node.Node],Union[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]],Tuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]],Any,None],torch.ao.quantization.fx.quantize_handler.QuantizeHandler](
torch.fx.node.Node"torch.fx.node.Node\
!builtins.list[torch.fx.node.Node](
torch.fx.node.Node"torch.fx.node.Node"builtins.listÿ
‰Union[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]],Tuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]],Any,None]K
CallableType[builtins.function]&
builtins.function"builtins.function‰
FTuple[CallableType[builtins.function],CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function•
mTuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]]K
CallableType[builtins.function]&
builtins.function"builtins.function‰
FTuple[CallableType[builtins.function],CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function
Any
Nonev
9torch.ao.quantization.fx.quantize_handler.QuantizeHandler"9torch.ao.quantization.fx.quantize_handler.QuantizeHandler"1torch.ao.quantization.fx.match_utils._MatchResult"builtins.dict*7
graph,
torch.fx.graph.Graph"torch.fx.graph.Graph*π
modules´
:builtins.dict[builtins.str,torch.nn.modules.module.Module]
builtins.str"builtins.str@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"builtins.dict*Ø
patterns†
≥builtins.dict[TypeAlias[Union[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]],Tuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]],Any]],torch.ao.quantization.fx.quantize_handler.QuantizeHandler]‡	
ÍTypeAlias[Union[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]],Tuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]],Any]]…
ﬂUnion[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]],Tuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]],Any]K
CallableType[builtins.function]&
builtins.function"builtins.function‰
FTuple[CallableType[builtins.function],CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function•
mTuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]]K
CallableType[builtins.function]&
builtins.function"builtins.function‰
FTuple[CallableType[builtins.function],CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function
Any"#torch.ao.quantization.utils.Patternv
9torch.ao.quantization.fx.quantize_handler.QuantizeHandler"9torch.ao.quantization.fx.quantize_handler.QuantizeHandler"builtins.dict*˙
root_node_getter_mapping€
ôbuiltins.dict[TypeAlias[Union[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]],Tuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]],Any]],CallableType[builtins.function]]‡	
ÍTypeAlias[Union[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]],Tuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]],Any]]…
ﬂUnion[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]],Tuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]],Any]K
CallableType[builtins.function]&
builtins.function"builtins.function‰
FTuple[CallableType[builtins.function],CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function•
mTuple[CallableType[builtins.function],Tuple[CallableType[builtins.function],CallableType[builtins.function]]]K
CallableType[builtins.function]&
builtins.function"builtins.function‰
FTuple[CallableType[builtins.function],CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function
Any"#torch.ao.quantization.utils.PatternK
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.dict*°
standalone_module_namesÅ
'Union[builtins.list[builtins.str],None]J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
None *ú
standalone_module_classes{
$Union[builtins.list[Type[Any]],None]G
builtins.list[Type[Any]]
	Type[Any]
Any"type"builtins.list
None *w
custom_module_classesZ
Union[builtins.list[Any],None],
builtins.list[Any]
Any"builtins.list
None *†
__annotations__4torch.ao.quantization.fx.match_utils.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*É
__all__,torch.ao.quantization.fx.match_utils.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list