
zlib'
error
zlib.error"builtins.Exceptionœ
	_Compresszlib._Compress"builtins.object*ù
compresszlib._Compress.compress" 
builtins.bytes"builtins.bytes**
self 
zlib._Compress"zlib._Compress**
data 
builtins.bytes"builtins.bytes*ï
flushzlib._Compress.flush" 
builtins.bytes"builtins.bytes**
self 
zlib._Compress"zlib._Compress*(
mode
builtins.int"builtins.int *i
copyzlib._Compress.copy" 
zlib._Compress"zlib._Compress**
self 
zlib._Compress"zlib._CompressÇ
_Decompresszlib._Decompress"builtins.object*◊

decompresszlib._Decompress.decompress" 
builtins.bytes"builtins.bytes*.
self$
zlib._Decompress"zlib._Decompress**
data 
builtins.bytes"builtins.bytes*.

max_length
builtins.int"builtins.int *ù
flushzlib._Decompress.flush" 
builtins.bytes"builtins.bytes*.
self$
zlib._Decompress"zlib._Decompress**
length
builtins.int"builtins.int *s
copyzlib._Decompress.copy"$
zlib._Decompress"zlib._Decompress*.
self$
zlib._Decompress"zlib._DecompressrM
unused_datazlib._Decompress.unused_data 
builtins.bytes"builtins.bytesrU
unconsumed_tail zlib._Decompress.unconsumed_tail 
builtins.bytes"builtins.bytesr;
eofzlib._Decompress.eof
builtins.bool"builtins.boolå
adler32zlib.adler32"
builtins.int"builtins.int**
__data 
builtins.bytes"builtins.bytes*)
__value
builtins.int"builtins.int í
compresszlib.compress" 
builtins.bytes"builtins.bytes**
__data 
builtins.bytes"builtins.bytes*)
level
builtins.int"builtins.int ¯
compressobjzlib.compressobj" 
zlib._Compress"zlib._Compress*)
level
builtins.int"builtins.int **
method
builtins.int"builtins.int *)
wbits
builtins.int"builtins.int *,
memLevel
builtins.int"builtins.int *,
strategy
builtins.int"builtins.int *W
zdictJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None ﬂ
crc32
zlib.crc32"
builtins.int"builtins.int*Ä
__datav
&Union[array.array[Any],builtins.bytes](
array.array[Any]
Any"array.array 
builtins.bytes"builtins.bytes*)
__value
builtins.int"builtins.int √

decompresszlib.decompress" 
builtins.bytes"builtins.bytes**
__data 
builtins.bytes"builtins.bytes*)
wbits
builtins.int"builtins.int *+
bufsize
builtins.int"builtins.int £
decompressobjzlib.decompressobj"$
zlib._Decompress"zlib._Decompress*)
wbits
builtins.int"builtins.int *-
zdict 
builtins.bytes"builtins.bytes *7
DEFLATEDzlib.DEFLATED
builtins.int"builtins.int*A
DEF_MEM_LEVELzlib.DEF_MEM_LEVEL
builtins.int"builtins.int*9
	MAX_WBITSzlib.MAX_WBITS
builtins.int"builtins.int*?
ZLIB_VERSIONzlib.ZLIB_VERSION
builtins.str"builtins.str*K
Z_BEST_COMPRESSIONzlib.Z_BEST_COMPRESSION
builtins.int"builtins.int*?
Z_BEST_SPEEDzlib.Z_BEST_SPEED
builtins.int"builtins.int*Q
Z_DEFAULT_COMPRESSIONzlib.Z_DEFAULT_COMPRESSION
builtins.int"builtins.int*K
Z_DEFAULT_STRATEGYzlib.Z_DEFAULT_STRATEGY
builtins.int"builtins.int*;

Z_FILTEREDzlib.Z_FILTERED
builtins.int"builtins.int*7
Z_FINISHzlib.Z_FINISH
builtins.int"builtins.int*5
Z_FIXEDzlib.Z_FIXED
builtins.int"builtins.int*?
Z_FULL_FLUSHzlib.Z_FULL_FLUSH
builtins.int"builtins.int*C
Z_HUFFMAN_ONLYzlib.Z_HUFFMAN_ONLY
builtins.int"builtins.int*;

Z_NO_FLUSHzlib.Z_NO_FLUSH
builtins.int"builtins.int*1
Z_RLE
zlib.Z_RLE
builtins.int"builtins.int*?
Z_SYNC_FLUSHzlib.Z_SYNC_FLUSH
builtins.int"builtins.int*?
DEF_BUF_SIZEzlib.DEF_BUF_SIZE
builtins.int"builtins.int*O
ZLIB_RUNTIME_VERSIONzlib.ZLIB_RUNTIME_VERSION
builtins.str"builtins.str