
zlib'
error
zlib.error"builtins.Exceptioná

	_Compresszlib._Compress"builtins.object*’
compresszlib._Compress.compress" 
builtins.bytes"builtins.bytes**
self 
zlib._Compress"zlib._Compress*·
data÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*ï
flushzlib._Compress.flush" 
builtins.bytes"builtins.bytes**
self 
zlib._Compress"zlib._Compress*(
mode
builtins.int"builtins.int *i
copyzlib._Compress.copy" 
zlib._Compress"zlib._Compress**
self 
zlib._Compress"zlib._Compress∫
_Decompresszlib._Decompress"builtins.object*è

decompresszlib._Decompress.decompress" 
builtins.bytes"builtins.bytes*.
self$
zlib._Decompress"zlib._Decompress*·
data÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*.

max_length
builtins.int"builtins.int *ù
flushzlib._Decompress.flush" 
builtins.bytes"builtins.bytes*.
self$
zlib._Decompress"zlib._Decompress**
length
builtins.int"builtins.int *s
copyzlib._Decompress.copy"$
zlib._Decompress"zlib._Decompress*.
self$
zlib._Decompress"zlib._DecompressrM
unused_datazlib._Decompress.unused_data 
builtins.bytes"builtins.bytesrU
unconsumed_tail zlib._Decompress.unconsumed_tail 
builtins.bytes"builtins.bytesr;
eofzlib._Decompress.eof
builtins.bool"builtins.bool≥
adler32zlib.adler32"
builtins.int"builtins.int*Ÿ÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer* 
builtins.int"builtins.int ¬
compresszlib.compress" 
builtins.bytes"builtins.bytes*Ÿ÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
level
builtins.int"builtins.int ∫

compressobjzlib.compressobj" 
zlib._Compress"zlib._Compress*)
level
builtins.int"builtins.int **
method
builtins.int"builtins.int *)
wbits
builtins.int"builtins.int *,
memLevel
builtins.int"builtins.int *,
strategy
builtins.int"builtins.int *ò
zdictä
¢Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],None]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer
None Ø
crc32
zlib.crc32"
builtins.int"builtins.int*Ÿ÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer* 
builtins.int"builtins.int Û

decompresszlib.decompress" 
builtins.bytes"builtins.bytes*Ÿ÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
wbits
builtins.int"builtins.int *+
bufsize
builtins.int"builtins.int €
decompressobjzlib.decompressobj"$
zlib._Decompress"zlib._Decompress*)
wbits
builtins.int"builtins.int *‰
zdict÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer *Ä
__annotations__zlib.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*R
DEFLATEDzlib.DEFLATED7
Literal[builtins.int]	
builtins.int"builtins.int*A
DEF_MEM_LEVELzlib.DEF_MEM_LEVEL
builtins.int"builtins.int*Z
DEF_BUF_SIZEzlib.DEF_BUF_SIZE7
Literal[builtins.int]	
builtins.int"builtins.int*9
	MAX_WBITSzlib.MAX_WBITS
builtins.int"builtins.int*?
ZLIB_VERSIONzlib.ZLIB_VERSION
builtins.str"builtins.str*O
ZLIB_RUNTIME_VERSIONzlib.ZLIB_RUNTIME_VERSION
builtins.str"builtins.str*b
Z_NO_COMPRESSIONzlib.Z_NO_COMPRESSION7
Literal[builtins.int]	
builtins.int"builtins.int*`
Z_PARTIAL_FLUSHzlib.Z_PARTIAL_FLUSH7
Literal[builtins.int]	
builtins.int"builtins.int*f
Z_BEST_COMPRESSIONzlib.Z_BEST_COMPRESSION7
Literal[builtins.int]	
builtins.int"builtins.int*Z
Z_BEST_SPEEDzlib.Z_BEST_SPEED7
Literal[builtins.int]	
builtins.int"builtins.int*P
Z_BLOCKzlib.Z_BLOCK7
Literal[builtins.int]	
builtins.int"builtins.int*l
Z_DEFAULT_COMPRESSIONzlib.Z_DEFAULT_COMPRESSION7
Literal[builtins.int]	
builtins.int"builtins.int*f
Z_DEFAULT_STRATEGYzlib.Z_DEFAULT_STRATEGY7
Literal[builtins.int]	
builtins.int"builtins.int*V

Z_FILTEREDzlib.Z_FILTERED7
Literal[builtins.int]	
builtins.int"builtins.int*R
Z_FINISHzlib.Z_FINISH7
Literal[builtins.int]	
builtins.int"builtins.int*P
Z_FIXEDzlib.Z_FIXED7
Literal[builtins.int]	
builtins.int"builtins.int*Z
Z_FULL_FLUSHzlib.Z_FULL_FLUSH7
Literal[builtins.int]	
builtins.int"builtins.int*^
Z_HUFFMAN_ONLYzlib.Z_HUFFMAN_ONLY7
Literal[builtins.int]	
builtins.int"builtins.int*V

Z_NO_FLUSHzlib.Z_NO_FLUSH7
Literal[builtins.int]	
builtins.int"builtins.int*L
Z_RLE
zlib.Z_RLE7
Literal[builtins.int]	
builtins.int"builtins.int*Z
Z_SYNC_FLUSHzlib.Z_SYNC_FLUSH7
Literal[builtins.int]	
builtins.int"builtins.int*P
Z_TREESzlib.Z_TREES7
Literal[builtins.int]	
builtins.int"builtins.int