
torch.nn.modules.foldË4
Foldtorch.nn.modules.fold.Fold"torch.nn.modules.module.Module*î
__init__#torch.nn.modules.fold.Fold.__init__"
None*B
self8
torch.nn.modules.fold.Fold"torch.nn.modules.fold.Fold*È
output_size¶
\TypeAlias[TypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]]°
QTypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]ª
FUnion[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object‹
'builtins.tuple[torch.nn.common_types.T]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object"builtins.tuple",torch.nn.common_types._scalar_or_tuple_any_t"!torch.nn.common_types._size_any_t*È
kernel_size¶
\TypeAlias[TypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]]°
QTypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]ª
FUnion[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object‹
'builtins.tuple[torch.nn.common_types.T]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object"builtins.tuple",torch.nn.common_types._scalar_or_tuple_any_t"!torch.nn.common_types._size_any_t*Ç
dilation¶
\TypeAlias[TypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]]°
QTypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]ª
FUnion[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object‹
'builtins.tuple[torch.nn.common_types.T]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object"builtins.tuple",torch.nn.common_types._scalar_or_tuple_any_t"!torch.nn.common_types._size_any_t *Æ
padding¶
\TypeAlias[TypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]]°
QTypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]ª
FUnion[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object‹
'builtins.tuple[torch.nn.common_types.T]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object"builtins.tuple",torch.nn.common_types._scalar_or_tuple_any_t"!torch.nn.common_types._size_any_t *Å
stride¶
\TypeAlias[TypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]]°
QTypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]ª
FUnion[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object‹
'builtins.tuple[torch.nn.common_types.T]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object"builtins.tuple",torch.nn.common_types._scalar_or_tuple_any_t"!torch.nn.common_types._size_any_t *Ø
forward"torch.nn.modules.fold.Fold.forward",
torch._tensor.Tensor"torch._tensor.Tensor*B
self8
torch.nn.modules.fold.Fold"torch.nn.modules.fold.Fold*7
input,
torch._tensor.Tensor"torch._tensor.Tensor*•

extra_repr%torch.nn.modules.fold.Fold.extra_repr"
builtins.str"builtins.str*B
self8
torch.nn.modules.fold.Fold"torch.nn.modules.fold.Foldr…
__constants__(torch.nn.modules.fold.Fold.__constants__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listrî
output_size&torch.nn.modules.fold.Fold.output_size¶
\TypeAlias[TypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]]°
QTypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]ª
FUnion[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object‹
'builtins.tuple[torch.nn.common_types.T]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object"builtins.tuple",torch.nn.common_types._scalar_or_tuple_any_t"!torch.nn.common_types._size_any_trî
kernel_size&torch.nn.modules.fold.Fold.kernel_size¶
\TypeAlias[TypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]]°
QTypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]ª
FUnion[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object‹
'builtins.tuple[torch.nn.common_types.T]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object"builtins.tuple",torch.nn.common_types._scalar_or_tuple_any_t"!torch.nn.common_types._size_any_trè
dilation#torch.nn.modules.fold.Fold.dilation¶
\TypeAlias[TypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]]°
QTypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]ª
FUnion[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object‹
'builtins.tuple[torch.nn.common_types.T]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object"builtins.tuple",torch.nn.common_types._scalar_or_tuple_any_t"!torch.nn.common_types._size_any_træ
padding"torch.nn.modules.fold.Fold.padding¶
\TypeAlias[TypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]]°
QTypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]ª
FUnion[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object‹
'builtins.tuple[torch.nn.common_types.T]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object"builtins.tuple",torch.nn.common_types._scalar_or_tuple_any_t"!torch.nn.common_types._size_any_trä
stride!torch.nn.modules.fold.Fold.stride¶
\TypeAlias[TypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]]°
QTypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]ª
FUnion[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object‹
'builtins.tuple[torch.nn.common_types.T]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object"builtins.tuple",torch.nn.common_types._scalar_or_tuple_any_t"!torch.nn.common_types._size_any_t¯+
Unfoldtorch.nn.modules.fold.Unfold"torch.nn.modules.module.Module*©
__init__%torch.nn.modules.fold.Unfold.__init__"
None*F
self<
torch.nn.modules.fold.Unfold"torch.nn.modules.fold.Unfold*È
kernel_size¶
\TypeAlias[TypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]]°
QTypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]ª
FUnion[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object‹
'builtins.tuple[torch.nn.common_types.T]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object"builtins.tuple",torch.nn.common_types._scalar_or_tuple_any_t"!torch.nn.common_types._size_any_t*Ç
dilation¶
\TypeAlias[TypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]]°
QTypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]ª
FUnion[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object‹
'builtins.tuple[torch.nn.common_types.T]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object"builtins.tuple",torch.nn.common_types._scalar_or_tuple_any_t"!torch.nn.common_types._size_any_t *Æ
padding¶
\TypeAlias[TypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]]°
QTypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]ª
FUnion[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object‹
'builtins.tuple[torch.nn.common_types.T]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object"builtins.tuple",torch.nn.common_types._scalar_or_tuple_any_t"!torch.nn.common_types._size_any_t *Å
stride¶
\TypeAlias[TypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]]°
QTypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]ª
FUnion[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object‹
'builtins.tuple[torch.nn.common_types.T]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object"builtins.tuple",torch.nn.common_types._scalar_or_tuple_any_t"!torch.nn.common_types._size_any_t *Þ
forward$torch.nn.modules.fold.Unfold.forward",
torch._tensor.Tensor"torch._tensor.Tensor*F
self<
torch.nn.modules.fold.Unfold"torch.nn.modules.fold.Unfold*7
input,
torch._tensor.Tensor"torch._tensor.Tensor*›

extra_repr'torch.nn.modules.fold.Unfold.extra_repr"
builtins.str"builtins.str*F
self<
torch.nn.modules.fold.Unfold"torch.nn.modules.fold.Unfoldr‡
__constants__*torch.nn.modules.fold.Unfold.__constants__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listrð
kernel_size(torch.nn.modules.fold.Unfold.kernel_size¶
\TypeAlias[TypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]]°
QTypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]ª
FUnion[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object‹
'builtins.tuple[torch.nn.common_types.T]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object"builtins.tuple",torch.nn.common_types._scalar_or_tuple_any_t"!torch.nn.common_types._size_any_trê
dilation%torch.nn.modules.fold.Unfold.dilation¶
\TypeAlias[TypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]]°
QTypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]ª
FUnion[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object‹
'builtins.tuple[torch.nn.common_types.T]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object"builtins.tuple",torch.nn.common_types._scalar_or_tuple_any_t"!torch.nn.common_types._size_any_trè
padding$torch.nn.modules.fold.Unfold.padding¶
\TypeAlias[TypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]]°
QTypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]ª
FUnion[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object‹
'builtins.tuple[torch.nn.common_types.T]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object"builtins.tuple",torch.nn.common_types._scalar_or_tuple_any_t"!torch.nn.common_types._size_any_træ
stride#torch.nn.modules.fold.Unfold.stride¶
\TypeAlias[TypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]]°
QTypeAlias[Union[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]]ª
FUnion[torch.nn.common_types.T,builtins.tuple[torch.nn.common_types.T]]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object‹
'builtins.tuple[torch.nn.common_types.T]P
torch.nn.common_types.T"
builtins.object"builtins.object"builtins.object"builtins.tuple",torch.nn.common_types._scalar_or_tuple_any_t"!torch.nn.common_types._size_any_t*‘
__annotations__%torch.nn.modules.fold.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
Ftorch.nn.functional *t
__all__torch.nn.modules.fold.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list