
	posixpath	posixpath"P
abspathposixpath.abspath"
typing.AnyStr*
path
typing.AnyStrz27"O
basenameposixpath.basename"
typing.AnyStr*
p
typing.AnyStrz27"M
dirnameposixpath.dirname"
typing.AnyStr*
p
typing.AnyStrz27"V

expanduserposixpath.expanduser"
typing.AnyStr*
path
typing.AnyStrz27"V

expandvarsposixpath.expandvars"
typing.AnyStr*
path
typing.AnyStrz27"O
normcaseposixpath.normcase"
typing.AnyStr*
s
typing.AnyStrz27"R
normpathposixpath.normpath"
typing.AnyStr*
path
typing.AnyStrz27"R
realpathposixpath.realpath"
typing.AnyStr*
path
typing.AnyStrz27"ñ
commonprefixposixpath.commonprefix"
Any*a
mZ
!typing.Sequence[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Sequencez27"p
lexistsposixpath.lexists"
builtins.bool"builtins.bool*.
path$
builtins.unicode"builtins.unicodez27"î
lexistsposixpath.lexists"
builtins.bool"builtins.bool*¡
path∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39"x
getatimeposixpath.getatime" 
builtins.float"builtins.float*2
filename$
builtins.unicode"builtins.unicodez27"x
getmtimeposixpath.getmtime" 
builtins.float"builtins.float*2
filename$
builtins.unicode"builtins.unicodez27"x
getctimeposixpath.getctime" 
builtins.float"builtins.float*2
filename$
builtins.unicode"builtins.unicodez27"r
getsizeposixpath.getsize"
builtins.int"builtins.int*2
filename$
builtins.unicode"builtins.unicodez27"i
isabsposixpath.isabs"
builtins.bool"builtins.bool*+
s$
builtins.unicode"builtins.unicodez27"ç
isabsposixpath.isabs"
builtins.bool"builtins.bool*æ
s∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39"n
isfileposixpath.isfile"
builtins.bool"builtins.bool*.
path$
builtins.unicode"builtins.unicodez27"i
isdirposixpath.isdir"
builtins.bool"builtins.bool*+
s$
builtins.unicode"builtins.unicodez27"n
islinkposixpath.islink"
builtins.bool"builtins.bool*.
path$
builtins.unicode"builtins.unicodez27"í
islinkposixpath.islink"
builtins.bool"builtins.bool*¡
path∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39"p
ismountposixpath.ismount"
builtins.bool"builtins.bool*.
path$
builtins.unicode"builtins.unicodez27"î
ismountposixpath.ismount"
builtins.bool"builtins.bool*¡
path∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39"û
samefileposixpath.samefile"
builtins.bool"builtins.bool*,
f1$
builtins.unicode"builtins.unicode*,
f2$
builtins.unicode"builtins.unicodez27"ò
sameopenfileposixpath.sameopenfile"
builtins.bool"builtins.bool*%
fp1
builtins.int"builtins.int*%
fp2
builtins.int"builtins.intz27"¢
samestatposixpath.samestat"
builtins.bool"builtins.bool*.
s1&
posix.stat_result"posix.stat_result*.
s2&
posix.stat_result"posix.stat_resultz27"Ñ
splitposixpath.split"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*
p
typing.AnyStrz27"é

splitdriveposixpath.splitdrive"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*
p
typing.AnyStrz27"ä
splitextposixpath.splitext"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*
p
typing.AnyStrz27"ä
splituncposixpath.splitunc"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*
p
typing.AnyStrz27"¥
walkposixpath.walk"
None*
path
typing.AnyStr*V
visitK
CallableType[builtins.function]&
builtins.function"builtins.function*
arg
posixpath._Tz27*Æ
joinposixpath.joinç
joinposixpath.join"
builtins.str"builtins.str*$
__p1
builtins.str"builtins.str*#
p
builtins.str"builtins.str0:overloadXó
joinposixpath.join"$
builtins.unicode"builtins.unicode*$
__p1
builtins.str"builtins.str*$
__p2
builtins.str"builtins.str*$
__p3
builtins.str"builtins.str*,
__p4$
builtins.unicode"builtins.unicode*+
p$
builtins.unicode"builtins.unicode0:overloadXÒ
joinposixpath.join"$
builtins.unicode"builtins.unicode*$
__p1
builtins.str"builtins.str*$
__p2
builtins.str"builtins.str*,
__p3$
builtins.unicode"builtins.unicode*+
p$
builtins.unicode"builtins.unicode0:overloadXÀ
joinposixpath.join"$
builtins.unicode"builtins.unicode*$
__p1
builtins.str"builtins.str*,
__p2$
builtins.unicode"builtins.unicode*+
p$
builtins.unicode"builtins.unicode0:overloadX•
joinposixpath.join"$
builtins.unicode"builtins.unicode*,
__p1$
builtins.unicode"builtins.unicode*+
p$
builtins.unicode"builtins.unicode0:overloadX"27*∏	
joinposixpath.joinÆ
joinposixpath.join"
builtins.str"builtins.str*Ò
aÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*ı
pathsÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath0:overloadX⁄
joinposixpath.join" 
builtins.bytes"builtins.bytes*Ö
a˝
<TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]]•
1Union[builtins.bytes,os.PathLike[builtins.bytes]] 
builtins.bytes"builtins.bytesL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.BytesPath*â
paths˝
<TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]]•
1Union[builtins.bytes,os.PathLike[builtins.bytes]] 
builtins.bytes"builtins.bytesL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.BytesPath0:overloadX"35"36"37"38"39*»
relpathposixpath.relpath√
relpathposixpath.relpath"
builtins.str"builtins.str*&
path
builtins.str"builtins.str*Q
startD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadXﬂ
relpathposixpath.relpath"$
builtins.unicode"builtins.unicode*.
path$
builtins.unicode"builtins.unicode*]
startP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None 0:overloadX"27*»
relpathposixpath.relpathú
relpathposixpath.relpath" 
builtins.bytes"builtins.bytes*à
path˝
<TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]]•
1Union[builtins.bytes,os.PathLike[builtins.bytes]] 
builtins.bytes"builtins.bytesL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.BytesPath*¬
start¥
6Union[builtins.bytes,os.PathLike[builtins.bytes],None] 
builtins.bytes"builtins.bytesL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None 0:overloadXˆ
relpathposixpath.relpath"
builtins.str"builtins.str*Ù
pathÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*¥
start¶
2Union[builtins.str,os.PathLike[builtins.str],None]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
None 0:overloadX"35"36"37"38"39*î
abspathposixpath.abspathÖ
abspathposixpath.abspath"
typing.AnyStr*F
path<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadXZ
abspathposixpath.abspath"
typing.AnyStr*
path
typing.AnyStr0:overloadX"35"36"37"38"39*î
basenameposixpath.basenameÑ
basenameposixpath.basename"
typing.AnyStr*C
p<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadXY
basenameposixpath.basename"
typing.AnyStr*
p
typing.AnyStr0:overloadX"35"36"37"38"39*é
dirnameposixpath.dirnameÇ
dirnameposixpath.dirname"
typing.AnyStr*C
p<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadXW
dirnameposixpath.dirname"
typing.AnyStr*
p
typing.AnyStr0:overloadX"35"36"37"38"39*¶

expanduserposixpath.expanduserã

expanduserposixpath.expanduser"
typing.AnyStr*F
path<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadX`

expanduserposixpath.expanduser"
typing.AnyStr*
path
typing.AnyStr0:overloadX"35"36"37"38"39*¶

expandvarsposixpath.expandvarsã

expandvarsposixpath.expandvars"
typing.AnyStr*F
path<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadX`

expandvarsposixpath.expandvars"
typing.AnyStr*
path
typing.AnyStr0:overloadX"35"36"37"38"39*î
normcaseposixpath.normcaseÑ
normcaseposixpath.normcase"
typing.AnyStr*C
s<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadXY
normcaseposixpath.normcase"
typing.AnyStr*
s
typing.AnyStr0:overloadX"35"36"37"38"39*ö
normpathposixpath.normpathá
normpathposixpath.normpath"
typing.AnyStr*F
path<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadX\
normpathposixpath.normpath"
typing.AnyStr*
path
typing.AnyStr0:overloadX"35"36"37"38"39*¢

commonpathposixpath.commonpath•

commonpathposixpath.commonpath"
builtins.str"builtins.str*‘
paths»
Ityping.Sequence[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]]È
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath"typing.Sequence0:overloadX¡

commonpathposixpath.commonpath" 
builtins.bytes"builtins.bytes*Ï
paths‡
Mtyping.Sequence[TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]]]˝
<TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]]•
1Union[builtins.bytes,os.PathLike[builtins.bytes]] 
builtins.bytes"builtins.bytesL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.BytesPath"typing.Sequence0:overloadX"35"36"37"38"39*¢
realpathposixpath.realpathã
realpathposixpath.realpath"
typing.AnyStr*J
filename<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadX`
realpathposixpath.realpath"
typing.AnyStr*
filename
typing.AnyStr0:overloadX"35"36"37"38"39*˘
splitposixpath.splitπ
splitposixpath.split"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*C
p<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadXé
splitposixpath.split"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*
p
typing.AnyStr0:overloadX"35"36"37"38"39*ó

splitdriveposixpath.splitdrive√

splitdriveposixpath.splitdrive"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*C
p<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadXò

splitdriveposixpath.splitdrive"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*
p
typing.AnyStr0:overloadX"35"36"37"38"39*ã
splitextposixpath.splitextø
splitextposixpath.splitext"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*C
p<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadXî
splitextposixpath.splitext"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*
p
typing.AnyStr0:overloadX"35"36"37"38"39