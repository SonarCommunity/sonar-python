
openpyxl.styles.colorsä
RGBopenpyxl.styles.colors.RGB"openpyxl.descriptors.base.Typed*©
__set__"openpyxl.styles.colors.RGB.__set__"
None*B
self8
openpyxl.styles.colors.RGB"openpyxl.styles.colors.RGB*Ç
instanceÛ
QUnion[openpyxl.descriptors.serialisable.Serialisable,openpyxl.descriptors.Strict]`
.openpyxl.descriptors.serialisable.Serialisable".openpyxl.descriptors.serialisable.Serialisable:
openpyxl.descriptors.Strict"openpyxl.descriptors.Strict*
value
Anyz36z37z38z39z310j36j37j38j39j310rÑ
expected_type(openpyxl.styles.colors.RGB.expected_type4
Type[builtins.str]
builtins.str"builtins.str*36*37*38*39*310óâ
Coloropenpyxl.styles.colors.Color".openpyxl.descriptors.serialisable.Serialisable*Ó9
__init__%openpyxl.styles.colors.Color.__init__"
None*F
self<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color*
rgb
Any *Ç
indexedÚ
ÖUnion[TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]],None]€
˘TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]≠	
ÓUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.strŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt
None *¯
autoÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *Ä
themeÚ
ÖUnion[TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]],None]€
˘TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]≠	
ÓUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.strŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt
None *ñ
tintâ
ÂTypeAlias[Union[builtins.float,typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]]]Ì
⁄Union[builtins.float,typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]] 
builtins.float"builtins.float,
typing.SupportsFloat"typing.SupportsFloatB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex
builtins.str"builtins.strŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer"-openpyxl.descriptors.base._ConvertibleToFloat *Ä
indexÚ
ÖUnion[TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]],None]€
˘TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]≠	
ÓUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.strŸ
ÇTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]]]µ
wUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]] 
builtins.bytes"builtins.bytesï
aTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData]]í
VUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt
None *.
type"
builtins.object"builtins.object z36z37*√?
__init__%openpyxl.styles.colors.Color.__init__"
None*F
self<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color*
rgb
Any *ª
indexed´
ôUnion[TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]],None]Ä
çTypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]æ

ÇUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.str÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt
None *¯
autoÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *π
theme´
ôUnion[TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]],None]Ä
çTypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]æ

ÇUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.str÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt
None *ª
tintÆ
˘TypeAlias[Union[builtins.float,typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]]]˛	
ÓUnion[builtins.float,typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]] 
builtins.float"builtins.float,
typing.SupportsFloat"typing.SupportsFloatB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex
builtins.str"builtins.str÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer"-openpyxl.descriptors.base._ConvertibleToFloat *π
index´
ôUnion[TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]],None]Ä
çTypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]æ

ÇUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.str÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt
None *.
type"
builtins.object"builtins.object z38z39z310*H
__iter__%openpyxl.styles.colors.Color.__iter__* z36z37z38z39z310*X
index"openpyxl.styles.colors.Color.index*
self0:property`z36z37z38z39z310*H
__add__$openpyxl.styles.colors.Color.__add__* * z36z37z38z39z3102´
value"openpyxl.styles.colors.Color.valueE
value"openpyxl.styles.colors.Color.value*
self0:propertyX`°
value"openpyxl.styles.colors.Color.value"
None*F
self<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color*
value
Any0:value.setter"36"37"38"39"310j36j37j38j39j310rb
tagname$openpyxl.styles.colors.Color.tagname
builtins.str"builtins.str*36*37*38*39*310ro
rgb openpyxl.styles.colors.Color.rgb1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310r·
indexed$openpyxl.styles.colors.Color.indexedö
9openpyxl.descriptors.base.Integer[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"!openpyxl.descriptors.base.Integer*36*37*38*39*310r’
auto!openpyxl.styles.colors.Color.autoî
6openpyxl.descriptors.base.Bool[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Bool*36*37*38*39*310r›
theme"openpyxl.styles.colors.Color.themeö
9openpyxl.descriptors.base.Integer[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"!openpyxl.descriptors.base.Integer*36*37*38*39*310rä
tint!openpyxl.styles.colors.Color.tint…
Gopenpyxl.descriptors.base.MinMax[builtins.float,Literal[builtins.bool]] 
builtins.float"builtins.float:
Literal[builtins.bool]	
builtins.bool"builtins.bool" openpyxl.descriptors.base.MinMax*36*37*38*39*310rŸ
type!openpyxl.styles.colors.Color.typeò
8openpyxl.descriptors.base.String[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool" openpyxl.descriptors.base.String*36*37*38*39*310Ç
ColorDescriptor&openpyxl.styles.colors.ColorDescriptor"openpyxl.descriptors.base.Typed*Õ
__set__.openpyxl.styles.colors.ColorDescriptor.__set__"
None*Z
selfP
&openpyxl.styles.colors.ColorDescriptor"&openpyxl.styles.colors.ColorDescriptor*Ç
instanceÛ
QUnion[openpyxl.descriptors.serialisable.Serialisable,openpyxl.descriptors.Strict]`
.openpyxl.descriptors.serialisable.Serialisable".openpyxl.descriptors.serialisable.Serialisable:
openpyxl.descriptors.Strict"openpyxl.descriptors.Strict*
value
Anyz36z37z38z39z310j36j37j38j39j310r¿
expected_type4openpyxl.styles.colors.ColorDescriptor.expected_typed
"Type[openpyxl.styles.colors.Color]<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color*36*37*38*39*310◊
RgbColoropenpyxl.styles.colors.RgbColor".openpyxl.descriptors.serialisable.Serialisable*â
__init__(openpyxl.styles.colors.RgbColor.__init__"
None*L
selfB
openpyxl.styles.colors.RgbColor"openpyxl.styles.colors.RgbColor*f
rgb[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z36z37z38z39z310j36j37j38j39j310re
tagname'openpyxl.styles.colors.RgbColor.tagname
builtins.str"builtins.str*36*37*38*39*310rr
rgb#openpyxl.styles.colors.RgbColor.rgb1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310Ç	
	ColorList openpyxl.styles.colors.ColorList".openpyxl.descriptors.serialisable.Serialisable*‹
__init__)openpyxl.styles.colors.ColorList.__init__"
None*N
selfD
 openpyxl.styles.colors.ColorList" openpyxl.styles.colors.ColorList*
indexedColors
Any *
	mruColors
Any z36z37z38z39z310*∫
__bool__)openpyxl.styles.colors.ColorList.__bool__"
builtins.bool"builtins.bool*N
selfD
 openpyxl.styles.colors.ColorList" openpyxl.styles.colors.ColorListz36z37z38z39z310*\
index&openpyxl.styles.colors.ColorList.index*
self0:property`z36z37z38z39z310j36j37j38j39j310rf
tagname(openpyxl.styles.colors.ColorList.tagname
builtins.str"builtins.str*36*37*38*39*310rá
indexedColors.openpyxl.styles.colors.ColorList.indexedColors1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310r
	mruColors*openpyxl.styles.colors.ColorList.mruColors1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310r†
__elements__-openpyxl.styles.colors.ColorList.__elements__L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*36*37*38*39*310*ß
__annotations__&openpyxl.styles.colors.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*y
COLOR_INDEX"openpyxl.styles.colors.COLOR_INDEX1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*m
BLACKopenpyxl.styles.colors.BLACK1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*m
WHITEopenpyxl.styles.colors.WHITE1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*k
BLUEopenpyxl.styles.colors.BLUE1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*w

aRGB_REGEX!openpyxl.styles.colors.aRGB_REGEX1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310