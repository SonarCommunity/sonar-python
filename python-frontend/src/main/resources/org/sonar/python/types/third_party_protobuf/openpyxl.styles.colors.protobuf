
openpyxl.styles.colors»
RGBopenpyxl.styles.colors.RGB"openpyxl.descriptors.base.Typed2´
__init__#openpyxl.styles.colors.RGB.__init__ˆ
__init__#openpyxl.styles.colors.RGB.__init__"
None*B
self8
openpyxl.styles.colors.RGB"openpyxl.styles.colors.RGB*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *

allow_none
Any0:overloadX¯
__init__#openpyxl.styles.colors.RGB.__init__"
None*B
self8
openpyxl.styles.colors.RGB"openpyxl.styles.colors.RGB*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *

allow_none
Any 0:overloadX"36"372•
__init__#openpyxl.styles.colors.RGB.__init__©
__init__#openpyxl.styles.colors.RGB.__init__"
None*B
self8
openpyxl.styles.colors.RGB"openpyxl.styles.colors.RGB*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *J

allow_none:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadX´
__init__#openpyxl.styles.colors.RGB.__init__"
None*B
self8
openpyxl.styles.colors.RGB"openpyxl.styles.colors.RGB*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *L

allow_none:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadX"38"39"310"311"312"3132Ì
__set__"openpyxl.styles.colors.RGB.__set__ﬂ
__set__"openpyxl.styles.colors.RGB.__set__"
None*B
self8
openpyxl.styles.colors.RGB"openpyxl.styles.colors.RGB*Ç
instanceÛ
QUnion[openpyxl.descriptors.serialisable.Serialisable,openpyxl.descriptors.Strict]`
.openpyxl.descriptors.serialisable.Serialisable".openpyxl.descriptors.serialisable.Serialisable:
openpyxl.descriptors.Strict"openpyxl.descriptors.Strict*O
valueD
Union[builtins.str,None]
builtins.str"builtins.str
None0:overloadX∑
__set__"openpyxl.styles.colors.RGB.__set__"
None*B
self8
openpyxl.styles.colors.RGB"openpyxl.styles.colors.RGB*Ç
instanceÛ
QUnion[openpyxl.descriptors.serialisable.Serialisable,openpyxl.descriptors.Strict]`
.openpyxl.descriptors.serialisable.Serialisable".openpyxl.descriptors.serialisable.Serialisable:
openpyxl.descriptors.Strict"openpyxl.descriptors.Strict*'
value
builtins.str"builtins.str0:overloadX"36"37"38"39"310"311"312"313j36j37j38j39j310j311j312j313rô
expected_type(openpyxl.styles.colors.RGB.expected_type:
Type[builtins.str]
builtins.str"builtins.str"type*36*37*38*39*310*311*312*313ı"
Coloropenpyxl.styles.colors.Color".openpyxl.descriptors.serialisable.Serialisable*ú
__init__%openpyxl.styles.colors.Color.__init__"
None*F
self<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color*
rgb
Any *5
indexed&
Union[Any,None]
Any
None *¯
autoÎ
JUnion[TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]],None]ê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool
None *3
theme&
Union[Any,None]
Any
None *
tint
Any *3
index&
Union[Any,None]
Any
None *.
type"
builtins.object"builtins.object z36z37z38z39z310z311z312z313*æ
__iter__%openpyxl.styles.colors.Color.__iter__"¶
1typing.Iterator[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Iterator*><
openpyxl.styles.colors.Color"openpyxl.styles.colors.Colorz36z37z38z39z310z311z312z313*∂
index"openpyxl.styles.colors.Color.index"é
.Union[builtins.str,builtins.int,builtins.bool]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.bool"builtins.bool*F
self<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color0:property`z36z37z38z39z310z311z312z3132ô
value"openpyxl.styles.colors.Color.valueî
value"openpyxl.styles.colors.Color.value"é
.Union[builtins.str,builtins.int,builtins.bool]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.bool"builtins.bool*F
self<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color0:propertyX`∞
value"openpyxl.styles.colors.Color.value"
None*F
self<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color*†
valueî
VUnion[builtins.str,Any,TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]]
builtins.str"builtins.str
Anyê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool0:value.setter"36"37"38"39"310"311"312"3132≈
__add__$openpyxl.styles.colors.Color.__add__à
__add__$openpyxl.styles.colors.Color.__add__"Å
!openpyxl.styles.colors.Color.Self<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color"openpyxl.styles.colors.Color*ÑÅ
!openpyxl.styles.colors.Color.Self<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color"openpyxl.styles.colors.Color*><
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color0:overloadX‰
__add__$openpyxl.styles.colors.Color.__add__"Ø
openpyxl.styles.colors._S`
.openpyxl.descriptors.serialisable.Serialisable".openpyxl.descriptors.serialisable.Serialisable".openpyxl.descriptors.serialisable.Serialisable*><
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color*≤Ø
openpyxl.styles.colors._S`
.openpyxl.descriptors.serialisable.Serialisable".openpyxl.descriptors.serialisable.Serialisable".openpyxl.descriptors.serialisable.Serialisable0:overloadX"36"37"38"39"310"311"312"313j36j37j38j39j310j311j312j313rq
tagname$openpyxl.styles.colors.Color.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313rÖ
rgb openpyxl.styles.colors.Color.rgb8
openpyxl.styles.colors.RGB"openpyxl.styles.colors.RGB*36*37*38*39*310*311*312*313rõ
indexed$openpyxl.styles.colors.Color.indexedF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313rè
auto!openpyxl.styles.colors.Color.auto@
openpyxl.descriptors.base.Bool"openpyxl.descriptors.base.Bool*36*37*38*39*310*311*312*313ró
theme"openpyxl.styles.colors.Color.themeF
!openpyxl.descriptors.base.Integer"!openpyxl.descriptors.base.Integer*36*37*38*39*310*311*312*313r°
tint!openpyxl.styles.colors.Color.tintR
%openpyxl.descriptors.base.MinMax[Any]
Any" openpyxl.descriptors.base.MinMax*36*37*38*39*310*311*312*313rì
type!openpyxl.styles.colors.Color.typeD
 openpyxl.descriptors.base.String" openpyxl.descriptors.base.String*36*37*38*39*310*311*312*313∆
ColorDescriptor&openpyxl.styles.colors.ColorDescriptor"openpyxl.descriptors.base.Typed2ˇ
__init__/openpyxl.styles.colors.ColorDescriptor.__init__ö
__init__/openpyxl.styles.colors.ColorDescriptor.__init__"
None*Z
selfP
&openpyxl.styles.colors.ColorDescriptor"&openpyxl.styles.colors.ColorDescriptor*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *

allow_none
Any0:overloadXú
__init__/openpyxl.styles.colors.ColorDescriptor.__init__"
None*Z
selfP
&openpyxl.styles.colors.ColorDescriptor"&openpyxl.styles.colors.ColorDescriptor*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *

allow_none
Any 0:overloadX"36"372˘
__init__/openpyxl.styles.colors.ColorDescriptor.__init__Õ
__init__/openpyxl.styles.colors.ColorDescriptor.__init__"
None*Z
selfP
&openpyxl.styles.colors.ColorDescriptor"&openpyxl.styles.colors.ColorDescriptor*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *J

allow_none:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadXœ
__init__/openpyxl.styles.colors.ColorDescriptor.__init__"
None*Z
selfP
&openpyxl.styles.colors.ColorDescriptor"&openpyxl.styles.colors.ColorDescriptor*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *L

allow_none:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadX"38"39"310"311"312"3132Ô
__set__.openpyxl.styles.colors.ColorDescriptor.__set__€
__set__.openpyxl.styles.colors.ColorDescriptor.__set__"
None*Z
selfP
&openpyxl.styles.colors.ColorDescriptor"&openpyxl.styles.colors.ColorDescriptor*Ç
instanceÛ
QUnion[openpyxl.descriptors.serialisable.Serialisable,openpyxl.descriptors.Strict]`
.openpyxl.descriptors.serialisable.Serialisable".openpyxl.descriptors.serialisable.Serialisable:
openpyxl.descriptors.Strict"openpyxl.descriptors.Strict*'
value
builtins.str"builtins.str0:overloadX≥
__set__.openpyxl.styles.colors.ColorDescriptor.__set__"
None*Z
selfP
&openpyxl.styles.colors.ColorDescriptor"&openpyxl.styles.colors.ColorDescriptor*Ç
instanceÛ
QUnion[openpyxl.descriptors.serialisable.Serialisable,openpyxl.descriptors.Strict]`
.openpyxl.descriptors.serialisable.Serialisable".openpyxl.descriptors.serialisable.Serialisable:
openpyxl.descriptors.Strict"openpyxl.descriptors.Strict*
valuet
(Union[openpyxl.styles.colors.Color,None]<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color
None0:overloadX˚
__set__.openpyxl.styles.colors.ColorDescriptor.__set__"
None*Z
selfP
&openpyxl.styles.colors.ColorDescriptor"&openpyxl.styles.colors.ColorDescriptor*Ç
instanceÛ
QUnion[openpyxl.descriptors.serialisable.Serialisable,openpyxl.descriptors.Strict]`
.openpyxl.descriptors.serialisable.Serialisable".openpyxl.descriptors.serialisable.Serialisable:
openpyxl.descriptors.Strict"openpyxl.descriptors.Strict*G
value<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color0:overloadX"36"37"38"39"310"311"312"313j36j37j38j39j310j311j312j313r’
expected_type4openpyxl.styles.colors.ColorDescriptor.expected_typej
"Type[openpyxl.styles.colors.Color]<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color"type*36*37*38*39*310*311*312*313⁄
RgbColoropenpyxl.styles.colors.RgbColor".openpyxl.descriptors.serialisable.Serialisable*◊
__init__(openpyxl.styles.colors.RgbColor.__init__"
None*L
selfB
openpyxl.styles.colors.RgbColor"openpyxl.styles.colors.RgbColor*%
rgb
builtins.str"builtins.strz36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rt
tagname'openpyxl.styles.colors.RgbColor.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313rà
rgb#openpyxl.styles.colors.RgbColor.rgb8
openpyxl.styles.colors.RGB"openpyxl.styles.colors.RGB*36*37*38*39*310*311*312*313ÿ
	ColorList openpyxl.styles.colors.ColorList".openpyxl.descriptors.serialisable.Serialisable*µ
__init__)openpyxl.styles.colors.ColorList.__init__"
None*N
selfD
 openpyxl.styles.colors.ColorList" openpyxl.styles.colors.ColorList*ç
indexedColors˜
eUnion[builtins.list[openpyxl.styles.colors.RgbColor],builtins.tuple[openpyxl.styles.colors.RgbColor]]É
.builtins.list[openpyxl.styles.colors.RgbColor]B
openpyxl.styles.colors.RgbColor"openpyxl.styles.colors.RgbColor"builtins.listÖ
/builtins.tuple[openpyxl.styles.colors.RgbColor]B
openpyxl.styles.colors.RgbColor"openpyxl.styles.colors.RgbColor"builtins.tuple *Ô
	mruColors›
_Union[builtins.list[openpyxl.styles.colors.Color],builtins.tuple[openpyxl.styles.colors.Color]]z
+builtins.list[openpyxl.styles.colors.Color]<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color"builtins.list|
,builtins.tuple[openpyxl.styles.colors.Color]<
openpyxl.styles.colors.Color"openpyxl.styles.colors.Color"builtins.tuple z36z37z38z39z310z311z312z313*…
__bool__)openpyxl.styles.colors.ColorList.__bool__"
builtins.bool"builtins.bool*N
selfD
 openpyxl.styles.colors.ColorList" openpyxl.styles.colors.ColorListz36z37z38z39z310z311z312z313*˝
index&openpyxl.styles.colors.ColorList.index"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*N
selfD
 openpyxl.styles.colors.ColorList" openpyxl.styles.colors.ColorList0:property`z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313ru
tagname(openpyxl.styles.colors.ColorList.tagname
builtins.str"builtins.str*36*37*38*39*310*311*312*313rñ
indexedColors.openpyxl.styles.colors.ColorList.indexedColors1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313ré
	mruColors*openpyxl.styles.colors.ColorList.mruColors1
TypeAlias[Any]
Any"_typeshed.Incomplete*36*37*38*39*310*311*312*313rØ
__elements__-openpyxl.styles.colors.ColorList.__elements__L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*36*37*38*39*310*311*312*313*∂
__annotations__&openpyxl.styles.colors.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313*l
ConvertibleToFloat)openpyxl.styles.colors.ConvertibleToFloat
Any*36*37*38*39*310*311*312*313*h
ConvertibleToInt'openpyxl.styles.colors.ConvertibleToInt
Any*36*37*38*39*310*311*312*313*6
Finalopenpyxl.styles.colors.Final
Any*36*37*:
Literalopenpyxl.styles.colors.Literal
Any*36*37*B
COLOR_INDEX"openpyxl.styles.colors.COLOR_INDEX
Any*36*37*õ
COLOR_INDEX"openpyxl.styles.colors.COLOR_INDEXL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*38*39*310*311*312*313*6
BLACKopenpyxl.styles.colors.BLACK
Any*36*37*_
BLACKopenpyxl.styles.colors.BLACK
builtins.str"builtins.str*38*39*310*311*312*313*6
WHITEopenpyxl.styles.colors.WHITE
Any*36*37*_
WHITEopenpyxl.styles.colors.WHITE
builtins.str"builtins.str*38*39*310*311*312*313*4
BLUEopenpyxl.styles.colors.BLUE
Any*36*37*]
BLUEopenpyxl.styles.colors.BLUE
builtins.str"builtins.str*38*39*310*311*312*313*@

aRGB_REGEX!openpyxl.styles.colors.aRGB_REGEX
Any*36*37*ë

aRGB_REGEX!openpyxl.styles.colors.aRGB_REGEXD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*38*39*310*311*312*313