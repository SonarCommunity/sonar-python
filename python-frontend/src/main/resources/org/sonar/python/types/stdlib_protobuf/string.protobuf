
stringê
_TemplateMetaclassstring._TemplateMetaclass"builtins.type*Î
__init__"string._TemplateMetaclass.__init__"
None*?
cls6
string._TemplateMetaclass"string._TemplateMetaclass*&
name
builtins.str"builtins.str*Z
basesO
builtins.tuple[builtins.type]
builtins.type"builtins.type"builtins.tuple*`
dctW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictz36z37z38j36j37j38rV
pattern!string._TemplateMetaclass.pattern
builtins.str"builtins.str*36*37*38˚
Templatestring.Template"builtins.object*ù
__init__string.Template.__init__"
None*,
self"
string.Template"string.Template**
template
builtins.str"builtins.strz36z37z38z39z310*ø

substitutestring.Template.substitute"
builtins.str"builtins.str*,
self"
string.Template"string.Template*ÖÄ
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping *,
kwds"
builtins.object"builtins.objectz36z37z38z39z310*…
safe_substitutestring.Template.safe_substitute"
builtins.str"builtins.str*,
self"
string.Template"string.Template*ÖÄ
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping *,
kwds"
builtins.object"builtins.objectz36z37z38z39z310@bstring._TemplateMetaclassj36j37j38j39j310rW
templatestring.Template.template
builtins.str"builtins.str*36*37*38*39*310rY
	delimiterstring.Template.delimiter
builtins.str"builtins.str*36*37*38*39*310rY
	idpatternstring.Template.idpattern
builtins.str"builtins.str*36*37*38*39*310rã
braceidpatternstring.Template.braceidpatternD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310rQ
flagsstring.Template.flags
re.RegexFlag"re.RegexFlag*36*37*38*39*310r}
patternstring.Template.patternD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*36*37*38*39*310–"
	Formatterstring.Formatter"builtins.object*∫
_vformatstring.Formatter._vformat"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*.
self$
string.Formatter"string.Formatter*/
format_string
builtins.str"builtins.str*:
args0
typing.Sequence[Any]
Any"typing.Sequence*e
kwargsY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping*∞
	used_args†
.builtins.set[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"builtins.set*1
recursion_depth
builtins.int"builtins.int*2
auto_arg_index
builtins.int"builtins.int z36z37z38z39z310*Ö
parsestring.Formatter.parse"Ï
£typing.Iterable[Tuple[_typeshed.StrOrLiteralStr,Union[_typeshed.StrOrLiteralStr,None],Union[_typeshed.StrOrLiteralStr,None],Union[_typeshed.StrOrLiteralStr,None]]]≤
íTuple[_typeshed.StrOrLiteralStr,Union[_typeshed.StrOrLiteralStr,None],Union[_typeshed.StrOrLiteralStr,None],Union[_typeshed.StrOrLiteralStr,None]]
_typeshed.StrOrLiteralStrR
%Union[_typeshed.StrOrLiteralStr,None]
_typeshed.StrOrLiteralStr
NoneR
%Union[_typeshed.StrOrLiteralStr,None]
_typeshed.StrOrLiteralStr
NoneR
%Union[_typeshed.StrOrLiteralStr,None]
_typeshed.StrOrLiteralStr
None"typing.Iterable*.
self$
string.Formatter"string.Formatter*0
format_string
_typeshed.StrOrLiteralStrz36z37z38z39z310*∆
	get_fieldstring.Formatter.get_field"
Any*.
self$
string.Formatter"string.Formatter*,

field_name
builtins.str"builtins.str*:
args0
typing.Sequence[Any]
Any"typing.Sequence*e
kwargsY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mappingz36z37z38z39z310*É
	get_valuestring.Formatter.get_value"
Any*.
self$
string.Formatter"string.Formatter*i
key`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*:
args0
typing.Sequence[Any]
Any"typing.Sequence*e
kwargsY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mappingz36z37z38z39z310*‹
check_unused_args"string.Formatter.check_unused_args"
None*.
self$
string.Formatter"string.Formatter*∞
	used_args†
.builtins.set[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"builtins.set*:
args0
typing.Sequence[Any]
Any"typing.Sequence*e
kwargsY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mappingz36z37z38z39z310*æ
format_fieldstring.Formatter.format_field"
Any*.
self$
string.Formatter"string.Formatter*
value
Any*-
format_spec
builtins.str"builtins.strz36z37z38z39z310*ø
convert_fieldstring.Formatter.convert_field"
Any*.
self$
string.Formatter"string.Formatter*
value
Any*,

conversion
builtins.str"builtins.strz36z37z38z39z3102
formatstring.Formatter.formatÔ
formatstring.Formatter.format"
builtins.str"builtins.str*.
self$
string.Formatter"string.Formatter*
builtins.str"builtins.str*&
args
builtins.str"builtins.str*(
kwargs
builtins.str"builtins.str0:overloadX≈
formatstring.Formatter.format"
builtins.str"builtins.str*.
self$
string.Formatter"string.Formatter*
builtins.str"builtins.str*
args
Any*
kwargs
Any0:overloadX"36"37"38"39"3102°
vformatstring.Formatter.vformatê
vformatstring.Formatter.vformat"
builtins.str"builtins.str*.
self$
string.Formatter"string.Formatter*/
format_string
builtins.str"builtins.str*X
argsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*É
kwargsw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping0:overloadX”
vformatstring.Formatter.vformat"
builtins.str"builtins.str*.
self$
string.Formatter"string.Formatter*/
format_string
builtins.str"builtins.str*:
args0
typing.Sequence[Any]
Any"typing.Sequence*e
kwargsY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping0:overloadX"36"37"38"39"310j36j37j38j39j310‘
capwordsstring.capwords"
_typeshed.StrOrLiteralStr*$
s
_typeshed.StrOrLiteralStr*]
sepR
%Union[_typeshed.StrOrLiteralStr,None]
_typeshed.StrOrLiteralStr
None z36z37z38z39z310*ó
__annotations__string.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*z
__all__string.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*36*37*38*39*310*X
ascii_lettersstring.ascii_letters
builtins.str"builtins.str*36*37*38*39*310*\
ascii_lowercasestring.ascii_lowercase
builtins.str"builtins.str*36*37*38*39*310*\
ascii_uppercasestring.ascii_uppercase
builtins.str"builtins.str*36*37*38*39*310*J
digitsstring.digits
builtins.str"builtins.str*36*37*38*39*310*P
	hexdigitsstring.hexdigits
builtins.str"builtins.str*36*37*38*39*310*P
	octdigitsstring.octdigits
builtins.str"builtins.str*36*37*38*39*310*T
punctuationstring.punctuation
builtins.str"builtins.str*36*37*38*39*310*P
	printablestring.printable
builtins.str"builtins.str*36*37*38*39*310*R

whitespacestring.whitespace
builtins.str"builtins.str*36*37*38*39*310