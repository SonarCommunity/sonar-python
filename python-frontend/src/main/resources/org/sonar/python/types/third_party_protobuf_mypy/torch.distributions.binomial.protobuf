
torch.distributions.binomialÂ
Binomial%torch.distributions.binomial.Binomial"-torch.distributions.distribution.Distribution*‡
__init__.torch.distributions.binomial.Binomial.__init__*
self*
total_count *
probs *
logits *
validate_args *b
expand,torch.distributions.binomial.Binomial.expand*
self*
batch_shape*
	_instance *R
_new*torch.distributions.binomial.Binomial._new*
self*
args*

kwargs*D
support-torch.distributions.binomial.Binomial.support*
self0*J
mean*torch.distributions.binomial.Binomial.mean*
self0:property`*J
mode*torch.distributions.binomial.Binomial.mode*
self0:property`*R
variance.torch.distributions.binomial.Binomial.variance*
self0:property`*Q
logits,torch.distributions.binomial.Binomial.logits*
self0:lazy_property*O
probs+torch.distributions.binomial.Binomial.probs*
self0:lazy_property*X
param_shape1torch.distributions.binomial.Binomial.param_shape*
self0:property`*T
sample,torch.distributions.binomial.Binomial.sample*
self*
sample_shape *O
log_prob.torch.distributions.binomial.Binomial.log_prob*
self*	
value*B
entropy-torch.distributions.binomial.Binomial.entropy*
self*d
enumerate_support7torch.distributions.binomial.Binomial.enumerate_support*
self*
expand rš
arg_constraints5torch.distributions.binomial.Binomial.arg_constraintsÏ
Fbuiltins.dict[builtins.str,torch.distributions.constraints.Constraint]
builtins.str"builtins.strX
*torch.distributions.constraints.Constraint"*torch.distributions.constraints.Constraint"builtins.dictrt
has_enumerate_support;torch.distributions.binomial.Binomial.has_enumerate_support
builtins.bool"builtins.boolrI
total_count1torch.distributions.binomial.Binomial.total_count
Anyr?
_param,torch.distributions.binomial.Binomial._param
AnyD
_clamp_by_zero+torch.distributions.binomial._clamp_by_zero*
x*˜
__annotations__,torch.distributions.binomial.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*{
__all__$torch.distributions.binomial.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list