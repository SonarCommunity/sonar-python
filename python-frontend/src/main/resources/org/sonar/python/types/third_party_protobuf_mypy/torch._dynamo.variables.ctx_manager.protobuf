
#torch._dynamo.variables.ctx_managerÛ

ContextMangerState6torch._dynamo.variables.ctx_manager.ContextMangerState"builtins.object*S
cleanup>torch._dynamo.variables.ctx_manager.ContextMangerState.cleanup*
self*a
cleanup_assertEtorch._dynamo.variables.ctx_manager.ContextMangerState.cleanup_assert*
self*ÿ
__init__?torch._dynamo.variables.ctx_manager.ContextMangerState.__init__"
None*z
selfp
6torch._dynamo.variables.ctx_manager.ContextMangerState"6torch._dynamo.variables.ctx_manager.ContextMangerState*ô

cleanup_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *i
proxy\
 Union[torch.fx.proxy.Proxy,None],
torch.fx.proxy.Proxy"torch.fx.proxy.Proxy
None 8rÿ

cleanup_fnAtorch._dynamo.variables.ctx_manager.ContextMangerState.cleanup_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
Noner£
proxy<torch._dynamo.variables.ctx_manager.ContextMangerState.proxy\
 Union[torch.fx.proxy.Proxy,None],
torch.fx.proxy.Proxy"torch.fx.proxy.Proxy
Noner˝
__dataclass_fields__Ktorch._dynamo.variables.ctx_manager.ContextMangerState.__dataclass_fields__ó
2builtins.dict[builtins.str,dataclasses.Field[Any]]
builtins.str"builtins.str4
dataclasses.Field[Any]
Any"dataclasses.Field"builtins.dict√
ContextWrappingVariable;torch._dynamo.variables.ctx_manager.ContextWrappingVariable",torch._dynamo.variables.base.VariableTracker*ú
__init__Dtorch._dynamo.variables.ctx_manager.ContextWrappingVariable.__init__*
self*
target_values*
initial_values *
state *

kwargs*\
enterAtorch._dynamo.variables.ctx_manager.ContextWrappingVariable.enter*
self*
tx*|
set_cleanup_hookLtorch._dynamo.variables.ctx_manager.ContextWrappingVariable.set_cleanup_hook*
self*
tx*
fn *d
exit@torch._dynamo.variables.ctx_manager.ContextWrappingVariable.exit*
self*
tx*
args*w
reconstruct_typeLtorch._dynamo.variables.ctx_manager.ContextWrappingVariable.reconstruct_type*
self*
codegen*m
reconstructGtorch._dynamo.variables.ctx_manager.ContextWrappingVariable.reconstruct*
self*
codegen*`
module_nameGtorch._dynamo.variables.ctx_manager.ContextWrappingVariable.module_name*
self*X
fn_nameCtorch._dynamo.variables.ctx_manager.ContextWrappingVariable.fn_name*
self*Ì
call_functionItorch._dynamo.variables.ctx_manager.ContextWrappingVariable.call_function"\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker*Ñ
selfz
;torch._dynamo.variables.ctx_manager.ContextWrappingVariable";torch._dynamo.variables.ctx_manager.ContextWrappingVariable*
tx
Any*µ
args™
;builtins.list[torch._dynamo.variables.base.VariableTracker]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.list*‚
kwargs’
Hbuiltins.dict[builtins.str,torch._dynamo.variables.base.VariableTracker]
builtins.str"builtins.str\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.dictr¶
_nonvar_fieldsJtorch._dynamo.variables.ctx_manager.ContextWrappingVariable._nonvar_fieldsH
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.setrc
target_valuesItorch._dynamo.variables.ctx_manager.ContextWrappingVariable.target_values
Anyre
initial_valuesJtorch._dynamo.variables.ctx_manager.ContextWrappingVariable.initial_values
AnyrS
stateAtorch._dynamo.variables.ctx_manager.ContextWrappingVariable.state
Any¯
GenericContextWrappingVariableBtorch._dynamo.variables.ctx_manager.GenericContextWrappingVariable";torch._dynamo.variables.ctx_manager.ContextWrappingVariable*§
__init__Ktorch._dynamo.variables.ctx_manager.GenericContextWrappingVariable.__init__*
self*
target_values*
initial_values *
cm_obj *

kwargs*c
enterHtorch._dynamo.variables.ctx_manager.GenericContextWrappingVariable.enter*
self*
tx*k
exitGtorch._dynamo.variables.ctx_manager.GenericContextWrappingVariable.exit*
self*
tx*
argsr\
cm_objItorch._dynamo.variables.ctx_manager.GenericContextWrappingVariable.cm_obj
Any™
)GradInplaceRequiresGradCtxManagerVariableMtorch._dynamo.variables.ctx_manager.GradInplaceRequiresGradCtxManagerVariable";torch._dynamo.variables.ctx_manager.ContextWrappingVariable*ó
createTtorch._dynamo.variables.ctx_manager.GradInplaceRequiresGradCtxManagerVariable.create*
tx*
target_values*

kwargs0:staticmethodh*n
enterStorch._dynamo.variables.ctx_manager.GradInplaceRequiresGradCtxManagerVariable.enter*
self*
tx*v
exitRtorch._dynamo.variables.ctx_manager.GradInplaceRequiresGradCtxManagerVariable.exit*
self*
tx*
argsro

prev_stateXtorch._dynamo.variables.ctx_manager.GradInplaceRequiresGradCtxManagerVariable.prev_state
Any±
%JvpIncrementNestingCtxManagerVariableItorch._dynamo.variables.ctx_manager.JvpIncrementNestingCtxManagerVariable";torch._dynamo.variables.ctx_manager.ContextWrappingVariable*Ä
createPtorch._dynamo.variables.ctx_manager.JvpIncrementNestingCtxManagerVariable.create*
tx*

kwargs0:staticmethodh*j
enterOtorch._dynamo.variables.ctx_manager.JvpIncrementNestingCtxManagerVariable.enter*
self*
tx*r
exitNtorch._dynamo.variables.ctx_manager.JvpIncrementNestingCtxManagerVariable.exit*
self*
tx*
argsrú
_guards_singleton[torch._dynamo.variables.ctx_manager.JvpIncrementNestingCtxManagerVariable._guards_singleton*
torch._guards.Guard"torch._guards.GuardÓ
SetFwdGradEnabledContextManagerCtorch._dynamo.variables.ctx_manager.SetFwdGradEnabledContextManager";torch._dynamo.variables.ctx_manager.ContextWrappingVariable*ç
createJtorch._dynamo.variables.ctx_manager.SetFwdGradEnabledContextManager.create*
tx*
target_values*

kwargs0:staticmethodh*d
enterItorch._dynamo.variables.ctx_manager.SetFwdGradEnabledContextManager.enter*
self*
tx*l
exitHtorch._dynamo.variables.ctx_manager.SetFwdGradEnabledContextManager.exit*
self*
tx*
argsre

prev_stateNtorch._dynamo.variables.ctx_manager.SetFwdGradEnabledContextManager.prev_state
Anyπ
DualLevelContextManager;torch._dynamo.variables.ctx_manager.DualLevelContextManager";torch._dynamo.variables.ctx_manager.ContextWrappingVariable*r
createBtorch._dynamo.variables.ctx_manager.DualLevelContextManager.create*
tx*

kwargs0:staticmethodh*\
enterAtorch._dynamo.variables.ctx_manager.DualLevelContextManager.enter*
self*
tx*d
exit@torch._dynamo.variables.ctx_manager.DualLevelContextManager.exit*
self*
tx*
argsré
_guards_singletonMtorch._dynamo.variables.ctx_manager.DualLevelContextManager._guards_singleton*
torch._guards.Guard"torch._guards.Guardr[
	new_levelEtorch._dynamo.variables.ctx_manager.DualLevelContextManager.new_level
Any∑
&GradIncrementNestingCtxManagerVariableJtorch._dynamo.variables.ctx_manager.GradIncrementNestingCtxManagerVariable";torch._dynamo.variables.ctx_manager.ContextWrappingVariable*Å
createQtorch._dynamo.variables.ctx_manager.GradIncrementNestingCtxManagerVariable.create*
tx*

kwargs0:staticmethodh*k
enterPtorch._dynamo.variables.ctx_manager.GradIncrementNestingCtxManagerVariable.enter*
self*
tx*s
exitOtorch._dynamo.variables.ctx_manager.GradIncrementNestingCtxManagerVariable.exit*
self*
tx*
argsrù
_guards_singleton\torch._dynamo.variables.ctx_manager.GradIncrementNestingCtxManagerVariable._guards_singleton*
torch._guards.Guard"torch._guards.Guardà
CatchWarningsCtxManagerVariableCtorch._dynamo.variables.ctx_manager.CatchWarningsCtxManagerVariable";torch._dynamo.variables.ctx_manager.ContextWrappingVariable*á
createJtorch._dynamo.variables.ctx_manager.CatchWarningsCtxManagerVariable.create*
tx*
catch_warnings_args0:staticmethodh*á
__init__Ltorch._dynamo.variables.ctx_manager.CatchWarningsCtxManagerVariable.__init__*
self*
catch_warnings_args*

kwargs*d
enterItorch._dynamo.variables.ctx_manager.CatchWarningsCtxManagerVariable.enter*
self*
tx*p
reconstructOtorch._dynamo.variables.ctx_manager.CatchWarningsCtxManagerVariable.reconstruct*
self*
cgrw
catch_warnings_argsWtorch._dynamo.variables.ctx_manager.CatchWarningsCtxManagerVariable.catch_warnings_args
Any 
&VmapIncrementNestingCtxManagerVariableJtorch._dynamo.variables.ctx_manager.VmapIncrementNestingCtxManagerVariable";torch._dynamo.variables.ctx_manager.ContextWrappingVariable*î
createQtorch._dynamo.variables.ctx_manager.VmapIncrementNestingCtxManagerVariable.create*
tx*
target_values*

kwargs0:staticmethodh*k
enterPtorch._dynamo.variables.ctx_manager.VmapIncrementNestingCtxManagerVariable.enter*
self*
tx*s
exitOtorch._dynamo.variables.ctx_manager.VmapIncrementNestingCtxManagerVariable.exit*
self*
tx*
argsrù
_guards_singleton\torch._dynamo.variables.ctx_manager.VmapIncrementNestingCtxManagerVariable._guards_singleton*
torch._guards.Guard"torch._guards.Guardñ
GradModeVariable4torch._dynamo.variables.ctx_manager.GradModeVariable";torch._dynamo.variables.ctx_manager.ContextWrappingVariable*ê
create;torch._dynamo.variables.ctx_manager.GradModeVariable.create*
tx*
target_value*
initialized *

kwargs0:staticmethodh*õ
__init__=torch._dynamo.variables.ctx_manager.GradModeVariable.__init__*
self*
target_values*
initial_values *
initialized *

kwargs*U
enter:torch._dynamo.variables.ctx_manager.GradModeVariable.enter*
self*
tx*]
exit9torch._dynamo.variables.ctx_manager.GradModeVariable.exit*
self*
tx*
args*Ç
call_functionBtorch._dynamo.variables.ctx_manager.GradModeVariable.call_function"
Any*v
selfl
4torch._dynamo.variables.ctx_manager.GradModeVariable"4torch._dynamo.variables.ctx_manager.GradModeVariable*
tx
Any*µ
args™
;builtins.list[torch._dynamo.variables.base.VariableTracker]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.list*‚
kwargs’
Hbuiltins.dict[builtins.str,torch._dynamo.variables.base.VariableTracker]
builtins.str"builtins.str\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.dict*k

_call_func?torch._dynamo.variables.ctx_manager.GradModeVariable._call_func*
self*
tx*

values*Y
module_name@torch._dynamo.variables.ctx_manager.GradModeVariable.module_name*
self*Q
fn_name<torch._dynamo.variables.ctx_manager.GradModeVariable.fn_name*
selfrá
_guards_singletonFtorch._dynamo.variables.ctx_manager.GradModeVariable._guards_singleton*
torch._guards.Guard"torch._guards.Guardú
InferenceModeVariable9torch._dynamo.variables.ctx_manager.InferenceModeVariable";torch._dynamo.variables.ctx_manager.ContextWrappingVariable*Ç
create@torch._dynamo.variables.ctx_manager.InferenceModeVariable.create*
tx*
target_value*

kwargs0:staticmethodh*ç
__init__Btorch._dynamo.variables.ctx_manager.InferenceModeVariable.__init__*
self*
target_values*
initial_values *

kwargs*b
exit>torch._dynamo.variables.ctx_manager.InferenceModeVariable.exit*
self*
tx*
args*Z
enter?torch._dynamo.variables.ctx_manager.InferenceModeVariable.enter*
self*
tx*^
module_nameEtorch._dynamo.variables.ctx_manager.InferenceModeVariable.module_name*
self*V
fn_nameAtorch._dynamo.variables.ctx_manager.InferenceModeVariable.fn_name*
selfü
TorchFunctionDisableVariable@torch._dynamo.variables.ctx_manager.TorchFunctionDisableVariable";torch._dynamo.variables.ctx_manager.ContextWrappingVariable*w
createGtorch._dynamo.variables.ctx_manager.TorchFunctionDisableVariable.create*
tx*

kwargs0:staticmethodh*î
__init__Itorch._dynamo.variables.ctx_manager.TorchFunctionDisableVariable.__init__*
self*
target_values*
initial_values *

kwargs*a
enterFtorch._dynamo.variables.ctx_manager.TorchFunctionDisableVariable.enter*
self*
tx*w

_call_funcKtorch._dynamo.variables.ctx_manager.TorchFunctionDisableVariable._call_func*
self*
tx*

valuesrì
_guards_singletonRtorch._dynamo.variables.ctx_manager.TorchFunctionDisableVariable._guards_singleton*
torch._guards.Guard"torch._guards.Guardì
DeterministicAlgorithmsVariableCtorch._dynamo.variables.ctx_manager.DeterministicAlgorithmsVariable";torch._dynamo.variables.ctx_manager.ContextWrappingVariable*å
createJtorch._dynamo.variables.ctx_manager.DeterministicAlgorithmsVariable.create*
tx*
target_value*

kwargs0:staticmethodh*ó
__init__Ltorch._dynamo.variables.ctx_manager.DeterministicAlgorithmsVariable.__init__*
self*
target_values*
initial_values *

kwargs*d
enterItorch._dynamo.variables.ctx_manager.DeterministicAlgorithmsVariable.enter*
self*
tx*z

_call_funcNtorch._dynamo.variables.ctx_manager.DeterministicAlgorithmsVariable._call_func*
self*
tx*

values*h
module_nameOtorch._dynamo.variables.ctx_manager.DeterministicAlgorithmsVariable.module_name*
self*`
fn_nameKtorch._dynamo.variables.ctx_manager.DeterministicAlgorithmsVariable.fn_name*
selfrñ
_guards_singletonUtorch._dynamo.variables.ctx_manager.DeterministicAlgorithmsVariable._guards_singleton*
torch._guards.Guard"torch._guards.Guardä
!DisabledSavedTensorsHooksVariableEtorch._dynamo.variables.ctx_manager.DisabledSavedTensorsHooksVariable";torch._dynamo.variables.ctx_manager.ContextWrappingVariable*é
createLtorch._dynamo.variables.ctx_manager.DisabledSavedTensorsHooksVariable.create*
tx*
target_value*

kwargs0:staticmethodh*ô
__init__Ntorch._dynamo.variables.ctx_manager.DisabledSavedTensorsHooksVariable.__init__*
self*
target_values*
initial_values *

kwargs*f
enterKtorch._dynamo.variables.ctx_manager.DisabledSavedTensorsHooksVariable.enter*
self*
tx*|

_call_funcPtorch._dynamo.variables.ctx_manager.DisabledSavedTensorsHooksVariable._call_func*
self*
tx*

values*j
module_nameQtorch._dynamo.variables.ctx_manager.DisabledSavedTensorsHooksVariable.module_name*
self*b
fn_nameMtorch._dynamo.variables.ctx_manager.DisabledSavedTensorsHooksVariable.fn_name*
selfç
AutocastModeVariable8torch._dynamo.variables.ctx_manager.AutocastModeVariable";torch._dynamo.variables.ctx_manager.ContextWrappingVariable*{
create?torch._dynamo.variables.ctx_manager.AutocastModeVariable.create*
func*
args*

kwargs0:staticmethodh*å
__init__Atorch._dynamo.variables.ctx_manager.AutocastModeVariable.__init__*
self*
target_values*
initial_values *

kwargs*a
exit=torch._dynamo.variables.ctx_manager.AutocastModeVariable.exit*
self*
tx*
args*Y
enter>torch._dynamo.variables.ctx_manager.AutocastModeVariable.enter*
self*
tx*]
module_nameDtorch._dynamo.variables.ctx_manager.AutocastModeVariable.module_name*
self*U
fn_name@torch._dynamo.variables.ctx_manager.AutocastModeVariable.fn_name*
selfÙ
NullContextVariable7torch._dynamo.variables.ctx_manager.NullContextVariable";torch._dynamo.variables.ctx_manager.ContextWrappingVariable*w
__init__@torch._dynamo.variables.ctx_manager.NullContextVariable.__init__*
self*
target_values *

kwargs*X
enter=torch._dynamo.variables.ctx_manager.NullContextVariable.enter*
self*
tx*`
exit<torch._dynamo.variables.ctx_manager.NullContextVariable.exit*
self*
tx*
args*\
module_nameCtorch._dynamo.variables.ctx_manager.NullContextVariable.module_name*
self*T
fn_name?torch._dynamo.variables.ctx_manager.NullContextVariable.fn_name*
selfÖ
StreamContextVariable9torch._dynamo.variables.ctx_manager.StreamContextVariable";torch._dynamo.variables.ctx_manager.ContextWrappingVariable*Ç
create@torch._dynamo.variables.ctx_manager.StreamContextVariable.create*
tx*
target_value*

kwargs0:staticmethodh*ô
__init__Btorch._dynamo.variables.ctx_manager.StreamContextVariable.__init__*
self*
target_values*

device*
initial_values *

kwargs*Z
enter?torch._dynamo.variables.ctx_manager.StreamContextVariable.enter*
self*
tx*b
exit>torch._dynamo.variables.ctx_manager.StreamContextVariable.exit*
self*
tx*
argsrS
device@torch._dynamo.variables.ctx_manager.StreamContextVariable.device
Anyr[

set_streamDtorch._dynamo.variables.ctx_manager.StreamContextVariable.set_stream
Anyra
set_stream_idGtorch._dynamo.variables.ctx_manager.StreamContextVariable.set_stream_id
Any∏
PreserveVersionContextVariableBtorch._dynamo.variables.ctx_manager.PreserveVersionContextVariable";torch._dynamo.variables.ctx_manager.ContextWrappingVariable*w
constructorNtorch._dynamo.variables.ctx_manager.PreserveVersionContextVariable.constructor*
tx0:staticmethodh*ã
__init__Ktorch._dynamo.variables.ctx_manager.PreserveVersionContextVariable.__init__*
self*

tensor*
prev_version*

kwargs*c
enterHtorch._dynamo.variables.ctx_manager.PreserveVersionContextVariable.enter*
self*
tx*k
exitGtorch._dynamo.variables.ctx_manager.PreserveVersionContextVariable.exit*
self*
tx*
args*t
reconstructNtorch._dynamo.variables.ctx_manager.PreserveVersionContextVariable.reconstruct*
self*
codegenr\
tensorItorch._dynamo.variables.ctx_manager.PreserveVersionContextVariable.tensor
Anyrh
prev_versionOtorch._dynamo.variables.ctx_manager.PreserveVersionContextVariable.prev_version
Anyı

StreamVariable2torch._dynamo.variables.ctx_manager.StreamVariable",torch._dynamo.variables.base.VariableTracker*
__init__;torch._dynamo.variables.ctx_manager.StreamVariable.__init__*
self*	
proxy*	
value*

device*

kwargs*‡
call_method>torch._dynamo.variables.ctx_manager.StreamVariable.call_method"\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker*r
selfh
2torch._dynamo.variables.ctx_manager.StreamVariable"2torch._dynamo.variables.ctx_manager.StreamVariable*
tx
Any*
name
Any*µ
args™
;builtins.list[torch._dynamo.variables.base.VariableTracker]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.list*‚
kwargs’
Hbuiltins.dict[builtins.str,torch._dynamo.variables.base.VariableTracker]
builtins.str"builtins.str\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.dict*Q
as_proxy;torch._dynamo.variables.ctx_manager.StreamVariable.as_proxy*
self*d
reconstruct>torch._dynamo.variables.ctx_manager.StreamVariable.reconstruct*
self*
codegenrJ
proxy8torch._dynamo.variables.ctx_manager.StreamVariable.proxy
AnyrJ
value8torch._dynamo.variables.ctx_manager.StreamVariable.value
AnyrL
device9torch._dynamo.variables.ctx_manager.StreamVariable.device
Any¨	
EventVariable1torch._dynamo.variables.ctx_manager.EventVariable",torch._dynamo.variables.base.VariableTracker*r
__init__:torch._dynamo.variables.ctx_manager.EventVariable.__init__*
self*	
proxy*	
value*

kwargs*›
call_method=torch._dynamo.variables.ctx_manager.EventVariable.call_method"\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker*p
selff
1torch._dynamo.variables.ctx_manager.EventVariable"1torch._dynamo.variables.ctx_manager.EventVariable*
tx
Any*
name
Any*µ
args™
;builtins.list[torch._dynamo.variables.base.VariableTracker]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.list*‚
kwargs’
Hbuiltins.dict[builtins.str,torch._dynamo.variables.base.VariableTracker]
builtins.str"builtins.str\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.dict*P
as_proxy:torch._dynamo.variables.ctx_manager.EventVariable.as_proxy*
selfrI
proxy7torch._dynamo.variables.ctx_manager.EventVariable.proxy
AnyrI
value7torch._dynamo.variables.ctx_manager.EventVariable.value
Any»
WithExitFunctionVariable<torch._dynamo.variables.ctx_manager.WithExitFunctionVariable",torch._dynamo.variables.base.VariableTracker*î
__init__Etorch._dynamo.variables.ctx_manager.WithExitFunctionVariable.__init__"
None*Ü
self|
<torch._dynamo.variables.ctx_manager.WithExitFunctionVariable"<torch._dynamo.variables.ctx_manager.WithExitFunctionVariable*É
ctxz
;torch._dynamo.variables.ctx_manager.ContextWrappingVariable";torch._dynamo.variables.ctx_manager.ContextWrappingVariable*
target
Any*
kwargs
Any*
call_functionJtorch._dynamo.variables.ctx_manager.WithExitFunctionVariable.call_function"\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker*Ü
self|
<torch._dynamo.variables.ctx_manager.WithExitFunctionVariable"<torch._dynamo.variables.ctx_manager.WithExitFunctionVariable*
tx
Any*µ
args™
;builtins.list[torch._dynamo.variables.base.VariableTracker]\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.list*‚
kwargs’
Hbuiltins.dict[builtins.str,torch._dynamo.variables.base.VariableTracker]
builtins.str"builtins.str\
,torch._dynamo.variables.base.VariableTracker",torch._dynamo.variables.base.VariableTracker"builtins.dict*n
reconstructHtorch._dynamo.variables.ctx_manager.WithExitFunctionVariable.reconstruct*
self*
codegenrß
_nonvar_fieldsKtorch._dynamo.variables.ctx_manager.WithExitFunctionVariable._nonvar_fieldsH
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.setr√
ctx@torch._dynamo.variables.ctx_manager.WithExitFunctionVariable.ctxz
;torch._dynamo.variables.ctx_manager.ContextWrappingVariable";torch._dynamo.variables.ctx_manager.ContextWrappingVariablerV
targetCtorch._dynamo.variables.ctx_manager.WithExitFunctionVariable.target
Any*ü
__annotations__3torch._dynamo.variables.ctx_manager.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
torchtorch 