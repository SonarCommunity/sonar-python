
networkx.classes.graphöù
Graphnetworkx.classes.graph.Graph"typing.Collection*≥
to_directed_class.networkx.classes.graph.Graph.to_directed_class"ä
DType[networkx.classes.digraph.DiGraph[networkx.classes.graph._Node]]π
>networkx.classes.digraph.DiGraph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable" networkx.classes.digraph.DiGraph"type*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graphz36z37z38z39z310z311z312z313*´
to_undirected_class0networkx.classes.graph.Graph.to_undirected_class"˛
@Type[networkx.classes.graph.Graph[networkx.classes.graph._Node]]±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph"type*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graphz36z37z38z39z310z311z312z313*ë$
__init__%networkx.classes.graph.Graph.__init__"
None*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*›!
incoming_graph_data¡!
úUnion[TypeAlias[Union[networkx.classes.graph.Graph[networkx.classes.graph._Node],builtins.dict[networkx.classes.graph._Node,builtins.dict[networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]],builtins.dict[networkx.classes.graph._Node,typing.Iterable[networkx.classes.graph._Node]],typing.Iterable[TypeAlias[Union[TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node]],TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]]]]],numpy.ndarray[Any,Any]]],None]ì
êTypeAlias[Union[networkx.classes.graph.Graph[networkx.classes.graph._Node],builtins.dict[networkx.classes.graph._Node,builtins.dict[networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]],builtins.dict[networkx.classes.graph._Node,typing.Iterable[networkx.classes.graph._Node]],typing.Iterable[TypeAlias[Union[TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node]],TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]]]]],numpy.ndarray[Any,Any]]]›
ÖUnion[networkx.classes.graph.Graph[networkx.classes.graph._Node],builtins.dict[networkx.classes.graph._Node,builtins.dict[networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]],builtins.dict[networkx.classes.graph._Node,typing.Iterable[networkx.classes.graph._Node]],typing.Iterable[TypeAlias[Union[TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node]],TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]]]]],numpy.ndarray[Any,Any]]±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.GraphÓ
wbuiltins.dict[networkx.classes.graph._Node,builtins.dict[networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashableå
Kbuiltins.dict[networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.HashableW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"builtins.dict"builtins.dict€
Ybuiltins.dict[networkx.classes.graph._Node,typing.Iterable[networkx.classes.graph._Node]]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashableó
-typing.Iterable[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"typing.Iterable"builtins.dictí
⁄typing.Iterable[TypeAlias[Union[TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node]],TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]]]]]°

…TypeAlias[Union[TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node]],TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]]]]Æ
æUnion[TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node]],TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]]]‚
KTypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node]]Ú
@Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.HashableU
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph._EdgeÉ
kTypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]]Î
`Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.HashableU
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.HashableW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"$networkx.classes.graph._EdgeWithData" networkx.classes.graph._EdgePlus"typing.Iterable9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"networkx.classes.graph._Data
None *
attr
Anyz36z37z38z39z310z311z312z313*¸
adj networkx.classes.graph.Graph.adj"¯
énetworkx.classes.coreviews.AdjacencyView[networkx.classes.graph._Node,networkx.classes.graph._Node,builtins.dict[builtins.str,TypeAlias[Any]]]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.HashableU
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashableå
*builtins.dict[builtins.str,TypeAlias[Any]]
builtins.str"builtins.str1
TypeAlias[Any]
Any"_typeshed.Incomplete"builtins.dict"(networkx.classes.coreviews.AdjacencyView*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph0:cached_propertyz36z37*í
adj networkx.classes.graph.Graph.adj"¯
énetworkx.classes.coreviews.AdjacencyView[networkx.classes.graph._Node,networkx.classes.graph._Node,builtins.dict[builtins.str,TypeAlias[Any]]]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.HashableU
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashableå
*builtins.dict[builtins.str,TypeAlias[Any]]
builtins.str"builtins.str1
TypeAlias[Any]
Any"_typeshed.Incomplete"builtins.dict"(networkx.classes.coreviews.AdjacencyView*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph0:cached_property`z38z39z310z311z312z313*ﬁ
__getitem__(networkx.classes.graph.Graph.__getitem__"
änetworkx.classes.coreviews.AtlasView[networkx.classes.graph._Node,networkx.classes.graph._Node,builtins.dict[builtins.str,TypeAlias[Any]]]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.HashableU
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashableå
*builtins.dict[builtins.str,TypeAlias[Any]]
builtins.str"builtins.str1
TypeAlias[Any]
Any"_typeshed.Incomplete"builtins.dict"$networkx.classes.coreviews.AtlasView*¥±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*WU
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashablez36z37z38z39z310z311z312z313*¶
__iter__%networkx.classes.graph.Graph.__iter__"ó
-typing.Iterator[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"typing.Iterator*¥±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graphz36z37z38z39z310z311z312z313*⁄
__contains__)networkx.classes.graph.Graph.__contains__"
builtins.bool"builtins.bool*¥±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*$"
builtins.object"builtins.objectz36z37z38z39z310z311z312z313*®
__len__$networkx.classes.graph.Graph.__len__"
builtins.int"builtins.int*¥±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graphz36z37z38z39z310z311z312z313*ù
add_node%networkx.classes.graph.Graph.add_node"
None*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*j
node_for_addingU
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable*
attr
Anyz36z37z38z39z310z311z312z313*‰	
add_nodes_from+networkx.classes.graph.Graph.add_nodes_from"
None*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*§
nodes_for_addingç
étyping.Iterable[TypeAlias[Union[networkx.classes.graph._Node,TypeAlias[Tuple[networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]]]]]Ë
}TypeAlias[Union[networkx.classes.graph._Node,TypeAlias[Tuple[networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]]]]¬
rUnion[networkx.classes.graph._Node,TypeAlias[Tuple[networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]]]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.HashableÚ
NTypeAlias[Tuple[networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]]˜
CTuple[networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.HashableW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"$networkx.classes.graph._NodeWithData" networkx.classes.graph._NodePlus"typing.Iterable*
attr
Anyz36z37z38z39z310z311z312z313*Ç
remove_node(networkx.classes.graph.Graph.remove_node"
None*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*\
nU
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashablez36z37z38z39z310z311z312z313*÷
remove_nodes_from.networkx.classes.graph.Graph.remove_nodes_from"
None*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*£
nodesó
-typing.Iterable[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"typing.Iterablez36z37z38z39z310z311z312z313*À
nodes"networkx.classes.graph.Graph.nodes"√
Cnetworkx.classes.reportviews.NodeView[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"%networkx.classes.reportviews.NodeView*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph0:cached_propertyz36z37*·
nodes"networkx.classes.graph.Graph.nodes"√
Cnetworkx.classes.reportviews.NodeView[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"%networkx.classes.reportviews.NodeView*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph0:cached_property`z38z39z310z311z312z313*¿
number_of_nodes,networkx.classes.graph.Graph.number_of_nodes"
builtins.int"builtins.int*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graphz36z37z38z39z310z311z312z313*¨
order"networkx.classes.graph.Graph.order"
builtins.int"builtins.int*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graphz36z37z38z39z310z311z312z313*í
has_node%networkx.classes.graph.Graph.has_node"
builtins.bool"builtins.bool*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*\
nU
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashablez36z37z38z39z310z311z312z313*˝
add_edge%networkx.classes.graph.Graph.add_edge"
None*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*d
	u_of_edgeU
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable*d
	v_of_edgeU
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable*
attr
Anyz36z37z38z39z310z311z312z313*Ê
add_edges_from+networkx.classes.graph.Graph.add_edges_from"
None*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*¶
ebunch_to_addí
⁄typing.Iterable[TypeAlias[Union[TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node]],TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]]]]]°

…TypeAlias[Union[TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node]],TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]]]]Æ
æUnion[TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node]],TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]]]‚
KTypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node]]Ú
@Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.HashableU
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph._EdgeÉ
kTypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]]Î
`Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.HashableU
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.HashableW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"$networkx.classes.graph._EdgeWithData" networkx.classes.graph._EdgePlus"typing.Iterable*
attr
Anyz36z37z38z39z310z311z312z313*º
add_weighted_edges_from4networkx.classes.graph.Graph.add_weighted_edges_from"
None*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*æ
ebunch_to_add™
`typing.Iterable[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node,TypeAlias[Any]]]¥
OTuple[networkx.classes.graph._Node,networkx.classes.graph._Node,TypeAlias[Any]]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.HashableU
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable1
TypeAlias[Any]
Any"_typeshed.Incomplete"typing.Iterable**
weight
builtins.str"builtins.str *
attr
Anyz36z37z38z39z310z311z312z313*‡
remove_edge(networkx.classes.graph.Graph.remove_edge"
None*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*\
uU
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable*\
vU
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashablez36z37z38z39z310z311z312z313*“
remove_edges_from.networkx.classes.graph.Graph.remove_edges_from"
None*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*ü
ebunchí
⁄typing.Iterable[TypeAlias[Union[TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node]],TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]]]]]°

…TypeAlias[Union[TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node]],TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]]]]Æ
æUnion[TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node]],TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]]]‚
KTypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node]]Ú
@Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.HashableU
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph._EdgeÉ
kTypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]]Î
`Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.HashableU
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.HashableW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"$networkx.classes.graph._EdgeWithData" networkx.classes.graph._EdgePlus"typing.Iterablez36z37z38z39z310z311z312z313*
has_edge%networkx.classes.graph.Graph.has_edge"
builtins.bool"builtins.bool*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*\
uU
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable*\
vU
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashablez36z37z38z39z310z311z312z313*é
	neighbors&networkx.classes.graph.Graph.neighbors"ó
-typing.Iterator[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"typing.Iterator*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*\
nU
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashablez36z37z38z39z310z311z312z313*—
edges"networkx.classes.graph.Graph.edges"…
Fnetworkx.classes.reportviews.OutEdgeView[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"(networkx.classes.reportviews.OutEdgeView*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph0:cached_propertyz36z37*Á
edges"networkx.classes.graph.Graph.edges"…
Fnetworkx.classes.reportviews.OutEdgeView[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"(networkx.classes.reportviews.OutEdgeView*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph0:cached_property`z38z39z310z311z312z313*◊
get_edge_data*networkx.classes.graph.Graph.get_edge_data"é
+typing.Mapping[builtins.str,TypeAlias[Any]]
builtins.str"builtins.str1
TypeAlias[Any]
Any"_typeshed.Incomplete"typing.Mapping*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*\
uU
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable*\
vU
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable*j
default[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z36z37z38z39z310z311z312z313*È
	adjacency&networkx.classes.graph.Graph.adjacency"–
çtyping.Iterator[Tuple[networkx.classes.graph._Node,typing.Mapping[networkx.classes.graph._Node,typing.Mapping[builtins.str,TypeAlias[Any]]]]]¨
|Tuple[networkx.classes.graph._Node,typing.Mapping[networkx.classes.graph._Node,typing.Mapping[builtins.str,TypeAlias[Any]]]]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable“
Xtyping.Mapping[networkx.classes.graph._Node,typing.Mapping[builtins.str,TypeAlias[Any]]]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashableé
+typing.Mapping[builtins.str,TypeAlias[Any]]
builtins.str"builtins.str1
TypeAlias[Any]
Any"_typeshed.Incomplete"typing.Mapping"typing.Mapping"typing.Iterator*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graphz36z37z38z39z310z311z312z313*’
degree#networkx.classes.graph.Graph.degree"À
Gnetworkx.classes.reportviews.DiDegreeView[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable")networkx.classes.reportviews.DiDegreeView*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph0:cached_propertyz36z37*Î
degree#networkx.classes.graph.Graph.degree"À
Gnetworkx.classes.reportviews.DiDegreeView[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable")networkx.classes.reportviews.DiDegreeView*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph0:cached_property`z38z39z310z311z312z313*ò
clear"networkx.classes.graph.Graph.clear"
None*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graphz36z37z38z39z310z311z312z313*§
clear_edges(networkx.classes.graph.Graph.clear_edges"
None*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graphz36z37z38z39z310z311z312z313*æ
is_multigraph*networkx.classes.graph.Graph.is_multigraph"
builtins.bool"builtins.bool*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graphz36z37z38z39z310z311z312z313*∫
is_directed(networkx.classes.graph.Graph.is_directed"
builtins.bool"builtins.bool*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graphz36z37z38z39z310z311z312z313*˚
copy!networkx.classes.graph.Graph.copy"˜
!networkx.classes.graph.Graph.Self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph"networkx.classes.graph.Graph*Ç
self˜
!networkx.classes.graph.Graph.Self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph"networkx.classes.graph.Graph*-
as_view
builtins.bool"builtins.bool z36z37z38z39z310z311z312z313*Ö
to_directed(networkx.classes.graph.Graph.to_directed"π
>networkx.classes.digraph.DiGraph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable" networkx.classes.digraph.DiGraph*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*-
as_view
builtins.bool"builtins.bool z36z37z38z39z310z311z312z313*Å
to_undirected*networkx.classes.graph.Graph.to_undirected"±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*-
as_view
builtins.bool"builtins.bool z36z37z38z39z310z311z312z313*Ó
subgraph%networkx.classes.graph.Graph.subgraph"±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*£
nodesó
-typing.Iterable[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"typing.Iterablez36z37z38z39z310z311z312z313*µ
edge_subgraph*networkx.classes.graph.Graph.edge_subgraph"±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*‡
edges‘
\typing.Iterable[TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node]]]‚
KTypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node]]Ú
@Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.HashableU
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph._Edge"typing.Iterablez36z37z38z39z310z311z312z313*Ù
number_of_edges,networkx.classes.graph.Graph.number_of_edges"
builtins.int"builtins.int*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*ó
uç
(Union[networkx.classes.graph._Node,None]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable
None *ó
vç
(Union[networkx.classes.graph._Node,None]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable
None z36z37z38z39z310z311z312z313*£
nbunch_iter(networkx.classes.graph.Graph.nbunch_iter"ó
-typing.Iterator[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"typing.Iterator*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*Ï
nbunch›
aTypeAlias[Union[networkx.classes.graph._Node,typing.Iterable[networkx.classes.graph._Node],None]]’
VUnion[networkx.classes.graph._Node,typing.Iterable[networkx.classes.graph._Node],None]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashableó
-typing.Iterable[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"typing.Iterable
None"networkx.classes.graph._NBunch z36z37z38z39z310z311z312z3132è
name!networkx.classes.graph.Graph.nameñ
name!networkx.classes.graph.Graph.name"
builtins.str"builtins.str*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph0:propertyX`¶
name!networkx.classes.graph.Graph.name"
None*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*#
s
builtins.str"builtins.str0:name.setter"36"37"38"39"310"311"312"3132≤
update#networkx.classes.graph.Graph.update€
update#networkx.classes.graph.Graph.update"
None*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*Ω
edges±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*
nodes
None 0:overloadXÄ
update#networkx.classes.graph.Graph.update"
None*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*á
edges˘
°Union[networkx.classes.graph.Graph[networkx.classes.graph._Node],typing.Iterable[TypeAlias[Union[TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node]],TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]]]]],None]±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graphí
⁄typing.Iterable[TypeAlias[Union[TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node]],TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]]]]]°

…TypeAlias[Union[TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node]],TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]]]]Æ
æUnion[TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node]],TypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]]]‚
KTypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node]]Ú
@Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.HashableU
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph._EdgeÉ
kTypeAlias[Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]]Î
`Tuple[networkx.classes.graph._Node,networkx.classes.graph._Node,builtins.dict[builtins.str,Any]]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.HashableU
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.HashableW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"$networkx.classes.graph._EdgeWithData" networkx.classes.graph._EdgePlus"typing.Iterable
None *Ô
nodes·
9Union[typing.Iterable[networkx.classes.graph._Node],None]ó
-typing.Iterable[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"typing.Iterable
None 0:overloadX"36"37"38"39"310"311"312"3132¡
size!networkx.classes.graph.Graph.size¨
size!networkx.classes.graph.Graph.size"
builtins.int"builtins.int*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*
weight
None 0:overloadX¬
size!networkx.classes.graph.Graph.size" 
builtins.float"builtins.float*º
self±
:networkx.classes.graph.Graph[networkx.classes.graph._Node]U
networkx.classes.graph._Node"
typing.Hashable"typing.Hashable"typing.Hashable"networkx.classes.graph.Graph*(
weight
builtins.str"builtins.str0:overloadX"36"37"38"39"310"311"312"313Pj36j37j38j39j310j311j312j313râ
node_dict_factory.networkx.classes.graph.Graph.node_dict_factoryü
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function""networkx.classes.graph._MapFactory*36*37*38*39*310*311*312*313rì
node_attr_dict_factory3networkx.classes.graph.Graph.node_attr_dict_factoryü
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function""networkx.classes.graph._MapFactory*36*37*38*39*310*311*312*313rõ
adjlist_outer_dict_factory7networkx.classes.graph.Graph.adjlist_outer_dict_factoryü
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function""networkx.classes.graph._MapFactory*36*37*38*39*310*311*312*313rõ
adjlist_inner_dict_factory7networkx.classes.graph.Graph.adjlist_inner_dict_factoryü
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function""networkx.classes.graph._MapFactory*36*37*38*39*310*311*312*313rì
edge_attr_dict_factory3networkx.classes.graph.Graph.edge_attr_dict_factoryü
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function""networkx.classes.graph._MapFactory*36*37*38*39*310*311*312*313rï
graph_attr_dict_factory4networkx.classes.graph.Graph.graph_attr_dict_factoryü
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function""networkx.classes.graph._MapFactory*36*37*38*39*310*311*312*313r®
graph"networkx.classes.graph.Graph.graphW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313*∂
__annotations__&networkx.classes.graph.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313*J
cached_property&networkx.classes.graph.cached_property
Any*36*37