
numpy.polynomial.legendre˜
Legendre"numpy.polynomial.legendre.Legendre"&numpy.polynomial._polybase.ABCPolyBaser<
domain)numpy.polynomial.legendre.Legendre.domain
Anyr<
window)numpy.polynomial.legendre.Legendre.window
AnyrD

basis_name-numpy.polynomial.legendre.Legendre.basis_name
Any7
poly2leg"numpy.polynomial.legendre.poly2leg*
pol5
leg2poly"numpy.polynomial.legendre.leg2poly*
c>
legline!numpy.polynomial.legendre.legline*
off*
sclA
legfromroots&numpy.polynomial.legendre.legfromroots*	
roots:
legadd numpy.polynomial.legendre.legadd*
c1*
c2:
legsub numpy.polynomial.legendre.legsub*
c1*
c23
legmulx!numpy.polynomial.legendre.legmulx*
c:
legmul numpy.polynomial.legendre.legmul*
c1*
c2:
legdiv numpy.polynomial.legendre.legdiv*
c1*
c2J
legpow numpy.polynomial.legendre.legpow*
c*
pow*
maxpower Q
legder numpy.polynomial.legendre.legder*
c*
m *	
scl *

axis f
legint numpy.polynomial.legendre.legint*
c*
m *
k *

lbnd *	
scl *

axis F
legval numpy.polynomial.legendre.legval*
x*
c*
tensor C
legval2d"numpy.polynomial.legendre.legval2d*
x*
y*
cE
	leggrid2d#numpy.polynomial.legendre.leggrid2d*
x*
y*
cJ
legval3d"numpy.polynomial.legendre.legval3d*
x*
y*
z*
cL
	leggrid3d#numpy.polynomial.legendre.leggrid3d*
x*
y*
z*
c@
	legvander#numpy.polynomial.legendre.legvander*
x*
degK
legvander2d%numpy.polynomial.legendre.legvander2d*
x*
y*
degR
legvander3d%numpy.polynomial.legendre.legvander3d*
x*
y*
z*
degc
legfit numpy.polynomial.legendre.legfit*
x*
y*
deg*
rcond *

full *
w =
legcompanion&numpy.polynomial.legendre.legcompanion*
c5
legroots"numpy.polynomial.legendre.legroots*
c7
leggauss"numpy.polynomial.legendre.leggauss*
deg7
	legweight#numpy.polynomial.legendre.legweight*
x*•
__annotations__)numpy.polynomial.legendre.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*x
__all__!numpy.polynomial.legendre.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*y
legtrim!numpy.polynomial.legendre.legtrimK
CallableType[builtins.function]&
builtins.function"builtins.function* 
	legdomain#numpy.polynomial.legendre.legdomainí
Nnumpy.ndarray[Any,numpy.dtype[TypeAlias[numpy.signedinteger[TypeAlias[Any]]]]]
Any‚
;numpy.dtype[TypeAlias[numpy.signedinteger[TypeAlias[Any]]]]µ
.TypeAlias[numpy.signedinteger[TypeAlias[Any]]]u
#numpy.signedinteger[TypeAlias[Any]]9
TypeAlias[Any]
Any"numpy._typing._nbit._NBitInt"numpy.signedinteger"
numpy.int_"numpy.dtype"numpy.ndarray*œ
legzero!numpy.polynomial.legendre.legzeroí
Nnumpy.ndarray[Any,numpy.dtype[TypeAlias[numpy.signedinteger[TypeAlias[Any]]]]]
Any‚
;numpy.dtype[TypeAlias[numpy.signedinteger[TypeAlias[Any]]]]µ
.TypeAlias[numpy.signedinteger[TypeAlias[Any]]]u
#numpy.signedinteger[TypeAlias[Any]]9
TypeAlias[Any]
Any"numpy._typing._nbit._NBitInt"numpy.signedinteger"
numpy.int_"numpy.dtype"numpy.ndarray*š
legone numpy.polynomial.legendre.legoneí
Nnumpy.ndarray[Any,numpy.dtype[TypeAlias[numpy.signedinteger[TypeAlias[Any]]]]]
Any‚
;numpy.dtype[TypeAlias[numpy.signedinteger[TypeAlias[Any]]]]µ
.TypeAlias[numpy.signedinteger[TypeAlias[Any]]]u
#numpy.signedinteger[TypeAlias[Any]]9
TypeAlias[Any]
Any"numpy._typing._nbit._NBitInt"numpy.signedinteger"
numpy.int_"numpy.dtype"numpy.ndarray*–
legxnumpy.polynomial.legendre.legxí
Nnumpy.ndarray[Any,numpy.dtype[TypeAlias[numpy.signedinteger[TypeAlias[Any]]]]]
Any‚
;numpy.dtype[TypeAlias[numpy.signedinteger[TypeAlias[Any]]]]µ
.TypeAlias[numpy.signedinteger[TypeAlias[Any]]]u
#numpy.signedinteger[TypeAlias[Any]]9
TypeAlias[Any]
Any"numpy._typing._nbit._NBitInt"numpy.signedinteger"
numpy.int_"numpy.dtype"numpy.ndarray