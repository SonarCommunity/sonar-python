
_decimalª
DecimalTuple_decimal.DecimalTuple"builtins.tuple*Ø
_replace_decimal.DecimalTuple._replace"
_decimal.DecimalTuple._NT*(
_self
_decimal.DecimalTuple._NT*(
sign
builtins.int"builtins.int *Z
digitsL
builtins.tuple[builtins.int]
builtins.int"builtins.int"builtins.tuple *≥
exponent¢
UUnion[builtins.int,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]
builtins.int"builtins.int7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *À
__new___decimal.DecimalTuple.__new__"
_decimal.DecimalTuple._NT*L
_clsB
Type[_decimal.DecimalTuple._NT]
_decimal.DecimalTuple._NT*&
sign
builtins.int"builtins.int*X
digitsL
builtins.tuple[builtins.int]
builtins.int"builtins.int"builtins.tuple*±
exponent¢
UUnion[builtins.int,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]
builtins.int"builtins.int7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*´
_asdict_decimal.DecimalTuple._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*(
_self
_decimal.DecimalTuple._NT*ä
_make_decimal.DecimalTuple._make"
_decimal.DecimalTuple._NT*L
_clsB
Type[_decimal.DecimalTuple._NT]
_decimal.DecimalTuple._NT*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpr@
sign_decimal.DecimalTuple.sign
builtins.int"builtins.intrt
digits_decimal.DecimalTuple.digitsL
builtins.tuple[builtins.int]
builtins.int"builtins.int"builtins.tuplerœ
exponent_decimal.DecimalTuple.exponent¢
UUnion[builtins.int,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]
builtins.int"builtins.int7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strr@
sign_decimal.DecimalTuple.sign
builtins.int"builtins.intrt
digits_decimal.DecimalTuple.digitsL
builtins.tuple[builtins.int]
builtins.int"builtins.int"builtins.tuplerœ
exponent_decimal.DecimalTuple.exponent¢
UUnion[builtins.int,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]
builtins.int"builtins.int7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strr∂
_fields_decimal.DecimalTuple._fieldsã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strrã
_field_types"_decimal.DecimalTuple._field_typesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictrë
_field_defaults%_decimal.DecimalTuple._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictrF
_source_decimal.DecimalTuple._source
builtins.str"builtins.strrë
__annotations__%_decimal.DecimalTuple.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictG
DecimalException_decimal.DecimalException"builtins.ArithmeticError6
Clamped_decimal.Clamped"_decimal.DecimalExceptionH
InvalidOperation_decimal.InvalidOperation"_decimal.DecimalExceptionH
ConversionSyntax_decimal.ConversionSyntax"_decimal.InvalidOperation`
DivisionByZero_decimal.DivisionByZero"_decimal.DecimalException"builtins.ZeroDivisionErrorL
DivisionImpossible_decimal.DivisionImpossible"_decimal.InvalidOperationf
DivisionUndefined_decimal.DivisionUndefined"_decimal.InvalidOperation"builtins.ZeroDivisionError6
Inexact_decimal.Inexact"_decimal.DecimalExceptionD
InvalidContext_decimal.InvalidContext"_decimal.InvalidOperation6
Rounded_decimal.Rounded"_decimal.DecimalException:
	Subnormal_decimal.Subnormal"_decimal.DecimalExceptionA
Overflow_decimal.Overflow"_decimal.Inexact"_decimal.RoundedW
	Underflow_decimal.Underflow"_decimal.Inexact"_decimal.Rounded"_decimal.SubnormalX
FloatOperation_decimal.FloatOperation"_decimal.DecimalException"builtins.TypeErrorü 
Decimal_decimal.Decimal"builtins.object*º
__new___decimal.Decimal.__new__"
_decimal.Decimal.Self*C
cls:
Type[_decimal.Decimal.Self]
_decimal.Decimal.Self*’
value«
}TypeAlias[Union[_decimal.Decimal,builtins.float,builtins.str,Tuple[builtins.int,typing.Sequence[builtins.int],builtins.int]]]≠
rUnion[_decimal.Decimal,builtins.float,builtins.str,Tuple[builtins.int,typing.Sequence[builtins.int],builtins.int]]$
_decimal.Decimal"_decimal.Decimal 
builtins.float"builtins.float
builtins.str"builtins.strŒ
>Tuple[builtins.int,typing.Sequence[builtins.int],builtins.int]
builtins.int"builtins.intN
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.Sequence
builtins.int"builtins.int"_decimal._DecimalNew *_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *æ

from_float_decimal.Decimal.from_float"
_decimal.Decimal.Self*C
cls:
Type[_decimal.Decimal.Self]
_decimal.Decimal.Self*" 
builtins.float"builtins.float0:classmethodp*u
__bool___decimal.Decimal.__bool__"
builtins.bool"builtins.bool*.
self$
_decimal.Decimal"_decimal.Decimal*ù
compare_decimal.Decimal.compare"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*¿
other¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *§
as_tuple_decimal.Decimal.as_tuple"Ã
ëTypeAlias[Tuple[builtins.int,builtins.tuple[builtins.int],Union[builtins.int,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]ú
ÜTuple[builtins.int,builtins.tuple[builtins.int],Union[builtins.int,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]
builtins.int"builtins.intL
builtins.tuple[builtins.int]
builtins.int"builtins.int"builtins.tuple¢
UUnion[builtins.int,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]
builtins.int"builtins.int7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_decimal.DecimalTuple*.
self$
_decimal.Decimal"_decimal.Decimal*«
as_integer_ratio!_decimal.Decimal.as_integer_ratio"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*.
self$
_decimal.Decimal"_decimal.Decimal*ﬁ
to_eng_string_decimal.Decimal.to_eng_string"
builtins.str"builtins.str*.
self$
_decimal.Decimal"_decimal.Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *q
__abs___decimal.Decimal.__abs__"$
_decimal.Decimal"_decimal.Decimal*&$
_decimal.Decimal"_decimal.Decimal*´
__add___decimal.Decimal.__add__"$
_decimal.Decimal"_decimal.Decimal*&$
_decimal.Decimal"_decimal.Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*Ö

__divmod___decimal.Decimal.__divmod__"x
(Tuple[_decimal.Decimal,_decimal.Decimal]$
_decimal.Decimal"_decimal.Decimal$
_decimal.Decimal"_decimal.Decimal*&$
_decimal.Decimal"_decimal.Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*è
__eq___decimal.Decimal.__eq__"
builtins.bool"builtins.bool*&$
_decimal.Decimal"_decimal.Decimal*$"
builtins.object"builtins.object*µ
__floordiv___decimal.Decimal.__floordiv__"$
_decimal.Decimal"_decimal.Decimal*&$
_decimal.Decimal"_decimal.Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*˙
__ge___decimal.Decimal.__ge__"
builtins.bool"builtins.bool*&$
_decimal.Decimal"_decimal.Decimal*éã
BTypeAlias[Union[_decimal.Decimal,builtins.float,numbers.Rational]]©
7Union[_decimal.Decimal,builtins.float,numbers.Rational]$
_decimal.Decimal"_decimal.Decimal 
builtins.float"builtins.float$
numbers.Rational"numbers.Rational"_decimal._ComparableNum*˙
__gt___decimal.Decimal.__gt__"
builtins.bool"builtins.bool*&$
_decimal.Decimal"_decimal.Decimal*éã
BTypeAlias[Union[_decimal.Decimal,builtins.float,numbers.Rational]]©
7Union[_decimal.Decimal,builtins.float,numbers.Rational]$
_decimal.Decimal"_decimal.Decimal 
builtins.float"builtins.float$
numbers.Rational"numbers.Rational"_decimal._ComparableNum*˙
__le___decimal.Decimal.__le__"
builtins.bool"builtins.bool*&$
_decimal.Decimal"_decimal.Decimal*éã
BTypeAlias[Union[_decimal.Decimal,builtins.float,numbers.Rational]]©
7Union[_decimal.Decimal,builtins.float,numbers.Rational]$
_decimal.Decimal"_decimal.Decimal 
builtins.float"builtins.float$
numbers.Rational"numbers.Rational"_decimal._ComparableNum*˙
__lt___decimal.Decimal.__lt__"
builtins.bool"builtins.bool*&$
_decimal.Decimal"_decimal.Decimal*éã
BTypeAlias[Union[_decimal.Decimal,builtins.float,numbers.Rational]]©
7Union[_decimal.Decimal,builtins.float,numbers.Rational]$
_decimal.Decimal"_decimal.Decimal 
builtins.float"builtins.float$
numbers.Rational"numbers.Rational"_decimal._ComparableNum*´
__mod___decimal.Decimal.__mod__"$
_decimal.Decimal"_decimal.Decimal*&$
_decimal.Decimal"_decimal.Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*´
__mul___decimal.Decimal.__mul__"$
_decimal.Decimal"_decimal.Decimal*&$
_decimal.Decimal"_decimal.Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*q
__neg___decimal.Decimal.__neg__"$
_decimal.Decimal"_decimal.Decimal*&$
_decimal.Decimal"_decimal.Decimal*q
__pos___decimal.Decimal.__pos__"$
_decimal.Decimal"_decimal.Decimal*&$
_decimal.Decimal"_decimal.Decimal*≥
__pow___decimal.Decimal.__pow__"$
_decimal.Decimal"_decimal.Decimal*&$
_decimal.Decimal"_decimal.Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*ÖÄ
;Union[TypeAlias[Union[_decimal.Decimal,builtins.int]],None]¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal
None *≠
__radd___decimal.Decimal.__radd__"$
_decimal.Decimal"_decimal.Decimal*&$
_decimal.Decimal"_decimal.Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*è
__rdivmod___decimal.Decimal.__rdivmod__"x
(Tuple[_decimal.Decimal,_decimal.Decimal]$
_decimal.Decimal"_decimal.Decimal$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑
__rfloordiv___decimal.Decimal.__rfloordiv__"$
_decimal.Decimal"_decimal.Decimal*&$
_decimal.Decimal"_decimal.Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*≠
__rmod___decimal.Decimal.__rmod__"$
_decimal.Decimal"_decimal.Decimal*&$
_decimal.Decimal"_decimal.Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*≠
__rmul___decimal.Decimal.__rmul__"$
_decimal.Decimal"_decimal.Decimal*&$
_decimal.Decimal"_decimal.Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*≠
__rsub___decimal.Decimal.__rsub__"$
_decimal.Decimal"_decimal.Decimal*&$
_decimal.Decimal"_decimal.Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*µ
__rtruediv___decimal.Decimal.__rtruediv__"$
_decimal.Decimal"_decimal.Decimal*&$
_decimal.Decimal"_decimal.Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*´
__sub___decimal.Decimal.__sub__"$
_decimal.Decimal"_decimal.Decimal*&$
_decimal.Decimal"_decimal.Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*≥
__truediv___decimal.Decimal.__truediv__"$
_decimal.Decimal"_decimal.Decimal*&$
_decimal.Decimal"_decimal.Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*´
remainder_near_decimal.Decimal.remainder_near"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*¿
other¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *q
	__float___decimal.Decimal.__float__" 
builtins.float"builtins.float*&$
_decimal.Decimal"_decimal.Decimal*i
__int___decimal.Decimal.__int__"
builtins.int"builtins.int*&$
_decimal.Decimal"_decimal.Decimal*u
	__trunc___decimal.Decimal.__trunc__"
builtins.int"builtins.int*.
self$
_decimal.Decimal"_decimal.Decimal*Å
real_decimal.Decimal.real"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal0:property`*Å
imag_decimal.Decimal.imag"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal0:property`*}
	conjugate_decimal.Decimal.conjugate"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*y
__complex___decimal.Decimal.__complex__"$
builtins.complex"builtins.complex*&$
_decimal.Decimal"_decimal.Decimal*u
	__floor___decimal.Decimal.__floor__"
builtins.int"builtins.int*.
self$
_decimal.Decimal"_decimal.Decimal*s
__ceil___decimal.Decimal.__ceil__"
builtins.int"builtins.int*.
self$
_decimal.Decimal"_decimal.Decimal*ÿ
fma_decimal.Decimal.fma"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*¿
other¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*¿
third¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *É
__rpow___decimal.Decimal.__rpow__"$
_decimal.Decimal"_decimal.Decimal*&$
_decimal.Decimal"_decimal.Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*TP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *ﬁ
	normalize_decimal.Decimal.normalize"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *Û
quantize_decimal.Decimal.quantize"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*æ
exp¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*T
roundingD
Union[builtins.str,None]
builtins.str"builtins.str
None *_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *°
same_quantum_decimal.Decimal.same_quantum"
builtins.bool"builtins.bool*.
self$
_decimal.Decimal"_decimal.Decimal*¿
other¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *ƒ
to_integral_exact"_decimal.Decimal.to_integral_exact"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*T
roundingD
Union[builtins.str,None]
builtins.str"builtins.str
None *_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *ƒ
to_integral_value"_decimal.Decimal.to_integral_value"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*T
roundingD
Union[builtins.str,None]
builtins.str"builtins.str
None *_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *∏
to_integral_decimal.Decimal.to_integral"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*T
roundingD
Union[builtins.str,None]
builtins.str"builtins.str
None *_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *‘
sqrt_decimal.Decimal.sqrt"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *ï
max_decimal.Decimal.max"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*¿
other¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *ï
min_decimal.Decimal.min"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*¿
other¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *s
adjusted_decimal.Decimal.adjusted"
builtins.int"builtins.int*.
self$
_decimal.Decimal"_decimal.Decimal*}
	canonical_decimal.Decimal.canonical"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*´
compare_signal_decimal.Decimal.compare_signal"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*¿
other¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *©
compare_total_decimal.Decimal.compare_total"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*¿
other¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *±
compare_total_mag"_decimal.Decimal.compare_total_mag"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*¿
other¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *{
copy_abs_decimal.Decimal.copy_abs"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*Å
copy_negate_decimal.Decimal.copy_negate"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*°
	copy_sign_decimal.Decimal.copy_sign"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*¿
other¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *“
exp_decimal.Decimal.exp"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *}
is_canonical_decimal.Decimal.is_canonical"
builtins.bool"builtins.bool*.
self$
_decimal.Decimal"_decimal.Decimal*w
	is_finite_decimal.Decimal.is_finite"
builtins.bool"builtins.bool*.
self$
_decimal.Decimal"_decimal.Decimal*{
is_infinite_decimal.Decimal.is_infinite"
builtins.bool"builtins.bool*.
self$
_decimal.Decimal"_decimal.Decimal*q
is_nan_decimal.Decimal.is_nan"
builtins.bool"builtins.bool*.
self$
_decimal.Decimal"_decimal.Decimal*ÿ
	is_normal_decimal.Decimal.is_normal"
builtins.bool"builtins.bool*.
self$
_decimal.Decimal"_decimal.Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *s
is_qnan_decimal.Decimal.is_qnan"
builtins.bool"builtins.bool*.
self$
_decimal.Decimal"_decimal.Decimal*w
	is_signed_decimal.Decimal.is_signed"
builtins.bool"builtins.bool*.
self$
_decimal.Decimal"_decimal.Decimal*s
is_snan_decimal.Decimal.is_snan"
builtins.bool"builtins.bool*.
self$
_decimal.Decimal"_decimal.Decimal*ﬁ
is_subnormal_decimal.Decimal.is_subnormal"
builtins.bool"builtins.bool*.
self$
_decimal.Decimal"_decimal.Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *s
is_zero_decimal.Decimal.is_zero"
builtins.bool"builtins.bool*.
self$
_decimal.Decimal"_decimal.Decimal*–
ln_decimal.Decimal.ln"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *÷
log10_decimal.Decimal.log10"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *‘
logb_decimal.Decimal.logb"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *•
logical_and_decimal.Decimal.logical_and"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*¿
other¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *Ë
logical_invert_decimal.Decimal.logical_invert"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *£

logical_or_decimal.Decimal.logical_or"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*¿
other¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *•
logical_xor_decimal.Decimal.logical_xor"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*¿
other¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *ù
max_mag_decimal.Decimal.max_mag"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*¿
other¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *ù
min_mag_decimal.Decimal.min_mag"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*¿
other¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *‡

next_minus_decimal.Decimal.next_minus"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *ﬁ
	next_plus_decimal.Decimal.next_plus"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *•
next_toward_decimal.Decimal.next_toward"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*¿
other¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *‹
number_class_decimal.Decimal.number_class"
builtins.str"builtins.str*.
self$
_decimal.Decimal"_decimal.Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *u
radix_decimal.Decimal.radix"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*õ
rotate_decimal.Decimal.rotate"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*¿
other¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *õ
scaleb_decimal.Decimal.scaleb"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*¿
other¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *ô
shift_decimal.Decimal.shift"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*¿
other¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*_
contextP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *˛

__reduce___decimal.Decimal.__reduce__"≠
6Tuple[Type[_decimal.Decimal.Self],Tuple[builtins.str]]:
Type[_decimal.Decimal.Self]
_decimal.Decimal.Self5
Tuple[builtins.str]
builtins.str"builtins.str*#
self
_decimal.Decimal.Self*e
__copy___decimal.Decimal.__copy__"
_decimal.Decimal.Self*#
self
_decimal.Decimal.Self*x
__deepcopy___decimal.Decimal.__deepcopy__"
_decimal.Decimal.Self*#
self
_decimal.Decimal.Self*	
Any*Ì

__format___decimal.Decimal.__format__"
builtins.str"builtins.str*.
self$
_decimal.Decimal"_decimal.Decimal*
builtins.str"builtins.str*TP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None 2€
	__round___decimal.Decimal.__round__É
	__round___decimal.Decimal.__round__"
builtins.int"builtins.int*.
self$
_decimal.Decimal"_decimal.Decimal0:overloadX´
	__round___decimal.Decimal.__round__"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Decimal"_decimal.Decimal*
builtins.int"builtins.int0:overloadX¸
_ContextManager_decimal._ContextManager"builtins.object*Æ
__init__!_decimal._ContextManager.__init__"
None*>
self4
_decimal._ContextManager"_decimal._ContextManager*5
new_context$
_decimal.Context"_decimal.Context*ç
	__enter__"_decimal._ContextManager.__enter__"$
_decimal.Context"_decimal.Context*64
_decimal._ContextManager"_decimal._ContextManager*¬
__exit__!_decimal._ContextManager.__exit__"
None*64
_decimal._ContextManager"_decimal._ContextManager*çä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*db
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*[Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
NonerY
new_context$_decimal._ContextManager.new_context$
_decimal.Context"_decimal.Contextr]
saved_context&_decimal._ContextManager.saved_context$
_decimal.Context"_decimal.ContextÍ‰
Context_decimal.Context"builtins.object*‰
__init___decimal.Context.__init__"
None*.
self$
_decimal.Context"_decimal.Context*P
precD
Union[builtins.int,None]
builtins.int"builtins.int
None *T
roundingD
Union[builtins.str,None]
builtins.str"builtins.str
None *P
EminD
Union[builtins.int,None]
builtins.int"builtins.int
None *P
EmaxD
Union[builtins.int,None]
builtins.int"builtins.int
None *T
capitalsD
Union[builtins.int,None]
builtins.int"builtins.int
None *Q
clampD
Union[builtins.int,None]
builtins.int"builtins.int
None *◊
flags…
mUnion[None,builtins.dict[TypeAlias[Type[_decimal.DecimalException]],builtins.bool],typing.Container[Unknown]]
Noneö
Gbuiltins.dict[TypeAlias[Type[_decimal.DecimalException]],builtins.bool]ü
*TypeAlias[Type[_decimal.DecimalException]][
Type[_decimal.DecimalException]6
_decimal.DecimalException"_decimal.DecimalException"_decimal._TrapType
builtins.bool"builtins.bool"builtins.dict/
typing.Container[Unknown] "typing.Container *◊
traps…
mUnion[None,builtins.dict[TypeAlias[Type[_decimal.DecimalException]],builtins.bool],typing.Container[Unknown]]
Noneö
Gbuiltins.dict[TypeAlias[Type[_decimal.DecimalException]],builtins.bool]ü
*TypeAlias[Type[_decimal.DecimalException]][
Type[_decimal.DecimalException]6
_decimal.DecimalException"_decimal.DecimalException"_decimal._TrapType
builtins.bool"builtins.bool"builtins.dict/
typing.Container[Unknown] "typing.Container *Ÿ
_ignored_flags¬
EUnion[builtins.list[TypeAlias[Type[_decimal.DecimalException]]],None]Ï
9builtins.list[TypeAlias[Type[_decimal.DecimalException]]]ü
*TypeAlias[Type[_decimal.DecimalException]][
Type[_decimal.DecimalException]6
_decimal.DecimalException"_decimal.DecimalException"_decimal._TrapType"builtins.list
None *˜

__reduce___decimal.Context.__reduce__"¶
6Tuple[Type[_decimal.Context.Self],builtins.tuple[Any]]:
Type[_decimal.Context.Self]
_decimal.Context.Self.
builtins.tuple[Any]
Any"builtins.tuple*#
self
_decimal.Context.Self*e
clear_flags_decimal.Context.clear_flags"
None*.
self$
_decimal.Context"_decimal.Context*e
clear_traps_decimal.Context.clear_traps"
None*.
self$
_decimal.Context"_decimal.Context*s
copy_decimal.Context.copy"$
_decimal.Context"_decimal.Context*.
self$
_decimal.Context"_decimal.Context*{
__copy___decimal.Context.__copy__"$
_decimal.Context"_decimal.Context*.
self$
_decimal.Context"_decimal.Context*m
Etiny_decimal.Context.Etiny"
builtins.int"builtins.int*.
self$
_decimal.Context"_decimal.Context*k
Etop_decimal.Context.Etop"
builtins.int"builtins.int*.
self$
_decimal.Context"_decimal.Context*÷
create_decimal_decimal.Context.create_decimal"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*Ã«
}TypeAlias[Union[_decimal.Decimal,builtins.float,builtins.str,Tuple[builtins.int,typing.Sequence[builtins.int],builtins.int]]]≠
rUnion[_decimal.Decimal,builtins.float,builtins.str,Tuple[builtins.int,typing.Sequence[builtins.int],builtins.int]]$
_decimal.Decimal"_decimal.Decimal 
builtins.float"builtins.float
builtins.str"builtins.strŒ
>Tuple[builtins.int,typing.Sequence[builtins.int],builtins.int]
builtins.int"builtins.intN
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.Sequence
builtins.int"builtins.int"_decimal._DecimalNew *¡
create_decimal_from_float*_decimal.Context.create_decimal_from_float"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*" 
builtins.float"builtins.float*´
abs_decimal.Context.abs"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*Â
add_decimal.Context.add"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*•
	canonical_decimal.Context.canonical"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*&$
_decimal.Decimal"_decimal.Decimal*Ì
compare_decimal.Context.compare"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*˚
compare_signal_decimal.Context.compare_signal"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*˘
compare_total_decimal.Context.compare_total"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*Å
compare_total_mag"_decimal.Context.compare_total_mag"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*µ
copy_abs_decimal.Context.copy_abs"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*Ω
copy_decimal_decimal.Context.copy_decimal"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*ª
copy_negate_decimal.Context.copy_negate"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*Ò
	copy_sign_decimal.Context.copy_sign"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*Î
divide_decimal.Context.divide"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*Û

divide_int_decimal.Context.divide_int"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*ø
divmod_decimal.Context.divmod"x
(Tuple[_decimal.Decimal,_decimal.Decimal]$
_decimal.Decimal"_decimal.Decimal$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*´
exp_decimal.Context.exp"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*ü
fma_decimal.Context.fma"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑
is_canonical_decimal.Context.is_canonical"
builtins.bool"builtins.bool*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*±
	is_finite_decimal.Context.is_finite"
builtins.bool"builtins.bool*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*µ
is_infinite_decimal.Context.is_infinite"
builtins.bool"builtins.bool*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*´
is_nan_decimal.Context.is_nan"
builtins.bool"builtins.bool*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*±
	is_normal_decimal.Context.is_normal"
builtins.bool"builtins.bool*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*≠
is_qnan_decimal.Context.is_qnan"
builtins.bool"builtins.bool*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*±
	is_signed_decimal.Context.is_signed"
builtins.bool"builtins.bool*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*≠
is_snan_decimal.Context.is_snan"
builtins.bool"builtins.bool*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑
is_subnormal_decimal.Context.is_subnormal"
builtins.bool"builtins.bool*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*≠
is_zero_decimal.Context.is_zero"
builtins.bool"builtins.bool*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*©
ln_decimal.Context.ln"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*Ø
log10_decimal.Context.log10"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*≠
logb_decimal.Context.logb"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*ı
logical_and_decimal.Context.logical_and"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*¡
logical_invert_decimal.Context.logical_invert"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*Û

logical_or_decimal.Context.logical_or"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*ı
logical_xor_decimal.Context.logical_xor"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*Â
max_decimal.Context.max"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*Ì
max_mag_decimal.Context.max_mag"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*Â
min_decimal.Context.min"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*Ì
min_mag_decimal.Context.min_mag"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*Ø
minus_decimal.Context.minus"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*Ô
multiply_decimal.Context.multiply"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*π

next_minus_decimal.Context.next_minus"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑
	next_plus_decimal.Context.next_plus"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*ı
next_toward_decimal.Context.next_toward"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑
	normalize_decimal.Context.normalize"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*µ
number_class_decimal.Context.number_class"
builtins.str"builtins.str*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*≠
plus_decimal.Context.plus"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*Ö
power_decimal.Context.power"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*º
a¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*º
b¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*è
moduloÄ
;Union[TypeAlias[Union[_decimal.Decimal,builtins.int]],None]¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal
None *Ô
quantize_decimal.Context.quantize"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*u
radix_decimal.Context.radix"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*Ò
	remainder_decimal.Context.remainder"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*˚
remainder_near_decimal.Context.remainder_near"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*Î
rotate_decimal.Context.rotate"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*Ò
same_quantum_decimal.Context.same_quantum"
builtins.bool"builtins.bool*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*Î
scaleb_decimal.Context.scaleb"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*È
shift_decimal.Context.shift"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*≠
sqrt_decimal.Context.sqrt"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*Ô
subtract_decimal.Context.subtract"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑
to_eng_string_decimal.Context.to_eng_string"
builtins.str"builtins.str*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*∑
to_sci_string_decimal.Context.to_sci_string"
builtins.str"builtins.str*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*«
to_integral_exact"_decimal.Context.to_integral_exact"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*«
to_integral_value"_decimal.Context.to_integral_value"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimal*ª
to_integral_decimal.Context.to_integral"$
_decimal.Decimal"_decimal.Decimal*.
self$
_decimal.Context"_decimal.Context*∑¥
/TypeAlias[Union[_decimal.Decimal,builtins.int]]l
$Union[_decimal.Decimal,builtins.int]$
_decimal.Decimal"_decimal.Decimal
builtins.int"builtins.int"_decimal._Decimalr;
prec_decimal.Context.prec
builtins.int"builtins.intrC
rounding_decimal.Context.rounding
builtins.str"builtins.strr;
Emin_decimal.Context.Emin
builtins.int"builtins.intr;
Emax_decimal.Context.Emax
builtins.int"builtins.intrC
capitals_decimal.Context.capitals
builtins.int"builtins.intr=
clamp_decimal.Context.clamp
builtins.int"builtins.intrº
traps_decimal.Context.trapsö
Gbuiltins.dict[TypeAlias[Type[_decimal.DecimalException]],builtins.bool]ü
*TypeAlias[Type[_decimal.DecimalException]][
Type[_decimal.DecimalException]6
_decimal.DecimalException"_decimal.DecimalException"_decimal._TrapType
builtins.bool"builtins.bool"builtins.dictrº
flags_decimal.Context.flagsö
Gbuiltins.dict[TypeAlias[Type[_decimal.DecimalException]],builtins.bool]ü
*TypeAlias[Type[_decimal.DecimalException]][
Type[_decimal.DecimalException]6
_decimal.DecimalException"_decimal.DecimalException"_decimal._TrapType
builtins.bool"builtins.bool"builtins.dictr/
__hash___decimal.Context.__hash__
NoneS

setcontext_decimal.setcontext"
None*&$
_decimal.Context"_decimal.ContextG

getcontext_decimal.getcontext"$
_decimal.Context"_decimal.Context∏
localcontext_decimal.localcontext"4
_decimal._ContextManager"_decimal._ContextManager*[
ctxP
Union[_decimal.Context,None]$
_decimal.Context"_decimal.Context
None *Ñ
__annotations___decimal.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*A
__version___decimal.__version__
builtins.str"builtins.str*S
__libmpdec_version___decimal.__libmpdec_version__
builtins.str"builtins.str*?

ROUND_DOWN_decimal.ROUND_DOWN
builtins.str"builtins.str*E
ROUND_HALF_UP_decimal.ROUND_HALF_UP
builtins.str"builtins.str*I
ROUND_HALF_EVEN_decimal.ROUND_HALF_EVEN
builtins.str"builtins.str*E
ROUND_CEILING_decimal.ROUND_CEILING
builtins.str"builtins.str*A
ROUND_FLOOR_decimal.ROUND_FLOOR
builtins.str"builtins.str*;
ROUND_UP_decimal.ROUND_UP
builtins.str"builtins.str*I
ROUND_HALF_DOWN_decimal.ROUND_HALF_DOWN
builtins.str"builtins.str*?

ROUND_05UP_decimal.ROUND_05UP
builtins.str"builtins.str*K
HAVE_CONTEXTVAR_decimal.HAVE_CONTEXTVAR
builtins.bool"builtins.bool*E
HAVE_THREADS_decimal.HAVE_THREADS
builtins.bool"builtins.bool*;
MAX_EMAX_decimal.MAX_EMAX
builtins.int"builtins.int*;
MAX_PREC_decimal.MAX_PREC
builtins.int"builtins.int*;
MIN_EMIN_decimal.MIN_EMIN
builtins.int"builtins.int*=
	MIN_ETINY_decimal.MIN_ETINY
builtins.int"builtins.int*O
DefaultContext_decimal.DefaultContext$
_decimal.Context"_decimal.Context*K
BasicContext_decimal.BasicContext$
_decimal.Context"_decimal.Context*Q
ExtendedContext_decimal.ExtendedContext$
_decimal.Context"_decimal.Context