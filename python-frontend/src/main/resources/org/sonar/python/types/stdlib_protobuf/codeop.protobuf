
codeopÛ/
CodeTypetypes.CodeType"builtins.object*•
__init__types.CodeType.__init__"
None**
self 
types.CodeType"types.CodeType**
argcount
builtins.int"builtins.int*)
nlocals
builtins.int"builtins.int*+
	stacksize
builtins.int"builtins.int*'
flags
builtins.int"builtins.int*,

codestring
builtins.str"builtins.str*=
	constants.
builtins.tuple[Any]
Any"builtins.tuple*W
namesL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*Z
varnamesL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple**
filename
builtins.str"builtins.str*&
name
builtins.str"builtins.str*-
firstlineno
builtins.int"builtins.int*(
lnotab
builtins.str"builtins.str*\
freevarsL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple *\
cellvarsL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple z27*×
__init__types.CodeType.__init__"
None**
self 
types.CodeType"types.CodeType**
argcount
builtins.int"builtins.int*0
kwonlyargcount
builtins.int"builtins.int*)
nlocals
builtins.int"builtins.int*+
	stacksize
builtins.int"builtins.int*'
flags
builtins.int"builtins.int*0

codestring 
builtins.bytes"builtins.bytes*=
	constants.
builtins.tuple[Any]
Any"builtins.tuple*W
namesL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*Z
varnamesL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple**
filename
builtins.str"builtins.str*&
name
builtins.str"builtins.str*-
firstlineno
builtins.int"builtins.int*,
lnotab 
builtins.bytes"builtins.bytes*\
freevarsL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple *\
cellvarsL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple z35z36z37*‹
__init__types.CodeType.__init__"
None**
self 
types.CodeType"types.CodeType**
argcount
builtins.int"builtins.int*1
posonlyargcount
builtins.int"builtins.int*0
kwonlyargcount
builtins.int"builtins.int*)
nlocals
builtins.int"builtins.int*+
	stacksize
builtins.int"builtins.int*'
flags
builtins.int"builtins.int*0

codestring 
builtins.bytes"builtins.bytes*=
	constants.
builtins.tuple[Any]
Any"builtins.tuple*W
namesL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*Z
varnamesL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple**
filename
builtins.str"builtins.str*&
name
builtins.str"builtins.str*-
firstlineno
builtins.int"builtins.int*,
lnotab 
builtins.bytes"builtins.bytes*\
freevarsL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple *\
cellvarsL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple z38z39z310*ä
replacetypes.CodeType.replace" 
types.CodeType"types.CodeType**
self 
types.CodeType"types.CodeType*/
co_argcount
builtins.int"builtins.int *6
co_posonlyargcount
builtins.int"builtins.int *5
co_kwonlyargcount
builtins.int"builtins.int *.

co_nlocals
builtins.int"builtins.int *0
co_stacksize
builtins.int"builtins.int *,
co_flags
builtins.int"builtins.int *2
co_firstlineno
builtins.int"builtins.int */
co_code 
builtins.bytes"builtins.bytes *?
	co_consts.
builtins.tuple[Any]
Any"builtins.tuple *\
co_namesL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple *_
co_varnamesL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple *_
co_freevarsL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple *_
co_cellvarsL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple */
co_filename
builtins.str"builtins.str *+
co_name
builtins.str"builtins.str *1
	co_lnotab 
builtins.bytes"builtins.bytes z38z39z310j27j35j36j37j38j39j310rd
co_argcounttypes.CodeType.co_argcount
builtins.int"builtins.int*27*35*36*37*38*39*310r”
co_cellvarstypes.CodeType.co_cellvarsL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*27*35*36*37*38*39*310rC
co_codetypes.CodeType.co_code
builtins.str"builtins.str*27r\
co_codetypes.CodeType.co_code 
builtins.bytes"builtins.bytes*35*36*37*38*39*310rr
	co_conststypes.CodeType.co_consts.
builtins.tuple[Any]
Any"builtins.tuple*27*35*36*37*38*39*310rd
co_filenametypes.CodeType.co_filename
builtins.str"builtins.str*27*35*36*37*38*39*310rj
co_firstlinenotypes.CodeType.co_firstlineno
builtins.int"builtins.int*27*35*36*37*38*39*310r^
co_flagstypes.CodeType.co_flags
builtins.int"builtins.int*27*35*36*37*38*39*310r”
co_freevarstypes.CodeType.co_freevarsL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*27*35*36*37*38*39*310rG
	co_lnotabtypes.CodeType.co_lnotab
builtins.str"builtins.str*27r`
	co_lnotabtypes.CodeType.co_lnotab 
builtins.bytes"builtins.bytes*35*36*37*38*39*310r\
co_nametypes.CodeType.co_name
builtins.str"builtins.str*27*35*36*37*38*39*310rŽ
co_namestypes.CodeType.co_namesL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*27*35*36*37*38*39*310rb

co_nlocalstypes.CodeType.co_nlocals
builtins.int"builtins.int*27*35*36*37*38*39*310rf
co_stacksizetypes.CodeType.co_stacksize
builtins.int"builtins.int*27*35*36*37*38*39*310r”
co_varnamestypes.CodeType.co_varnamesL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*27*35*36*37*38*39*310rl
co_kwonlyargcount types.CodeType.co_kwonlyargcount
builtins.int"builtins.int*35*36*37*38*39*310rb
co_posonlyargcount!types.CodeType.co_posonlyargcount
builtins.int"builtins.int*38*39*310ª
Compilecodeop.Compile"builtins.object*v
__init__codeop.Compile.__init__"
None**
self 
codeop.Compile"codeop.Compilez27z35z36z37z38z39z310*Ž
__call__codeop.Compile.__call__" 
types.CodeType"types.CodeType**
self 
codeop.Compile"codeop.Compile*(
source
builtins.str"builtins.str**
filename
builtins.str"builtins.str*(
symbol
builtins.str"builtins.strz27z35z36z37z38z39z310j27j35j36j37j38j39j310rX
flagscodeop.Compile.flags
builtins.int"builtins.int*27*35*36*37*38*39*310«
CommandCompilercodeop.CommandCompiler"builtins.object*Ž
__init__codeop.CommandCompiler.__init__"
None*:
self0
codeop.CommandCompiler"codeop.CommandCompilerz27z35z36z37z38z39z310*Ô
__call__codeop.CommandCompiler.__call__"J
Union[types.CodeType,None] 
types.CodeType"types.CodeType
None*:
self0
codeop.CommandCompiler"codeop.CommandCompiler*(
source
builtins.str"builtins.str*,
filename
builtins.str"builtins.str **
symbol
builtins.str"builtins.str z27z35z36z37z38z39z310j27j35j36j37j38j39j310rj
compilercodeop.CommandCompiler.compiler 
codeop.Compile"codeop.Compile*27*35*36*37*38*39*310–
compile_commandcodeop.compile_command"J
Union[types.CodeType,None] 
types.CodeType"types.CodeType
None*(
source
builtins.str"builtins.str*,
filename
builtins.str"builtins.str **
symbol
builtins.str"builtins.str z27z35z36z37z38z39z310*d
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm*27*35*36*37*38*39*310