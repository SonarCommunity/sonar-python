
lib2to3.pygram»
Symbolslib2to3.pygram.Symbols"builtins.object*â
__init__lib2to3.pygram.Symbols.__init__"
None*:
self0
lib2to3.pygram.Symbols"lib2to3.pygram.Symbols*K
grammar>
lib2to3.pgen2.grammar.Grammar"lib2to3.pgen2.grammar.Grammarz36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313¬Y
python_symbolslib2to3.pygram.python_symbols"lib2to3.pygram.Symbolsj36j37j38j39j310j311j312j313rt
and_expr&lib2to3.pygram.python_symbols.and_expr
builtins.int"builtins.int*36*37*38*39*310*311*312*313rt
and_test&lib2to3.pygram.python_symbols.and_test
builtins.int"builtins.int*36*37*38*39*310*311*312*313rv
	annassign'lib2to3.pygram.python_symbols.annassign
builtins.int"builtins.int*36*37*38*39*310*311*312*313rr
arglist%lib2to3.pygram.python_symbols.arglist
builtins.int"builtins.int*36*37*38*39*310*311*312*313rt
argument&lib2to3.pygram.python_symbols.argument
builtins.int"builtins.int*36*37*38*39*310*311*312*313rx

arith_expr(lib2to3.pygram.python_symbols.arith_expr
builtins.int"builtins.int*36*37*38*39*310*311*312*313rz
assert_stmt)lib2to3.pygram.python_symbols.assert_stmt
builtins.int"builtins.int*36*37*38*39*310*311*312*313r~
async_funcdef+lib2to3.pygram.python_symbols.async_funcdef
builtins.int"builtins.int*36*37*38*39*310*311*312*313rx

async_stmt(lib2to3.pygram.python_symbols.async_stmt
builtins.int"builtins.int*36*37*38*39*310*311*312*313rl
atom"lib2to3.pygram.python_symbols.atom
builtins.int"builtins.int*36*37*38*39*310*311*312*313rv
	augassign'lib2to3.pygram.python_symbols.augassign
builtins.int"builtins.int*36*37*38*39*310*311*312*313rx

break_stmt(lib2to3.pygram.python_symbols.break_stmt
builtins.int"builtins.int*36*37*38*39*310*311*312*313rt
classdef&lib2to3.pygram.python_symbols.classdef
builtins.int"builtins.int*36*37*38*39*310*311*312*313rt
comp_for&lib2to3.pygram.python_symbols.comp_for
builtins.int"builtins.int*36*37*38*39*310*311*312*313rr
comp_if%lib2to3.pygram.python_symbols.comp_if
builtins.int"builtins.int*36*37*38*39*310*311*312*313rv
	comp_iter'lib2to3.pygram.python_symbols.comp_iter
builtins.int"builtins.int*36*37*38*39*310*311*312*313rr
comp_op%lib2to3.pygram.python_symbols.comp_op
builtins.int"builtins.int*36*37*38*39*310*311*312*313rx

comparison(lib2to3.pygram.python_symbols.comparison
builtins.int"builtins.int*36*37*38*39*310*311*312*313r~
compound_stmt+lib2to3.pygram.python_symbols.compound_stmt
builtins.int"builtins.int*36*37*38*39*310*311*312*313r~
continue_stmt+lib2to3.pygram.python_symbols.continue_stmt
builtins.int"builtins.int*36*37*38*39*310*311*312*313rv
	decorated'lib2to3.pygram.python_symbols.decorated
builtins.int"builtins.int*36*37*38*39*310*311*312*313rv
	decorator'lib2to3.pygram.python_symbols.decorator
builtins.int"builtins.int*36*37*38*39*310*311*312*313rx

decorators(lib2to3.pygram.python_symbols.decorators
builtins.int"builtins.int*36*37*38*39*310*311*312*313rt
del_stmt&lib2to3.pygram.python_symbols.del_stmt
builtins.int"builtins.int*36*37*38*39*310*311*312*313r|
dictsetmaker*lib2to3.pygram.python_symbols.dictsetmaker
builtins.int"builtins.int*36*37*38*39*310*311*312*313r€
dotted_as_name,lib2to3.pygram.python_symbols.dotted_as_name
builtins.int"builtins.int*36*37*38*39*310*311*312*313r‚
dotted_as_names-lib2to3.pygram.python_symbols.dotted_as_names
builtins.int"builtins.int*36*37*38*39*310*311*312*313rz
dotted_name)lib2to3.pygram.python_symbols.dotted_name
builtins.int"builtins.int*36*37*38*39*310*311*312*313r~
encoding_decl+lib2to3.pygram.python_symbols.encoding_decl
builtins.int"builtins.int*36*37*38*39*310*311*312*313rx

eval_input(lib2to3.pygram.python_symbols.eval_input
builtins.int"builtins.int*36*37*38*39*310*311*312*313r~
except_clause+lib2to3.pygram.python_symbols.except_clause
builtins.int"builtins.int*36*37*38*39*310*311*312*313rv
	exec_stmt'lib2to3.pygram.python_symbols.exec_stmt
builtins.int"builtins.int*36*37*38*39*310*311*312*313rl
expr"lib2to3.pygram.python_symbols.expr
builtins.int"builtins.int*36*37*38*39*310*311*312*313rv
	expr_stmt'lib2to3.pygram.python_symbols.expr_stmt
builtins.int"builtins.int*36*37*38*39*310*311*312*313rt
exprlist&lib2to3.pygram.python_symbols.exprlist
builtins.int"builtins.int*36*37*38*39*310*311*312*313rp
factor$lib2to3.pygram.python_symbols.factor
builtins.int"builtins.int*36*37*38*39*310*311*312*313rx

file_input(lib2to3.pygram.python_symbols.file_input
builtins.int"builtins.int*36*37*38*39*310*311*312*313rv
	flow_stmt'lib2to3.pygram.python_symbols.flow_stmt
builtins.int"builtins.int*36*37*38*39*310*311*312*313rt
for_stmt&lib2to3.pygram.python_symbols.for_stmt
builtins.int"builtins.int*36*37*38*39*310*311*312*313rr
funcdef%lib2to3.pygram.python_symbols.funcdef
builtins.int"builtins.int*36*37*38*39*310*311*312*313rz
global_stmt)lib2to3.pygram.python_symbols.global_stmt
builtins.int"builtins.int*36*37*38*39*310*311*312*313rr
if_stmt%lib2to3.pygram.python_symbols.if_stmt
builtins.int"builtins.int*36*37*38*39*310*311*312*313r€
import_as_name,lib2to3.pygram.python_symbols.import_as_name
builtins.int"builtins.int*36*37*38*39*310*311*312*313r‚
import_as_names-lib2to3.pygram.python_symbols.import_as_names
builtins.int"builtins.int*36*37*38*39*310*311*312*313rz
import_from)lib2to3.pygram.python_symbols.import_from
builtins.int"builtins.int*36*37*38*39*310*311*312*313rz
import_name)lib2to3.pygram.python_symbols.import_name
builtins.int"builtins.int*36*37*38*39*310*311*312*313rz
import_stmt)lib2to3.pygram.python_symbols.import_stmt
builtins.int"builtins.int*36*37*38*39*310*311*312*313rr
lambdef%lib2to3.pygram.python_symbols.lambdef
builtins.int"builtins.int*36*37*38*39*310*311*312*313rv
	listmaker'lib2to3.pygram.python_symbols.listmaker
builtins.int"builtins.int*36*37*38*39*310*311*312*313rt
not_test&lib2to3.pygram.python_symbols.not_test
builtins.int"builtins.int*36*37*38*39*310*311*312*313rz
old_lambdef)lib2to3.pygram.python_symbols.old_lambdef
builtins.int"builtins.int*36*37*38*39*310*311*312*313rt
old_test&lib2to3.pygram.python_symbols.old_test
builtins.int"builtins.int*36*37*38*39*310*311*312*313rr
or_test%lib2to3.pygram.python_symbols.or_test
builtins.int"builtins.int*36*37*38*39*310*311*312*313rx

parameters(lib2to3.pygram.python_symbols.parameters
builtins.int"builtins.int*36*37*38*39*310*311*312*313rv
	pass_stmt'lib2to3.pygram.python_symbols.pass_stmt
builtins.int"builtins.int*36*37*38*39*310*311*312*313rn
power#lib2to3.pygram.python_symbols.power
builtins.int"builtins.int*36*37*38*39*310*311*312*313rx

print_stmt(lib2to3.pygram.python_symbols.print_stmt
builtins.int"builtins.int*36*37*38*39*310*311*312*313rx

raise_stmt(lib2to3.pygram.python_symbols.raise_stmt
builtins.int"builtins.int*36*37*38*39*310*311*312*313rz
return_stmt)lib2to3.pygram.python_symbols.return_stmt
builtins.int"builtins.int*36*37*38*39*310*311*312*313rx

shift_expr(lib2to3.pygram.python_symbols.shift_expr
builtins.int"builtins.int*36*37*38*39*310*311*312*313rz
simple_stmt)lib2to3.pygram.python_symbols.simple_stmt
builtins.int"builtins.int*36*37*38*39*310*311*312*313r|
single_input*lib2to3.pygram.python_symbols.single_input
builtins.int"builtins.int*36*37*38*39*310*311*312*313rr
sliceop%lib2to3.pygram.python_symbols.sliceop
builtins.int"builtins.int*36*37*38*39*310*311*312*313rx

small_stmt(lib2to3.pygram.python_symbols.small_stmt
builtins.int"builtins.int*36*37*38*39*310*311*312*313rv
	star_expr'lib2to3.pygram.python_symbols.star_expr
builtins.int"builtins.int*36*37*38*39*310*311*312*313rl
stmt"lib2to3.pygram.python_symbols.stmt
builtins.int"builtins.int*36*37*38*39*310*311*312*313rv
	subscript'lib2to3.pygram.python_symbols.subscript
builtins.int"builtins.int*36*37*38*39*310*311*312*313r~
subscriptlist+lib2to3.pygram.python_symbols.subscriptlist
builtins.int"builtins.int*36*37*38*39*310*311*312*313rn
suite#lib2to3.pygram.python_symbols.suite
builtins.int"builtins.int*36*37*38*39*310*311*312*313rl
term"lib2to3.pygram.python_symbols.term
builtins.int"builtins.int*36*37*38*39*310*311*312*313rl
test"lib2to3.pygram.python_symbols.test
builtins.int"builtins.int*36*37*38*39*310*311*312*313rt
testlist&lib2to3.pygram.python_symbols.testlist
builtins.int"builtins.int*36*37*38*39*310*311*312*313rv
	testlist1'lib2to3.pygram.python_symbols.testlist1
builtins.int"builtins.int*36*37*38*39*310*311*312*313r~
testlist_gexp+lib2to3.pygram.python_symbols.testlist_gexp
builtins.int"builtins.int*36*37*38*39*310*311*312*313r~
testlist_safe+lib2to3.pygram.python_symbols.testlist_safe
builtins.int"builtins.int*36*37*38*39*310*311*312*313rˆ
testlist_star_expr0lib2to3.pygram.python_symbols.testlist_star_expr
builtins.int"builtins.int*36*37*38*39*310*311*312*313rp
tfpdef$lib2to3.pygram.python_symbols.tfpdef
builtins.int"builtins.int*36*37*38*39*310*311*312*313rr
tfplist%lib2to3.pygram.python_symbols.tfplist
builtins.int"builtins.int*36*37*38*39*310*311*312*313rn
tname#lib2to3.pygram.python_symbols.tname
builtins.int"builtins.int*36*37*38*39*310*311*312*313rr
trailer%lib2to3.pygram.python_symbols.trailer
builtins.int"builtins.int*36*37*38*39*310*311*312*313rt
try_stmt&lib2to3.pygram.python_symbols.try_stmt
builtins.int"builtins.int*36*37*38*39*310*311*312*313r~
typedargslist+lib2to3.pygram.python_symbols.typedargslist
builtins.int"builtins.int*36*37*38*39*310*311*312*313rz
varargslist)lib2to3.pygram.python_symbols.varargslist
builtins.int"builtins.int*36*37*38*39*310*311*312*313rp
vfpdef$lib2to3.pygram.python_symbols.vfpdef
builtins.int"builtins.int*36*37*38*39*310*311*312*313rr
vfplist%lib2to3.pygram.python_symbols.vfplist
builtins.int"builtins.int*36*37*38*39*310*311*312*313rn
vname#lib2to3.pygram.python_symbols.vname
builtins.int"builtins.int*36*37*38*39*310*311*312*313rx

while_stmt(lib2to3.pygram.python_symbols.while_stmt
builtins.int"builtins.int*36*37*38*39*310*311*312*313rv
	with_item'lib2to3.pygram.python_symbols.with_item
builtins.int"builtins.int*36*37*38*39*310*311*312*313rv
	with_stmt'lib2to3.pygram.python_symbols.with_stmt
builtins.int"builtins.int*36*37*38*39*310*311*312*313rt
with_var&lib2to3.pygram.python_symbols.with_var
builtins.int"builtins.int*36*37*38*39*310*311*312*313rt
xor_expr&lib2to3.pygram.python_symbols.xor_expr
builtins.int"builtins.int*36*37*38*39*310*311*312*313rv
	yield_arg'lib2to3.pygram.python_symbols.yield_arg
builtins.int"builtins.int*36*37*38*39*310*311*312*313rx

yield_expr(lib2to3.pygram.python_symbols.yield_expr
builtins.int"builtins.int*36*37*38*39*310*311*312*313rx

yield_stmt(lib2to3.pygram.python_symbols.yield_stmt
builtins.int"builtins.int*36*37*38*39*310*311*312*313¶
pattern_symbolslib2to3.pygram.pattern_symbols"lib2to3.pygram.Symbolsj36j37j38j39j310j311j312j313r{
Alternative*lib2to3.pygram.pattern_symbols.Alternative
builtins.int"builtins.int*36*37*38*39*310*311*312*313r}
Alternatives+lib2to3.pygram.pattern_symbols.Alternatives
builtins.int"builtins.int*36*37*38*39*310*311*312*313rs
Details&lib2to3.pygram.pattern_symbols.Details
builtins.int"builtins.int*36*37*38*39*310*311*312*313rs
Matcher&lib2to3.pygram.pattern_symbols.Matcher
builtins.int"builtins.int*36*37*38*39*310*311*312*313r{
NegatedUnit*lib2to3.pygram.pattern_symbols.NegatedUnit
builtins.int"builtins.int*36*37*38*39*310*311*312*313ru
Repeater'lib2to3.pygram.pattern_symbols.Repeater
builtins.int"builtins.int*36*37*38*39*310*311*312*313rm
Unit#lib2to3.pygram.pattern_symbols.Unit
builtins.int"builtins.int*36*37*38*39*310*311*312*313*®
__annotations__lib2to3.pygram.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313*“
python_grammarlib2to3.pygram.python_grammar>
lib2to3.pgen2.grammar.Grammar"lib2to3.pgen2.grammar.Grammar*36*37*38*39*310*311*312*313*¹
!python_grammar_no_print_statement0lib2to3.pygram.python_grammar_no_print_statement>
lib2to3.pgen2.grammar.Grammar"lib2to3.pgen2.grammar.Grammar*36*37*38*39*310*311*312*313*Ë
*python_grammar_no_print_and_exec_statement9lib2to3.pygram.python_grammar_no_print_and_exec_statement>
lib2to3.pgen2.grammar.Grammar"lib2to3.pgen2.grammar.Grammar*36*37*38*39*310*311*312*313*•
pattern_grammarlib2to3.pygram.pattern_grammar>
lib2to3.pgen2.grammar.Grammar"lib2to3.pgen2.grammar.Grammar*36*37*38*39*310*311*312*313