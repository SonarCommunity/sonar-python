
flask_cors.coreL
_Optionsflask_cors.core._Options"typing._TypedDictj36j37j38j39j310ç
parse_resourcesflask_cors.core.parse_resources"ÿ
7builtins.list[Tuple[builtins.str,TypeAlias[TypedDict]]]ç
(Tuple[builtins.str,TypeAlias[TypedDict]]
builtins.str"builtins.strA
TypeAlias[TypedDict]
	TypedDict"flask_cors.core._Options"builtins.list*Ë
	resourcesÿ
{Union[builtins.dict[builtins.str,TypeAlias[TypedDict]],typing.Iterable[builtins.str],builtins.str,re.Pattern[builtins.str]]¢
0builtins.dict[builtins.str,TypeAlias[TypedDict]]
builtins.str"builtins.strA
TypeAlias[TypedDict]
	TypedDict"flask_cors.core._Options"builtins.dictN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable
builtins.str"builtins.strD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Patternz36z37z38z39z310è
get_regexp_pattern"flask_cors.core.get_regexp_pattern"
builtins.str"builtins.str*°
regexpî
,Union[builtins.str,re.Pattern[builtins.str]]
builtins.str"builtins.strD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Patternz36z37z38z39z310˜
get_cors_origins flask_cors.core.get_cors_origins"Å
'Union[builtins.list[builtins.str],None]J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
None*N
optionsA
TypeAlias[TypedDict]
	TypedDict"flask_cors.core._Options*X
request_originD
Union[builtins.str,None]
builtins.str"builtins.str
Nonez36z37z38z39z310¿
get_allow_headers!flask_cors.core.get_allow_headers"D
Union[builtins.str,None]
builtins.str"builtins.str
None*N
optionsA
TypeAlias[TypedDict]
	TypedDict"flask_cors.core._Options*]
acl_request_headersD
Union[builtins.str,None]
builtins.str"builtins.str
Nonez36z37z38z39z310Ú
get_cors_headers flask_cors.core.get_cors_headers"7
TypeAlias[Any]
Any"flask_cors.core._MultiDict*N
optionsA
TypeAlias[TypedDict]
	TypedDict"flask_cors.core._Options*l
request_headersW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*0
request_method
builtins.str"builtins.strz36z37z38z39z310ã
set_cors_headers flask_cors.core.set_cors_headers"2
flask.wrappers.Response"flask.wrappers.Response*<
resp2
flask.wrappers.Response"flask.wrappers.Response*N
optionsA
TypeAlias[TypedDict]
	TypedDict"flask_cors.core._Optionsz36z37z38z39z310é
probably_regexflask_cors.core.probably_regex"
builtins.bool"builtins.bool*¶
maybe_regexî
,Union[builtins.str,re.Pattern[builtins.str]]
builtins.str"builtins.strD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Patternz36z37z38z39z310z
re_fixflask_cors.core.re_fix"
builtins.str"builtins.str*%
reg
builtins.str"builtins.strz36z37z38z39z310Ñ
try_match_anyflask_cors.core.try_match_any"
builtins.bool"builtins.bool*&
inst
builtins.str"builtins.str*ˆ
patternsÁ
=typing.Iterable[Union[builtins.str,re.Pattern[builtins.str]]]î
,Union[builtins.str,re.Pattern[builtins.str]]
builtins.str"builtins.strD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern"typing.Iterablez36z37z38z39z310∂
	try_matchflask_cors.core.try_match"
builtins.bool"builtins.bool*0
request_origin
builtins.str"builtins.str*¶
maybe_regexî
,Union[builtins.str,re.Pattern[builtins.str]]
builtins.str"builtins.strD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Patternz36z37z38z39z310∫
get_cors_options flask_cors.core.get_cors_options"A
TypeAlias[TypedDict]
	TypedDict"flask_cors.core._Options*^
appInstanceM
Union[flask.app.Flask,None]"
flask.app.Flask"flask.app.Flask
None*L
dictsA
TypeAlias[TypedDict]
	TypedDict"flask_cors.core._Optionsz36z37z38z39z310Ú
get_app_kwarg_dict"flask_cors.core.get_app_kwarg_dict"A
TypeAlias[TypedDict]
	TypedDict"flask_cors.core._Options*`
appInstanceM
Union[flask.app.Flask,None]"
flask.app.Flask"flask.app.Flask
None z36z37z38z39z310¥
flexible_strflask_cors.core.flexible_str"D
Union[builtins.str,None]
builtins.str"builtins.str
None*+
obj"
builtins.object"builtins.objectz36z37z38z39z310¸
serialize_option flask_cors.core.serialize_option"
None*S
options_dictA
TypeAlias[TypedDict]
	TypedDict"flask_cors.core._Options*%
key
builtins.str"builtins.str*+
upper
builtins.bool"builtins.bool z36z37z38z39z310…
sanitize_regex_param$flask_cors.core.sanitize_regex_param"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*©
paramù
/Union[builtins.str,builtins.list[builtins.str]]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listz36z37z38z39z310€
serialize_options!flask_cors.core.serialize_options"A
TypeAlias[TypedDict]
	TypedDict"flask_cors.core._Options*K
optsA
TypeAlias[TypedDict]
	TypedDict"flask_cors.core._Optionsz36z37z38z39z310"º
ensure_iterableflask_cors.core.ensure_iterable¥
ensure_iterableflask_cors.core.ensure_iterable"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*&
inst
builtins.str"builtins.str0:overloadXä
ensure_iterableflask_cors.core.ensure_iterable"
flask_cors.core._IterableT*(
inst
flask_cors.core._IterableT0:overloadXÆ
ensure_iterableflask_cors.core.ensure_iterable"J
!builtins.list[flask_cors.core._T]
flask_cors.core._T"builtins.list* 
inst
flask_cors.core._T0:overloadX"36"37"38"39"310*†
__annotations__flask_cors.core.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*Q
LOGflask_cors.core.LOG 
logging.Logger"logging.Logger*36*37*38*39*310*[

ACL_ORIGINflask_cors.core.ACL_ORIGIN
builtins.str"builtins.str*36*37*38*39*310*]
ACL_METHODSflask_cors.core.ACL_METHODS
builtins.str"builtins.str*36*37*38*39*310*i
ACL_ALLOW_HEADERS!flask_cors.core.ACL_ALLOW_HEADERS
builtins.str"builtins.str*36*37*38*39*310*k
ACL_EXPOSE_HEADERS"flask_cors.core.ACL_EXPOSE_HEADERS
builtins.str"builtins.str*36*37*38*39*310*e
ACL_CREDENTIALSflask_cors.core.ACL_CREDENTIALS
builtins.str"builtins.str*36*37*38*39*310*]
ACL_MAX_AGEflask_cors.core.ACL_MAX_AGE
builtins.str"builtins.str*36*37*38*39*310*k
ACL_REQUEST_METHOD"flask_cors.core.ACL_REQUEST_METHOD
builtins.str"builtins.str*36*37*38*39*310*m
ACL_REQUEST_HEADERS#flask_cors.core.ACL_REQUEST_HEADERS
builtins.str"builtins.str*36*37*38*39*310*ã
ALL_METHODSflask_cors.core.ALL_METHODSJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*36*37*38*39*310*ë
CONFIG_OPTIONSflask_cors.core.CONFIG_OPTIONSJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*36*37*38*39*310*o
FLASK_CORS_EVALUATED$flask_cors.core.FLASK_CORS_EVALUATED
builtins.str"builtins.str*36*37*38*39*310*©
RegexObjectflask_cors.core.RegexObjecth
Type[re.Pattern[builtins.str]]D
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*36*37*38*39*310*ä
DEFAULT_OPTIONSflask_cors.core.DEFAULT_OPTIONSA
TypeAlias[TypedDict]
	TypedDict"flask_cors.core._Options*36*37*38*39*310