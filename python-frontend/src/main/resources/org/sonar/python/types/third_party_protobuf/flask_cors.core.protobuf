
flask_cors.coreô
_Optionsflask_cors.core._Options"builtins.objectj36j37rË
	resources"flask_cors.core._Options.resourcesÆ
pUnion[builtins.dict[builtins.str,builtins.dict[builtins.str,Any]],builtins.list[builtins.str],builtins.str,None]√
;builtins.dict[builtins.str,builtins.dict[builtins.str,Any]]
builtins.str"builtins.strW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"builtins.dictJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
builtins.str"builtins.str
None*36*37r‚
origins flask_cors.core._Options.origins¨
4Union[builtins.str,builtins.list[builtins.str],None]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
None*36*37r‚
methods flask_cors.core._Options.methods¨
4Union[builtins.str,builtins.list[builtins.str],None]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
None*36*37r
expose_headers'flask_cors.core._Options.expose_headers¨
4Union[builtins.str,builtins.list[builtins.str],None]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
None*36*37rÓ
allow_headers&flask_cors.core._Options.allow_headers¨
4Union[builtins.str,builtins.list[builtins.str],None]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
None*36*37rñ
supports_credentials-flask_cors.core._Options.supports_credentialsG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*36*37r‚
max_age flask_cors.core._Options.max_age¨
8Union[datetime.timedelta,builtins.int,builtins.str,None](
datetime.timedelta"datetime.timedelta
builtins.int"builtins.int
builtins.str"builtins.str
None*36*37rà
send_wildcard&flask_cors.core._Options.send_wildcardG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*36*37rÑ
vary_header$flask_cors.core._Options.vary_headerG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*36*37rê
automatic_options*flask_cors.core._Options.automatic_optionsG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*36*37rñ
intercept_exceptions-flask_cors.core._Options.intercept_exceptionsG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*36*37rÑ
always_send$flask_cors.core._Options.always_sendG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*36*37S
_Optionsflask_cors.core._Options"typing._TypedDictj38j39j310j311j312j313ˆ
parse_resourcesflask_cors.core.parse_resources"”
;builtins.list[Tuple[builtins.str,flask_cors.core._Options]]Ñ
,Tuple[builtins.str,flask_cors.core._Options]
builtins.str"builtins.str4
flask_cors.core._Options"flask_cors.core._Options"builtins.list*„
	resources”
Union[builtins.dict[builtins.str,flask_cors.core._Options],typing.Iterable[builtins.str],builtins.str,re.Pattern[builtins.str]]ô
4builtins.dict[builtins.str,flask_cors.core._Options]
builtins.str"builtins.str4
flask_cors.core._Options"flask_cors.core._Options"builtins.dictN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable
builtins.str"builtins.strD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Patternz36z37î
parse_resourcesflask_cors.core.parse_resources"ÿ
7builtins.list[Tuple[builtins.str,TypeAlias[TypedDict]]]ç
(Tuple[builtins.str,TypeAlias[TypedDict]]
builtins.str"builtins.strA
TypeAlias[TypedDict]
	TypedDict"flask_cors.core._Options"builtins.list*Ë
	resourcesÿ
{Union[builtins.dict[builtins.str,TypeAlias[TypedDict]],typing.Iterable[builtins.str],builtins.str,re.Pattern[builtins.str]]¢
0builtins.dict[builtins.str,TypeAlias[TypedDict]]
builtins.str"builtins.strA
TypeAlias[TypedDict]
	TypedDict"flask_cors.core._Options"builtins.dictN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable
builtins.str"builtins.strD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Patternz38z39z310z311z312z313û
get_regexp_pattern"flask_cors.core.get_regexp_pattern"
builtins.str"builtins.str*°
regexpî
,Union[builtins.str,re.Pattern[builtins.str]]
builtins.str"builtins.strD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Patternz36z37z38z39z310z311z312z313›
get_cors_origins flask_cors.core.get_cors_origins"Å
'Union[builtins.list[builtins.str],None]J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
None*A
options4
flask_cors.core._Options"flask_cors.core._Options*X
request_originD
Union[builtins.str,None]
builtins.str"builtins.str
Nonez36z37˛
get_cors_origins flask_cors.core.get_cors_origins"Å
'Union[builtins.list[builtins.str],None]J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
None*N
optionsA
TypeAlias[TypedDict]
	TypedDict"flask_cors.core._Options*X
request_originD
Union[builtins.str,None]
builtins.str"builtins.str
Nonez38z39z310z311z312z313¶
get_allow_headers!flask_cors.core.get_allow_headers"D
Union[builtins.str,None]
builtins.str"builtins.str
None*A
options4
flask_cors.core._Options"flask_cors.core._Options*]
acl_request_headersD
Union[builtins.str,None]
builtins.str"builtins.str
Nonez36z37«
get_allow_headers!flask_cors.core.get_allow_headers"D
Union[builtins.str,None]
builtins.str"builtins.str
None*N
optionsA
TypeAlias[TypedDict]
	TypedDict"flask_cors.core._Options*]
acl_request_headersD
Union[builtins.str,None]
builtins.str"builtins.str
Nonez38z39z310z311z312z313ÿ
get_cors_headers flask_cors.core.get_cors_headers"7
TypeAlias[Any]
Any"flask_cors.core._MultiDict*A
options4
flask_cors.core._Options"flask_cors.core._Options*l
request_headersW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*0
request_method
builtins.str"builtins.strz36z37˘
get_cors_headers flask_cors.core.get_cors_headers"7
TypeAlias[Any]
Any"flask_cors.core._MultiDict*N
optionsA
TypeAlias[TypedDict]
	TypedDict"flask_cors.core._Options*l
request_headersW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*0
request_method
builtins.str"builtins.strz38z39z310z311z312z313Ò
set_cors_headers flask_cors.core.set_cors_headers"2
flask.wrappers.Response"flask.wrappers.Response*<
resp2
flask.wrappers.Response"flask.wrappers.Response*A
options4
flask_cors.core._Options"flask_cors.core._Optionsz36z37í
set_cors_headers flask_cors.core.set_cors_headers"2
flask.wrappers.Response"flask.wrappers.Response*<
resp2
flask.wrappers.Response"flask.wrappers.Response*N
optionsA
TypeAlias[TypedDict]
	TypedDict"flask_cors.core._Optionsz38z39z310z311z312z313â
re_fixflask_cors.core.re_fix"
builtins.str"builtins.str*%
reg
builtins.str"builtins.strz36z37z38z39z310z311z312z313ì
try_match_anyflask_cors.core.try_match_any"
builtins.bool"builtins.bool*&
inst
builtins.str"builtins.str*ˆ
patternsÁ
=typing.Iterable[Union[builtins.str,re.Pattern[builtins.str]]]î
,Union[builtins.str,re.Pattern[builtins.str]]
builtins.str"builtins.strD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern"typing.Iterablez36z37z38z39z310z311z312z313≈
	try_matchflask_cors.core.try_match"
builtins.bool"builtins.bool*0
request_origin
builtins.str"builtins.str*¶
maybe_regexî
,Union[builtins.str,re.Pattern[builtins.str]]
builtins.str"builtins.strD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Patternz36z37z38z39z310z311z312z313ì
get_cors_options flask_cors.core.get_cors_options"4
flask_cors.core._Options"flask_cors.core._Options*^
appInstanceM
Union[flask.app.Flask,None]"
flask.app.Flask"flask.app.Flask
None*?
dicts4
flask_cors.core._Options"flask_cors.core._Optionsz36z37¡
get_cors_options flask_cors.core.get_cors_options"A
TypeAlias[TypedDict]
	TypedDict"flask_cors.core._Options*^
appInstanceM
Union[flask.app.Flask,None]"
flask.app.Flask"flask.app.Flask
None*L
dictsA
TypeAlias[TypedDict]
	TypedDict"flask_cors.core._Optionsz38z39z310z311z312z313ÿ
get_app_kwarg_dict"flask_cors.core.get_app_kwarg_dict"4
flask_cors.core._Options"flask_cors.core._Options*`
appInstanceM
Union[flask.app.Flask,None]"
flask.app.Flask"flask.app.Flask
None z36z37˘
get_app_kwarg_dict"flask_cors.core.get_app_kwarg_dict"A
TypeAlias[TypedDict]
	TypedDict"flask_cors.core._Options*`
appInstanceM
Union[flask.app.Flask,None]"
flask.app.Flask"flask.app.Flask
None z38z39z310z311z312z313√
flexible_strflask_cors.core.flexible_str"D
Union[builtins.str,None]
builtins.str"builtins.str
None*+
obj"
builtins.object"builtins.objectz36z37z38z39z310z311z312z313‚
serialize_option flask_cors.core.serialize_option"
None*F
options_dict4
flask_cors.core._Options"flask_cors.core._Options*%
key
builtins.str"builtins.str*+
upper
builtins.bool"builtins.bool z36z37É
serialize_option flask_cors.core.serialize_option"
None*S
options_dictA
TypeAlias[TypedDict]
	TypedDict"flask_cors.core._Options*%
key
builtins.str"builtins.str*+
upper
builtins.bool"builtins.bool z38z39z310z311z312z313ÿ
sanitize_regex_param$flask_cors.core.sanitize_regex_param"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*©
paramù
/Union[builtins.str,builtins.list[builtins.str]]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listz36z37z38z39z310z311z312z313¥
serialize_options!flask_cors.core.serialize_options"4
flask_cors.core._Options"flask_cors.core._Options*>
opts4
flask_cors.core._Options"flask_cors.core._Optionsz36z37‚
serialize_options!flask_cors.core.serialize_options"A
TypeAlias[TypedDict]
	TypedDict"flask_cors.core._Options*K
optsA
TypeAlias[TypedDict]
	TypedDict"flask_cors.core._Optionsz38z39z310z311z312z313"È
probably_regexflask_cors.core.probably_regexû
probably_regexflask_cors.core.probably_regex"
Any*U
maybe_regexD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern0:overloadXç
probably_regexflask_cors.core.probably_regex"
builtins.bool"builtins.bool*-
maybe_regex
builtins.str"builtins.str0:overloadX"36"37"∞
probably_regexflask_cors.core.probably_regex—
probably_regexflask_cors.core.probably_regex":
Literal[builtins.bool]	
builtins.bool"builtins.bool*U
maybe_regexD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern0:overloadXç
probably_regexflask_cors.core.probably_regex"
builtins.bool"builtins.bool*-
maybe_regex
builtins.str"builtins.str0:overloadX"38"39"310"311"312"313"ª
ensure_iterableflask_cors.core.ensure_iterable¥
ensure_iterableflask_cors.core.ensure_iterable"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*&
inst
builtins.str"builtins.str0:overloadXê
ensure_iterableflask_cors.core.ensure_iterable"a
flask_cors.core._IterableT0
typing.Iterable[Any]
Any"typing.Iterable"typing.Iterable*k
insta
flask_cors.core._IterableT0
typing.Iterable[Any]
Any"typing.Iterable"typing.Iterable0:overloadXò
ensure_iterableflask_cors.core.ensure_iterable"
!builtins.list[flask_cors.core._T]K
flask_cors.core._T"
builtins.object"builtins.object"builtins.object"builtins.list*U
instK
flask_cors.core._T"
builtins.object"builtins.object"builtins.object0:overloadX"36"37"38"39"310"311"312"313*Ø
__annotations__flask_cors.core.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313*/
Finalflask_cors.core.Final
Any*36*37*3
Literalflask_cors.core.Literal
Any*36*37*7
	TypedDictflask_cors.core.TypedDict
Any*36*37*`
LOGflask_cors.core.LOG 
logging.Logger"logging.Logger*36*37*38*39*310*311*312*313*9

ACL_ORIGINflask_cors.core.ACL_ORIGIN
Any*36*37*b

ACL_ORIGINflask_cors.core.ACL_ORIGIN
builtins.str"builtins.str*38*39*310*311*312*313*;
ACL_METHODSflask_cors.core.ACL_METHODS
Any*36*37*d
ACL_METHODSflask_cors.core.ACL_METHODS
builtins.str"builtins.str*38*39*310*311*312*313*G
ACL_ALLOW_HEADERS!flask_cors.core.ACL_ALLOW_HEADERS
Any*36*37*p
ACL_ALLOW_HEADERS!flask_cors.core.ACL_ALLOW_HEADERS
builtins.str"builtins.str*38*39*310*311*312*313*I
ACL_EXPOSE_HEADERS"flask_cors.core.ACL_EXPOSE_HEADERS
Any*36*37*r
ACL_EXPOSE_HEADERS"flask_cors.core.ACL_EXPOSE_HEADERS
builtins.str"builtins.str*38*39*310*311*312*313*C
ACL_CREDENTIALSflask_cors.core.ACL_CREDENTIALS
Any*36*37*l
ACL_CREDENTIALSflask_cors.core.ACL_CREDENTIALS
builtins.str"builtins.str*38*39*310*311*312*313*;
ACL_MAX_AGEflask_cors.core.ACL_MAX_AGE
Any*36*37*d
ACL_MAX_AGEflask_cors.core.ACL_MAX_AGE
builtins.str"builtins.str*38*39*310*311*312*313*]
ACL_RESPONSE_PRIVATE_NETWORK,flask_cors.core.ACL_RESPONSE_PRIVATE_NETWORK
Any*36*37*Ü
ACL_RESPONSE_PRIVATE_NETWORK,flask_cors.core.ACL_RESPONSE_PRIVATE_NETWORK
builtins.str"builtins.str*38*39*310*311*312*313*I
ACL_REQUEST_METHOD"flask_cors.core.ACL_REQUEST_METHOD
Any*36*37*r
ACL_REQUEST_METHOD"flask_cors.core.ACL_REQUEST_METHOD
builtins.str"builtins.str*38*39*310*311*312*313*K
ACL_REQUEST_HEADERS#flask_cors.core.ACL_REQUEST_HEADERS
Any*36*37*t
ACL_REQUEST_HEADERS#flask_cors.core.ACL_REQUEST_HEADERS
builtins.str"builtins.str*38*39*310*311*312*313*i
"ACL_REQUEST_HEADER_PRIVATE_NETWORK2flask_cors.core.ACL_REQUEST_HEADER_PRIVATE_NETWORK
Any*36*37*í
"ACL_REQUEST_HEADER_PRIVATE_NETWORK2flask_cors.core.ACL_REQUEST_HEADER_PRIVATE_NETWORK
builtins.str"builtins.str*38*39*310*311*312*313*;
ALL_METHODSflask_cors.core.ALL_METHODS
Any*36*37*í
ALL_METHODSflask_cors.core.ALL_METHODSJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313*A
CONFIG_OPTIONSflask_cors.core.CONFIG_OPTIONS
Any*36*37*ò
CONFIG_OPTIONSflask_cors.core.CONFIG_OPTIONSJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313*M
FLASK_CORS_EVALUATED$flask_cors.core.FLASK_CORS_EVALUATED
Any*36*37*v
FLASK_CORS_EVALUATED$flask_cors.core.FLASK_CORS_EVALUATED
builtins.str"builtins.str*38*39*310*311*312*313*;
RegexObjectflask_cors.core.RegexObject
Any*36*37*∂
RegexObjectflask_cors.core.RegexObjectn
Type[re.Pattern[builtins.str]]D
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern"type*38*39*310*311*312*313*C
DEFAULT_OPTIONSflask_cors.core.DEFAULT_OPTIONS
Any*36*37*ë
DEFAULT_OPTIONSflask_cors.core.DEFAULT_OPTIONSA
TypeAlias[TypedDict]
	TypedDict"flask_cors.core._Options*38*39*310*311*312*313