
torch._library.custom_ops»
CustomOpDef%torch._library.custom_ops.CustomOpDef"builtins.object*Ú
__init__.torch._library.custom_ops.CustomOpDef.__init__"
None*X
selfN
%torch._library.custom_ops.CustomOpDef"%torch._library.custom_ops.CustomOpDef*+
	namespace
builtins.str"builtins.str*&
name
builtins.str"builtins.str*(
schema
builtins.str"builtins.str*S
fnK
CallableType[builtins.function]&
builtins.function"builtins.function*¬
	_qualname/torch._library.custom_ops.CustomOpDef._qualname"
builtins.str"builtins.str*X
selfN
%torch._library.custom_ops.CustomOpDef"%torch._library.custom_ops.CustomOpDef0:property`*™
__repr__.torch._library.custom_ops.CustomOpDef.__repr__"
builtins.str"builtins.str*PN
%torch._library.custom_ops.CustomOpDef"%torch._library.custom_ops.CustomOpDef*ü
register_kernel5torch._library.custom_ops.CustomOpDef.register_kernel"K
CallableType[builtins.function]&
builtins.function"builtins.function*PN
%torch._library.custom_ops.CustomOpDef"%torch._library.custom_ops.CustomOpDef*ß§
ATypeAlias[Union[builtins.str,typing.Sequence[builtins.str],None]]≤
6Union[builtins.str,typing.Sequence[builtins.str],None]
builtins.str"builtins.strN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
None"(torch._library.custom_ops.device_types_t*ãÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *≤
register_fake3torch._library.custom_ops.CustomOpDef.register_fake"K
CallableType[builtins.function]&
builtins.function"builtins.function*PN
%torch._library.custom_ops.CustomOpDef"%torch._library.custom_ops.CustomOpDef*MK
CallableType[builtins.function]&
builtins.function"builtins.function*ñ
register_autograd7torch._library.custom_ops.CustomOpDef.register_autograd"
None*PN
%torch._library.custom_ops.CustomOpDef"%torch._library.custom_ops.CustomOpDef*MK
CallableType[builtins.function]&
builtins.function"builtins.function*ú
setup_contextÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *º
_register_to_dispatcher=torch._library.custom_ops.CustomOpDef._register_to_dispatcher"
None*X
selfN
%torch._library.custom_ops.CustomOpDef"%torch._library.custom_ops.CustomOpDef*Z
__call__.torch._library.custom_ops.CustomOpDef.__call__*
self*
args*

kwargsr\

_namespace0torch._library.custom_ops.CustomOpDef._namespace
builtins.str"builtins.strrR
_name+torch._library.custom_ops.CustomOpDef._name
builtins.str"builtins.strrV
_schema-torch._library.custom_ops.CustomOpDef._schema
builtins.str"builtins.strrá
_init_fn.torch._library.custom_ops.CustomOpDef._init_fnK
CallableType[builtins.function]&
builtins.function"builtins.functionr∞
_backend_fns2torch._library.custom_ops.CustomOpDef._backend_fnsÎ
Gbuiltins.dict[Union[builtins.str,None],CallableType[builtins.function]]D
Union[builtins.str,None]
builtins.str"builtins.str
NoneK
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.dictrÀ
_abstract_fn2torch._library.custom_ops.CustomOpDef._abstract_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
Noner’
_setup_context_fn7torch._library.custom_ops.CustomOpDef._setup_context_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
NonerÀ
_backward_fn2torch._library.custom_ops.CustomOpDef._backward_fnÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
Nonerb
_lib*torch._library.custom_ops.CustomOpDef._lib.
torch.library.Library"torch.library.Libraryrp
_opoverload1torch._library.custom_ops.CustomOpDef._opoverload.
torch._ops.OpOverload"torch._ops.OpOverloadﬂ
get_library_allowing_overwrite8torch._library.custom_ops.get_library_allowing_overwrite".
torch.library.Library"torch.library.Library*+
	namespace
builtins.str"builtins.str*&
name
builtins.str"builtins.str€
iter_tensors&torch._library.custom_ops.iter_tensors"f
%typing.Iterator[torch._tensor.Tensor],
torch._tensor.Tensor"torch._tensor.Tensor"typing.Iterator*!
args

Tuple[Any]
Any*c
kwargsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*3
allowed_nesting
builtins.int"builtins.int Õ
_maybe_get_opdef*torch._library.custom_ops._maybe_get_opdef"è
1Union[torch._library.custom_ops.CustomOpDef,None]N
%torch._library.custom_ops.CustomOpDef"%torch._library.custom_ops.CustomOpDef
None*˙
opÒ
OUnion[torch._library.custom_ops.CustomOpDef,torch._ops.OpOverload,builtins.str]N
%torch._library.custom_ops.CustomOpDef"%torch._library.custom_ops.CustomOpDef.
torch._ops.OpOverload"torch._ops.OpOverload
builtins.str"builtins.str*ï
__annotations__)torch._library.custom_ops.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*…
OPDEF_TO_LIB&torch._library.custom_ops.OPDEF_TO_LIBê
1builtins.dict[builtins.str,torch.library.Library]
builtins.str"builtins.str.
torch.library.Library"torch.library.Library"builtins.dict*Å
OPDEFS torch._library.custom_ops.OPDEFSU
$weakref.WeakValueDictionary[Any,Any]
Any
Any"weakref.WeakValueDictionary