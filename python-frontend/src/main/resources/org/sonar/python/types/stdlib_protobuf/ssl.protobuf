
ssl˚
	MemoryBIO_ssl.MemoryBIO"builtins.object*·
__new___ssl.MemoryBIO.__new__" 
_ssl.MemoryBIO"_ssl.MemoryBIO*x
selfn
Type[_ssl.MemoryBIO.Self]I
_ssl.MemoryBIO.Self 
_ssl.MemoryBIO"_ssl.MemoryBIO"_ssl.MemoryBIO"typez36z37z38z39z310z311z312z313*ß
read_ssl.MemoryBIO.read" 
builtins.bytes"builtins.bytes*" 
_ssl.MemoryBIO"_ssl.MemoryBIO* 
builtins.int"builtins.int z36z37z38z39z310z311z312z313*±
write_ssl.MemoryBIO.write"
builtins.int"builtins.int*" 
_ssl.MemoryBIO"_ssl.MemoryBIO*64
typing_extensions.Buffer"typing_extensions.Bufferz36z37z38z39z310z311*ü
write_ssl.MemoryBIO.write"
builtins.int"builtins.int*" 
_ssl.MemoryBIO"_ssl.MemoryBIO*42
_collections_abc.Buffer"_collections_abc.Bufferz312z313*
	write_eof_ssl.MemoryBIO.write_eof"
None**
self 
_ssl.MemoryBIO"_ssl.MemoryBIOz36z37z38z39z310z311z312z3138j36j37j38j39j310j311j312j313r]
eof_ssl.MemoryBIO.eof
builtins.bool"builtins.bool*36*37*38*39*310*311*312*313rc
pending_ssl.MemoryBIO.pending
builtins.int"builtins.int*36*37*38*39*310*311*312*313ô

SSLSession_ssl.SSLSession"builtins.object*®

has_ticket_ssl.SSLSession.has_ticket"
builtins.bool"builtins.bool*,
self"
_ssl.SSLSession"_ssl.SSLSession0:property`z36z37z38z39z310z311z312z313*ö
id_ssl.SSLSession.id" 
builtins.bytes"builtins.bytes*,
self"
_ssl.SSLSession"_ssl.SSLSession0:property`z36z37z38z39z310z311z312z313*∫
ticket_lifetime_hint$_ssl.SSLSession.ticket_lifetime_hint"
builtins.int"builtins.int*,
self"
_ssl.SSLSession"_ssl.SSLSession0:property`z36z37z38z39z310z311z312z313*ö
time_ssl.SSLSession.time"
builtins.int"builtins.int*,
self"
_ssl.SSLSession"_ssl.SSLSession0:property`z36z37z38z39z310z311z312z313*†
timeout_ssl.SSLSession.timeout"
builtins.int"builtins.int*,
self"
_ssl.SSLSession"_ssl.SSLSession0:property`z36z37z38z39z310z311z312z3138j36j37j38j39j310j311j312j313M
_Cipherssl._Cipher"typing._TypedDictj36j37j38j39j310j311j312j313í
SSLErrorssl.SSLError"builtins.OSErrorj36j37j38j39j310j311j312j313ra
libraryssl.SSLError.library
builtins.str"builtins.str*36*37*38*39*310*311*312*313r_
reasonssl.SSLError.reason
builtins.str"builtins.str*36*37*38*39*310*311*312*313^
SSLZeroReturnErrorssl.SSLZeroReturnError"ssl.SSLErrorj36j37j38j39j310j311j312j313Z
SSLWantReadErrorssl.SSLWantReadError"ssl.SSLErrorj36j37j38j39j310j311j312j313\
SSLWantWriteErrorssl.SSLWantWriteError"ssl.SSLErrorj36j37j38j39j310j311j312j313X
SSLSyscallErrorssl.SSLSyscallError"ssl.SSLErrorj36j37j38j39j310j311j312j313P
SSLEOFErrorssl.SSLEOFError"ssl.SSLErrorj36j37j38j39j310j311j312j313˚
SSLCertVerificationErrorssl.SSLCertVerificationError"ssl.SSLError"builtins.ValueErrorj36j37j38j39j310j311j312j313ry
verify_code(ssl.SSLCertVerificationError.verify_code
builtins.int"builtins.int*36*37*38*39*310*311*312*313r
verify_message+ssl.SSLCertVerificationError.verify_message
builtins.str"builtins.str*36*37*38*39*310*311*312*313Û.
DefaultVerifyPathsssl.DefaultVerifyPaths"builtins.tuple*Î
_replacessl.DefaultVerifyPaths._replace"≠
ssl.DefaultVerifyPaths._NTå
TTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*π
_self≠
ssl.DefaultVerifyPaths._NTå
TTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str**
cafile
builtins.str"builtins.str **
capath
builtins.str"builtins.str *6
openssl_cafile_env
builtins.str"builtins.str *2
openssl_cafile
builtins.str"builtins.str *6
openssl_capath_env
builtins.str"builtins.str *2
openssl_capath
builtins.str"builtins.str z36z37z38z39z310z311z312z313*â
__new__ssl.DefaultVerifyPaths.__new__"≠
ssl.DefaultVerifyPaths._NTå
TTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*Â
_cls⁄
 Type[ssl.DefaultVerifyPaths._NT]≠
ssl.DefaultVerifyPaths._NTå
TTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"type*(
cafile
builtins.str"builtins.str*(
capath
builtins.str"builtins.str*4
openssl_cafile_env
builtins.str"builtins.str*0
openssl_cafile
builtins.str"builtins.str*4
openssl_capath_env
builtins.str"builtins.str*0
openssl_capath
builtins.str"builtins.strz36z37z38z39z310z311z312z313*‚
_asdictssl.DefaultVerifyPaths._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*π
_self≠
ssl.DefaultVerifyPaths._NTå
TTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strz36z37z38z39z310z311z312z313*⁄
_makessl.DefaultVerifyPaths._make"≠
ssl.DefaultVerifyPaths._NTå
TTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*Â
_cls⁄
 Type[ssl.DefaultVerifyPaths._NT]≠
ssl.DefaultVerifyPaths._NTå
TTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"type*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpz36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rç
cafilessl.DefaultVerifyPaths.cafile
builtins.str"builtins.str*36*36*37*37*38*38*39*39*310*310*311*311*312*312*313*313rç
capathssl.DefaultVerifyPaths.capath
builtins.str"builtins.str*36*36*37*37*38*38*39*39*310*310*311*311*312*312*313*313r•
openssl_cafile_env)ssl.DefaultVerifyPaths.openssl_cafile_env
builtins.str"builtins.str*36*36*37*37*38*38*39*39*310*310*311*311*312*312*313*313rù
openssl_cafile%ssl.DefaultVerifyPaths.openssl_cafile
builtins.str"builtins.str*36*36*37*37*38*38*39*39*310*310*311*311*312*312*313*313r•
openssl_capath_env)ssl.DefaultVerifyPaths.openssl_capath_env
builtins.str"builtins.str*36*36*37*37*38*38*39*39*310*310*311*311*312*312*313*313rù
openssl_capath%ssl.DefaultVerifyPaths.openssl_capath
builtins.str"builtins.str*36*36*37*37*38*38*39*39*310*310*311*311*312*312*313*313r‹
_fieldsssl.DefaultVerifyPaths._fieldså
TTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*36*37*38*39*310*311*312*313r∞
_field_types#ssl.DefaultVerifyPaths._field_typesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313r∂
_field_defaults&ssl.DefaultVerifyPaths._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313rk
_sourcessl.DefaultVerifyPaths._source
builtins.str"builtins.str*36*37*38*39*310*311*312*313r∂
__annotations__&ssl.DefaultVerifyPaths.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313r≥
__match_args__%ssl.DefaultVerifyPaths.__match_args__Â
äTuple[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*310*311*312*313õ

VerifyModessl.VerifyMode"enum.IntEnumHj36j37j38j39j310j311j312j313rg
	CERT_NONEssl.VerifyMode.CERT_NONE
builtins.int"builtins.int*36*37*38*39*310*311*312*313ro
CERT_OPTIONALssl.VerifyMode.CERT_OPTIONAL
builtins.int"builtins.int*36*37*38*39*310*311*312*313ro
CERT_REQUIREDssl.VerifyMode.CERT_REQUIRED
builtins.int"builtins.int*36*37*38*39*310*311*312*313«
VerifyFlagsssl.VerifyFlags"enum.IntFlagHj36j37j38j39j310j311j312j313rr
VERIFY_DEFAULTssl.VerifyFlags.VERIFY_DEFAULT
builtins.int"builtins.int*36*37*38*39*310*311*312*313rÄ
VERIFY_CRL_CHECK_LEAF%ssl.VerifyFlags.VERIFY_CRL_CHECK_LEAF
builtins.int"builtins.int*36*37*38*39*310*311*312*313rÇ
VERIFY_CRL_CHECK_CHAIN&ssl.VerifyFlags.VERIFY_CRL_CHECK_CHAIN
builtins.int"builtins.int*36*37*38*39*310*311*312*313rz
VERIFY_X509_STRICT"ssl.VerifyFlags.VERIFY_X509_STRICT
builtins.int"builtins.int*36*37*38*39*310*311*312*313rà
VERIFY_X509_TRUSTED_FIRST)ssl.VerifyFlags.VERIFY_X509_TRUSTED_FIRST
builtins.int"builtins.int*36*37*38*39*310*311*312*313rv
VERIFY_ALLOW_PROXY_CERTS(ssl.VerifyFlags.VERIFY_ALLOW_PROXY_CERTS
builtins.int"builtins.int*310*311*312*313rx
VERIFY_X509_PARTIAL_CHAIN)ssl.VerifyFlags.VERIFY_X509_PARTIAL_CHAIN
builtins.int"builtins.int*310*311*312*313ø


_SSLMethodssl._SSLMethod"enum.IntEnumHj36j37j38j39j310j311j312j313rs
PROTOCOL_SSLv23ssl._SSLMethod.PROTOCOL_SSLv23
builtins.int"builtins.int*36*37*38*39*310*311*312*313rg
PROTOCOL_SSLv2ssl._SSLMethod.PROTOCOL_SSLv2&
builtins.ellipsis"builtins.ellipsis*36*37*38*39rm
PROTOCOL_SSLv2ssl._SSLMethod.PROTOCOL_SSLv2(
types.EllipsisType"types.EllipsisType*310*311*312*313rg
PROTOCOL_SSLv3ssl._SSLMethod.PROTOCOL_SSLv3&
builtins.ellipsis"builtins.ellipsis*36*37*38*39rm
PROTOCOL_SSLv3ssl._SSLMethod.PROTOCOL_SSLv3(
types.EllipsisType"types.EllipsisType*310*311*312*313rq
PROTOCOL_TLSv1ssl._SSLMethod.PROTOCOL_TLSv1
builtins.int"builtins.int*36*37*38*39*310*311*312*313ru
PROTOCOL_TLSv1_1ssl._SSLMethod.PROTOCOL_TLSv1_1
builtins.int"builtins.int*36*37*38*39*310*311*312*313ru
PROTOCOL_TLSv1_2ssl._SSLMethod.PROTOCOL_TLSv1_2
builtins.int"builtins.int*36*37*38*39*310*311*312*313rm
PROTOCOL_TLSssl._SSLMethod.PROTOCOL_TLS
builtins.int"builtins.int*36*37*38*39*310*311*312*313r{
PROTOCOL_TLS_CLIENT"ssl._SSLMethod.PROTOCOL_TLS_CLIENT
builtins.int"builtins.int*36*37*38*39*310*311*312*313r{
PROTOCOL_TLS_SERVER"ssl._SSLMethod.PROTOCOL_TLS_SERVER
builtins.int"builtins.int*36*37*38*39*310*311*312*313”
Optionsssl.Options"enum.IntFlagHj36j37j38j39j310j311j312j313r^
OP_ALLssl.Options.OP_ALL
builtins.int"builtins.int*36*37*38*39*310*311*312*313rh
OP_NO_SSLv2ssl.Options.OP_NO_SSLv2
builtins.int"builtins.int*36*37*38*39*310*311*312*313rh
OP_NO_SSLv3ssl.Options.OP_NO_SSLv3
builtins.int"builtins.int*36*37*38*39*310*311*312*313rh
OP_NO_TLSv1ssl.Options.OP_NO_TLSv1
builtins.int"builtins.int*36*37*38*39*310*311*312*313rl
OP_NO_TLSv1_1ssl.Options.OP_NO_TLSv1_1
builtins.int"builtins.int*36*37*38*39*310*311*312*313rl
OP_NO_TLSv1_2ssl.Options.OP_NO_TLSv1_2
builtins.int"builtins.int*36*37*38*39*310*311*312*313rl
OP_NO_TLSv1_3ssl.Options.OP_NO_TLSv1_3
builtins.int"builtins.int*36*37*38*39*310*311*312*313rà
OP_CIPHER_SERVER_PREFERENCE'ssl.Options.OP_CIPHER_SERVER_PREFERENCE
builtins.int"builtins.int*36*37*38*39*310*311*312*313rr
OP_SINGLE_DH_USEssl.Options.OP_SINGLE_DH_USE
builtins.int"builtins.int*36*37*38*39*310*311*312*313rv
OP_SINGLE_ECDH_USEssl.Options.OP_SINGLE_ECDH_USE
builtins.int"builtins.int*36*37*38*39*310*311*312*313rt
OP_NO_COMPRESSIONssl.Options.OP_NO_COMPRESSION
builtins.int"builtins.int*36*37*38*39*310*311*312*313rj
OP_NO_TICKETssl.Options.OP_NO_TICKET
builtins.int"builtins.int*36*37*38*39*310*311*312*313rx
OP_NO_RENEGOTIATIONssl.Options.OP_NO_RENEGOTIATION
builtins.int"builtins.int*36*37*38*39*310*311*312*313rÜ
OP_ENABLE_MIDDLEBOX_COMPAT&ssl.Options.OP_ENABLE_MIDDLEBOX_COMPAT
builtins.int"builtins.int*36*37*38*39*310*311*312*313rÇ
OP_IGNORE_UNEXPECTED_EOF$ssl.Options.OP_IGNORE_UNEXPECTED_EOF
builtins.int"builtins.int*36*37*38*39*310*311*312*313rh
OP_LEGACY_SERVER_CONNECT$ssl.Options.OP_LEGACY_SERVER_CONNECT
builtins.int"builtins.int*312*313rT
OP_ENABLE_KTLSssl.Options.OP_ENABLE_KTLS
builtins.int"builtins.int*312*313Ã#
AlertDescriptionssl.AlertDescription"enum.IntEnumHj36j37j38j39j310j311j312j313rô
ALERT_DESCRIPTION_ACCESS_DENIED4ssl.AlertDescription.ALERT_DESCRIPTION_ACCESS_DENIED
builtins.int"builtins.int*36*37*38*39*310*311*312*313rù
!ALERT_DESCRIPTION_BAD_CERTIFICATE6ssl.AlertDescription.ALERT_DESCRIPTION_BAD_CERTIFICATE
builtins.int"builtins.int*36*37*38*39*310*311*312*313r≥
,ALERT_DESCRIPTION_BAD_CERTIFICATE_HASH_VALUEAssl.AlertDescription.ALERT_DESCRIPTION_BAD_CERTIFICATE_HASH_VALUE
builtins.int"builtins.int*36*37*38*39*310*311*312*313rΩ
1ALERT_DESCRIPTION_BAD_CERTIFICATE_STATUS_RESPONSEFssl.AlertDescription.ALERT_DESCRIPTION_BAD_CERTIFICATE_STATUS_RESPONSE
builtins.int"builtins.int*36*37*38*39*310*311*312*313rõ
 ALERT_DESCRIPTION_BAD_RECORD_MAC5ssl.AlertDescription.ALERT_DESCRIPTION_BAD_RECORD_MAC
builtins.int"builtins.int*36*37*38*39*310*311*312*313r•
%ALERT_DESCRIPTION_CERTIFICATE_EXPIRED:ssl.AlertDescription.ALERT_DESCRIPTION_CERTIFICATE_EXPIRED
builtins.int"builtins.int*36*37*38*39*310*311*312*313r•
%ALERT_DESCRIPTION_CERTIFICATE_REVOKED:ssl.AlertDescription.ALERT_DESCRIPTION_CERTIFICATE_REVOKED
builtins.int"builtins.int*36*37*38*39*310*311*312*313r•
%ALERT_DESCRIPTION_CERTIFICATE_UNKNOWN:ssl.AlertDescription.ALERT_DESCRIPTION_CERTIFICATE_UNKNOWN
builtins.int"builtins.int*36*37*38*39*310*311*312*313rØ
*ALERT_DESCRIPTION_CERTIFICATE_UNOBTAINABLE?ssl.AlertDescription.ALERT_DESCRIPTION_CERTIFICATE_UNOBTAINABLE
builtins.int"builtins.int*36*37*38*39*310*311*312*313ró
ALERT_DESCRIPTION_CLOSE_NOTIFY3ssl.AlertDescription.ALERT_DESCRIPTION_CLOSE_NOTIFY
builtins.int"builtins.int*36*37*38*39*310*311*312*313ró
ALERT_DESCRIPTION_DECODE_ERROR3ssl.AlertDescription.ALERT_DESCRIPTION_DECODE_ERROR
builtins.int"builtins.int*36*37*38*39*310*311*312*313r©
'ALERT_DESCRIPTION_DECOMPRESSION_FAILURE<ssl.AlertDescription.ALERT_DESCRIPTION_DECOMPRESSION_FAILURE
builtins.int"builtins.int*36*37*38*39*310*311*312*313rô
ALERT_DESCRIPTION_DECRYPT_ERROR4ssl.AlertDescription.ALERT_DESCRIPTION_DECRYPT_ERROR
builtins.int"builtins.int*36*37*38*39*310*311*312*313r°
#ALERT_DESCRIPTION_HANDSHAKE_FAILURE8ssl.AlertDescription.ALERT_DESCRIPTION_HANDSHAKE_FAILURE
builtins.int"builtins.int*36*37*38*39*310*311*312*313r°
#ALERT_DESCRIPTION_ILLEGAL_PARAMETER8ssl.AlertDescription.ALERT_DESCRIPTION_ILLEGAL_PARAMETER
builtins.int"builtins.int*36*37*38*39*310*311*312*313r©
'ALERT_DESCRIPTION_INSUFFICIENT_SECURITY<ssl.AlertDescription.ALERT_DESCRIPTION_INSUFFICIENT_SECURITY
builtins.int"builtins.int*36*37*38*39*310*311*312*313rõ
 ALERT_DESCRIPTION_INTERNAL_ERROR5ssl.AlertDescription.ALERT_DESCRIPTION_INTERNAL_ERROR
builtins.int"builtins.int*36*37*38*39*310*311*312*313rü
"ALERT_DESCRIPTION_NO_RENEGOTIATION7ssl.AlertDescription.ALERT_DESCRIPTION_NO_RENEGOTIATION
builtins.int"builtins.int*36*37*38*39*310*311*312*313rü
"ALERT_DESCRIPTION_PROTOCOL_VERSION7ssl.AlertDescription.ALERT_DESCRIPTION_PROTOCOL_VERSION
builtins.int"builtins.int*36*37*38*39*310*311*312*313rù
!ALERT_DESCRIPTION_RECORD_OVERFLOW6ssl.AlertDescription.ALERT_DESCRIPTION_RECORD_OVERFLOW
builtins.int"builtins.int*36*37*38*39*310*311*312*313r£
$ALERT_DESCRIPTION_UNEXPECTED_MESSAGE9ssl.AlertDescription.ALERT_DESCRIPTION_UNEXPECTED_MESSAGE
builtins.int"builtins.int*36*37*38*39*310*311*312*313rì
ALERT_DESCRIPTION_UNKNOWN_CA1ssl.AlertDescription.ALERT_DESCRIPTION_UNKNOWN_CA
builtins.int"builtins.int*36*37*38*39*310*311*312*313rß
&ALERT_DESCRIPTION_UNKNOWN_PSK_IDENTITY;ssl.AlertDescription.ALERT_DESCRIPTION_UNKNOWN_PSK_IDENTITY
builtins.int"builtins.int*36*37*38*39*310*311*312*313r°
#ALERT_DESCRIPTION_UNRECOGNIZED_NAME8ssl.AlertDescription.ALERT_DESCRIPTION_UNRECOGNIZED_NAME
builtins.int"builtins.int*36*37*38*39*310*311*312*313r≠
)ALERT_DESCRIPTION_UNSUPPORTED_CERTIFICATE>ssl.AlertDescription.ALERT_DESCRIPTION_UNSUPPORTED_CERTIFICATE
builtins.int"builtins.int*36*37*38*39*310*311*312*313r©
'ALERT_DESCRIPTION_UNSUPPORTED_EXTENSION<ssl.AlertDescription.ALERT_DESCRIPTION_UNSUPPORTED_EXTENSION
builtins.int"builtins.int*36*37*38*39*310*311*312*313rõ
 ALERT_DESCRIPTION_USER_CANCELLED5ssl.AlertDescription.ALERT_DESCRIPTION_USER_CANCELLED
builtins.int"builtins.int*36*37*38*39*310*311*312*313È"
_ASN1ObjectBasessl._ASN1ObjectBase"builtins.tuple*µ
_replacessl._ASN1ObjectBase._replace"‘
ssl._ASN1ObjectBase._NT∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*‡
_self‘
ssl._ASN1ObjectBase._NT∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*'
nid
builtins.int"builtins.int *-
	shortname
builtins.str"builtins.str *,
longname
builtins.str"builtins.str *'
oid
builtins.str"builtins.str z36z37z38z39z310z311z312z313*‘
__new__ssl._ASN1ObjectBase.__new__"‘
ssl._ASN1ObjectBase._NT∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*â
_cls˛
Type[ssl._ASN1ObjectBase._NT]‘
ssl._ASN1ObjectBase._NT∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"type*%
nid
builtins.int"builtins.int*+
	shortname
builtins.str"builtins.str**
longname
builtins.str"builtins.str*%
oid
builtins.str"builtins.strz36z37z38z39z310z311z312z313*Ü
_asdictssl._ASN1ObjectBase._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*‡
_self‘
ssl._ASN1ObjectBase._NT∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strz36z37z38z39z310z311z312z313*¢
_makessl._ASN1ObjectBase._make"‘
ssl._ASN1ObjectBase._NT∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*â
_cls˛
Type[ssl._ASN1ObjectBase._NT]‘
ssl._ASN1ObjectBase._NT∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"type*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpz36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rÑ
nidssl._ASN1ObjectBase.nid
builtins.int"builtins.int*36*36*37*37*38*38*39*39*310*310*311*311*312*312*313*313rê
	shortnamessl._ASN1ObjectBase.shortname
builtins.str"builtins.str*36*36*37*37*38*38*39*39*310*310*311*311*312*312*313*313ré
longnamessl._ASN1ObjectBase.longname
builtins.str"builtins.str*36*36*37*37*38*38*39*39*310*310*311*311*312*312*313*313rÑ
oidssl._ASN1ObjectBase.oid
builtins.str"builtins.str*36*36*37*37*38*38*39*39*310*310*311*311*312*312*313*313rÉ
_fieldsssl._ASN1ObjectBase._fields∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*36*37*38*39*310*311*312*313r≠
_field_types ssl._ASN1ObjectBase._field_typesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313r≥
_field_defaults#ssl._ASN1ObjectBase._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313rh
_sourcessl._ASN1ObjectBase._source
builtins.str"builtins.str*36*37*38*39*310*311*312*313r≥
__annotations__#ssl._ASN1ObjectBase.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313rë
__match_args__"ssl._ASN1ObjectBase.__match_args__∆
^Tuple[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*310*311*312*313◊
_ASN1Objectssl._ASN1Object"ssl._ASN1ObjectBase*∆
__new__ssl._ASN1Object.__new__"—
ssl._ASN1Object.Self∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*Ç
cls¯
Type[ssl._ASN1Object.Self]—
ssl._ASN1Object.Self∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"type*%
oid
builtins.str"builtins.strz36z37z38z39z310z311z312z313*◊
fromnidssl._ASN1Object.fromnid"—
ssl._ASN1Object.Self∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*Ç
cls¯
Type[ssl._ASN1Object.Self]—
ssl._ASN1Object.Self∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"type*%
nid
builtins.int"builtins.int0:classmethodpz36z37z38z39z310z311z312z313*⁄
fromnamessl._ASN1Object.fromname"—
ssl._ASN1Object.Self∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*Ç
cls¯
Type[ssl._ASN1Object.Self]—
ssl._ASN1Object.Self∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"type*&
name
builtins.str"builtins.str0:classmethodpz36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313‰
Purposessl.Purpose"ssl._ASN1Object"	enum.EnumHj36j37j38j39j310j311j312j313rÉ
SERVER_AUTHssl.Purpose.SERVER_AUTH∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*36*37*38*39*310*311*312*313rÉ
CLIENT_AUTHssl.Purpose.CLIENT_AUTH∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*36*37*38*39*310*311*312*313ùy
	SSLSocketssl.SSLSocket"socket.socket*”
session_reusedssl.SSLSocket.session_reused"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*(
self
ssl.SSLSocket"ssl.SSLSocket0:property`z36z37z38z39z310z311z312z313*¢
__init__ssl.SSLSocket.__init__"
None*(
self
ssl.SSLSocket"ssl.SSLSocket*
args
Any*
kwargs
Anyz36z37z38z39z310z311z312z313*®
connectssl.SSLSocket.connect"
None*(
self
ssl.SSLSocket"ssl.SSLSocket*∑
addr¨
KTypeAlias[Union[builtins.tuple[Any],builtins.str,typing_extensions.Buffer]]»
@Union[builtins.tuple[Any],builtins.str,typing_extensions.Buffer].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str4
typing_extensions.Buffer"typing_extensions.Buffer"_socket._Addressz36z37z38z39z310z311*î
connectssl.SSLSocket.connect"
None*(
self
ssl.SSLSocket"ssl.SSLSocket*≥
addr®
JTypeAlias[Union[builtins.tuple[Any],builtins.str,_collections_abc.Buffer]]≈
?Union[builtins.tuple[Any],builtins.str,_collections_abc.Buffer].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str2
_collections_abc.Buffer"_collections_abc.Buffer"_socket._Addressz312z313*¬

connect_exssl.SSLSocket.connect_ex"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*∑
addr¨
KTypeAlias[Union[builtins.tuple[Any],builtins.str,typing_extensions.Buffer]]»
@Union[builtins.tuple[Any],builtins.str,typing_extensions.Buffer].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str4
typing_extensions.Buffer"typing_extensions.Buffer"_socket._Addressz36z37z38z39z310z311*Æ

connect_exssl.SSLSocket.connect_ex"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*≥
addr®
JTypeAlias[Union[builtins.tuple[Any],builtins.str,_collections_abc.Buffer]]≈
?Union[builtins.tuple[Any],builtins.str,_collections_abc.Buffer].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str2
_collections_abc.Buffer"_collections_abc.Buffer"_socket._Addressz312z313*·
recvssl.SSLSocket.recv" 
builtins.bytes"builtins.bytes*(
self
ssl.SSLSocket"ssl.SSLSocket**
buflen
builtins.int"builtins.int *)
flags
builtins.int"builtins.int z36z37z38z39z310z311z312z313*«
	recv_intossl.SSLSocket.recv_into"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*@
buffer4
typing_extensions.Buffer"typing_extensions.Buffer*R
nbytesD
Union[builtins.int,None]
builtins.int"builtins.int
None *)
flags
builtins.int"builtins.int z36z37z38z39z310z311*µ
	recv_intossl.SSLSocket.recv_into"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*>
buffer2
_collections_abc.Buffer"_collections_abc.Buffer*R
nbytesD
Union[builtins.int,None]
builtins.int"builtins.int
None *)
flags
builtins.int"builtins.int z312z313*≈
recvfromssl.SSLSocket.recvfrom"|
$Tuple[builtins.bytes,TypeAlias[Any]] 
builtins.bytes"builtins.bytes0
TypeAlias[Any]
Any"_socket._RetAddress*(
self
ssl.SSLSocket"ssl.SSLSocket**
buflen
builtins.int"builtins.int *)
flags
builtins.int"builtins.int z36z37z38z39z310z311z312z313*©
recvfrom_intossl.SSLSocket.recvfrom_into"v
"Tuple[builtins.int,TypeAlias[Any]]
builtins.int"builtins.int0
TypeAlias[Any]
Any"_socket._RetAddress*(
self
ssl.SSLSocket"ssl.SSLSocket*@
buffer4
typing_extensions.Buffer"typing_extensions.Buffer*R
nbytesD
Union[builtins.int,None]
builtins.int"builtins.int
None *)
flags
builtins.int"builtins.int z36z37z38z39z310z311*ó
recvfrom_intossl.SSLSocket.recvfrom_into"v
"Tuple[builtins.int,TypeAlias[Any]]
builtins.int"builtins.int0
TypeAlias[Any]
Any"_socket._RetAddress*(
self
ssl.SSLSocket"ssl.SSLSocket*>
buffer2
_collections_abc.Buffer"_collections_abc.Buffer*R
nbytesD
Union[builtins.int,None]
builtins.int"builtins.int
None *)
flags
builtins.int"builtins.int z312z313*Á
sendssl.SSLSocket.send"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*>
data4
typing_extensions.Buffer"typing_extensions.Buffer*)
flags
builtins.int"builtins.int z36z37z38z39z310z311*’
sendssl.SSLSocket.send"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*<
data2
_collections_abc.Buffer"_collections_abc.Buffer*)
flags
builtins.int"builtins.int z312z313*Ÿ
sendallssl.SSLSocket.sendall"
None*(
self
ssl.SSLSocket"ssl.SSLSocket*>
data4
typing_extensions.Buffer"typing_extensions.Buffer*)
flags
builtins.int"builtins.int z36z37z38z39z310z311*«
sendallssl.SSLSocket.sendall"
None*(
self
ssl.SSLSocket"ssl.SSLSocket*<
data2
_collections_abc.Buffer"_collections_abc.Buffer*)
flags
builtins.int"builtins.int z312z313*°
shutdownssl.SSLSocket.shutdown"
None*(
self
ssl.SSLSocket"ssl.SSLSocket*%
how
builtins.int"builtins.intz36z37z38z39z310z311z312z313*ô
readssl.SSLSocket.read" 
builtins.bytes"builtins.bytes*(
self
ssl.SSLSocket"ssl.SSLSocket*'
len
builtins.int"builtins.int *d
bufferV
Union[builtins.bytearray,None](
builtins.bytearray"builtins.bytearray
None z36z37z38z39z310z311z312z313*æ
writessl.SSLSocket.write"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*>
data4
typing_extensions.Buffer"typing_extensions.Bufferz36z37z38z39z310z311*¨
writessl.SSLSocket.write"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*<
data2
_collections_abc.Buffer"_collections_abc.Bufferz312z313*Ø
do_handshakessl.SSLSocket.do_handshake"
None*(
self
ssl.SSLSocket"ssl.SSLSocket*+
block
builtins.bool"builtins.bool z36z37z38z39z310z311z312z313*ƒ
cipherssl.SSLSocket.cipher"’
9Union[Tuple[builtins.str,builtins.str,builtins.int],None]ã
-Tuple[builtins.str,builtins.str,builtins.int]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.int
None*(
self
ssl.SSLSocket"ssl.SSLSocketz36z37z38z39z310z311z312z313*≥
shared_ciphersssl.SSLSocket.shared_ciphers"¥
HUnion[builtins.list[Tuple[builtins.str,builtins.str,builtins.int]],None]€
<builtins.list[Tuple[builtins.str,builtins.str,builtins.int]]ã
-Tuple[builtins.str,builtins.str,builtins.int]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.int"builtins.list
None*(
self
ssl.SSLSocket"ssl.SSLSocketz36z37z38z39z310z311z312z313*º
compressionssl.SSLSocket.compression"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLSocket"ssl.SSLSocketz36z37z38z39z310z311z312z313*ˇ
get_channel_binding!ssl.SSLSocket.get_channel_binding"J
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None*(
self
ssl.SSLSocket"ssl.SSLSocket*+
cb_type
builtins.str"builtins.str z36z37z38z39z310z311z312z313*“
selected_alpn_protocol$ssl.SSLSocket.selected_alpn_protocol"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLSocket"ssl.SSLSocketz36z37z38z39z310z311z312z313*–
selected_npn_protocol#ssl.SSLSocket.selected_npn_protocol"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLSocket"ssl.SSLSocketz36z37z38z39z310z311z312z313*Á
acceptssl.SSLSocket.accept"y
#Tuple[ssl.SSLSocket,TypeAlias[Any]]
ssl.SSLSocket"ssl.SSLSocket0
TypeAlias[Any]
Any"_socket._RetAddress*(
self
ssl.SSLSocket"ssl.SSLSocketz36z37z38z39z310z311z312z313*å
unwrapssl.SSLSocket.unwrap"
socket.socket"socket.socket*(
self
ssl.SSLSocket"ssl.SSLSocketz36z37z38z39z310z311z312z313*¥
versionssl.SSLSocket.version"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLSocket"ssl.SSLSocketz36z37z38z39z310z311z312z313*å
pendingssl.SSLSocket.pending"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocketz36z37z38z39z310z311z312z313*¢
verify_client_post_handshake*ssl.SSLSocket.verify_client_post_handshake"
None*(
self
ssl.SSLSocket"ssl.SSLSocketz36z37z38z39z310z311z312z313*Æ
recvmsgssl.SSLSocket.recvmsg"
NoReturn
*(
self
ssl.SSLSocket"ssl.SSLSocket*
args
NoReturn
*
kwargs
NoReturn
z36z37z38z39z310z311z312z313*∏
recvmsg_intossl.SSLSocket.recvmsg_into"
NoReturn
*(
self
ssl.SSLSocket"ssl.SSLSocket*
args
NoReturn
*
kwargs
NoReturn
z36z37z38z39z310z311z312z313*Æ
sendmsgssl.SSLSocket.sendmsg"
NoReturn
*(
self
ssl.SSLSocket"ssl.SSLSocket*
args
NoReturn
*
kwargs
NoReturn
z36z37z38z39z310z311z312z313*∑
get_verified_chain ssl.SSLSocket.get_verified_chain"P
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list*(
self
ssl.SSLSocket"ssl.SSLSocketz313*ª
get_unverified_chain"ssl.SSLSocket.get_unverified_chain"P
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list*(
self
ssl.SSLSocket"ssl.SSLSocketz3132Í
sendtossl.SSLSocket.sendtoç
sendtossl.SSLSocket.sendto"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*>
data4
typing_extensions.Buffer"typing_extensions.Buffer*¿
flags_or_addr¨
KTypeAlias[Union[builtins.tuple[Any],builtins.str,typing_extensions.Buffer]]»
@Union[builtins.tuple[Any],builtins.str,typing_extensions.Buffer].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str4
typing_extensions.Buffer"typing_extensions.Buffer"_socket._Address*
addr
None 0:overloadXü
sendtossl.SSLSocket.sendto"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*>
data4
typing_extensions.Buffer"typing_extensions.Buffer*/
flags_or_addr
builtins.int"builtins.int*∑
addr¨
KTypeAlias[Union[builtins.tuple[Any],builtins.str,typing_extensions.Buffer]]»
@Union[builtins.tuple[Any],builtins.str,typing_extensions.Buffer].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str4
typing_extensions.Buffer"typing_extensions.Buffer"_socket._Address0:overloadX"36"37"38"39"310"3112Œ
sendtossl.SSLSocket.sendtoá
sendtossl.SSLSocket.sendto"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*<
data2
_collections_abc.Buffer"_collections_abc.Buffer*º
flags_or_addr®
JTypeAlias[Union[builtins.tuple[Any],builtins.str,_collections_abc.Buffer]]≈
?Union[builtins.tuple[Any],builtins.str,_collections_abc.Buffer].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str2
_collections_abc.Buffer"_collections_abc.Buffer"_socket._Address*
addr
None 0:overloadXô
sendtossl.SSLSocket.sendto"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*<
data2
_collections_abc.Buffer"_collections_abc.Buffer*/
flags_or_addr
builtins.int"builtins.int*≥
addr®
JTypeAlias[Union[builtins.tuple[Any],builtins.str,_collections_abc.Buffer]]≈
?Union[builtins.tuple[Any],builtins.str,_collections_abc.Buffer].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str2
_collections_abc.Buffer"_collections_abc.Buffer"_socket._Address0:overloadX"312"3132∂
getpeercertssl.SSLSocket.getpeercertº

getpeercertssl.SSLSocket.getpeercert"ä	
•Union[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]],None]”
ôTypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]]ò
ébuiltins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]
builtins.str"builtins.str◊
rUnion[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]
builtins.str"builtins.stræ
VTypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]”
Kbuiltins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]Û
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.tuple"ssl._PCTRTTT "builtins.dict"ssl._PeerCertRetDictType
None*(
self
ssl.SSLSocket"ssl.SSLSocket*M
binary_form:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadX˘
getpeercertssl.SSLSocket.getpeercert"J
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None*(
self
ssl.SSLSocket"ssl.SSLSocket*K
binary_form:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadX¨
getpeercertssl.SSLSocket.getpeercert"ò
øTypeAlias[Union[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]],builtins.bytes,None]]ª	
¥Union[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]],builtins.bytes,None]”
ôTypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]]ò
ébuiltins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]
builtins.str"builtins.str◊
rUnion[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]
builtins.str"builtins.stræ
VTypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]”
Kbuiltins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]Û
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.tuple"ssl._PCTRTTT "builtins.dict"ssl._PeerCertRetDictType 
builtins.bytes"builtins.bytes
None"ssl._PeerCertRetType*(
self
ssl.SSLSocket"ssl.SSLSocket*/
binary_form
builtins.bool"builtins.bool0:overloadX"36"37"38"39"310"311"312"313j36j37j38j39j310j311j312j313rf
contextssl.SSLSocket.context 
ssl.SSLContext"ssl.SSLContext*36*37*38*39*310*311*312*313rl
server_sidessl.SSLSocket.server_side
builtins.bool"builtins.bool*36*37*38*39*310*311*312*313rö
server_hostnamessl.SSLSocket.server_hostnameD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310*311*312*313rì
sessionssl.SSLSocket.sessionM
Union[_ssl.SSLSession,None]"
_ssl.SSLSession"_ssl.SSLSession
None*36*37*38*39*310*311*312*313≥

TLSVersionssl.TLSVersion"enum.IntEnumHj36j37j38j39j310j311j312j313rw
MINIMUM_SUPPORTED ssl.TLSVersion.MINIMUM_SUPPORTED
builtins.int"builtins.int*36*37*38*39*310*311*312*313rw
MAXIMUM_SUPPORTED ssl.TLSVersion.MAXIMUM_SUPPORTED
builtins.int"builtins.int*36*37*38*39*310*311*312*313r_
SSLv3ssl.TLSVersion.SSLv3
builtins.int"builtins.int*36*37*38*39*310*311*312*313r_
TLSv1ssl.TLSVersion.TLSv1
builtins.int"builtins.int*36*37*38*39*310*311*312*313rc
TLSv1_1ssl.TLSVersion.TLSv1_1
builtins.int"builtins.int*36*37*38*39*310*311*312*313rc
TLSv1_2ssl.TLSVersion.TLSv1_2
builtins.int"builtins.int*36*37*38*39*310*311*312*313rc
TLSv1_3ssl.TLSVersion.TLSv1_3
builtins.int"builtins.int*36*37*38*39*310*311*312*313ÁQ

SSLContextssl.SSLContext"_ssl._SSLContext*£
protocolssl.SSLContext.protocol" 
ssl._SSLMethod"ssl._SSLMethod**
self 
ssl.SSLContext"ssl.SSLContext0:property`z36z37z38z39z310z311z312z313*À
__new__ssl.SSLContext.__new__"I
ssl.SSLContext.Self 
ssl.SSLContext"ssl.SSLContext"ssl.SSLContext*w
clsn
Type[ssl.SSLContext.Self]I
ssl.SSLContext.Self 
ssl.SSLContext"ssl.SSLContext"ssl.SSLContext"type*,
protocol
builtins.int"builtins.int *
args
Any*
kwargs
Anyz36z37z38z39*˜
__new__ssl.SSLContext.__new__"I
ssl.SSLContext.Self 
ssl.SSLContext"ssl.SSLContext"ssl.SSLContext*w
clsn
Type[ssl.SSLContext.Self]I
ssl.SSLContext.Self 
ssl.SSLContext"ssl.SSLContext"ssl.SSLContext"type*T
protocolD
Union[builtins.int,None]
builtins.int"builtins.int
None *
args
Any*
kwargs
Anyz310z311z312z313*≥
load_default_certs!ssl.SSLContext.load_default_certs"
None**
self 
ssl.SSLContext"ssl.SSLContext*ü
purposeè
ETypeAlias[Tuple[builtins.int,builtins.str,builtins.str,builtins.str]]∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"ssl.Purpose z36z37z38z39z310z311z312z313*¬
load_verify_locations$ssl.SSLContext.load_verify_locations"
None**
self 
ssl.SSLContext"ssl.SSLContext*≈
cafile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *≈
capath∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *¢
cadataì
1Union[builtins.str,typing_extensions.Buffer,None]
builtins.str"builtins.str4
typing_extensions.Buffer"typing_extensions.Buffer
None z36z37z38z39z310z311*Ø
load_verify_locations$ssl.SSLContext.load_verify_locations"
None**
self 
ssl.SSLContext"ssl.SSLContext*≈
cafile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *≈
capath∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *ü
cadataê
0Union[builtins.str,_collections_abc.Buffer,None]
builtins.str"builtins.str2
_collections_abc.Buffer"_collections_abc.Buffer
None z312z313*Â
get_ciphersssl.SSLContext.get_ciphers"j
#builtins.list[TypeAlias[TypedDict]]4
TypeAlias[TypedDict]
	TypedDict"ssl._Cipher"builtins.list**
self 
ssl.SSLContext"ssl.SSLContextz36z37z38z39z310z311z312z313*ù
set_default_verify_paths'ssl.SSLContext.set_default_verify_paths"
None**
self 
ssl.SSLContext"ssl.SSLContextz36z37z38z39z310z311z312z313*õ
set_ciphersssl.SSLContext.set_ciphers"
None*" 
ssl.SSLContext"ssl.SSLContext*
builtins.str"builtins.strz36z37z38z39z310z311z312z313*ı
set_alpn_protocols!ssl.SSLContext.set_alpn_protocols"
None**
self 
ssl.SSLContext"ssl.SSLContext*b
alpn_protocolsN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterablez36z37z38z39z310z311z312z313*Ú
set_npn_protocols ssl.SSLContext.set_npn_protocols"
None**
self 
ssl.SSLContext"ssl.SSLContext*a
npn_protocolsN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterablez36z37z38z39z310z311z312z313*é
set_servername_callback&ssl.SSLContext.set_servername_callback"
None**
self 
ssl.SSLContext"ssl.SSLContext*
server_name_callback’
6Union[TypeAlias[CallableType[builtins.function]],None]é
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"ssl._SrvnmeCbType
Nonez36z37z38z39z310z311z312z313*°
load_dh_paramsssl.SSLContext.load_dh_params"
None*" 
ssl.SSLContext"ssl.SSLContext*
builtins.str"builtins.strz36z37z38z39z310z311z312z313*°
set_ecdh_curvessl.SSLContext.set_ecdh_curve"
None*" 
ssl.SSLContext"ssl.SSLContext*
builtins.str"builtins.strz36z37z38z39z310z311z312z313*ﬁ
wrap_socketssl.SSLContext.wrap_socket"
ssl.SSLSocket"ssl.SSLSocket**
self 
ssl.SSLContext"ssl.SSLContext*(
sock
socket.socket"socket.socket*1
server_side
builtins.bool"builtins.bool *=
do_handshake_on_connect
builtins.bool"builtins.bool *:
suppress_ragged_eofs
builtins.bool"builtins.bool *å
server_hostnameu
'Union[builtins.str,builtins.bytes,None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
None *\
sessionM
Union[_ssl.SSLSession,None]"
_ssl.SSLSession"_ssl.SSLSession
None z36z37z38z39z310z311z312z313*ì
wrap_biossl.SSLContext.wrap_bio"
ssl.SSLObject"ssl.SSLObject**
self 
ssl.SSLContext"ssl.SSLContext*.
incoming 
_ssl.MemoryBIO"_ssl.MemoryBIO*.
outgoing 
_ssl.MemoryBIO"_ssl.MemoryBIO*1
server_side
builtins.bool"builtins.bool *å
server_hostnameu
'Union[builtins.str,builtins.bytes,None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
None *\
sessionM
Union[_ssl.SSLSession,None]"
_ssl.SSLSession"_ssl.SSLSession
None z36z37z38z39z310z311z312z3132ƒ
get_ca_certsssl.SSLContext.get_ca_certs«

get_ca_certsssl.SSLContext.get_ca_certs"ê	
®builtins.list[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]]]”
ôTypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]]ò
ébuiltins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]
builtins.str"builtins.str◊
rUnion[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]
builtins.str"builtins.stræ
VTypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]”
Kbuiltins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]Û
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.tuple"ssl._PCTRTTT "builtins.dict"ssl._PeerCertRetDictType"builtins.list**
self 
ssl.SSLContext"ssl.SSLContext*M
binary_form:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadXÑ
get_ca_certsssl.SSLContext.get_ca_certs"P
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list**
self 
ssl.SSLContext"ssl.SSLContext*K
binary_form:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadX°
get_ca_certsssl.SSLContext.get_ca_certs"
Any**
self 
ssl.SSLContext"ssl.SSLContext*1
binary_form
builtins.bool"builtins.bool 0:overloadX"36"37"38"39"310"311"312"313j36j37j38j39j310j311j312j313ra
optionsssl.SSLContext.options
ssl.Options"ssl.Options*36*37*38*39*310*311*312*313rs
verify_flagsssl.SSLContext.verify_flags"
ssl.VerifyFlags"ssl.VerifyFlags*36*37*38*39*310*311*312*313ro
verify_modessl.SSLContext.verify_mode 
ssl.VerifyMode"ssl.VerifyMode*36*37*38*39*310*311*312*313rç
hostname_checks_common_name*ssl.SSLContext.hostname_checks_common_name
builtins.bool"builtins.bool*36*37*38*39*310*311*312*313rw
maximum_versionssl.SSLContext.maximum_version 
ssl.TLSVersion"ssl.TLSVersion*36*37*38*39*310*311*312*313rw
minimum_versionssl.SSLContext.minimum_version 
ssl.TLSVersion"ssl.TLSVersion*36*37*38*39*310*311*312*313rî
sslobject_classssl.SSLContext.sslobject_class=
Type[ssl.SSLObject]
ssl.SSLObject"ssl.SSLObject"type*36*37*38*39*310*311*312*313rî
sslsocket_classssl.SSLContext.sslsocket_class=
Type[ssl.SSLSocket]
ssl.SSLSocket"ssl.SSLSocket"type*36*37*38*39*310*311*312*313rs
keylog_filenamessl.SSLContext.keylog_filename
builtins.str"builtins.str*36*37*38*39*310*311*312*313r}
post_handshake_auth"ssl.SSLContext.post_handshake_auth
builtins.bool"builtins.bool*36*37*38*39*310*311*312*313ra
security_levelssl.SSLContext.security_level
builtins.int"builtins.int*310*311*312*313¶<
	SSLObjectssl.SSLObject"builtins.object*§
server_sidessl.SSLObject.server_side"
builtins.bool"builtins.bool*(
self
ssl.SSLObject"ssl.SSLObject0:property`z36z37z38z39z310z311z312z313*“
server_hostnamessl.SSLObject.server_hostname"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLObject"ssl.SSLObject0:property`z36z37z38z39z310z311z312z313*™
session_reusedssl.SSLObject.session_reused"
builtins.bool"builtins.bool*(
self
ssl.SSLObject"ssl.SSLObject0:property`z36z37z38z39z310z311z312z313*¢
__init__ssl.SSLObject.__init__"
None*(
self
ssl.SSLObject"ssl.SSLObject*
args
Any*
kwargs
Anyz36z37z38z39z310z311z312z313*ô
readssl.SSLObject.read" 
builtins.bytes"builtins.bytes*(
self
ssl.SSLObject"ssl.SSLObject*'
len
builtins.int"builtins.int *d
bufferV
Union[builtins.bytearray,None](
builtins.bytearray"builtins.bytearray
None z36z37z38z39z310z311z312z313*æ
writessl.SSLObject.write"
builtins.int"builtins.int*(
self
ssl.SSLObject"ssl.SSLObject*>
data4
typing_extensions.Buffer"typing_extensions.Bufferz36z37z38z39z310z311*¨
writessl.SSLObject.write"
builtins.int"builtins.int*(
self
ssl.SSLObject"ssl.SSLObject*<
data2
_collections_abc.Buffer"_collections_abc.Bufferz312z313*“
selected_alpn_protocol$ssl.SSLObject.selected_alpn_protocol"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLObject"ssl.SSLObjectz36z37z38z39z310z311z312z313*–
selected_npn_protocol#ssl.SSLObject.selected_npn_protocol"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLObject"ssl.SSLObjectz36z37z38z39z310z311z312z313*ƒ
cipherssl.SSLObject.cipher"’
9Union[Tuple[builtins.str,builtins.str,builtins.int],None]ã
-Tuple[builtins.str,builtins.str,builtins.int]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.int
None*(
self
ssl.SSLObject"ssl.SSLObjectz36z37z38z39z310z311z312z313*≥
shared_ciphersssl.SSLObject.shared_ciphers"¥
HUnion[builtins.list[Tuple[builtins.str,builtins.str,builtins.int]],None]€
<builtins.list[Tuple[builtins.str,builtins.str,builtins.int]]ã
-Tuple[builtins.str,builtins.str,builtins.int]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.int"builtins.list
None*(
self
ssl.SSLObject"ssl.SSLObjectz36z37z38z39z310z311z312z313*º
compressionssl.SSLObject.compression"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLObject"ssl.SSLObjectz36z37z38z39z310z311z312z313*å
pendingssl.SSLObject.pending"
builtins.int"builtins.int*(
self
ssl.SSLObject"ssl.SSLObjectz36z37z38z39z310z311z312z313*Ç
do_handshakessl.SSLObject.do_handshake"
None*(
self
ssl.SSLObject"ssl.SSLObjectz36z37z38z39z310z311z312z313*v
unwrapssl.SSLObject.unwrap"
None*(
self
ssl.SSLObject"ssl.SSLObjectz36z37z38z39z310z311z312z313*¥
versionssl.SSLObject.version"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLObject"ssl.SSLObjectz36z37z38z39z310z311z312z313*ˇ
get_channel_binding!ssl.SSLObject.get_channel_binding"J
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None*(
self
ssl.SSLObject"ssl.SSLObject*+
cb_type
builtins.str"builtins.str z36z37z38z39z310z311z312z313*¢
verify_client_post_handshake*ssl.SSLObject.verify_client_post_handshake"
None*(
self
ssl.SSLObject"ssl.SSLObjectz36z37z38z39z310z311z312z313*∑
get_verified_chain ssl.SSLObject.get_verified_chain"P
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list*(
self
ssl.SSLObject"ssl.SSLObjectz313*ª
get_unverified_chain"ssl.SSLObject.get_unverified_chain"P
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list*(
self
ssl.SSLObject"ssl.SSLObjectz3132∂
getpeercertssl.SSLObject.getpeercertº

getpeercertssl.SSLObject.getpeercert"ä	
•Union[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]],None]”
ôTypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]]ò
ébuiltins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]
builtins.str"builtins.str◊
rUnion[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]
builtins.str"builtins.stræ
VTypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]”
Kbuiltins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]Û
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.tuple"ssl._PCTRTTT "builtins.dict"ssl._PeerCertRetDictType
None*(
self
ssl.SSLObject"ssl.SSLObject*M
binary_form:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadX˘
getpeercertssl.SSLObject.getpeercert"J
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None*(
self
ssl.SSLObject"ssl.SSLObject*K
binary_form:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadX¨
getpeercertssl.SSLObject.getpeercert"ò
øTypeAlias[Union[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]],builtins.bytes,None]]ª	
¥Union[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]],builtins.bytes,None]”
ôTypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]]ò
ébuiltins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]
builtins.str"builtins.str◊
rUnion[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]
builtins.str"builtins.stræ
VTypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]”
Kbuiltins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]Û
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.tuple"ssl._PCTRTTT "builtins.dict"ssl._PeerCertRetDictType 
builtins.bytes"builtins.bytes
None"ssl._PeerCertRetType*(
self
ssl.SSLObject"ssl.SSLObject*/
binary_form
builtins.bool"builtins.bool0:overloadX"36"37"38"39"310"311"312"313j36j37j38j39j310j311j312j313rf
contextssl.SSLObject.context 
ssl.SSLContext"ssl.SSLContext*36*37*38*39*310*311*312*313rì
sessionssl.SSLObject.sessionM
Union[_ssl.SSLSession,None]"
_ssl.SSLSession"_ssl.SSLSession
None*36*37*38*39*310*311*312*313ˆ	
SSLErrorNumberssl.SSLErrorNumber"enum.IntEnumHj36j37j38j39j310j311j312j313rs
SSL_ERROR_EOF ssl.SSLErrorNumber.SSL_ERROR_EOF
builtins.int"builtins.int*36*37*38*39*310*311*312*313rë
SSL_ERROR_INVALID_ERROR_CODE/ssl.SSLErrorNumber.SSL_ERROR_INVALID_ERROR_CODE
builtins.int"builtins.int*36*37*38*39*310*311*312*313rs
SSL_ERROR_SSL ssl.SSLErrorNumber.SSL_ERROR_SSL
builtins.int"builtins.int*36*37*38*39*310*311*312*313r{
SSL_ERROR_SYSCALL$ssl.SSLErrorNumber.SSL_ERROR_SYSCALL
builtins.int"builtins.int*36*37*38*39*310*311*312*313rÖ
SSL_ERROR_WANT_CONNECT)ssl.SSLErrorNumber.SSL_ERROR_WANT_CONNECT
builtins.int"builtins.int*36*37*38*39*310*311*312*313r
SSL_ERROR_WANT_READ&ssl.SSLErrorNumber.SSL_ERROR_WANT_READ
builtins.int"builtins.int*36*37*38*39*310*311*312*313rÅ
SSL_ERROR_WANT_WRITE'ssl.SSLErrorNumber.SSL_ERROR_WANT_WRITE
builtins.int"builtins.int*36*37*38*39*310*311*312*313rç
SSL_ERROR_WANT_X509_LOOKUP-ssl.SSLErrorNumber.SSL_ERROR_WANT_X509_LOOKUP
builtins.int"builtins.int*36*37*38*39*310*311*312*313rÉ
SSL_ERROR_ZERO_RETURN(ssl.SSLErrorNumber.SSL_ERROR_ZERO_RETURN
builtins.int"builtins.int*36*37*38*39*310*311*312*313Î
RAND_add_ssl.RAND_add"
None*áÑ
,Union[builtins.str,typing_extensions.Buffer]
builtins.str"builtins.str4
typing_extensions.Buffer"typing_extensions.Buffer*" 
builtins.float"builtins.floatz36z37z38z39z310z311ÿ
RAND_add_ssl.RAND_add"
None*ÑÅ
+Union[builtins.str,_collections_abc.Buffer]
builtins.str"builtins.str2
_collections_abc.Buffer"_collections_abc.Buffer*" 
builtins.float"builtins.floatz312z313É

RAND_bytes_ssl.RAND_bytes" 
builtins.bytes"builtins.bytes*
builtins.int"builtins.intz36z37z38z39z310z311z312z313c
RAND_status_ssl.RAND_status"
builtins.bool"builtins.boolz36z37z38z39z310z311z312z313–
RAND_pseudo_bytes_ssl.RAND_pseudo_bytes"i
#Tuple[builtins.bytes,builtins.bool] 
builtins.bytes"builtins.bytes
builtins.bool"builtins.bool*
builtins.int"builtins.intz36z37z38z39z310z311[
RAND_egd_ssl.RAND_egd"
None*&
path
builtins.str"builtins.strz36z37z38z39Œ
wrap_socketssl.wrap_socket"
ssl.SSLSocket"ssl.SSLSocket*(
sock
socket.socket"socket.socket*∆
keyfile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *«
certfile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *1
server_side
builtins.bool"builtins.bool *-
	cert_reqs
builtins.int"builtins.int */
ssl_version
builtins.int"builtins.int *T
ca_certsD
Union[builtins.str,None]
builtins.str"builtins.str
None *=
do_handshake_on_connect
builtins.bool"builtins.bool *:
suppress_ragged_eofs
builtins.bool"builtins.bool *S
ciphersD
Union[builtins.str,None]
builtins.str"builtins.str
None z36z37z38z39z310z311«
create_default_contextssl.create_default_context" 
ssl.SSLContext"ssl.SSLContext*ü
purposeè
ETypeAlias[Tuple[builtins.int,builtins.str,builtins.str,builtins.str]]∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"ssl.Purpose *≈
cafile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *≈
capath∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *¢
cadataì
1Union[builtins.str,typing_extensions.Buffer,None]
builtins.str"builtins.str4
typing_extensions.Buffer"typing_extensions.Buffer
None z36z37z38z39z310z311¥
create_default_contextssl.create_default_context" 
ssl.SSLContext"ssl.SSLContext*ü
purposeè
ETypeAlias[Tuple[builtins.int,builtins.str,builtins.str,builtins.str]]∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"ssl.Purpose *≈
cafile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *≈
capath∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *ü
cadataê
0Union[builtins.str,_collections_abc.Buffer,None]
builtins.str"builtins.str2
_collections_abc.Buffer"_collections_abc.Buffer
None z312z313Î
_create_unverified_contextssl._create_unverified_context" 
ssl.SSLContext"ssl.SSLContext*,
protocol
builtins.int"builtins.int *-
	cert_reqs
builtins.int"builtins.int *4
check_hostname
builtins.bool"builtins.bool *ü
purposeè
ETypeAlias[Tuple[builtins.int,builtins.str,builtins.str,builtins.str]]∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"ssl.Purpose *«
certfile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *∆
keyfile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *≈
cafile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *≈
capath∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *¢
cadataì
1Union[builtins.str,typing_extensions.Buffer,None]
builtins.str"builtins.str4
typing_extensions.Buffer"typing_extensions.Buffer
None z36z37z38z39ç
_create_unverified_contextssl._create_unverified_context" 
ssl.SSLContext"ssl.SSLContext*T
protocolD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
	cert_reqs
builtins.int"builtins.int *4
check_hostname
builtins.bool"builtins.bool *ü
purposeè
ETypeAlias[Tuple[builtins.int,builtins.str,builtins.str,builtins.str]]∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"ssl.Purpose *«
certfile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *∆
keyfile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *≈
cafile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *≈
capath∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *¢
cadataì
1Union[builtins.str,typing_extensions.Buffer,None]
builtins.str"builtins.str4
typing_extensions.Buffer"typing_extensions.Buffer
None z310z311ä
_create_unverified_contextssl._create_unverified_context" 
ssl.SSLContext"ssl.SSLContext*T
protocolD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
	cert_reqs
builtins.int"builtins.int *4
check_hostname
builtins.bool"builtins.bool *ü
purposeè
ETypeAlias[Tuple[builtins.int,builtins.str,builtins.str,builtins.str]]∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"ssl.Purpose *«
certfile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *∆
keyfile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *≈
cafile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *≈
capath∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *ü
cadataê
0Union[builtins.str,_collections_abc.Buffer,None]
builtins.str"builtins.str2
_collections_abc.Buffer"_collections_abc.Buffer
None z312z313’
match_hostnamessl.match_hostname"
None*ﬁ
cert”
ôTypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]]ò
ébuiltins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]
builtins.str"builtins.str◊
rUnion[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]
builtins.str"builtins.stræ
VTypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]”
Kbuiltins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]Û
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.tuple"ssl._PCTRTTT "builtins.dict"ssl._PeerCertRetDictType**
hostname
builtins.str"builtins.strz36z37z38z39z310z311ü
cert_time_to_secondsssl.cert_time_to_seconds"
builtins.int"builtins.int*+
	cert_time
builtins.str"builtins.strz36z37z38z39z310z311z312z313’
get_server_certificatessl.get_server_certificate"
builtins.str"builtins.str*j
addr`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*/
ssl_version
builtins.int"builtins.int *T
ca_certsD
Union[builtins.str,None]
builtins.str"builtins.str
None z36z37z38z39ä
get_server_certificatessl.get_server_certificate"
builtins.str"builtins.str*j
addr`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*/
ssl_version
builtins.int"builtins.int *T
ca_certsD
Union[builtins.str,None]
builtins.str"builtins.str
None */
timeout 
builtins.float"builtins.float z310z311z312z313≤
DER_cert_to_PEM_certssl.DER_cert_to_PEM_cert"
builtins.str"builtins.str*H
der_cert_bytes4
typing_extensions.Buffer"typing_extensions.Bufferz36z37z38z39z310z311†
DER_cert_to_PEM_certssl.DER_cert_to_PEM_cert"
builtins.str"builtins.str*F
der_cert_bytes2
_collections_abc.Buffer"_collections_abc.Bufferz312z313©
PEM_cert_to_DER_certssl.PEM_cert_to_DER_cert" 
builtins.bytes"builtins.bytes*1
pem_cert_string
builtins.str"builtins.strz36z37z38z39z310z311z312z313È
get_default_verify_pathsssl.get_default_verify_paths"ä
_TypeAlias[Tuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]]å
TTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"ssl.DefaultVerifyPathsz36z37z38z39z310z311z312z313ù
get_protocol_namessl.get_protocol_name"
builtins.str"builtins.str*/
protocol_code
builtins.int"builtins.intz36z37z38z39z310z311z312z313*£
__annotations__ssl.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313*k
_DEFAULT_CIPHERS_ssl._DEFAULT_CIPHERS
builtins.str"builtins.str*36*37*38*39*310*311*312*313*π
_OPENSSL_API_VERSION_ssl._OPENSSL_API_VERSION·
GTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int*36*37*38*39*310*311*312*313*]
HAS_ALPN_ssl.HAS_ALPN
builtins.bool"builtins.bool*36*37*38*39*310*311*312*313*]
HAS_ECDH_ssl.HAS_ECDH
builtins.bool"builtins.bool*36*37*38*39*310*311*312*313*[
HAS_NPN_ssl.HAS_NPN
builtins.bool"builtins.bool*36*37*38*39*310*311*312*313*[
HAS_SNI_ssl.HAS_SNI
builtins.bool"builtins.bool*36*37*38*39*310*311*312*313*i
OPENSSL_VERSION_ssl.OPENSSL_VERSION
builtins.str"builtins.str*36*37*38*39*310*311*312*313*π
OPENSSL_VERSION_INFO_ssl.OPENSSL_VERSION_INFO·
GTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int*36*37*38*39*310*311*312*313*w
OPENSSL_VERSION_NUMBER_ssl.OPENSSL_VERSION_NUMBER
builtins.int"builtins.int*36*37*38*39*310*311*312*313*_
	HAS_SSLv2_ssl.HAS_SSLv2
builtins.bool"builtins.bool*36*37*38*39*310*311*312*313*_
	HAS_SSLv3_ssl.HAS_SSLv3
builtins.bool"builtins.bool*36*37*38*39*310*311*312*313*_
	HAS_TLSv1_ssl.HAS_TLSv1
builtins.bool"builtins.bool*36*37*38*39*310*311*312*313*c
HAS_TLSv1_1_ssl.HAS_TLSv1_1
builtins.bool"builtins.bool*36*37*38*39*310*311*312*313*c
HAS_TLSv1_2_ssl.HAS_TLSv1_2
builtins.bool"builtins.bool*36*37*38*39*310*311*312*313*c
HAS_TLSv1_3_ssl.HAS_TLSv1_3
builtins.bool"builtins.bool*36*37*38*39*310*311*312*313*≥
_create_default_https_context!ssl._create_default_https_contextK
CallableType[builtins.function]&
builtins.function"builtins.function*36*37*38*39*310*311*312*313*`
	CERT_NONEssl.CERT_NONE 
ssl.VerifyMode"ssl.VerifyMode*36*37*38*39*310*311*312*313*h
CERT_OPTIONALssl.CERT_OPTIONAL 
ssl.VerifyMode"ssl.VerifyMode*36*37*38*39*310*311*312*313*h
CERT_REQUIREDssl.CERT_REQUIRED 
ssl.VerifyMode"ssl.VerifyMode*36*37*38*39*310*311*312*313*l
VERIFY_DEFAULTssl.VERIFY_DEFAULT"
ssl.VerifyFlags"ssl.VerifyFlags*36*37*38*39*310*311*312*313*z
VERIFY_CRL_CHECK_LEAFssl.VERIFY_CRL_CHECK_LEAF"
ssl.VerifyFlags"ssl.VerifyFlags*36*37*38*39*310*311*312*313*|
VERIFY_CRL_CHECK_CHAINssl.VERIFY_CRL_CHECK_CHAIN"
ssl.VerifyFlags"ssl.VerifyFlags*36*37*38*39*310*311*312*313*t
VERIFY_X509_STRICTssl.VERIFY_X509_STRICT"
ssl.VerifyFlags"ssl.VerifyFlags*36*37*38*39*310*311*312*313*Ç
VERIFY_X509_TRUSTED_FIRSTssl.VERIFY_X509_TRUSTED_FIRST"
ssl.VerifyFlags"ssl.VerifyFlags*36*37*38*39*310*311*312*313*l
PROTOCOL_SSLv23ssl.PROTOCOL_SSLv23 
ssl._SSLMethod"ssl._SSLMethod*36*37*38*39*310*311*312*313*j
PROTOCOL_SSLv2ssl.PROTOCOL_SSLv2 
ssl._SSLMethod"ssl._SSLMethod*36*37*38*39*310*311*312*313*j
PROTOCOL_SSLv3ssl.PROTOCOL_SSLv3 
ssl._SSLMethod"ssl._SSLMethod*36*37*38*39*310*311*312*313*j
PROTOCOL_TLSv1ssl.PROTOCOL_TLSv1 
ssl._SSLMethod"ssl._SSLMethod*36*37*38*39*310*311*312*313*n
PROTOCOL_TLSv1_1ssl.PROTOCOL_TLSv1_1 
ssl._SSLMethod"ssl._SSLMethod*36*37*38*39*310*311*312*313*n
PROTOCOL_TLSv1_2ssl.PROTOCOL_TLSv1_2 
ssl._SSLMethod"ssl._SSLMethod*36*37*38*39*310*311*312*313*f
PROTOCOL_TLSssl.PROTOCOL_TLS 
ssl._SSLMethod"ssl._SSLMethod*36*37*38*39*310*311*312*313*t
PROTOCOL_TLS_CLIENTssl.PROTOCOL_TLS_CLIENT 
ssl._SSLMethod"ssl._SSLMethod*36*37*38*39*310*311*312*313*t
PROTOCOL_TLS_SERVERssl.PROTOCOL_TLS_SERVER 
ssl._SSLMethod"ssl._SSLMethod*36*37*38*39*310*311*312*313*T
OP_ALL
ssl.OP_ALL
ssl.Options"ssl.Options*36*37*38*39*310*311*312*313*^
OP_NO_SSLv2ssl.OP_NO_SSLv2
ssl.Options"ssl.Options*36*37*38*39*310*311*312*313*^
OP_NO_SSLv3ssl.OP_NO_SSLv3
ssl.Options"ssl.Options*36*37*38*39*310*311*312*313*^
OP_NO_TLSv1ssl.OP_NO_TLSv1
ssl.Options"ssl.Options*36*37*38*39*310*311*312*313*b
OP_NO_TLSv1_1ssl.OP_NO_TLSv1_1
ssl.Options"ssl.Options*36*37*38*39*310*311*312*313*b
OP_NO_TLSv1_2ssl.OP_NO_TLSv1_2
ssl.Options"ssl.Options*36*37*38*39*310*311*312*313*b
OP_NO_TLSv1_3ssl.OP_NO_TLSv1_3
ssl.Options"ssl.Options*36*37*38*39*310*311*312*313*~
OP_CIPHER_SERVER_PREFERENCEssl.OP_CIPHER_SERVER_PREFERENCE
ssl.Options"ssl.Options*36*37*38*39*310*311*312*313*h
OP_SINGLE_DH_USEssl.OP_SINGLE_DH_USE
ssl.Options"ssl.Options*36*37*38*39*310*311*312*313*l
OP_SINGLE_ECDH_USEssl.OP_SINGLE_ECDH_USE
ssl.Options"ssl.Options*36*37*38*39*310*311*312*313*j
OP_NO_COMPRESSIONssl.OP_NO_COMPRESSION
ssl.Options"ssl.Options*36*37*38*39*310*311*312*313*`
OP_NO_TICKETssl.OP_NO_TICKET
ssl.Options"ssl.Options*36*37*38*39*310*311*312*313*n
OP_NO_RENEGOTIATIONssl.OP_NO_RENEGOTIATION
ssl.Options"ssl.Options*36*37*38*39*310*311*312*313*|
OP_ENABLE_MIDDLEBOX_COMPATssl.OP_ENABLE_MIDDLEBOX_COMPAT
ssl.Options"ssl.Options*36*37*38*39*310*311*312*313*x
OP_IGNORE_UNEXPECTED_EOFssl.OP_IGNORE_UNEXPECTED_EOF
ssl.Options"ssl.Options*36*37*38*39*310*311*312*313*Ç
HAS_NEVER_CHECK_COMMON_NAMEssl.HAS_NEVER_CHECK_COMMON_NAME
builtins.bool"builtins.bool*36*37*38*39*310*311*312*313*¢
CHANNEL_BINDING_TYPESssl.CHANNEL_BINDING_TYPESJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*36*37*38*39*310*311*312*313*†
#ALERT_DESCRIPTION_HANDSHAKE_FAILURE'ssl.ALERT_DESCRIPTION_HANDSHAKE_FAILURE,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*311*312*313*ö
 ALERT_DESCRIPTION_INTERNAL_ERROR$ssl.ALERT_DESCRIPTION_INTERNAL_ERROR,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*311*312*313*ò
ALERT_DESCRIPTION_ACCESS_DENIED#ssl.ALERT_DESCRIPTION_ACCESS_DENIED,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*311*312*313*ú
!ALERT_DESCRIPTION_BAD_CERTIFICATE%ssl.ALERT_DESCRIPTION_BAD_CERTIFICATE,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*311*312*313*≤
,ALERT_DESCRIPTION_BAD_CERTIFICATE_HASH_VALUE0ssl.ALERT_DESCRIPTION_BAD_CERTIFICATE_HASH_VALUE,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*311*312*313*º
1ALERT_DESCRIPTION_BAD_CERTIFICATE_STATUS_RESPONSE5ssl.ALERT_DESCRIPTION_BAD_CERTIFICATE_STATUS_RESPONSE,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*311*312*313*ö
 ALERT_DESCRIPTION_BAD_RECORD_MAC$ssl.ALERT_DESCRIPTION_BAD_RECORD_MAC,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*311*312*313*§
%ALERT_DESCRIPTION_CERTIFICATE_EXPIRED)ssl.ALERT_DESCRIPTION_CERTIFICATE_EXPIRED,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*311*312*313*§
%ALERT_DESCRIPTION_CERTIFICATE_REVOKED)ssl.ALERT_DESCRIPTION_CERTIFICATE_REVOKED,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*311*312*313*§
%ALERT_DESCRIPTION_CERTIFICATE_UNKNOWN)ssl.ALERT_DESCRIPTION_CERTIFICATE_UNKNOWN,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*311*312*313*Æ
*ALERT_DESCRIPTION_CERTIFICATE_UNOBTAINABLE.ssl.ALERT_DESCRIPTION_CERTIFICATE_UNOBTAINABLE,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*311*312*313*ñ
ALERT_DESCRIPTION_CLOSE_NOTIFY"ssl.ALERT_DESCRIPTION_CLOSE_NOTIFY,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*311*312*313*ñ
ALERT_DESCRIPTION_DECODE_ERROR"ssl.ALERT_DESCRIPTION_DECODE_ERROR,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*311*312*313*®
'ALERT_DESCRIPTION_DECOMPRESSION_FAILURE+ssl.ALERT_DESCRIPTION_DECOMPRESSION_FAILURE,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*311*312*313*ò
ALERT_DESCRIPTION_DECRYPT_ERROR#ssl.ALERT_DESCRIPTION_DECRYPT_ERROR,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*311*312*313*†
#ALERT_DESCRIPTION_ILLEGAL_PARAMETER'ssl.ALERT_DESCRIPTION_ILLEGAL_PARAMETER,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*311*312*313*®
'ALERT_DESCRIPTION_INSUFFICIENT_SECURITY+ssl.ALERT_DESCRIPTION_INSUFFICIENT_SECURITY,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*311*312*313*û
"ALERT_DESCRIPTION_NO_RENEGOTIATION&ssl.ALERT_DESCRIPTION_NO_RENEGOTIATION,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*311*312*313*û
"ALERT_DESCRIPTION_PROTOCOL_VERSION&ssl.ALERT_DESCRIPTION_PROTOCOL_VERSION,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*311*312*313*ú
!ALERT_DESCRIPTION_RECORD_OVERFLOW%ssl.ALERT_DESCRIPTION_RECORD_OVERFLOW,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*311*312*313*¢
$ALERT_DESCRIPTION_UNEXPECTED_MESSAGE(ssl.ALERT_DESCRIPTION_UNEXPECTED_MESSAGE,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*311*312*313*í
ALERT_DESCRIPTION_UNKNOWN_CA ssl.ALERT_DESCRIPTION_UNKNOWN_CA,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*311*312*313*¶
&ALERT_DESCRIPTION_UNKNOWN_PSK_IDENTITY*ssl.ALERT_DESCRIPTION_UNKNOWN_PSK_IDENTITY,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*311*312*313*†
#ALERT_DESCRIPTION_UNRECOGNIZED_NAME'ssl.ALERT_DESCRIPTION_UNRECOGNIZED_NAME,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*311*312*313*¨
)ALERT_DESCRIPTION_UNSUPPORTED_CERTIFICATE-ssl.ALERT_DESCRIPTION_UNSUPPORTED_CERTIFICATE,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*311*312*313*®
'ALERT_DESCRIPTION_UNSUPPORTED_EXTENSION+ssl.ALERT_DESCRIPTION_UNSUPPORTED_EXTENSION,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*311*312*313*ö
 ALERT_DESCRIPTION_USER_CANCELLED$ssl.ALERT_DESCRIPTION_USER_CANCELLED,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*311*312*313*p
SSL_ERROR_EOFssl.SSL_ERROR_EOF(
ssl.SSLErrorNumber"ssl.SSLErrorNumber*36*37*38*39*310*311*312*313*é
SSL_ERROR_INVALID_ERROR_CODE ssl.SSL_ERROR_INVALID_ERROR_CODE(
ssl.SSLErrorNumber"ssl.SSLErrorNumber*36*37*38*39*310*311*312*313*p
SSL_ERROR_SSLssl.SSL_ERROR_SSL(
ssl.SSLErrorNumber"ssl.SSLErrorNumber*36*37*38*39*310*311*312*313*x
SSL_ERROR_SYSCALLssl.SSL_ERROR_SYSCALL(
ssl.SSLErrorNumber"ssl.SSLErrorNumber*36*37*38*39*310*311*312*313*Ç
SSL_ERROR_WANT_CONNECTssl.SSL_ERROR_WANT_CONNECT(
ssl.SSLErrorNumber"ssl.SSLErrorNumber*36*37*38*39*310*311*312*313*|
SSL_ERROR_WANT_READssl.SSL_ERROR_WANT_READ(
ssl.SSLErrorNumber"ssl.SSLErrorNumber*36*37*38*39*310*311*312*313*~
SSL_ERROR_WANT_WRITEssl.SSL_ERROR_WANT_WRITE(
ssl.SSLErrorNumber"ssl.SSLErrorNumber*36*37*38*39*310*311*312*313*ä
SSL_ERROR_WANT_X509_LOOKUPssl.SSL_ERROR_WANT_X509_LOOKUP(
ssl.SSLErrorNumber"ssl.SSLErrorNumber*36*37*38*39*310*311*312*313*Ä
SSL_ERROR_ZERO_RETURNssl.SSL_ERROR_ZERO_RETURN(
ssl.SSLErrorNumber"ssl.SSLErrorNumber*36*37*38*39*310*311*312*313*@
AF_INETssl.AF_INET
builtins.int"builtins.int*36*37*38*^

PEM_FOOTERssl.PEM_FOOTER
builtins.str"builtins.str*36*37*38*39*310*311*312*313*^

PEM_HEADERssl.PEM_HEADER
builtins.str"builtins.str*36*37*38*39*310*311*312*313*`
SOCK_STREAMssl.SOCK_STREAM
builtins.int"builtins.int*36*37*38*39*310*311*312*313*^

SOL_SOCKETssl.SOL_SOCKET
builtins.int"builtins.int*36*37*38*39*310*311*312*313*X
SO_TYPEssl.SO_TYPE
builtins.int"builtins.int*36*37*38*39*310*311*312*313*p
VERIFY_ALLOW_PROXY_CERTSssl.VERIFY_ALLOW_PROXY_CERTS"
ssl.VerifyFlags"ssl.VerifyFlags*310*311*312*313*r
VERIFY_X509_PARTIAL_CHAINssl.VERIFY_X509_PARTIAL_CHAIN"
ssl.VerifyFlags"ssl.VerifyFlags*310*311*312*313*^
OP_LEGACY_SERVER_CONNECTssl.OP_LEGACY_SERVER_CONNECT
ssl.Options"ssl.Options*312*313*J
OP_ENABLE_KTLSssl.OP_ENABLE_KTLS
ssl.Options"ssl.Options*312*313*<
HAS_PSK_ssl.HAS_PSK
builtins.bool"builtins.bool*313