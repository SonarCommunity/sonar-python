
ssl>
_Cipherssl._Cipher"typing._TypedDictj36j37j38j39j310Â
SSLErrorssl.SSLError"builtins.OSErrorj36j37j38j39j310rR
libraryssl.SSLError.library
builtins.str"builtins.str*36*37*38*39*310rP
reasonssl.SSLError.reason
builtins.str"builtins.str*36*37*38*39*310O
SSLZeroReturnErrorssl.SSLZeroReturnError"ssl.SSLErrorj36j37j38j39j310K
SSLWantReadErrorssl.SSLWantReadError"ssl.SSLErrorj36j37j38j39j310M
SSLWantWriteErrorssl.SSLWantWriteError"ssl.SSLErrorj36j37j38j39j310I
SSLSyscallErrorssl.SSLSyscallError"ssl.SSLErrorj36j37j38j39j310A
SSLEOFErrorssl.SSLEOFError"ssl.SSLErrorj36j37j38j39j310Œ
SSLCertVerificationErrorssl.SSLCertVerificationError"ssl.SSLError"builtins.ValueErrorj36j37j38j39j310rj
verify_code(ssl.SSLCertVerificationError.verify_code
builtins.int"builtins.int*36*37*38*39*310rp
verify_message+ssl.SSLCertVerificationError.verify_message
builtins.str"builtins.str*36*37*38*39*310ä,
DefaultVerifyPathsssl.DefaultVerifyPaths"builtins.tuple*‹
_replacessl.DefaultVerifyPaths._replace"≠
ssl.DefaultVerifyPaths._NTå
TTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*π
_self≠
ssl.DefaultVerifyPaths._NTå
TTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str**
cafile
builtins.str"builtins.str **
capath
builtins.str"builtins.str *6
openssl_cafile_env
builtins.str"builtins.str *2
openssl_cafile
builtins.str"builtins.str *6
openssl_capath_env
builtins.str"builtins.str *2
openssl_capath
builtins.str"builtins.str z36z37z38z39z310*Ù
__new__ssl.DefaultVerifyPaths.__new__"≠
ssl.DefaultVerifyPaths._NTå
TTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*ﬂ
_cls‘
 Type[ssl.DefaultVerifyPaths._NT]≠
ssl.DefaultVerifyPaths._NTå
TTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*(
cafile
builtins.str"builtins.str*(
capath
builtins.str"builtins.str*4
openssl_cafile_env
builtins.str"builtins.str*0
openssl_cafile
builtins.str"builtins.str*4
openssl_capath_env
builtins.str"builtins.str*0
openssl_capath
builtins.str"builtins.strz36z37z38z39z310*”
_asdictssl.DefaultVerifyPaths._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*π
_self≠
ssl.DefaultVerifyPaths._NTå
TTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strz36z37z38z39z310*≈
_makessl.DefaultVerifyPaths._make"≠
ssl.DefaultVerifyPaths._NTå
TTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*ﬂ
_cls‘
 Type[ssl.DefaultVerifyPaths._NT]≠
ssl.DefaultVerifyPaths._NTå
TTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpz36z37z38z39z310j36j37j38j39j310ro
cafilessl.DefaultVerifyPaths.cafile
builtins.str"builtins.str*36*36*37*37*38*38*39*39*310*310ro
capathssl.DefaultVerifyPaths.capath
builtins.str"builtins.str*36*36*37*37*38*38*39*39*310*310rá
openssl_cafile_env)ssl.DefaultVerifyPaths.openssl_cafile_env
builtins.str"builtins.str*36*36*37*37*38*38*39*39*310*310r
openssl_cafile%ssl.DefaultVerifyPaths.openssl_cafile
builtins.str"builtins.str*36*36*37*37*38*38*39*39*310*310rá
openssl_capath_env)ssl.DefaultVerifyPaths.openssl_capath_env
builtins.str"builtins.str*36*36*37*37*38*38*39*39*310*310r
openssl_capath%ssl.DefaultVerifyPaths.openssl_capath
builtins.str"builtins.str*36*36*37*37*38*38*39*39*310*310rÕ
_fieldsssl.DefaultVerifyPaths._fieldså
TTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*36*37*38*39*310r°
_field_types#ssl.DefaultVerifyPaths._field_typesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310rß
_field_defaults&ssl.DefaultVerifyPaths._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310r\
_sourcessl.DefaultVerifyPaths._source
builtins.str"builtins.str*36*37*38*39*310rß
__annotations__&ssl.DefaultVerifyPaths.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310r§
__match_args__%ssl.DefaultVerifyPaths.__match_args__Â
äTuple[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*310ﬂ

VerifyModessl.VerifyMode"enum.IntEnumHj36j37j38j39j310rX
	CERT_NONEssl.VerifyMode.CERT_NONE
builtins.int"builtins.int*36*37*38*39*310r`
CERT_OPTIONALssl.VerifyMode.CERT_OPTIONAL
builtins.int"builtins.int*36*37*38*39*310r`
CERT_REQUIREDssl.VerifyMode.CERT_REQUIRED
builtins.int"builtins.int*36*37*38*39*310Ã
VerifyFlagsssl.VerifyFlags"enum.IntFlagHj36j37j38j39j310rc
VERIFY_DEFAULTssl.VerifyFlags.VERIFY_DEFAULT
builtins.int"builtins.int*36*37*38*39*310rq
VERIFY_CRL_CHECK_LEAF%ssl.VerifyFlags.VERIFY_CRL_CHECK_LEAF
builtins.int"builtins.int*36*37*38*39*310rs
VERIFY_CRL_CHECK_CHAIN&ssl.VerifyFlags.VERIFY_CRL_CHECK_CHAIN
builtins.int"builtins.int*36*37*38*39*310rk
VERIFY_X509_STRICT"ssl.VerifyFlags.VERIFY_X509_STRICT
builtins.int"builtins.int*36*37*38*39*310ry
VERIFY_X509_TRUSTED_FIRST)ssl.VerifyFlags.VERIFY_X509_TRUSTED_FIRST
builtins.int"builtins.int*36*37*38*39*310rg
VERIFY_ALLOW_PROXY_CERTS(ssl.VerifyFlags.VERIFY_ALLOW_PROXY_CERTS
builtins.int"builtins.int*310ri
VERIFY_X509_PARTIAL_CHAIN)ssl.VerifyFlags.VERIFY_X509_PARTIAL_CHAIN
builtins.int"builtins.int*310ﬂ

_SSLMethodssl._SSLMethod"enum.IntEnumHj36j37j38j39j310rd
PROTOCOL_SSLv23ssl._SSLMethod.PROTOCOL_SSLv23
builtins.int"builtins.int*36*37*38*39*310rb
PROTOCOL_SSLv2ssl._SSLMethod.PROTOCOL_SSLv2
builtins.int"builtins.int*36*37*38*39*310rb
PROTOCOL_SSLv3ssl._SSLMethod.PROTOCOL_SSLv3
builtins.int"builtins.int*36*37*38*39*310rb
PROTOCOL_TLSv1ssl._SSLMethod.PROTOCOL_TLSv1
builtins.int"builtins.int*36*37*38*39*310rf
PROTOCOL_TLSv1_1ssl._SSLMethod.PROTOCOL_TLSv1_1
builtins.int"builtins.int*36*37*38*39*310rf
PROTOCOL_TLSv1_2ssl._SSLMethod.PROTOCOL_TLSv1_2
builtins.int"builtins.int*36*37*38*39*310r^
PROTOCOL_TLSssl._SSLMethod.PROTOCOL_TLS
builtins.int"builtins.int*36*37*38*39*310rl
PROTOCOL_TLS_CLIENT"ssl._SSLMethod.PROTOCOL_TLS_CLIENT
builtins.int"builtins.int*36*37*38*39*310rl
PROTOCOL_TLS_SERVER"ssl._SSLMethod.PROTOCOL_TLS_SERVER
builtins.int"builtins.int*36*37*38*39*310ê
Optionsssl.Options"enum.IntFlagHj36j37j38j39j310rO
OP_ALLssl.Options.OP_ALL
builtins.int"builtins.int*36*37*38*39*310rY
OP_NO_SSLv2ssl.Options.OP_NO_SSLv2
builtins.int"builtins.int*36*37*38*39*310rY
OP_NO_SSLv3ssl.Options.OP_NO_SSLv3
builtins.int"builtins.int*36*37*38*39*310rY
OP_NO_TLSv1ssl.Options.OP_NO_TLSv1
builtins.int"builtins.int*36*37*38*39*310r]
OP_NO_TLSv1_1ssl.Options.OP_NO_TLSv1_1
builtins.int"builtins.int*36*37*38*39*310r]
OP_NO_TLSv1_2ssl.Options.OP_NO_TLSv1_2
builtins.int"builtins.int*36*37*38*39*310r]
OP_NO_TLSv1_3ssl.Options.OP_NO_TLSv1_3
builtins.int"builtins.int*36*37*38*39*310ry
OP_CIPHER_SERVER_PREFERENCE'ssl.Options.OP_CIPHER_SERVER_PREFERENCE
builtins.int"builtins.int*36*37*38*39*310rc
OP_SINGLE_DH_USEssl.Options.OP_SINGLE_DH_USE
builtins.int"builtins.int*36*37*38*39*310rg
OP_SINGLE_ECDH_USEssl.Options.OP_SINGLE_ECDH_USE
builtins.int"builtins.int*36*37*38*39*310re
OP_NO_COMPRESSIONssl.Options.OP_NO_COMPRESSION
builtins.int"builtins.int*36*37*38*39*310r[
OP_NO_TICKETssl.Options.OP_NO_TICKET
builtins.int"builtins.int*36*37*38*39*310ri
OP_NO_RENEGOTIATIONssl.Options.OP_NO_RENEGOTIATION
builtins.int"builtins.int*36*37*38*39*310ro
OP_ENABLE_MIDDLEBOX_COMPAT&ssl.Options.OP_ENABLE_MIDDLEBOX_COMPAT
builtins.int"builtins.int*38*39*310rk
OP_IGNORE_UNEXPECTED_EOF$ssl.Options.OP_IGNORE_UNEXPECTED_EOF
builtins.int"builtins.int*38*39*310® 
AlertDescriptionssl.AlertDescription"enum.IntEnumHj36j37j38j39j310rä
ALERT_DESCRIPTION_ACCESS_DENIED4ssl.AlertDescription.ALERT_DESCRIPTION_ACCESS_DENIED
builtins.int"builtins.int*36*37*38*39*310ré
!ALERT_DESCRIPTION_BAD_CERTIFICATE6ssl.AlertDescription.ALERT_DESCRIPTION_BAD_CERTIFICATE
builtins.int"builtins.int*36*37*38*39*310r§
,ALERT_DESCRIPTION_BAD_CERTIFICATE_HASH_VALUEAssl.AlertDescription.ALERT_DESCRIPTION_BAD_CERTIFICATE_HASH_VALUE
builtins.int"builtins.int*36*37*38*39*310rÆ
1ALERT_DESCRIPTION_BAD_CERTIFICATE_STATUS_RESPONSEFssl.AlertDescription.ALERT_DESCRIPTION_BAD_CERTIFICATE_STATUS_RESPONSE
builtins.int"builtins.int*36*37*38*39*310rå
 ALERT_DESCRIPTION_BAD_RECORD_MAC5ssl.AlertDescription.ALERT_DESCRIPTION_BAD_RECORD_MAC
builtins.int"builtins.int*36*37*38*39*310rñ
%ALERT_DESCRIPTION_CERTIFICATE_EXPIRED:ssl.AlertDescription.ALERT_DESCRIPTION_CERTIFICATE_EXPIRED
builtins.int"builtins.int*36*37*38*39*310rñ
%ALERT_DESCRIPTION_CERTIFICATE_REVOKED:ssl.AlertDescription.ALERT_DESCRIPTION_CERTIFICATE_REVOKED
builtins.int"builtins.int*36*37*38*39*310rñ
%ALERT_DESCRIPTION_CERTIFICATE_UNKNOWN:ssl.AlertDescription.ALERT_DESCRIPTION_CERTIFICATE_UNKNOWN
builtins.int"builtins.int*36*37*38*39*310r†
*ALERT_DESCRIPTION_CERTIFICATE_UNOBTAINABLE?ssl.AlertDescription.ALERT_DESCRIPTION_CERTIFICATE_UNOBTAINABLE
builtins.int"builtins.int*36*37*38*39*310rà
ALERT_DESCRIPTION_CLOSE_NOTIFY3ssl.AlertDescription.ALERT_DESCRIPTION_CLOSE_NOTIFY
builtins.int"builtins.int*36*37*38*39*310rà
ALERT_DESCRIPTION_DECODE_ERROR3ssl.AlertDescription.ALERT_DESCRIPTION_DECODE_ERROR
builtins.int"builtins.int*36*37*38*39*310rö
'ALERT_DESCRIPTION_DECOMPRESSION_FAILURE<ssl.AlertDescription.ALERT_DESCRIPTION_DECOMPRESSION_FAILURE
builtins.int"builtins.int*36*37*38*39*310rä
ALERT_DESCRIPTION_DECRYPT_ERROR4ssl.AlertDescription.ALERT_DESCRIPTION_DECRYPT_ERROR
builtins.int"builtins.int*36*37*38*39*310rí
#ALERT_DESCRIPTION_HANDSHAKE_FAILURE8ssl.AlertDescription.ALERT_DESCRIPTION_HANDSHAKE_FAILURE
builtins.int"builtins.int*36*37*38*39*310rí
#ALERT_DESCRIPTION_ILLEGAL_PARAMETER8ssl.AlertDescription.ALERT_DESCRIPTION_ILLEGAL_PARAMETER
builtins.int"builtins.int*36*37*38*39*310rö
'ALERT_DESCRIPTION_INSUFFICIENT_SECURITY<ssl.AlertDescription.ALERT_DESCRIPTION_INSUFFICIENT_SECURITY
builtins.int"builtins.int*36*37*38*39*310rå
 ALERT_DESCRIPTION_INTERNAL_ERROR5ssl.AlertDescription.ALERT_DESCRIPTION_INTERNAL_ERROR
builtins.int"builtins.int*36*37*38*39*310rê
"ALERT_DESCRIPTION_NO_RENEGOTIATION7ssl.AlertDescription.ALERT_DESCRIPTION_NO_RENEGOTIATION
builtins.int"builtins.int*36*37*38*39*310rê
"ALERT_DESCRIPTION_PROTOCOL_VERSION7ssl.AlertDescription.ALERT_DESCRIPTION_PROTOCOL_VERSION
builtins.int"builtins.int*36*37*38*39*310ré
!ALERT_DESCRIPTION_RECORD_OVERFLOW6ssl.AlertDescription.ALERT_DESCRIPTION_RECORD_OVERFLOW
builtins.int"builtins.int*36*37*38*39*310rî
$ALERT_DESCRIPTION_UNEXPECTED_MESSAGE9ssl.AlertDescription.ALERT_DESCRIPTION_UNEXPECTED_MESSAGE
builtins.int"builtins.int*36*37*38*39*310rÑ
ALERT_DESCRIPTION_UNKNOWN_CA1ssl.AlertDescription.ALERT_DESCRIPTION_UNKNOWN_CA
builtins.int"builtins.int*36*37*38*39*310rò
&ALERT_DESCRIPTION_UNKNOWN_PSK_IDENTITY;ssl.AlertDescription.ALERT_DESCRIPTION_UNKNOWN_PSK_IDENTITY
builtins.int"builtins.int*36*37*38*39*310rí
#ALERT_DESCRIPTION_UNRECOGNIZED_NAME8ssl.AlertDescription.ALERT_DESCRIPTION_UNRECOGNIZED_NAME
builtins.int"builtins.int*36*37*38*39*310rû
)ALERT_DESCRIPTION_UNSUPPORTED_CERTIFICATE>ssl.AlertDescription.ALERT_DESCRIPTION_UNSUPPORTED_CERTIFICATE
builtins.int"builtins.int*36*37*38*39*310rö
'ALERT_DESCRIPTION_UNSUPPORTED_EXTENSION<ssl.AlertDescription.ALERT_DESCRIPTION_UNSUPPORTED_EXTENSION
builtins.int"builtins.int*36*37*38*39*310rå
 ALERT_DESCRIPTION_USER_CANCELLED5ssl.AlertDescription.ALERT_DESCRIPTION_USER_CANCELLED
builtins.int"builtins.int*36*37*38*39*310º 
_ASN1ObjectBasessl._ASN1ObjectBase"builtins.tuple*¶
_replacessl._ASN1ObjectBase._replace"‘
ssl._ASN1ObjectBase._NT∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*‡
_self‘
ssl._ASN1ObjectBase._NT∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*'
nid
builtins.int"builtins.int *-
	shortname
builtins.str"builtins.str *,
longname
builtins.str"builtins.str *'
oid
builtins.str"builtins.str z36z37z38z39z310*ø
__new__ssl._ASN1ObjectBase.__new__"‘
ssl._ASN1ObjectBase._NT∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*É
_cls¯
Type[ssl._ASN1ObjectBase._NT]‘
ssl._ASN1ObjectBase._NT∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*%
nid
builtins.int"builtins.int*+
	shortname
builtins.str"builtins.str**
longname
builtins.str"builtins.str*%
oid
builtins.str"builtins.strz36z37z38z39z310*˜
_asdictssl._ASN1ObjectBase._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*‡
_self‘
ssl._ASN1ObjectBase._NT∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strz36z37z38z39z310*ç
_makessl._ASN1ObjectBase._make"‘
ssl._ASN1ObjectBase._NT∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*É
_cls¯
Type[ssl._ASN1ObjectBase._NT]‘
ssl._ASN1ObjectBase._NT∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpz36z37z38z39z310j36j37j38j39j310rf
nidssl._ASN1ObjectBase.nid
builtins.int"builtins.int*36*36*37*37*38*38*39*39*310*310rr
	shortnamessl._ASN1ObjectBase.shortname
builtins.str"builtins.str*36*36*37*37*38*38*39*39*310*310rp
longnamessl._ASN1ObjectBase.longname
builtins.str"builtins.str*36*36*37*37*38*38*39*39*310*310rf
oidssl._ASN1ObjectBase.oid
builtins.str"builtins.str*36*36*37*37*38*38*39*39*310*310rÙ
_fieldsssl._ASN1ObjectBase._fields∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*36*37*38*39*310rû
_field_types ssl._ASN1ObjectBase._field_typesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310r§
_field_defaults#ssl._ASN1ObjectBase._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310rY
_sourcessl._ASN1ObjectBase._source
builtins.str"builtins.str*36*37*38*39*310r§
__annotations__#ssl._ASN1ObjectBase.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310rÇ
__match_args__"ssl._ASN1ObjectBase.__match_args__∆
^Tuple[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*310â
_ASN1Objectssl._ASN1Object"ssl._ASN1ObjectBase*±
__new__ssl._ASN1Object.__new__"—
ssl._ASN1Object.Self∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*¸
clsÚ
Type[ssl._ASN1Object.Self]—
ssl._ASN1Object.Self∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*%
oid
builtins.str"builtins.strz36z37z38z39z310*¬
fromnidssl._ASN1Object.fromnid"—
ssl._ASN1Object.Self∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*¸
clsÚ
Type[ssl._ASN1Object.Self]—
ssl._ASN1Object.Self∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*%
nid
builtins.int"builtins.int0:classmethodpz36z37z38z39z310*≈
fromnamessl._ASN1Object.fromname"—
ssl._ASN1Object.Self∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*¸
clsÚ
Type[ssl._ASN1Object.Self]—
ssl._ASN1Object.Self∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*&
name
builtins.str"builtins.str0:classmethodpz36z37z38z39z310j36j37j38j39j310Ò
Purposessl.Purpose"ssl._ASN1Object"	enum.EnumHj36j37j38j39j310r—
SERVER_AUTHssl.Purpose.SERVER_AUTHì
ETypeAlias[Tuple[builtins.int,builtins.str,builtins.str,builtins.str]]∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"ssl._ASN1Object*36*37*38*39*310r—
CLIENT_AUTHssl.Purpose.CLIENT_AUTHì
ETypeAlias[Tuple[builtins.int,builtins.str,builtins.str,builtins.str]]∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"ssl._ASN1Object*36*37*38*39*310‰Ú
	SSLSocketssl.SSLSocket"socket.socket*ƒ
session_reusedssl.SSLSocket.session_reused"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*(
self
ssl.SSLSocket"ssl.SSLSocket0:property`z36z37z38z39z310*ì
__init__ssl.SSLSocket.__init__"
None*(
self
ssl.SSLSocket"ssl.SSLSocket*
args
Any*
kwargs
Anyz36z37z38z39z310*ö

connectssl.SSLSocket.connect"
None*(
self
ssl.SSLSocket"ssl.SSLSocket*ª	
addr∞	
∂TypeAlias[Union[builtins.tuple[Any],builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]]]‡
´Union[builtins.tuple[Any],builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.strﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer"_socket._Addressz36z37*ƒ
connectssl.SSLSocket.connect"
None*(
self
ssl.SSLSocket"ssl.SSLSocket*‡

addr’

 TypeAlias[Union[builtins.tuple[Any],builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]]]Ò
øUnion[builtins.tuple[Any],builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer"_socket._Addressz38z39z310*¥


connect_exssl.SSLSocket.connect_ex"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*ª	
addr∞	
∂TypeAlias[Union[builtins.tuple[Any],builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]]]‡
´Union[builtins.tuple[Any],builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.strﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer"_socket._Addressz36z37*ﬁ

connect_exssl.SSLSocket.connect_ex"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*‡

addr’

 TypeAlias[Union[builtins.tuple[Any],builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]]]Ò
øUnion[builtins.tuple[Any],builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer"_socket._Addressz38z39z310*“
recvssl.SSLSocket.recv" 
builtins.bytes"builtins.bytes*(
self
ssl.SSLSocket"ssl.SSLSocket**
buflen
builtins.int"builtins.int *)
flags
builtins.int"builtins.int z36z37z38z39z310*ú
	recv_intossl.SSLSocket.recv_into"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*¶
bufferô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer*R
nbytesD
Union[builtins.int,None]
builtins.int"builtins.int
None *)
flags
builtins.int"builtins.int z36z37*ı
	recv_intossl.SSLSocket.recv_into"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*˙
bufferÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer*R
nbytesD
Union[builtins.int,None]
builtins.int"builtins.int
None *)
flags
builtins.int"builtins.int z38z39z310*∂
recvfromssl.SSLSocket.recvfrom"|
$Tuple[builtins.bytes,TypeAlias[Any]] 
builtins.bytes"builtins.bytes0
TypeAlias[Any]
Any"_socket._RetAddress*(
self
ssl.SSLSocket"ssl.SSLSocket**
buflen
builtins.int"builtins.int *)
flags
builtins.int"builtins.int z36z37z38z39z310*˛
recvfrom_intossl.SSLSocket.recvfrom_into"v
"Tuple[builtins.int,TypeAlias[Any]]
builtins.int"builtins.int0
TypeAlias[Any]
Any"_socket._RetAddress*(
self
ssl.SSLSocket"ssl.SSLSocket*¶
bufferô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer*R
nbytesD
Union[builtins.int,None]
builtins.int"builtins.int
None *)
flags
builtins.int"builtins.int z36z37*◊
recvfrom_intossl.SSLSocket.recvfrom_into"v
"Tuple[builtins.int,TypeAlias[Any]]
builtins.int"builtins.int0
TypeAlias[Any]
Any"_socket._RetAddress*(
self
ssl.SSLSocket"ssl.SSLSocket*˙
bufferÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer*R
nbytesD
Union[builtins.int,None]
builtins.int"builtins.int
None *)
flags
builtins.int"builtins.int z38z39z310*Ç
sendssl.SSLSocket.send"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*Í
dataﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
flags
builtins.int"builtins.int z36z37*Ñ
sendssl.SSLSocket.send"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*Á
data‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
flags
builtins.int"builtins.int z38z39z310*Ù
sendallssl.SSLSocket.sendall"
None*(
self
ssl.SSLSocket"ssl.SSLSocket*Í
dataﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
flags
builtins.int"builtins.int z36z37*ˆ
sendallssl.SSLSocket.sendall"
None*(
self
ssl.SSLSocket"ssl.SSLSocket*Á
data‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
flags
builtins.int"builtins.int z38z39z310*í
shutdownssl.SSLSocket.shutdown"
None*(
self
ssl.SSLSocket"ssl.SSLSocket*%
how
builtins.int"builtins.intz36z37z38z39z310*ä
readssl.SSLSocket.read" 
builtins.bytes"builtins.bytes*(
self
ssl.SSLSocket"ssl.SSLSocket*'
len
builtins.int"builtins.int *d
bufferV
Union[builtins.bytearray,None](
builtins.bytearray"builtins.bytearray
None z36z37z38z39z310*Ÿ
writessl.SSLSocket.write"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*Í
dataﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBufferz36z37*€
writessl.SSLSocket.write"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*Á
data‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBufferz38z39z310*†
do_handshakessl.SSLSocket.do_handshake"
None*(
self
ssl.SSLSocket"ssl.SSLSocket*+
block
builtins.bool"builtins.bool z36z37z38z39z310*µ
cipherssl.SSLSocket.cipher"’
9Union[Tuple[builtins.str,builtins.str,builtins.int],None]ã
-Tuple[builtins.str,builtins.str,builtins.int]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.int
None*(
self
ssl.SSLSocket"ssl.SSLSocketz36z37z38z39z310*§
shared_ciphersssl.SSLSocket.shared_ciphers"¥
HUnion[builtins.list[Tuple[builtins.str,builtins.str,builtins.int]],None]€
<builtins.list[Tuple[builtins.str,builtins.str,builtins.int]]ã
-Tuple[builtins.str,builtins.str,builtins.int]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.int"builtins.list
None*(
self
ssl.SSLSocket"ssl.SSLSocketz36z37z38z39z310*≠
compressionssl.SSLSocket.compression"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLSocket"ssl.SSLSocketz36z37z38z39z310*
get_channel_binding!ssl.SSLSocket.get_channel_binding"J
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None*(
self
ssl.SSLSocket"ssl.SSLSocket*+
cb_type
builtins.str"builtins.str z36z37z38z39z310*√
selected_alpn_protocol$ssl.SSLSocket.selected_alpn_protocol"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLSocket"ssl.SSLSocketz36z37z38z39z310*¡
selected_npn_protocol#ssl.SSLSocket.selected_npn_protocol"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLSocket"ssl.SSLSocketz36z37z38z39z310*ÿ
acceptssl.SSLSocket.accept"y
#Tuple[ssl.SSLSocket,TypeAlias[Any]]
ssl.SSLSocket"ssl.SSLSocket0
TypeAlias[Any]
Any"_socket._RetAddress*(
self
ssl.SSLSocket"ssl.SSLSocketz36z37z38z39z310*}
unwrapssl.SSLSocket.unwrap"
socket.socket"socket.socket*(
self
ssl.SSLSocket"ssl.SSLSocketz36z37z38z39z310*•
versionssl.SSLSocket.version"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLSocket"ssl.SSLSocketz36z37z38z39z310*}
pendingssl.SSLSocket.pending"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocketz36z37z38z39z310*ã
verify_client_post_handshake*ssl.SSLSocket.verify_client_post_handshake"
None*(
self
ssl.SSLSocket"ssl.SSLSocketz38z39z3102∫!
sendtossl.SSLSocket.sendtoæ
sendtossl.SSLSocket.sendto"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*Í
dataﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*ƒ	
flags_or_addr∞	
∂TypeAlias[Union[builtins.tuple[Any],builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]]]‡
´Union[builtins.tuple[Any],builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.strﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer"_socket._Address*
addr
None 0:overloadX–
sendtossl.SSLSocket.sendto"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*Í
dataﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*/
flags_or_addr
builtins.int"builtins.int*ª	
addr∞	
∂TypeAlias[Union[builtins.tuple[Any],builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]]]‡
´Union[builtins.tuple[Any],builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.strﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer"_socket._Address0:overloadX"36"372É&
sendtossl.SSLSocket.sendto‡
sendtossl.SSLSocket.sendto"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*Á
data‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*È

flags_or_addr’

 TypeAlias[Union[builtins.tuple[Any],builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]]]Ò
øUnion[builtins.tuple[Any],builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer"_socket._Address*
addr
None 0:overloadXÚ
sendtossl.SSLSocket.sendto"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*Á
data‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*/
flags_or_addr
builtins.int"builtins.int*‡

addr’

 TypeAlias[Union[builtins.tuple[Any],builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]]]Ò
øUnion[builtins.tuple[Any],builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer"_socket._Address0:overloadX"38"39"3102ß
getpeercertssl.SSLSocket.getpeercertº

getpeercertssl.SSLSocket.getpeercert"ä	
•Union[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]],None]”
ôTypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]]ò
ébuiltins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]
builtins.str"builtins.str◊
rUnion[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]
builtins.str"builtins.stræ
VTypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]”
Kbuiltins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]Û
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.tuple"ssl._PCTRTTT "builtins.dict"ssl._PeerCertRetDictType
None*(
self
ssl.SSLSocket"ssl.SSLSocket*M
binary_form:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadX˘
getpeercertssl.SSLSocket.getpeercert"J
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None*(
self
ssl.SSLSocket"ssl.SSLSocket*K
binary_form:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadX¨
getpeercertssl.SSLSocket.getpeercert"ò
øTypeAlias[Union[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]],builtins.bytes,None]]ª	
¥Union[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]],builtins.bytes,None]”
ôTypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]]ò
ébuiltins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]
builtins.str"builtins.str◊
rUnion[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]
builtins.str"builtins.stræ
VTypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]”
Kbuiltins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]Û
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.tuple"ssl._PCTRTTT "builtins.dict"ssl._PeerCertRetDictType 
builtins.bytes"builtins.bytes
None"ssl._PeerCertRetType*(
self
ssl.SSLSocket"ssl.SSLSocket*/
binary_form
builtins.bool"builtins.bool0:overloadX"36"37"38"39"310j36j37j38j39j310rW
contextssl.SSLSocket.context 
ssl.SSLContext"ssl.SSLContext*36*37*38*39*310r]
server_sidessl.SSLSocket.server_side
builtins.bool"builtins.bool*36*37*38*39*310rã
server_hostnamessl.SSLSocket.server_hostnameD
Union[builtins.str,None]
builtins.str"builtins.str
None*36*37*38*39*310rÅ
sessionssl.SSLSocket.sessionJ
Union[ssl.SSLSession,None] 
ssl.SSLSession"ssl.SSLSession
None*36*37*38*39*310ª

TLSVersionssl.TLSVersion"enum.IntEnumHj36j37j38j39j310rh
MINIMUM_SUPPORTED ssl.TLSVersion.MINIMUM_SUPPORTED
builtins.int"builtins.int*36*37*38*39*310rh
MAXIMUM_SUPPORTED ssl.TLSVersion.MAXIMUM_SUPPORTED
builtins.int"builtins.int*36*37*38*39*310rP
SSLv3ssl.TLSVersion.SSLv3
builtins.int"builtins.int*36*37*38*39*310rP
TLSv1ssl.TLSVersion.TLSv1
builtins.int"builtins.int*36*37*38*39*310rT
TLSv1_1ssl.TLSVersion.TLSv1_1
builtins.int"builtins.int*36*37*38*39*310rT
TLSv1_2ssl.TLSVersion.TLSv1_2
builtins.int"builtins.int*36*37*38*39*310rT
TLSv1_3ssl.TLSVersion.TLSv1_3
builtins.int"builtins.int*36*37*38*39*310«n

SSLContextssl.SSLContext"builtins.object*î
protocolssl.SSLContext.protocol" 
ssl._SSLMethod"ssl._SSLMethod**
self 
ssl.SSLContext"ssl.SSLContext0:property`z36z37z38z39z310*≈
__new__ssl.SSLContext.__new__"I
ssl.SSLContext.Self 
ssl.SSLContext"ssl.SSLContext"ssl.SSLContext*q
clsh
Type[ssl.SSLContext.Self]I
ssl.SSLContext.Self 
ssl.SSLContext"ssl.SSLContext"ssl.SSLContext*,
protocol
builtins.int"builtins.int *
args
Any*
kwargs
Anyz36z37z38z39*‚
__new__ssl.SSLContext.__new__"I
ssl.SSLContext.Self 
ssl.SSLContext"ssl.SSLContext"ssl.SSLContext*q
clsh
Type[ssl.SSLContext.Self]I
ssl.SSLContext.Self 
ssl.SSLContext"ssl.SSLContext"ssl.SSLContext*T
protocolD
Union[builtins.int,None]
builtins.int"builtins.int
None *
args
Any*
kwargs
Anyz310*Î
cert_store_statsssl.SSLContext.cert_store_stats"u
(builtins.dict[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"builtins.dict**
self 
ssl.SSLContext"ssl.SSLContextz36z37z38z39z310*®
load_cert_chainssl.SSLContext.load_cert_chain"
None**
self 
ssl.SSLContext"ssl.SSLContext*≈
certfile∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*∆
keyfile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *ò
passwordá
lUnion[TypeAlias[Union[CallableType[builtins.function],builtins.str,builtins.bytes,builtins.bytearray]],None]ä
`TypeAlias[Union[CallableType[builtins.function],builtins.str,builtins.bytes,builtins.bytearray]]ê
UUnion[CallableType[builtins.function],builtins.str,builtins.bytes,builtins.bytearray]K
CallableType[builtins.function]&
builtins.function"builtins.function
builtins.str"builtins.str 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray"ssl._PasswordType
None z36z37z38z39z310*§
load_default_certs!ssl.SSLContext.load_default_certs"
None**
self 
ssl.SSLContext"ssl.SSLContext*ü
purposeè
ETypeAlias[Tuple[builtins.int,builtins.str,builtins.str,builtins.str]]∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"ssl.Purpose z36z37z38z39z310*»
load_verify_locations$ssl.SSLContext.load_verify_locations"
None**
self 
ssl.SSLContext"ssl.SSLContext*≈
cafile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *≈
capath∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *∫
cadata´
úUnion[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]],None]
builtins.str"builtins.strﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer
None z36z37*ﬁ
load_verify_locations$ssl.SSLContext.load_verify_locations"
None**
self 
ssl.SSLContext"ssl.SSLContext*≈
cafile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *≈
capath∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *À
cadataº
∞Union[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]],None]
builtins.str"builtins.str‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer
None z38z39z310*÷
get_ciphersssl.SSLContext.get_ciphers"j
#builtins.list[TypeAlias[TypedDict]]4
TypeAlias[TypedDict]
	TypedDict"ssl._Cipher"builtins.list**
self 
ssl.SSLContext"ssl.SSLContextz36z37z38z39z310*é
set_default_verify_paths'ssl.SSLContext.set_default_verify_paths"
None**
self 
ssl.SSLContext"ssl.SSLContextz36z37z38z39z310*î
set_ciphersssl.SSLContext.set_ciphers"
None**
self 
ssl.SSLContext"ssl.SSLContext*
builtins.str"builtins.strz36z37z38z39z310*Ê
set_alpn_protocols!ssl.SSLContext.set_alpn_protocols"
None**
self 
ssl.SSLContext"ssl.SSLContext*b
alpn_protocolsN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterablez36z37z38z39z310*„
set_npn_protocols ssl.SSLContext.set_npn_protocols"
None**
self 
ssl.SSLContext"ssl.SSLContext*a
npn_protocolsN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterablez36z37z38z39z310*ˇ
set_servername_callback&ssl.SSLContext.set_servername_callback"
None**
self 
ssl.SSLContext"ssl.SSLContext*
server_name_callback’
6Union[TypeAlias[CallableType[builtins.function]],None]é
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"ssl._SrvnmeCbType
Nonez36z37z38z39z310*ö
load_dh_paramsssl.SSLContext.load_dh_params"
None**
self 
ssl.SSLContext"ssl.SSLContext*
builtins.str"builtins.strz36z37z38z39z310*ö
set_ecdh_curvessl.SSLContext.set_ecdh_curve"
None**
self 
ssl.SSLContext"ssl.SSLContext*
builtins.str"builtins.strz36z37z38z39z310*ö
wrap_socketssl.SSLContext.wrap_socket"
ssl.SSLSocket"ssl.SSLSocket**
self 
ssl.SSLContext"ssl.SSLContext*(
sock
socket.socket"socket.socket*1
server_side
builtins.bool"builtins.bool *=
do_handshake_on_connect
builtins.bool"builtins.bool *:
suppress_ragged_eofs
builtins.bool"builtins.bool *[
server_hostnameD
Union[builtins.str,None]
builtins.str"builtins.str
None *Y
sessionJ
Union[ssl.SSLSession,None] 
ssl.SSLSession"ssl.SSLSession
None z36z37z38z39z310*À
wrap_biossl.SSLContext.wrap_bio"
ssl.SSLObject"ssl.SSLObject**
self 
ssl.SSLContext"ssl.SSLContext*,
incoming
ssl.MemoryBIO"ssl.MemoryBIO*,
outgoing
ssl.MemoryBIO"ssl.MemoryBIO*1
server_side
builtins.bool"builtins.bool *[
server_hostnameD
Union[builtins.str,None]
builtins.str"builtins.str
None *Y
sessionJ
Union[ssl.SSLSession,None] 
ssl.SSLSession"ssl.SSLSession
None z36z37z38z39z310*Â
session_statsssl.SSLContext.session_stats"u
(builtins.dict[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"builtins.dict**
self 
ssl.SSLContext"ssl.SSLContextz36z37z38z39z3102µ
get_ca_certsssl.SSLContext.get_ca_certs«

get_ca_certsssl.SSLContext.get_ca_certs"ê	
®builtins.list[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]]]”
ôTypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]]ò
ébuiltins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]
builtins.str"builtins.str◊
rUnion[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]
builtins.str"builtins.stræ
VTypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]”
Kbuiltins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]Û
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.tuple"ssl._PCTRTTT "builtins.dict"ssl._PeerCertRetDictType"builtins.list**
self 
ssl.SSLContext"ssl.SSLContext*M
binary_form:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadXÑ
get_ca_certsssl.SSLContext.get_ca_certs"P
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list**
self 
ssl.SSLContext"ssl.SSLContext*K
binary_form:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadX°
get_ca_certsssl.SSLContext.get_ca_certs"
Any**
self 
ssl.SSLContext"ssl.SSLContext*1
binary_form
builtins.bool"builtins.bool 0:overloadX"36"37"38"39"310j36j37j38j39j310rd
check_hostnamessl.SSLContext.check_hostname
builtins.bool"builtins.bool*36*37*38*39*310rR
optionsssl.SSLContext.options
ssl.Options"ssl.Options*36*37*38*39*310rd
verify_flagsssl.SSLContext.verify_flags"
ssl.VerifyFlags"ssl.VerifyFlags*36*37*38*39*310r`
verify_modessl.SSLContext.verify_mode 
ssl.VerifyMode"ssl.VerifyMode*36*37*38*39*310r~
hostname_checks_common_name*ssl.SSLContext.hostname_checks_common_name
builtins.bool"builtins.bool*36*37*38*39*310rh
maximum_versionssl.SSLContext.maximum_version 
ssl.TLSVersion"ssl.TLSVersion*36*37*38*39*310rh
minimum_versionssl.SSLContext.minimum_version 
ssl.TLSVersion"ssl.TLSVersion*36*37*38*39*310r…
sni_callbackssl.SSLContext.sni_callbackÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None*36*37*38*39*310r
sslobject_classssl.SSLContext.sslobject_class7
Type[ssl.SSLObject]
ssl.SSLObject"ssl.SSLObject*36*37*38*39*310r
sslsocket_classssl.SSLContext.sslsocket_class7
Type[ssl.SSLSocket]
ssl.SSLSocket"ssl.SSLSocket*36*37*38*39*310r\
keylog_filenamessl.SSLContext.keylog_filename
builtins.str"builtins.str*38*39*310rf
post_handshake_auth"ssl.SSLContext.post_handshake_auth
builtins.bool"builtins.bool*38*39*310rR
security_levelssl.SSLContext.security_level
builtins.int"builtins.int*310øB
	SSLObjectssl.SSLObject"builtins.object*ï
server_sidessl.SSLObject.server_side"
builtins.bool"builtins.bool*(
self
ssl.SSLObject"ssl.SSLObject0:property`z36z37z38z39z310*√
server_hostnamessl.SSLObject.server_hostname"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLObject"ssl.SSLObject0:property`z36z37z38z39z310*õ
session_reusedssl.SSLObject.session_reused"
builtins.bool"builtins.bool*(
self
ssl.SSLObject"ssl.SSLObject0:property`z36z37z38z39z310*ì
__init__ssl.SSLObject.__init__"
None*(
self
ssl.SSLObject"ssl.SSLObject*
args
Any*
kwargs
Anyz36z37z38z39z310*ä
readssl.SSLObject.read" 
builtins.bytes"builtins.bytes*(
self
ssl.SSLObject"ssl.SSLObject*'
len
builtins.int"builtins.int *d
bufferV
Union[builtins.bytearray,None](
builtins.bytearray"builtins.bytearray
None z36z37z38z39z310*Ÿ
writessl.SSLObject.write"
builtins.int"builtins.int*(
self
ssl.SSLObject"ssl.SSLObject*Í
dataﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBufferz36z37*€
writessl.SSLObject.write"
builtins.int"builtins.int*(
self
ssl.SSLObject"ssl.SSLObject*Á
data‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBufferz38z39z310*√
selected_alpn_protocol$ssl.SSLObject.selected_alpn_protocol"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLObject"ssl.SSLObjectz36z37z38z39z310*¡
selected_npn_protocol#ssl.SSLObject.selected_npn_protocol"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLObject"ssl.SSLObjectz36z37z38z39z310*µ
cipherssl.SSLObject.cipher"’
9Union[Tuple[builtins.str,builtins.str,builtins.int],None]ã
-Tuple[builtins.str,builtins.str,builtins.int]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.int
None*(
self
ssl.SSLObject"ssl.SSLObjectz36z37z38z39z310*§
shared_ciphersssl.SSLObject.shared_ciphers"¥
HUnion[builtins.list[Tuple[builtins.str,builtins.str,builtins.int]],None]€
<builtins.list[Tuple[builtins.str,builtins.str,builtins.int]]ã
-Tuple[builtins.str,builtins.str,builtins.int]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.int"builtins.list
None*(
self
ssl.SSLObject"ssl.SSLObjectz36z37z38z39z310*≠
compressionssl.SSLObject.compression"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLObject"ssl.SSLObjectz36z37z38z39z310*}
pendingssl.SSLObject.pending"
builtins.int"builtins.int*(
self
ssl.SSLObject"ssl.SSLObjectz36z37z38z39z310*s
do_handshakessl.SSLObject.do_handshake"
None*(
self
ssl.SSLObject"ssl.SSLObjectz36z37z38z39z310*g
unwrapssl.SSLObject.unwrap"
None*(
self
ssl.SSLObject"ssl.SSLObjectz36z37z38z39z310*•
versionssl.SSLObject.version"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLObject"ssl.SSLObjectz36z37z38z39z310*
get_channel_binding!ssl.SSLObject.get_channel_binding"J
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None*(
self
ssl.SSLObject"ssl.SSLObject*+
cb_type
builtins.str"builtins.str z36z37z38z39z310*ã
verify_client_post_handshake*ssl.SSLObject.verify_client_post_handshake"
None*(
self
ssl.SSLObject"ssl.SSLObjectz38z39z3102ß
getpeercertssl.SSLObject.getpeercertº

getpeercertssl.SSLObject.getpeercert"ä	
•Union[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]],None]”
ôTypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]]ò
ébuiltins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]
builtins.str"builtins.str◊
rUnion[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]
builtins.str"builtins.stræ
VTypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]”
Kbuiltins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]Û
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.tuple"ssl._PCTRTTT "builtins.dict"ssl._PeerCertRetDictType
None*(
self
ssl.SSLObject"ssl.SSLObject*M
binary_form:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadX˘
getpeercertssl.SSLObject.getpeercert"J
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None*(
self
ssl.SSLObject"ssl.SSLObject*K
binary_form:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadX¨
getpeercertssl.SSLObject.getpeercert"ò
øTypeAlias[Union[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]],builtins.bytes,None]]ª	
¥Union[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]],builtins.bytes,None]”
ôTypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]]ò
ébuiltins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]
builtins.str"builtins.str◊
rUnion[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]
builtins.str"builtins.stræ
VTypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]”
Kbuiltins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]Û
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.tuple"ssl._PCTRTTT "builtins.dict"ssl._PeerCertRetDictType 
builtins.bytes"builtins.bytes
None"ssl._PeerCertRetType*(
self
ssl.SSLObject"ssl.SSLObject*/
binary_form
builtins.bool"builtins.bool0:overloadX"36"37"38"39"310j36j37j38j39j310rW
contextssl.SSLObject.context 
ssl.SSLContext"ssl.SSLContext*36*37*38*39*310rÅ
sessionssl.SSLObject.sessionJ
Union[ssl.SSLSession,None] 
ssl.SSLSession"ssl.SSLSession
None*36*37*38*39*310ü
	MemoryBIOssl.MemoryBIO"builtins.object*ù
readssl.MemoryBIO.read" 
builtins.bytes"builtins.bytes*(
self
ssl.MemoryBIO"ssl.MemoryBIO* 
builtins.int"builtins.int z36z37z38z39z310*—
writessl.MemoryBIO.write"
builtins.int"builtins.int*(
self
ssl.MemoryBIO"ssl.MemoryBIO*‚ﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBufferz36z37*”
writessl.MemoryBIO.write"
builtins.int"builtins.int*(
self
ssl.MemoryBIO"ssl.MemoryBIO*ﬂ‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBufferz38z39z310*m
	write_eofssl.MemoryBIO.write_eof"
None*(
self
ssl.MemoryBIO"ssl.MemoryBIOz36z37z38z39z3108j36j37j38j39j310rS
pendingssl.MemoryBIO.pending
builtins.int"builtins.int*36*37*38*39*310rM
eofssl.MemoryBIO.eof
builtins.bool"builtins.bool*36*37*38*39*310Ø

SSLSessionssl.SSLSession"builtins.object*ñ

has_ticketssl.SSLSession.has_ticket"
builtins.bool"builtins.bool**
self 
ssl.SSLSession"ssl.SSLSession0:property`z36z37z38z39z310*à
idssl.SSLSession.id" 
builtins.bytes"builtins.bytes**
self 
ssl.SSLSession"ssl.SSLSession0:property`z36z37z38z39z310*®
ticket_lifetime_hint#ssl.SSLSession.ticket_lifetime_hint"
builtins.int"builtins.int**
self 
ssl.SSLSession"ssl.SSLSession0:property`z36z37z38z39z310*à
timessl.SSLSession.time"
builtins.int"builtins.int**
self 
ssl.SSLSession"ssl.SSLSession0:property`z36z37z38z39z310*é
timeoutssl.SSLSession.timeout"
builtins.int"builtins.int**
self 
ssl.SSLSession"ssl.SSLSession0:property`z36z37z38z39z3108j36j37j38j39j310‹
SSLErrorNumberssl.SSLErrorNumber"enum.IntEnumHj36j37j38j39j310rd
SSL_ERROR_EOF ssl.SSLErrorNumber.SSL_ERROR_EOF
builtins.int"builtins.int*36*37*38*39*310rÇ
SSL_ERROR_INVALID_ERROR_CODE/ssl.SSLErrorNumber.SSL_ERROR_INVALID_ERROR_CODE
builtins.int"builtins.int*36*37*38*39*310rd
SSL_ERROR_SSL ssl.SSLErrorNumber.SSL_ERROR_SSL
builtins.int"builtins.int*36*37*38*39*310rl
SSL_ERROR_SYSCALL$ssl.SSLErrorNumber.SSL_ERROR_SYSCALL
builtins.int"builtins.int*36*37*38*39*310rv
SSL_ERROR_WANT_CONNECT)ssl.SSLErrorNumber.SSL_ERROR_WANT_CONNECT
builtins.int"builtins.int*36*37*38*39*310rp
SSL_ERROR_WANT_READ&ssl.SSLErrorNumber.SSL_ERROR_WANT_READ
builtins.int"builtins.int*36*37*38*39*310rr
SSL_ERROR_WANT_WRITE'ssl.SSLErrorNumber.SSL_ERROR_WANT_WRITE
builtins.int"builtins.int*36*37*38*39*310r~
SSL_ERROR_WANT_X509_LOOKUP-ssl.SSLErrorNumber.SSL_ERROR_WANT_X509_LOOKUP
builtins.int"builtins.int*36*37*38*39*310rt
SSL_ERROR_ZERO_RETURN(ssl.SSLErrorNumber.SSL_ERROR_ZERO_RETURN
builtins.int"builtins.int*36*37*38*39*310…
wrap_socketssl.wrap_socket"
ssl.SSLSocket"ssl.SSLSocket*(
sock
socket.socket"socket.socket*∆
keyfile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *«
certfile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *1
server_side
builtins.bool"builtins.bool *-
	cert_reqs
builtins.int"builtins.int */
ssl_version
builtins.int"builtins.int *T
ca_certsD
Union[builtins.str,None]
builtins.str"builtins.str
None *=
do_handshake_on_connect
builtins.bool"builtins.bool *:
suppress_ragged_eofs
builtins.bool"builtins.bool *S
ciphersD
Union[builtins.str,None]
builtins.str"builtins.str
None z36z37z38z39z310Õ
create_default_contextssl.create_default_context" 
ssl.SSLContext"ssl.SSLContext*ü
purposeè
ETypeAlias[Tuple[builtins.int,builtins.str,builtins.str,builtins.str]]∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"ssl.Purpose *≈
cafile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *≈
capath∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *∫
cadata´
úUnion[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]],None]
builtins.str"builtins.strﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer
None z36z37„
create_default_contextssl.create_default_context" 
ssl.SSLContext"ssl.SSLContext*ü
purposeè
ETypeAlias[Tuple[builtins.int,builtins.str,builtins.str,builtins.str]]∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"ssl.Purpose *≈
cafile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *≈
capath∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *À
cadataº
∞Union[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]],None]
builtins.str"builtins.str‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer
None z38z39z310˚
_create_unverified_contextssl._create_unverified_context" 
ssl.SSLContext"ssl.SSLContext*,
protocol
builtins.int"builtins.int *-
	cert_reqs
builtins.int"builtins.int *4
check_hostname
builtins.bool"builtins.bool *ü
purposeè
ETypeAlias[Tuple[builtins.int,builtins.str,builtins.str,builtins.str]]∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"ssl.Purpose *«
certfile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *∆
keyfile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *≈
cafile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *≈
capath∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *∫
cadata´
úUnion[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]],None]
builtins.str"builtins.strﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer
None z36z37å
_create_unverified_contextssl._create_unverified_context" 
ssl.SSLContext"ssl.SSLContext*,
protocol
builtins.int"builtins.int *-
	cert_reqs
builtins.int"builtins.int *4
check_hostname
builtins.bool"builtins.bool *ü
purposeè
ETypeAlias[Tuple[builtins.int,builtins.str,builtins.str,builtins.str]]∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"ssl.Purpose *«
certfile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *∆
keyfile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *≈
cafile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *≈
capath∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *À
cadataº
∞Union[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]],None]
builtins.str"builtins.str‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer
None z38z39±
_create_unverified_contextssl._create_unverified_context" 
ssl.SSLContext"ssl.SSLContext*T
protocolD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
	cert_reqs
builtins.int"builtins.int *4
check_hostname
builtins.bool"builtins.bool *ü
purposeè
ETypeAlias[Tuple[builtins.int,builtins.str,builtins.str,builtins.str]]∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"ssl.Purpose *«
certfile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *∆
keyfile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *≈
cafile∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *≈
capath∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *À
cadataº
∞Union[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]],None]
builtins.str"builtins.str‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer
None z310s

RAND_bytesssl.RAND_bytes" 
builtins.bytes"builtins.bytes*
builtins.int"builtins.intz36z37z38z39z310 
RAND_pseudo_bytesssl.RAND_pseudo_bytes"i
#Tuple[builtins.bytes,builtins.bool] 
builtins.bytes"builtins.bytes
builtins.bool"builtins.bool*
builtins.int"builtins.intz36z37z38z39z310S
RAND_statusssl.RAND_status"
builtins.bool"builtins.boolz36z37z38z39z310_
RAND_egdssl.RAND_egd"
None*&
path
builtins.str"builtins.strz36z37z38z39z310
RAND_addssl.RAND_add"
None*üú
óUnion[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]]
builtins.str"builtins.strﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*" 
builtins.float"builtins.floatz36z37Ü	
RAND_addssl.RAND_add"
None*∞≠
´Union[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]]
builtins.str"builtins.str‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*" 
builtins.float"builtins.floatz38z39z310–
match_hostnamessl.match_hostname"
None*ﬁ
cert”
ôTypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]]ò
ébuiltins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]]
builtins.str"builtins.str◊
rUnion[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],Unknown]
builtins.str"builtins.stræ
VTypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]”
Kbuiltins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]Û
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.tuple"ssl._PCTRTTT "builtins.dict"ssl._PeerCertRetDictType**
hostname
builtins.str"builtins.strz36z37z38z39z310ê
cert_time_to_secondsssl.cert_time_to_seconds"
builtins.int"builtins.int*+
	cert_time
builtins.str"builtins.strz36z37z38z39z310’
get_server_certificatessl.get_server_certificate"
builtins.str"builtins.str*j
addr`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*/
ssl_version
builtins.int"builtins.int *T
ca_certsD
Union[builtins.str,None]
builtins.str"builtins.str
None z36z37z38z39˚
get_server_certificatessl.get_server_certificate"
builtins.str"builtins.str*j
addr`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*/
ssl_version
builtins.int"builtins.int *T
ca_certsD
Union[builtins.str,None]
builtins.str"builtins.str
None */
timeout 
builtins.float"builtins.float z310Õ
DER_cert_to_PEM_certssl.DER_cert_to_PEM_cert"
builtins.str"builtins.str*Ù
der_cert_bytesﬂ
ÉTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]]]∫
xUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]] 
builtins.bytes"builtins.bytesô
bTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData]]ï
WUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData"_typeshed.WriteableBuffer"_typeshed.ReadableBufferz36z37œ
DER_cert_to_PEM_certssl.DER_cert_to_PEM_cert"
builtins.str"builtins.str*Ò
der_cert_bytes‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBufferz38z39z310ö
PEM_cert_to_DER_certssl.PEM_cert_to_DER_cert" 
builtins.bytes"builtins.bytes*1
pem_cert_string
builtins.str"builtins.strz36z37z38z39z310⁄
get_default_verify_pathsssl.get_default_verify_paths"ä
_TypeAlias[Tuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]]å
TTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"ssl.DefaultVerifyPathsz36z37z38z39z310é
get_protocol_namessl.get_protocol_name"
builtins.str"builtins.str*/
protocol_code
builtins.int"builtins.intz36z37z38z39z310*î
__annotations__ssl.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*§
_create_default_https_context!ssl._create_default_https_contextK
CallableType[builtins.function]&
builtins.function"builtins.function*36*37*38*39*310*Q
	CERT_NONEssl.CERT_NONE 
ssl.VerifyMode"ssl.VerifyMode*36*37*38*39*310*Y
CERT_OPTIONALssl.CERT_OPTIONAL 
ssl.VerifyMode"ssl.VerifyMode*36*37*38*39*310*Y
CERT_REQUIREDssl.CERT_REQUIRED 
ssl.VerifyMode"ssl.VerifyMode*36*37*38*39*310*]
VERIFY_DEFAULTssl.VERIFY_DEFAULT"
ssl.VerifyFlags"ssl.VerifyFlags*36*37*38*39*310*k
VERIFY_CRL_CHECK_LEAFssl.VERIFY_CRL_CHECK_LEAF"
ssl.VerifyFlags"ssl.VerifyFlags*36*37*38*39*310*m
VERIFY_CRL_CHECK_CHAINssl.VERIFY_CRL_CHECK_CHAIN"
ssl.VerifyFlags"ssl.VerifyFlags*36*37*38*39*310*e
VERIFY_X509_STRICTssl.VERIFY_X509_STRICT"
ssl.VerifyFlags"ssl.VerifyFlags*36*37*38*39*310*s
VERIFY_X509_TRUSTED_FIRSTssl.VERIFY_X509_TRUSTED_FIRST"
ssl.VerifyFlags"ssl.VerifyFlags*36*37*38*39*310*]
PROTOCOL_SSLv23ssl.PROTOCOL_SSLv23 
ssl._SSLMethod"ssl._SSLMethod*36*37*38*39*310*[
PROTOCOL_SSLv2ssl.PROTOCOL_SSLv2 
ssl._SSLMethod"ssl._SSLMethod*36*37*38*39*310*[
PROTOCOL_SSLv3ssl.PROTOCOL_SSLv3 
ssl._SSLMethod"ssl._SSLMethod*36*37*38*39*310*[
PROTOCOL_TLSv1ssl.PROTOCOL_TLSv1 
ssl._SSLMethod"ssl._SSLMethod*36*37*38*39*310*_
PROTOCOL_TLSv1_1ssl.PROTOCOL_TLSv1_1 
ssl._SSLMethod"ssl._SSLMethod*36*37*38*39*310*_
PROTOCOL_TLSv1_2ssl.PROTOCOL_TLSv1_2 
ssl._SSLMethod"ssl._SSLMethod*36*37*38*39*310*W
PROTOCOL_TLSssl.PROTOCOL_TLS 
ssl._SSLMethod"ssl._SSLMethod*36*37*38*39*310*e
PROTOCOL_TLS_CLIENTssl.PROTOCOL_TLS_CLIENT 
ssl._SSLMethod"ssl._SSLMethod*36*37*38*39*310*e
PROTOCOL_TLS_SERVERssl.PROTOCOL_TLS_SERVER 
ssl._SSLMethod"ssl._SSLMethod*36*37*38*39*310*E
OP_ALL
ssl.OP_ALL
ssl.Options"ssl.Options*36*37*38*39*310*O
OP_NO_SSLv2ssl.OP_NO_SSLv2
ssl.Options"ssl.Options*36*37*38*39*310*O
OP_NO_SSLv3ssl.OP_NO_SSLv3
ssl.Options"ssl.Options*36*37*38*39*310*O
OP_NO_TLSv1ssl.OP_NO_TLSv1
ssl.Options"ssl.Options*36*37*38*39*310*S
OP_NO_TLSv1_1ssl.OP_NO_TLSv1_1
ssl.Options"ssl.Options*36*37*38*39*310*S
OP_NO_TLSv1_2ssl.OP_NO_TLSv1_2
ssl.Options"ssl.Options*36*37*38*39*310*S
OP_NO_TLSv1_3ssl.OP_NO_TLSv1_3
ssl.Options"ssl.Options*36*37*38*39*310*o
OP_CIPHER_SERVER_PREFERENCEssl.OP_CIPHER_SERVER_PREFERENCE
ssl.Options"ssl.Options*36*37*38*39*310*Y
OP_SINGLE_DH_USEssl.OP_SINGLE_DH_USE
ssl.Options"ssl.Options*36*37*38*39*310*]
OP_SINGLE_ECDH_USEssl.OP_SINGLE_ECDH_USE
ssl.Options"ssl.Options*36*37*38*39*310*[
OP_NO_COMPRESSIONssl.OP_NO_COMPRESSION
ssl.Options"ssl.Options*36*37*38*39*310*Q
OP_NO_TICKETssl.OP_NO_TICKET
ssl.Options"ssl.Options*36*37*38*39*310*_
OP_NO_RENEGOTIATIONssl.OP_NO_RENEGOTIATION
ssl.Options"ssl.Options*36*37*38*39*310*s
HAS_NEVER_CHECK_COMMON_NAMEssl.HAS_NEVER_CHECK_COMMON_NAME
builtins.bool"builtins.bool*36*37*38*39*310*O
	HAS_SSLv2ssl.HAS_SSLv2
builtins.bool"builtins.bool*36*37*38*39*310*O
	HAS_SSLv3ssl.HAS_SSLv3
builtins.bool"builtins.bool*36*37*38*39*310*O
	HAS_TLSv1ssl.HAS_TLSv1
builtins.bool"builtins.bool*36*37*38*39*310*S
HAS_TLSv1_1ssl.HAS_TLSv1_1
builtins.bool"builtins.bool*36*37*38*39*310*S
HAS_TLSv1_2ssl.HAS_TLSv1_2
builtins.bool"builtins.bool*36*37*38*39*310*S
HAS_TLSv1_3ssl.HAS_TLSv1_3
builtins.bool"builtins.bool*36*37*38*39*310*M
HAS_ALPNssl.HAS_ALPN
builtins.bool"builtins.bool*36*37*38*39*310*M
HAS_ECDHssl.HAS_ECDH
builtins.bool"builtins.bool*36*37*38*39*310*K
HAS_SNIssl.HAS_SNI
builtins.bool"builtins.bool*36*37*38*39*310*K
HAS_NPNssl.HAS_NPN
builtins.bool"builtins.bool*36*37*38*39*310*ì
CHANNEL_BINDING_TYPESssl.CHANNEL_BINDING_TYPESJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*36*37*38*39*310*Y
OPENSSL_VERSIONssl.OPENSSL_VERSION
builtins.str"builtins.str*36*37*38*39*310*©
OPENSSL_VERSION_INFOssl.OPENSSL_VERSION_INFO·
GTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int*36*37*38*39*310*g
OPENSSL_VERSION_NUMBERssl.OPENSSL_VERSION_NUMBER
builtins.int"builtins.int*36*37*38*39*310*ë
#ALERT_DESCRIPTION_HANDSHAKE_FAILURE'ssl.ALERT_DESCRIPTION_HANDSHAKE_FAILURE,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*ã
 ALERT_DESCRIPTION_INTERNAL_ERROR$ssl.ALERT_DESCRIPTION_INTERNAL_ERROR,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*â
ALERT_DESCRIPTION_ACCESS_DENIED#ssl.ALERT_DESCRIPTION_ACCESS_DENIED,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*ç
!ALERT_DESCRIPTION_BAD_CERTIFICATE%ssl.ALERT_DESCRIPTION_BAD_CERTIFICATE,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*£
,ALERT_DESCRIPTION_BAD_CERTIFICATE_HASH_VALUE0ssl.ALERT_DESCRIPTION_BAD_CERTIFICATE_HASH_VALUE,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*≠
1ALERT_DESCRIPTION_BAD_CERTIFICATE_STATUS_RESPONSE5ssl.ALERT_DESCRIPTION_BAD_CERTIFICATE_STATUS_RESPONSE,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*ã
 ALERT_DESCRIPTION_BAD_RECORD_MAC$ssl.ALERT_DESCRIPTION_BAD_RECORD_MAC,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*ï
%ALERT_DESCRIPTION_CERTIFICATE_EXPIRED)ssl.ALERT_DESCRIPTION_CERTIFICATE_EXPIRED,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*ï
%ALERT_DESCRIPTION_CERTIFICATE_REVOKED)ssl.ALERT_DESCRIPTION_CERTIFICATE_REVOKED,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*ï
%ALERT_DESCRIPTION_CERTIFICATE_UNKNOWN)ssl.ALERT_DESCRIPTION_CERTIFICATE_UNKNOWN,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*ü
*ALERT_DESCRIPTION_CERTIFICATE_UNOBTAINABLE.ssl.ALERT_DESCRIPTION_CERTIFICATE_UNOBTAINABLE,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*á
ALERT_DESCRIPTION_CLOSE_NOTIFY"ssl.ALERT_DESCRIPTION_CLOSE_NOTIFY,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*á
ALERT_DESCRIPTION_DECODE_ERROR"ssl.ALERT_DESCRIPTION_DECODE_ERROR,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*ô
'ALERT_DESCRIPTION_DECOMPRESSION_FAILURE+ssl.ALERT_DESCRIPTION_DECOMPRESSION_FAILURE,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*â
ALERT_DESCRIPTION_DECRYPT_ERROR#ssl.ALERT_DESCRIPTION_DECRYPT_ERROR,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*ë
#ALERT_DESCRIPTION_ILLEGAL_PARAMETER'ssl.ALERT_DESCRIPTION_ILLEGAL_PARAMETER,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*ô
'ALERT_DESCRIPTION_INSUFFICIENT_SECURITY+ssl.ALERT_DESCRIPTION_INSUFFICIENT_SECURITY,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*è
"ALERT_DESCRIPTION_NO_RENEGOTIATION&ssl.ALERT_DESCRIPTION_NO_RENEGOTIATION,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*è
"ALERT_DESCRIPTION_PROTOCOL_VERSION&ssl.ALERT_DESCRIPTION_PROTOCOL_VERSION,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*ç
!ALERT_DESCRIPTION_RECORD_OVERFLOW%ssl.ALERT_DESCRIPTION_RECORD_OVERFLOW,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*ì
$ALERT_DESCRIPTION_UNEXPECTED_MESSAGE(ssl.ALERT_DESCRIPTION_UNEXPECTED_MESSAGE,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*É
ALERT_DESCRIPTION_UNKNOWN_CA ssl.ALERT_DESCRIPTION_UNKNOWN_CA,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*ó
&ALERT_DESCRIPTION_UNKNOWN_PSK_IDENTITY*ssl.ALERT_DESCRIPTION_UNKNOWN_PSK_IDENTITY,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*ë
#ALERT_DESCRIPTION_UNRECOGNIZED_NAME'ssl.ALERT_DESCRIPTION_UNRECOGNIZED_NAME,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*ù
)ALERT_DESCRIPTION_UNSUPPORTED_CERTIFICATE-ssl.ALERT_DESCRIPTION_UNSUPPORTED_CERTIFICATE,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*ô
'ALERT_DESCRIPTION_UNSUPPORTED_EXTENSION+ssl.ALERT_DESCRIPTION_UNSUPPORTED_EXTENSION,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*ã
 ALERT_DESCRIPTION_USER_CANCELLED$ssl.ALERT_DESCRIPTION_USER_CANCELLED,
ssl.AlertDescription"ssl.AlertDescription*36*37*38*39*310*a
SSL_ERROR_EOFssl.SSL_ERROR_EOF(
ssl.SSLErrorNumber"ssl.SSLErrorNumber*36*37*38*39*310*
SSL_ERROR_INVALID_ERROR_CODE ssl.SSL_ERROR_INVALID_ERROR_CODE(
ssl.SSLErrorNumber"ssl.SSLErrorNumber*36*37*38*39*310*a
SSL_ERROR_SSLssl.SSL_ERROR_SSL(
ssl.SSLErrorNumber"ssl.SSLErrorNumber*36*37*38*39*310*i
SSL_ERROR_SYSCALLssl.SSL_ERROR_SYSCALL(
ssl.SSLErrorNumber"ssl.SSLErrorNumber*36*37*38*39*310*s
SSL_ERROR_WANT_CONNECTssl.SSL_ERROR_WANT_CONNECT(
ssl.SSLErrorNumber"ssl.SSLErrorNumber*36*37*38*39*310*m
SSL_ERROR_WANT_READssl.SSL_ERROR_WANT_READ(
ssl.SSLErrorNumber"ssl.SSLErrorNumber*36*37*38*39*310*o
SSL_ERROR_WANT_WRITEssl.SSL_ERROR_WANT_WRITE(
ssl.SSLErrorNumber"ssl.SSLErrorNumber*36*37*38*39*310*{
SSL_ERROR_WANT_X509_LOOKUPssl.SSL_ERROR_WANT_X509_LOOKUP(
ssl.SSLErrorNumber"ssl.SSLErrorNumber*36*37*38*39*310*q
SSL_ERROR_ZERO_RETURNssl.SSL_ERROR_ZERO_RETURN(
ssl.SSLErrorNumber"ssl.SSLErrorNumber*36*37*38*39*310*@
AF_INETssl.AF_INET
builtins.int"builtins.int*36*37*38*O

PEM_FOOTERssl.PEM_FOOTER
builtins.str"builtins.str*36*37*38*39*310*O

PEM_HEADERssl.PEM_HEADER
builtins.str"builtins.str*36*37*38*39*310*Q
SOCK_STREAMssl.SOCK_STREAM
builtins.int"builtins.int*36*37*38*39*310*O

SOL_SOCKETssl.SOL_SOCKET
builtins.int"builtins.int*36*37*38*39*310*I
SO_TYPEssl.SO_TYPE
builtins.int"builtins.int*36*37*38*39*310*e
OP_ENABLE_MIDDLEBOX_COMPATssl.OP_ENABLE_MIDDLEBOX_COMPAT
ssl.Options"ssl.Options*38*39*310*a
OP_IGNORE_UNEXPECTED_EOFssl.OP_IGNORE_UNEXPECTED_EOF
ssl.Options"ssl.Options*38*39*310*a
VERIFY_ALLOW_PROXY_CERTSssl.VERIFY_ALLOW_PROXY_CERTS"
ssl.VerifyFlags"ssl.VerifyFlags*310*c
VERIFY_X509_PARTIAL_CHAINssl.VERIFY_X509_PARTIAL_CHAIN"
ssl.VerifyFlags"ssl.VerifyFlags*310