
oauthlib.signalsö
	Namespaceoauthlib.signals.Namespace"builtins.object*—
signal!oauthlib.signals.Namespace.signal"
Any*B
self8
oauthlib.signals.Namespace"oauthlib.signals.Namespace*
name
Any*f
doc[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313»	
_FakeSignaloauthlib.signals._FakeSignal"builtins.object*¢
__init__%oauthlib.signals._FakeSignal.__init__"
None*F
self<
oauthlib.signals._FakeSignal"oauthlib.signals._FakeSignal*
name
Any*f
doc[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z36z37z38z39z310z311z312z313j36j37j38j39j310j311j312j313rV
name!oauthlib.signals._FakeSignal.name
Any*36*37*38*39*310*311*312*313rV
send!oauthlib.signals._FakeSignal.send
Any*36*37*38*39*310*311*312*313r\
connect$oauthlib.signals._FakeSignal.connect
Any*36*37*38*39*310*311*312*313rb

disconnect'oauthlib.signals._FakeSignal.disconnect
Any*36*37*38*39*310*311*312*313rp
has_receivers_for.oauthlib.signals._FakeSignal.has_receivers_for
Any*36*37*38*39*310*311*312*313rh
receivers_for*oauthlib.signals._FakeSignal.receivers_for
Any*36*37*38*39*310*311*312*313r~
temporarily_connected_to5oauthlib.signals._FakeSignal.temporarily_connected_to
Any*36*37*38*39*310*311*312*313rf
connected_to)oauthlib.signals._FakeSignal.connected_to
Any*36*37*38*39*310*311*312*313*°
__annotations__ oauthlib.signals.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*36*37*38*39*310*311*312*313*{
signals_available"oauthlib.signals.signals_available
builtins.bool"builtins.bool*36*37*38*39*310*311*312*313*\
scope_changedoauthlib.signals.scope_changed
Any*36*37*38*39*310*311*312*313