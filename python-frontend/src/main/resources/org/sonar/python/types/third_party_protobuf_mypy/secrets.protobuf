
secrets‹
SystemRandomrandom.SystemRandom"random.Random*í
getstaterandom.SystemRandom.getstate"
NoReturn
*4
self*
random.SystemRandom"random.SystemRandom*
args
Any*
kwds
Any*í
setstaterandom.SystemRandom.setstate"
NoReturn
*4
self*
random.SystemRandom"random.SystemRandom*
args
Any*
kwds
Anyu
	randbelowsecrets.randbelow"
builtins.int"builtins.int*7
exclusive_upper_bound
builtins.int"builtins.int_
randbitssecrets.randbits"
builtins.int"builtins.int*#
k
builtins.int"builtins.intq
choicesecrets.choice"

secrets._T*G
seq>
typing.Sequence[secrets._T]

secrets._T"typing.Sequenceò
token_bytessecrets.token_bytes" 
builtins.bytes"builtins.bytes*R
nbytesD
Union[builtins.int,None]
builtins.int"builtins.int
None ê
	token_hexsecrets.token_hex"
builtins.str"builtins.str*R
nbytesD
Union[builtins.int,None]
builtins.int"builtins.int
None ò
token_urlsafesecrets.token_urlsafe"
builtins.str"builtins.str*R
nbytesD
Union[builtins.int,None]
builtins.int"builtins.int
None "À
compare_digesthmac.compare_digestô
compare_digesthmac.compare_digest"
builtins.bool"builtins.bool*†
__aò
bTypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]ï
WUnion[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap] 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap"_typeshed.ReadableBuffer*†
__bò
bTypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]ï
WUnion[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap] 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap"_typeshed.ReadableBuffer0:overloadXá
compare_digesthmac.compare_digest"
builtins.bool"builtins.bool*
__a
typing.AnyStr*
__b
typing.AnyStr0:overloadX