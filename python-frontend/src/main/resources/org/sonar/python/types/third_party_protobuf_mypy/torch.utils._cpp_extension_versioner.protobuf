
$torch.utils._cpp_extension_versionerã
Entry*torch.utils._cpp_extension_versioner.Entry"builtins.tuple*´
_replace3torch.utils._cpp_extension_versioner.Entry._replace"X
.torch.utils._cpp_extension_versioner.Entry._NT$
Tuple[Any,Any]
Any
Any*c
_selfX
.torch.utils._cpp_extension_versioner.Entry._NT$
Tuple[Any,Any]
Any
Any*
version
Any *
hash
Any *Ê
__new__2torch.utils._cpp_extension_versioner.Entry.__new__"X
.torch.utils._cpp_extension_versioner.Entry._NT$
Tuple[Any,Any]
Any
Any*£
_clsò
4Type[torch.utils._cpp_extension_versioner.Entry._NT]X
.torch.utils._cpp_extension_versioner.Entry._NT$
Tuple[Any,Any]
Any
Any"type*
version
Any*
hash
Any*˚
_asdict2torch.utils._cpp_extension_versioner.Entry._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*c
_selfX
.torch.utils._cpp_extension_versioner.Entry._NT$
Tuple[Any,Any]
Any
Any*≤
_make0torch.utils._cpp_extension_versioner.Entry._make"X
.torch.utils._cpp_extension_versioner.Entry._NT$
Tuple[Any,Any]
Any
Any*£
_clsò
4Type[torch.utils._cpp_extension_versioner.Entry._NT]X
.torch.utils._cpp_extension_versioner.Entry._NT$
Tuple[Any,Any]
Any
Any"type*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodprF
version2torch.utils._cpp_extension_versioner.Entry.version
Anyr@
hash/torch.utils._cpp_extension_versioner.Entry.hash
Anyrü
_fields2torch.utils._cpp_extension_versioner.Entry._fields`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.strr†
_field_types7torch.utils._cpp_extension_versioner.Entry._field_typesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictr¶
_field_defaults:torch.utils._cpp_extension_versioner.Entry._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictr[
_source2torch.utils._cpp_extension_versioner.Entry._source
builtins.str"builtins.strr¶
__annotations__:torch.utils._cpp_extension_versioner.Entry.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictË
ExtensionVersioner7torch.utils._cpp_extension_versioner.ExtensionVersioner"builtins.object*V
__init__@torch.utils._cpp_extension_versioner.ExtensionVersioner.__init__*
self*f
get_versionCtorch.utils._cpp_extension_versioner.ExtensionVersioner.get_version*
self*
name*Ú
bump_version_if_changedOtorch.utils._cpp_extension_versioner.ExtensionVersioner.bump_version_if_changed*
self*
name*
source_files*
build_arguments*
build_directory*
	with_cuda*
is_python_module*
is_standalonerS
entries?torch.utils._cpp_extension_versioner.ExtensionVersioner.entries
AnyT
update_hash0torch.utils._cpp_extension_versioner.update_hash*
seed*	
valuem
hash_source_files6torch.utils._cpp_extension_versioner.hash_source_files*

hash_value*
source_filesv
hash_build_arguments9torch.utils._cpp_extension_versioner.hash_build_arguments*

hash_value*
build_arguments*†
__annotations__4torch.utils._cpp_extension_versioner.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict